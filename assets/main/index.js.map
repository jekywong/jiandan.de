{"version":3,"sources":["../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/achievement.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/action/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/action/action.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-animation-graph-group.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-animation-graph.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-animator-contorller.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-axe.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-bag.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/actor/actor-base.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-brain.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-crossbow.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-enemy-gun.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-equip-base.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-equipment.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-face.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-follow-path-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-grenade.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-handgun.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-input-brain.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-input.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-interface.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-items.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-lookat.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-machine-gun.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-main.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-melee-weapon.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-move-slope.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-part.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-physical-skin.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-piranha.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-sensor-drop-item.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-shotgun.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-sound.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor-statistics.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/actor-task-go-target.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/actor-tasks.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/actor.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/aim-control.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/aim-ik.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/animation-to-oribit.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/animationgraph-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/astar.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/base-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/bind.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/blit-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/bloom-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/bloom.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/brain.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/buff.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/camera-auto-bind-occlusion.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/camera-controller.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/camera-fps.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/camera-move-target.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/camera-msg.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/camera-setting.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/camera-tps.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/item/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/item/check-auto-pick.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/collider-group.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/damage-core.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/data/data-base.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-camera.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-core.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-equip.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-game.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-level.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-navigation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-sound.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/data-structure.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/data-upgrade-card.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/debug-util.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/debug.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/deferred-gbuffer-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/deferred-lighting-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/deferred-post-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/delay_play_animation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/delay-active.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/delay-play.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/delay-show-node.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/destroy-settings.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/src/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/src/utils/disable-update-ubo.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/item/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/item/drop-item.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/editor-camera-placer.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/editor.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/app/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/app/Electron.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/event.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/fil-smooth.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/force-area.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/forward-post-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/forward-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/fsr-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/fun.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/fx-actor-fall-point.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/fx-auto-remove.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/fx-base.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-bullet-tracer.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-car-random-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-fly-car.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-ghost-vertex.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-ghost.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/fx-group.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/fx-init.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-light-flash.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/fx-ray-line.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/fx.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/fxaa-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/g-math.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/scene/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/scene/g-scene.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/game-type.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/game.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/GameQuality.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/scripts/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/scripts/generate-white-box.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/gm/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/gm/gm.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/gpu-mobiles.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/gpu.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/grandom.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/graph-data.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/graph.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/graphics/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/graphics/graphics.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/guide/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/guide/guide.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/gun-tracer-pool.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/hack.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/halton.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/fog/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/fog/height-fog.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/href-setting.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/ik-bone.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/ik-point.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/ik-solver-aim.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/ik-solver-heuristic.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/ik-solver.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/infrared-tracker.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/init/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/init/init.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-base.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-equip-select.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-gamepad.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-handle.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-joystick.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-keyboard.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-mouse.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/input-pointer-lock.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/instance-buffer.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/io.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/joystick-auto-hidden.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/joystick-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/joystick-pad-action.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/joystick-pad.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/joystick.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/joytick-pad-rotation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/json-tool.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/jump-points.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/level-enable-play.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/level-events-card.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/level-events-enemy.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/level-events-items.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/level-events.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/level.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/light-cluster.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/effect/light-flash.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/light-flow-camera.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/litegragh-css.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/localization/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/localization/local-label.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/localization/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/localization/local.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/log.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/logo/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/logo/logo.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/math-util.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/math.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/scripts/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/scripts/move-camera-x.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/msg-events.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/msg/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/msg/msg.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/MsgPlayAnimation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/music-compose-random.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/music-compose-state.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/music-compose-value.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/navigation-debugger.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/navigation-map.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/navigation-point.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/navigation-points.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/navigation-region.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/navigation/navigation-system.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/utils/nodes.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/io/notify.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/npm.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/opaque-depth.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/orbit-camera.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/output-texture.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/pass-utils.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/pipeline-assets.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/pipeline-graph.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/pipeline-manager.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/pipeline.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/pool.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/init/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/init/preload.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/actor/projectile-grenade.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/raycast-gpu.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/raycast.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/reflection-cluster.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/reflection-probe-utils.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/render-quality.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/render-setting.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/render-to-screen.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/render/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/render/render-tool.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/res-cache.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/res-destroy.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/res-editor-cache.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/res-pool.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/res-texture.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/res/res.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/router.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-batch/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-batch/save-gltf.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/data/save.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/scene-particles.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-actions.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-anig.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-audio.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-effect.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-ground.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-msg.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-probe.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-ray-node-to-node.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-rays-angle.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-rays.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/sensor/sensor-slope.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/setting.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/effect/sfx-heart.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/shadow-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/pattern/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/pattern/singleton.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/sky.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/slider-2d.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/camera/smooth-local-z.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/sound-actor.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/sound-enable-play.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/audio/sound.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/settings/spector.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/level/spwans-group.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/start.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-batch/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-batch/static-area-batch.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-batch/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-batch/static-batch-comp.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/static-culling.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/static-occlusion-area.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/static-occlusion-block.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/static-occlusion-culling.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/steering-behaviors/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/steering-behaviors/steering-basic.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/steering-behaviors/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/steering-behaviors/steering-behaviors.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/steering-behaviors/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ai/steering-behaviors/steering-seek.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/stretched-billboard.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/item/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/item/substance-core.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/src/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/src/utils/switch-probe.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/taa-stage.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/taa.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/tap-play.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/task/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/task/task.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-actor-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-amoy-animation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-anig.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-camera-debug.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-collider-mesh-switch.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/test-custom.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-forward.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/res/shader/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/res/shader/test-ghost.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-gun-fire.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-gun-tracer.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-ik.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/steeringbehaviors/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/steeringbehaviors/test-move-target.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-normal.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/test-reflect.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-rigidbody-vector.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-slope-direction.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-slope-move.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-slope-vector.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-stairs.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/steeringbehaviors/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/steeringbehaviors/test-steering-init.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-stretched-billboard.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/test/test-taa.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/test/test-ui.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/input/touch-cancel.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/transparent-depth.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/ubo.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-aim-range.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-animation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-auto-hidden.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-base.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-display-by-state-auto-hidden.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-display-by-state.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-enable-play-anim.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-enable-play-animation.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-enable-play.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui-fadein.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-fx.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-grp-picked-tips.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-guide-platform.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-loading.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-move-show.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/ui-roller.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/logic/ui/ui-svc-reset-pos.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ui/ui.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/util/util.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/utils.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/utils/utils.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/occlusion-culling/static/utils/utils.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/graph/nodes/vec2.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/assets/scripts/core/ik/weapon-aim.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/components/cluster/world-cluster.ts","../../file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/file:/Users/jekywong/work/jiandan/cocos/Cyberpunk/extensions/pipeline/pipeline/stages/zoom-screen-stage.ts"],"names":["ccclass","_decorator","property","Achievement","_inheritsLoose","args","_this","percent","unlockAllAchi","_proto","init","achievement","DataGameInst","_data","achi_save","Save","Instance","get","_cur","i","length","arch","arch_save","name","undefined","condition","value","updateData","totalTime","time","statisticsValue","UtilTime","toHours","totalPercent","getAchi","key","statistics","count","achi","stat_value","arch_percent","yearMonth","Singleton","Action","_time","_index","_queue","Object","create","_act","ResCache","getJson","json","Queue","on","push","Msg","emit","off","state","action","console","warn","info","group","ActionGroup","pop","update","deltaTime","GScene","isLoadScene","cur","_this$_act","data","idx","Error","_this$_act2","UtilAction","empty","ActionParallel","_actions","_proto2","error","element","splice","ActionActor","actor","_actor","_proto3","_Action","checkRunAction","_this2","_this$_act3","_this$_act4","delay","fun","actionEnd","ActionActorEquip","_this3","_proto4","_Action2","isPlayer","_this4","_this$_act5","_this$_act6","UtilActionEquip","ActionQueue","_proto5","on_check_preload","isPreload","on_scene","Load","off_scene","on_ui","UI","off_ui","on_sfx","Sound","off_sfx","on_sfxing","volume","playLoop","off_sfxing","offing","on_bgm","onBGM","off_bgm","offBGM","update_bgm","updateBGM","on_msg","on_msg_num","on_msg_str","on_msg_str_local","Local","on_inst_scene","asset","getPrefab","obj","Res","inst","Level","_objectNode","setPosition","on_inst","_view","parent","on_inst_pool","Game","_poolNode","off_inst","on_inst_fx","res","bone","bone_node","node","getChildByName","off_inst_fx","off_fx","_actor$node$getChildB","on_active","setActive","on_fx","onFx","on_buff","set_fx","setFx","on_ani","_anim","play","log","on_anig","_animationGraph","on_set","off_set","on_add","k","on_mul","on_com","addComponent","on_call","on_sfx_random","range","sfx","randomRangeInt","_viewRoot","_actor$node$getChildB2","ActorAnimationGraphGroup","_groups","__preload","getComponentsInChildren","ActorAnimationGraph","Component","_graph","start","getComponent","animation","AnimationController","_this$_graph","setValue","_this$_graph2","ActorAnimatorController","SkeletalAnimation","anims","ActorAxe","onFire","_bagData","bulletCount","forwardNode","_forwardNode","origin","worldPosition","dir","forward","ray","geometry","Ray","x","y","z","mask","distance","damage","hit","PhysicsSystem","instance","raycastClosest","raycastClosestResult","calculateDamage","ActorEquipBase","ActorBag","_capacity","_usageCount","bag_capacity","equipment_name_list","Array","bags","pickedItem","getEmptySlot","pickedSameWeaponIncreaseClips","bagItems","items","bulletBox","pickedBulletBox","_actorEquipment","_this$_actor$_actorEq","currentEquipItem","equipData","DataEquipInst","stackable","stackItem","bullet_count","index","createItem","dropItem","curIndex","current_equipment_index","_this$_actor$_actorEq2","unEquip","pos","addDrop","_this$_actor$_actorEq3","equip","newItems","bullet_clip_count","game","ActorBase","_action","_updates","_dir","Vec3","_curDir","_angleVertical","_groupIndex","_actionUpdate","actionName","assign","UtilNode","find","onBind","initView","offBind","onUpdate","offUpdate","updateAttribute","onDestroy","activeNode","active","_this$node","pNode","particles","ParticleSystem","p","loop","setDir","UtilVec3","copy","updateHP","percent_hp","hp","max_hp","is_low_hp","onDead","removeEnemy","_this$node2","destroy","tempRotationSideVector","v3","ActorBrain","_wayPoints","_moveDir","targetDirection","input","sensorRays","isFollowWayPointsMove","currentWaypointsIndex","closestNavigationPon","_targetNode","targetPosition","waypointsFireIndex","waypointsFire","fireDirection","reloadTime","followPathsDirection","fireWaitTime","Actor","ActorInputBrain","sensorNode","SensorRaysAngle","nearest","onMove","onRotation","onRun","random","onJump","_this$input","onCrouch","_this$input2","onProne","_this$input3","_this$input4","stop","isReady","_this$_actor","is_dead","player","_player","_Level$Instance$_play","checkNearPlayer","shootFire","randomMove","_this$input5","onAim","angle","checkPlayerAngle","moveFire","_this$_actor2","_this$_actor2$_actorE","currentEquip","_this$_actor2$_actorE2","isBulletEmpty","_this$input6","onReload","_this$input7","checkFire","PathsFollowing","calculateNextPosition","_actorMove","faceMove","target","id","_this$sensorRays","checkedNode","checkDirection","clone","subtract","side","cross","normal","add","normalize","lookAtTarget","followTargetPaths","lookAtDirection","Math","abs","sign","NavSystem","findNearest","randomFirePath","targetDistance","angleSpeed","multiplyScalar","is_crouch","_this$_actor3","math","toDegree","randomRange","freePathMove","randomPaths","fleeTarget","followTarget","findPaths","ai_nearby_distance","ActorCrossbow","_pointShoot","ActorEnemyGun","shootDirection","o","d","showTracer","tracerEndPosition","point_shoot","fxMuzzle","FxBase","bagData","lastUseTime","checkUse","checkAutoFire","is_auto_fire","_this$_action","hiddenNode","fx","showMuzzle","_this$fxMuzzle","onRecoil","recoil_rate","is_aim","recoil_aim_rate","recoilX","recoil_x","recoilY","recoil_y","hitPoint","add3f","end","timeSpace","cooling","updateCooling","checkFullBullet","_this$_bagData","_this$_bagData2","onUse","ActorEquipment","equipPool","equipBoneNode","currentEquipNode","stableValue","getChildrenByNameBlur","equipmentList","cache_equipment_list","weaponName","prefab","bindNode","weapon_bone","nodePrefab","default_equip_index","replaceEquipmentIndex","currentEquipmentIndex","changeEquipmentName","self","_self$currentEquipNod","currentEquipmentName","currentEquipmentNode","_this$currentEquipNod","updateAim","normalizeCharacterMoveSpeed","toMax","equipStable","stable_max_value","currentStable","stable_min_value","max","lerp","stable_smooth","ActorFace","Node","type","ActorMove","tooltip","CCFloat","_initializerDefineProperty","targetAngle","currentAngle","currentPosition","rotationNode","eulerAngles","position","rotationX","actorMove","angleVertical","smoothAngle","_this$rotationNode","setRotationFromEuler","smoothHeight","_this$rotationNode2","angleX","setRootY","height","configurable","enumerable","writable","initializer","ActorFollowPathMove","ActorGrenade","projectile_res","projectile","instNode","projectileGrenade","ProjectileGrenade","throwDir","onThrow","ActorHandgun","_isPause","move","onDir","_this$_actor4","isRun","_this$_actor5","_this$_actor6","isAim","_this$_actor7","onChangeEquips","_this$_actor8","onEquip","_this$_actor9","onPick","_this$_actor10","_this$_actor11","onDrop","_this$_actor12","onPause","ActorInput","_isOpenEquips","bind","exitPointer","document","exitPointerLock","sys","platform","Platform","MOBILE_BROWSER","ANDROID","IOS","isShow","initInput","children","onAutoFire","isAutoFire","DamageData","hitPart","hitDistance","fireData","ActorItem","item","ActorLookAt","_angle","bone_head","bone_name","lateUpdate","_this$bone_head","ActorMachineGun","ActorMain","ActorMeleeWeapon","ActorMoveSlope","p0","p1","direction","ZERO","updateSlope","moveDirection","moveLength","hit1","hit2","SensorSlope","SensorGround","velocity","velocityLocal","currentVelocity","moveVec3","currentDirection","angleHead","rigid","isJump","isStopMove","RigidBody","sensorSlop","sensorGround","movePosition","moveRotation","smoothMove","rotateY","toRadian","_this$rigid","getLinearVelocity","_this$sensorGround","_isGround","checkSlope","vectorSlop","_this$rigid2","setLinearVelocity","speed","jump","_this$rigid3","_this$rigid4","cos","PI","sin","angleVerticalMax","angleVerticalMin","onDirection","ActorPart","ActorPhysicalSkin","sensor","velocityPlane","inverseForce","getChildComponent","ActorPiranha","_brain","Brain","brain","noFoundPlayer","foundPlayer","nearPlayer","canEatPlayer","fleePlayer","feedPlayer","idle","crossRoad","forcePrepareJump","ActorSensorDropItem","pickedNode","curState","SensorRays","checked","dropName","getPicked","ActorShotgun","hitName","collider","concat","actorPart","ActorSound","_currentStepLength","walkSfx","is_ground","_velocityLocal","stepLength","walk_in_type","soundList","DataSoundInst","ActorStatistics","_velocity","_statisticsTime","_moveDistance","_runDistance","_this$actor","_this$actor$_actorMov","_this$actor$_actorMov2","_this$actor2","ActorTaskGoTarget","waypoints","isStart","initWayPoints","_waypoints","isWait","onAction","TaskBase","tasks","onCompleteFun","arguments","sequence","task","TaskSequence","parallel","TaskParallel","frameTime","onComplete","call","_TaskBase","next","_TaskBase2","tempLinearVelocity","tempAngleVelocity","_move","_actorBag","_actorSensorGround","_viewNoWeapon","_fps","_ActorBase","updateAction","noAction","frameRate","hit_recover","_this$_actorMove","canRun","calculateRunStrength","run_speed","move_speed","normalizeSpeed","_this$_actorEquipment","recoverStrength","_this$_forwardNode","strength","cost_jump_strength","onGround","offGround","onWin","_this$_actorMove2","_this$_actorMove3","_this$_actorMove4","is_run","actorSensorDropItem","_this$actorSensorDrop","recoverHP","_this$_actorBag","_this$_actorBag2","_this$_actorBag3","_this$_actorBag4","_this$_animationGraph","stand_camera_height","crouch_camera_height","_currentEquip","_this$_actorEquipment2","_this$_actorEquipment3","_this$_actorEquipment4","_this$_actorEquipment5","_this$_actorEquipment6","_this$_actorEquipment7","has_multi_res","calculateStrengthUseEquip","canUseEquip","cost_use_equip_strength","cost_run_strength","recover_ground_strength","max_strength","percent_value","rigidBody","_this$_actorMove5","linearVelocityLength","eulerAnglesY","num_velocity_x","num_velocity_y","moveSpeed","linear_velocity_animation_rate","angle_velocity_animation_rate","angle_velocity_animation_scale","_this$_animationGraph2","_this$_animationGraph3","_this$_animationGraph4","_createClass","is_win","_tempVec3","_tempVec3_2","_tempQuat","Quat","_tempQuat_2","tempPivot","AimControl","AimIK","_lastTarget","_switchWeight","_switchWeightV","_weightV","_lastPosition","_lastSmoothTowardsTarget","turningToTarget","turnToTargetMlp","turnToTargetMlpV","_interval","ik","solver","ikPosition","_getPivot","ikPositionWeight","getWorldPosition","offset","outValue","MathUtil","smoothDamp","weight","weightSmoothTime","targetSwitchSmoothTime","smoothTurnTowardsTarget","fromViewUp","toEuler","_applyMinDistance","_rootRotation","useAnimatedAimDirection","transformQuat","animatedAimDirection","rootNode","getWorldRotation","inverseTransformPoint","axis","pivotOffsetFromRoot","minDistance","maxRootAngle","enableAim","invert","atan2","rotation","turnToTarget","_startCoroutine","_turnToTarget","fromAxisAngle","UP","multiply","clearInterval","fb","setInterval","IKSolverAim","boneNodes","forEach","bones","IKBone","boneWeights","aimNode","tempQuat","animation_to_oribit","Animation","OrbitCamera","touched","timeoutID","Input","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","orbit","ani","clearTimeout","enabled","setTimeout","dt","slerp","IDENTITY","AnimationGraphMove","_triggered","onMotionStateEnter","controller","motionStateStatus","onMotionStateExit","onMotionStateUpdate","progress","msg","onStateMachineEnter","onStateMachineExit","StateMachineComponent","AStar","map","start_pos","end_pos","closeTable","openTable","max_x","max_z","_tempNode","_stop","initMap","_map","m","j","v","Stack","createTable","copyTable","setTestNode","testNode","instantiate","checkCurrent","size","np","nx","nz","f","f_cost","cost","cur_pos","l0","l1","table","source","clearTable","_BaseStageID","BaseStage","CCString","_id","_materialName","useCustomSize","renderToScreen","rtCount","renderTextures","_rect","gfx","Rect","clearColors","Color","requestDepth","lastStage","uniqueStage","_renderArea","slotName","camera","outputNames","getCameraUniqueID","finalShadingScale","shadingScale","director","root","pipeline","pipelineSceneData","checkEnable","enable","renderProfiler","HrefSetting","showFps","settings","EDITOR","passUtils","pass","showStatistics","getRenderArea","area","window","width","floor","render","ppl","globalThis","pipelineAssets","getMaterial","outputMap","Map","stages","forwardStage","Vec2","Bind","totalEvents","countEvents","getUpgradeCardInfo","upgradePlayerAttributes","getShowName","GameQuality","volumeSound","volumeMusic","imgSrc","getLevelScore","getSprite","getStatistics","toFixed","initData","events","event","hasBind","checkRefresh","RasterView","rendering","AttachmentType","AccessType","ResourceResidency","LightInfo","SceneFlags","QueueHint","ComputeView","Format","LoadOp","StoreOp","ClearFlagBit","Viewport","BlitStage","override","material","isOffScreen","slot0","containsResource","addRenderTexture","textureFormat","addRenderTarget","MANAGED","addRasterPass","inputName","cv","addComputeView","passView","WRITE","RENDER_TARGET","CLEAR","getLoadOpOfClearFlag","clearFlag","STORE","clearColor","w","addRasterView","addQueue","RENDER_TRANSPARENT","addCameraQuad","NONE","RGBA8","MAX_BLOOM_FILTER_PASS_NUM","BLOOM_PREFILTERPASS_INDEX","BLOOM_DOWNSAMPLEPASS_INDEX","BLOOM_UPSAMPLEPASS_INDEX","BLOOM_COMBINEPASS_INDEX","defaultSetting","threshold","iterations","intensity","blurRadius","tempVec4","Vec4","clampSampler","Sampler","SamplerInfo","Filter","LINEAR","Address","CLAMP","BloomStage","setting","BloomSetting","bakingReflection","bloom","COLOR","set","format","RGBA16F","cameraID","cameraName","bloomPassPrefilterRTName","setProperty","input0","setViewport","setPassInput","blitScreen","version","downIndex","params","bloomPassDownSampleRTName","layoutName","bloomPassUpSampleRTName","executeInEditMode","onEnable","onDisable","dataPath","runNode","rand","Buff","CameraAutoBindOcclusion","culling","occlusionCulling","StaticOcclusionCulling","Camera","CameraController","_followTarget","_offsetZ","_offsetZScale","_target","_pos","controlZ","setWorldPosition","SmoothLocalZ","setLen","setOffsetScale","setOffset","scale","GVec3","smooth","camera_fps","_this$root","updateAngle","CameraMoveTarget","setTarget","cameraNode","SensorRayNodeToNode","waitTime","targetNode","smoothFastMove","smoothSlowMove","_this$cameraNode","_this$cameraNode2","_this$lookAtTarget","targets","endNode","CameraMsg","_cameraNode","_camera","setCamera","CameraSetting","InPlayMode","cce","main","CameraTps","CheckAutoPick","checkAutoPickTime","isAutoPick","ColliderGroup","Collider","_this$node$getCompone","setGroup","calculateDamageNode","shootActor","split","hitTag","actorBodyName","part","part_damage","DataLevelInst","fx_dead","calculateDamageView","notify","showMsg","DataBase","_name","DataCamera","DataEquip","DataSound","DataCameraInst","DataNavigationInst","DataNavigation","DataUpgradeCardInst","DataUpgradeCard","DataGame","DataLevel","Init","CAPACITY","capacity","_elements","_size","len","temp","peek","clear","isNaN","unshift","DebugUtil","debugIndex","gdata","CheckDisplayStats","debug_info","setDisplayStats","getGeometryRenderer","mainCamera","initGeometryRenderer","geometryRenderer","DeferredGBufferStage","gbufferStage","fog","fogStart","DEPTH_STENCIL","clearDepthColor","clearDepth","clearStencil","colFormat","posFormat","isMobile","RGBA32F","slot1","slot2","slot3","slot4","RENDER_OPAQUE","addSceneOfCamera","OPAQUE_OBJECT","CUTOUT_OBJECT","DRAW_INSTANCING","DeferredLightingStage","materialMap","tempMat","clearMat","enableClusterLighting","enableIBL","enableShadow","probes","updateClusterUBO","setter","cluster","LightWorldCluster","boundsMin","boundsDelta","clusterCellsDotData","clusterCellsMaxData","clusterTextureSizeData","infoTextureInvSizeData","clusterCellsCountByBoundsSizeData","setTexture","dataInfoTextureFloat","clusterTexture","pointSampler","globalDSManager","setSampler","shadowStage","mainLightShadows","dirShadowName","ReflectionProbes","filter","enabledInHierarchy","sharedMaterial","renderer","MaterialInstance","recompileShaders","CC_RECEIVE_SHADOW","REFLECTION_PROBE_COUNT","ENABLE_CLUSTER_LIGHTING","clusterLighting","ENABLE_IBL","ibl","ENABLE_SHADOW","shadow","addConstant","probe","cubemap","_cubemap","getGFXTexture","getGFXSampler","fogUBO","VOLUMETRIC_LIGHTING","transparent","flags","TRANSPARENT_OBJECT","PLANAR_SHADOW","GEOMETRY","DeferredPostStage","params1","params2","canvas","outputRGBE","tonemapped","fxaa","DelayPlayAnimation","KEY_UP","keyCode","KeyCode","SPACE","delayPlay","_this3$node$getCompon","anim_name","anim","DelayActive","t","removeFromParent","DelayPlay","delay_show_node","_scale","getWorldScale","setScale","delay_time","destroySettings","CCBoolean","isDestroy","addPersistRootNode","disable_update_ubo","mrs","MeshRenderer","mr","model","updateUBOs","_localDataUpdated","DropItem","itemName","groupIndex","effectIndex","dropNode","picked","EditorCameraPlacer","_oldPosition","_oldRotation","_place","_EDITOR","io","ws","path","fse","base642arraybuffer","Sharp","Buffer","globby","request","formatPath","replace","relpaceExt","fspath","extname","basename","join","dirname","EditorExtends","Editor","projectPath","projectAssetPath","projectTempPath","ccwarn","ccerror","download","url","Promise","resolve","reject","head","err","body","pipe","createWriteStream","repaintInEditMode","Engine","Electron","sendAsync","_context","electron","_electron","ipcRenderer","invoke","call_data","send","_electron2","A2C","remote","app","getUserID","getPath","is_steam","counter","Event","_listeners","_onceListeners","cb","listeners","once","a1","a2","a3","a4","a5","a6","_i","l","apply","onceListeners","FilSmooth","fil_value","Sprite","delta","fillRange","ForceArea","_force","_collider","onTriggerEnter","onTriggerStay","area_force","_currentGameNodeName","forceRate","other","force","posScale","calculate","a","otherCollider","ForwardPostStage","mainWindow","supportsR32FloatTexture","scene","ShadowType","LightType","SKYBOX_FLAG","CSMLevel","ForwardStage","buildShadowPass","passName","light","level","device","shadowMapName","R32F","addDepthStencil","DISCARD","rect","queue","SHADOW_CASTER","buildShadowPasses","validPunctualLightsCulling","shadowInfo","shadows","validPunctualLights","cameraInfo","CameraInfo","ShadowMap","shadowEnabled","_validLights","n","maxReceived","SPOT","spotLight","mainLight","mapWidth","mapHeight","mainLightShadowNames","shadowFixedArea","csmLevel","csmSupported","toString","spotLightShadowNames","updateRenderTarget","updateDepthStencil","passDSView","DEFAULT_LIGHTING","FSRStage","fsr","inputWidth","inputHeight","outWidth","outHeight","sharpness","easu","FxActorFallPoint","_ray","_height","_line","_fxHit","_hitPos","detectPoint","particle_high_light","startSpeed","constant","rate_high_light","FxAutoRemove","delayTime","particle","remove","destroyTime","FxBulletTracer","pool","poolCount","firstChild","setTracer","endPosition","eachSegment","calculateSegment","startPosition","currentLength","currentNode","lookAt","hiddenLines","hiddenTime","round","segment","FxCarRandomMove","intervalTime","minTime","maxTime","offsetY","FxFlyCar","_this$animation","_this$animation2","defaultClip","FxGhostVertex","materials","directionUniform","v4","lastPosition","components","SkinnedMeshRenderer","comp","equals","clamp01","handle","passes","getHandle","getUniform","setUniform","FxGhost","meshRenders","_intervalTime","_ghostItems","_eachCount","_total","total","itemNode","meshRender","newNode","simpleMeshInfo","simpleTime","mesh","copyMesh","ghost","setWorldRotation","FxGroup","_particles","_loop","setDestroy","setLoop","setEnable","_this2$node","FxInit","FxLightFlash","matLight","lightColor","lightValueMax","lightValueMin","flashTimes","isFlash","onFlash","pingPong","g","b","_this$matLight","FxRayLine","setRayLine","includes","newFx","fxNode","isLoop","POINT","custom","FxaaStage","_offset","texSize","_BaseStage","GMath","uuid","c","r","clamp","min","current","smoothTime","maxSpeed","Number","POSITIVE_INFINITY","omega","exp","change","originalTo","maxChange","output","lerpSmooth","rate","StretchedBillboardAngle","upward","nodeForward","targetForward","costValue","dot","projectPoint","projectForward","Gizmo","drawLine","RED","YELLOW","drawBox","BLUE","GREEN","angleForward","MAGENTA","onload","loadScene","removeLoad","wait_count","_stack","_nodes","_isInit","_totalGameTime","_nextSaveTime","backSafeTime","_find","dataCore","action_data","BindUI","back","Notify","check_notify","nextAction","preNode","pre","is_pop","auto_save","statisticsTime","next_save_time","_default","maxSubSteps","game_quality","refresh","checkChange","location","reload","generate_white_box","doGenerate","targetRoot","removeAllChildren","bounds","worldBounds","center","halfExtents","GM","_dic","clear_data","deleteAllArchive","clearByKey","deleteAll","run","cmdList","cmd","cmdFun","getHelp","GpuMobiles","RenderQulity","getGpuType","types","getGPUVersion","matches","match","gpuType","gpuVersion","gpuScore","toLowerCase","gpuInfo","GRandom","seed","preValue","reset","range1000","ret","lGraph","LGraph","lGraphCanvas","LGraphCanvas","liteGraph","LiteGraph","__graph__","graph","GraphShowType","saveGraph","loadGraph","_loadGraph","configure","graphData","pauseGraphAfterLoad","showGraph","show","onclose","isBrowser","isNewWindow","NewWindow","__graph_window__","open","CanvasRenderingContext2D","prototype","roundRect","style","__graph_canvas__","createElement","innerHTML","css","appendChild","canvasElem","__l_graph_canvas__","setCanvas","setDirty","offsetWidth","offsetHeight","onresize","onbeforeunload","close","removeChild","GGraphics","GMesh","Create","vers","triangles","uvs","positions","indices","utils","createMesh","GImage","MeshBase","colors","trianglesIndex","Guide","_cur_index","_guide_name","_has_guide","set_guide","guide_force_set","guide_info","guide_end_event","GunTracerPool","poolItem","RenderTexture","resize","_width","_window","EVENT_GAME_INITED","__pipeline__","assetManager","loadAny","pipPrefab","hideFlags","CCObject","Flags","DontSave","__runSceneImmediate","runSceneImmediate","onBeforeLoadScene","onLaunched","getScene","func","ReflectionProbeManager","probeManager","onUpdateProbes","callbackInfos","_callbackTable","Director","EVENT_BEFORE_UPDATE","profiler","showStats","HaltonSeq","Get","radix","result","cache","fraction","HaltonUtils","sampleIndex","_tempVec2","Generate2DRandomOffset","sampleCount","Generate3DRandomOffset","FExponentialHeightFogSceneData","Height","Density","HeightFalloff","FogData","FogColor","NumFogs","CollapsedFogParameter","fill","_tempFogInscatteringColor","_empty","fog_Parameters","fog_Parameters2","fog_Parameters3","fog_ColorParameters","SecondExponentialHeightFog","ExponentialHeightFog","_dirty","inscatteringColorCubemap","inscatteringTextureTint","updateUBO","updateFogData","secondFogData","fogHeightOffset","fogDensity","fogHeightFalloff","fogInscatteringColor","MaxObserverHeight","MaxObserverHeightDifference","ObserverHeight","CollapsedFogParameterPower","pow","startDistance","fogCutoffDistance","fogMaxOpacity","_fogDensity","_fogHeightFalloff","_secondFogData","_fogInscatteringColor","_fogMaxOpacity","_startDistance","_fogCutoffDistance","spector","zoomScreen","fps","taa","maxEnemies","sceneParticles","changedMap","href","results","test","parseFloat","mobileSettings","score","gpu","gpuSettings","s","use","MACOS","JSB","Bone","sqrMag","swing","swingTarget","fromToRotation","quatLerp","solverSwing","solverPosition","solverRotation","setToSolverPosition","Point","defaultLocalPosition","defaultLocalRotation","storeDefaultLocalState","getPosition","getRotation","fixTransform","_this$node3","_this$node4","_this$node5","_this$node6","setRotation","updateSolverPosition","_this$node7","updateSolverState","_this$node8","_this$node9","updateSolverLocalState","_this$node10","_this$node11","_tempVec3_3","minBones","_step","_clampedIKPosition","_lastNode","_transformPoleAxis","_transformAxis","getAngle","radiansToDegrees","transformAxis","onInitiate","firstInitiation","polePosition","transformPoleAxis","poleAxis","poleWeight","poleTarget","XY","clampWeight","_getClampedIKPosition","sLerp","maxIterations","tolerance","lastLocalDirection","localDirection","_solve","_rotateToTarget","targetClampMlp","clampMlp","clampSmoothing","sinF","angleDir","angleTarget","deltaAngle","axisAngle","_bone$node","rotationTo","IKSolverHeuristic","chainLength","_localDirection","setChain","hierarchy","initiate","initiated","addBone","newBones","fixTransforms","getPoints","getPoint","initiateBones","getSingularityOffset","_singularityDetected","secondaryDirection","toLastBoneDistance","toIKPositionDistance","directionToNodeSpace","lengthSqr","IKSolver","isFixTransforms","containsDuplicateBone","i2","InfraredTracker","rayLine","Util","calculateMask","masks","scaleDirection","_this$rayLine","load","loadTextures","timeEnd","InputBase","_actorInput","onStart","onEnd","_this$node$parent","InputEquipSelect","v2","time_wait","TOUCH_MOVE","onTouchMove","MOUSE_MOVE","onMouseMove","UtilVec2","getLocation","isGamePad","InputGamepad","offset_euler","move_a","_v_increase_move","_move_v3","_key_count","_curKeyJump","_move_dir","_isChangeEquips","_checkGamepadTime","GAMEPAD_INPUT","onGamePad_Input","leftStickXAxis","gamepad","leftStick","xAxis","getValue","leftStickYAxis","yAxis","rightStickXAxis","rightStick","rightStickYAxis","isFire","buttonR1","_this$_actorInput","buttonR2","_this$_actorInput2","buttonL2","_this$_actorInput3","isChangeWeapon","buttonL1","_this$_actorInput4","isReload","buttonEast","_this$_actorInput5","isCrouch","buttonWest","_this$_actorInput6","isPick","buttonSouth","_this$_actorInput7","isPause","buttonOptions","_this$_actorInput8","onUpdateMove","_this$_actorInput9","deltaX","deltaY","_this$_actorInput10","InputHandle","loadJson","sendKey","InputJoystick","_isRun","onAutoFireStart","onAutoFireEnd","onFireStart","onFireEnd","_this$_actorInput11","onSetRun","_this$_actorInput12","_this$_actorInput13","InputKeyboard","key_count","_pressQ","direction_up","direction_down","direction_left","direction_right","KEY_DOWN","onKeyDown","onKeyUp","MOUSE_DOWN","onMouseDown","MOUSE_UP","onMouseUp","addEventListener","onPointerChange","pointerLockElement","removeEventListener","hasKey","KEY_W","KEY_S","KEY_A","KEY_D","KEY_E","KEY_G","KEY_Q","KEY_C","KEY_N","KEY_R","ARROW_UP","ARROW_LEFT","ARROW_RIGHT","ARROW_DOWN","SHIFT_LEFT","ESCAPE","KEY_T","getButton","movementX","movementY","screenXRate","screenYRate","rotateX","_this$_actorInput14","_this$_actorInput15","InputMouse","_screenPos","cameraCtr","TOUCH_CANCEL","onTouchCancel","mask_group","screenPointToRay","_pointerLock","InputPointerLock","_game$canvas","requestPointerLock","_game$canvas2","InstancedQueueType","InstancedAreaItem","halfExtent","bounding","AABB","_instancedQueue","constructor","InstancedArea","distanceToCulling","ItemExtent","SizeEachRow","q","updateWorldTransform","passIdx","subModels","instancedBuffer","getInstancedBuffer","merge","instancedAttributes","enableDistanceCulling","frustum","additiveInstanceQueues","indexOf","intersect","aabbFrustum","dist","InstancedQueue","_queues","enableAll","instancedQueue","IO","getNum","val","read","search","num","parseInt","write","isNative","native","fileUtils","writeStringToFile","localStorage","setItem","getStringFromFile","getItem","removeItem","exist","JoystickAutoHidden","_color","_isHidden","_sprite","_alpha","_cur_alpha","_delay","SpriteComponent","autoHidden","hidden_delay_time","hidden_alpha","color","isHidden","JoystickMove","_movePos","_tempMove","_moveNode","_bgNode","_input","ui_camera","screenVec3","screenCenter","_this$ui_camera","worldToScreen","calculateMoveDirection","cancelTouch","getLocationX","getLocationY","_this$ui_camera2","screenToWorld","radius","runRadius","_this$_input","_this$_input2","_this$_input3","JoystickPadAction","actionNode","_this$actionNode","startMsg","_this$actionNode2","endMsg","_this$actionNode3","JoystickPad","Joystick","KEY_PRESSING","onKeyPRESSING","MOUSE_WHEEL","onMouseWheel","JoystickPadRotation","getDeltaX","getDeltaY","JsonTool","toJson","JSON","stringify","toObject","parse","toIOObject","str","JumpPoints","label","real_points","cur_points","Label","points","show_num","ceil","LevelEnablePlay","LevelEventsCard","probability","groupCounter","currentCards","nextCounter","counterCard","probability_drop_card","cards","interval","next_show_card_param_a","checkNextEvent","nextEvent","next_show_card_param_b","odds","weights","excludeGroupIndex","iWeight","currentMax","weightMax","weights_max","interval_weight_max","excludeIndex","calculateCardInfo","upgradeCards","selectCardData","randomCardIndex","randomCardData","valueCount","values","describe","tempData","tempValue","calculateRange","isFloat","showValue","LevelEventsEnemy","killCounter","probability_drop_enemy","enemies","generateEvent","occurGroupIndex","currentIndex","weights_group","groupID","_isStart","LevelEventsItems","probability_drop_items","sendData","LevelEvents","_events","_max","updateEvent","addEnemy","_spawn_pos","_scoreRate","_enemies","onLevelStart","levelAction","onReplay","nextStatistics","pause","resume","addPlayer","prefab_player","resPlayer","spawn_pos","point","randomPoint","enemy","prefab_drop_item","drop","drop_effect_index","addObj","objNode","selectIndex","upgradeValues","gameOver","calculateScore","saveGameOver","day","killedTimes","hitBodyTimes","hitHeadTimes","fireTimes","hitRate","setStatistics","beHitBodyTimes","beHitHeadTimes","beHitTimes","enemyFireTimes","dodgeRate","eachRateValue","each_rate_value","level_score","killed_to_score","survival_time_to_score","scoreLevels","score_level","passLevel","infos","_currentStatistics","_sphere","Sphere","tempVec3","pixelsPerObjectFloat","lights","dirty","_dirtyTimeout","addObjectData","dataInfoFloat","dataInfoFloatIndex","isSpotLight","SpotLight","lightMeterScale","defaultExposure","luminance","spot","clampedInnerConeAngle","clampedOuterConeAngle","cosOuterCone","cosInnerCone","invCosConeDifference","getBoundingBox","clusteredObject","worldPos","getBoundary","findObjects","scenes","sphereLights","ii","activeInHierarchy","mobility","MobilityMode","Static","spotLights","forceUpdate","_WorldCluster","WorldCluster","light_flash","_light","_curLuminance","_range","SphereLight","LightFlowCamera","_waitFind","LocalLabel","slice","string","language","languageIndex","sys_language","navigator","toLocaleLowerCase","show_name","Log","debug","logo","_tempMat","Mat4","_tempMat_2","_forward","degreesToRadians","degValue","radValue","clampDegrees","transformDegreesToNear","inverseLerp","ba","remap","remappedValue","convertToNodeSpace","out","getWorldMatrix","transformMat4","convertToWorldSpace","localPosition","randomInt","worldDirection","getWorldLine","beginNode","worldRotation","getWorldLineByPos","beginPos","endPos","hDistance","getMoveDirectionByCameraDirection","rotateValue","rotateVector","deg","getLocalDegree","num1","num2","num3","num4","num5","num6","num7","num8","fromDir","toDir","miniThreshold","mid","X","Z","Y","src","tar","orthoNormalize","outA","outB","clampVec3","minVec","maxVec","from","to","ratio","EPLISION","vec3_min","vec3_max","vec3_floor","vec3_ceil","roundUp","numToRound","multiple","sRGB2Linear","RGBE2Linear","rgbe","e","powerOfTwo","toHalf16","floatView","Float32Array","int32View","Int32Array","buffer","bits","move_camera_x","_run","KEY_M","MsgEvents","MsgPlayAnimation","_this2$animation","_this2$animation2","animName","MusicComposeRandom","AudioClip","_selects","_curs","_t","_audios","clips","as","AudioSource","clip","randomPlay","select_one","MusicComposeState","selects","MusicComposeValue","_value","navigation_debugger","editorUpdate","_director$root","addLine","NavigationMap","updateEditModel","linkChildNode","pos0","pos1","NavigationPoint","_rays","navigation_points","NavigationRegion","refreshMapPoints","blockX","mapBlockX","blockY","mapBlockY","blockZ","mapBlockZ","nodeMap","nodes","links","child","navigationPoint","getSiblingIndex","keyX","keyY","keyZ","linkInfo","calculateCircleLink","testPath","times","testFindPath","link","linkIndex","maxDistance","heightDifference","maxHeight","slopHeight","slopDistance","linkNodes","testFindPaths","ONE","WHITE","isLast","drawCircle","testRandomPath","_this$testNode","_NavSystem","nodePosition","nodeID","randomNode","paths","findNearestPoint","calculateRandomPaths","nodeData","minlength","MAX_VALUE","curLen","randomLinkIndex","startNearest","h","endNearest","findMinCostPoint","minNode","checkInOpenTable","openTableI","checkInCloseTable","closeTableI","pushOpenTable","searchNeighbor","linkNode","findPathPoint","minNodeIndex","calculateParent","findTargetPoint","reverse","updateNextNodes","outSlotID","nexts","getOutputNodes","sort","onUpdateStage","title","useNpm","GAME_VIEW","cc","require","resUrl","readFile","readFileSync","loadResource","_loadResource","relativePath","getAssetPath","resourcePath","onLoad","metaPath","ccpath","changeExtname","resources","_getAssetPath","relPath","_context2","Message","saveJson","_saveJson","relativeJsonPath","_context3","jsonPath","ensureDirSync","writeFileSync","saveString","_saveString","_context4","dst","loadResources","_loadResources","relDir","_context6","absDir","metaPaths","sync","all","loadDir","OpaqueDepth","models","OpaqueDepthObject","tempVec3_2","DeltaFactor","PositiveForward","_touched","_targetRotation","_rotation","enableTouch","limitRotation","touch","getDelta","fromEuler","rotateAround","xRotationRange","targetRotation","rotateSpeed","_startRotation","OutputTexture","addInput","addProperty","addWidget","updateStage","prev","stage","computeSize","registered_node_types","registerNodeType","PassUtils","rasterWidth","rasterHeight","passPathName","setVersion","passVersion","offscreen","residency","updateRenderWindow","clearOp","LOAD","view","shaderName","computeView","PipelineAssets","Material","materialNames","updateMaterials","effectName","_materials","ms","PiepelineGraph","onEditChanged","_edit","EditorCameras","CustomPipelineBuilder","_shadowStage","registerStages","pipelines","unregisterStages","setupReflectionProbe","cameras","getProbes","needRender","originCameraNode","originCamera","originName","faceIdx","tempNode","HideInHierarchy","_createCamera","attachToScene","renderScene","bakedCubeTextures","changeTargetWindow","setFixedSize","updateCameraDir","renderCamera","setup","ReflectionProbe","pipelineName","cameraSetting","projectionType","CameraProjection","ORTHO","taaStage","TAAStage","_isProjDirty","matProj","m12","TAASetting","sampleOffset","m13","matProjInv","matViewProj","matView","matViewProjInv","CustomShadowStage","setCustomPipeline","EVENT_RENDERER_INITED","setMacroInt","Pipeline","addOutput","Date","now","onPropertyChanged","prevalue","onExecute","properties","Enable","PrivatePool","ctor","_pool","_ctor","put","Pool","Preload","JsonAsset","ProgressBar","progressTarget","startTime","initGameTasks","initGame","performance","preInit","savejson","sceneName","preloadScene","prefabs","UITransform","removeWhenLoaded","_context5","updateFunction","weaponData","rigidbody","_this$rigidbody","applyImpulse","waitExplode","onExplode","isTrigger","useGravity","exploding","sound_explode","onExplodeEnd","explodeTime","endSize","setWorldScale","normalizeGPU","sqrt","crossGPU","ax","ay","az","bx","by","bz","dotGPU","lengthGPU","newVec3","rayAABB","ix","iy","iz","t1","t2","t3","t4","t5","t6","tmin","tmax","mul","mulV3","rayTriangle","ro","rd","v0","v1","EPSILON","ab","ac","pvec","det","inv_det","tvec","u","qvec","inverseMat4","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","createEmptyMat4","initMat4","arr","v3_lv3","m00","m01","m02","m03","m10","m11","m20","m21","m22","m23","m30","m31","m32","m33","im","rhw","_gpu","getGPU","GPU","addFunction","_kernel","_meshBuffer","_subModelCount","createKernel","maxDirection","cornersCount","mi","smi","directionSize","threadSize","norners","subModelCount","nornerOffset","thread","pointsOffset","constants","threadXCount","closedDistance","closedModelIndex","subModelOffset","testResult","subModelIndex","maxIBCount","ibIndex","vbOffset","vbCount","ibOffset","ibCount","modelIndex","modelOffset","mat","worldScale","worldBoundCenter","worldBoundHalfE","broadPhaseDistance","lro","lrd","distanceScale","threadYCount","createMeshBuffer","_hacked","context","_ori","meshes","bufferCount","submodelBuffers","modelBuffers","subMesh","subMeshAny","meshIndex","_vbOffset","_vbCount","geometricInfo","_ibOffset","_ibCount","toArray","worldMatrix","extraInfoCount","triangleCount","bufferOffset","raycastModels","froms","resultModels","pointsBuffer","fromsBuffer","raycastResults","Triangle","m4","modelRay","tri","narrowDis","Infinity","narrowphase","vb","ib","pm","sides","PrimitiveMode","TRIANGLE_LIST","cnt","i0","i1","TRIANGLE_STRIP","rev","TRIANGLE_FAN","raycastAllModels","worldRay","Layers","Enum","DEFAULT","transform","layer","ModelType","transformMat4Normal","subModel","doubleSided","primitiveMode","ignoreEnable","raycastModel","ReflectionWorldCluster","_atlas","forceUpdateAtlas","cubemaps","packCubemapAtlas","updateClusters","clustersCounts","clustersData","clustersDistances","divX","_cells","divY","divZ","counts","distances","limit","_maxCellObjectCount","clusters","pixelsPerCellCount","_pixelsPerCellCount","usedObjects","_usedObjects","object","clusterIndex","multiply3f","squaredDistance","testIndex","indexInAtlas","offsets","drawObjects","ReflectionProbeUtils","capturing","runtimeCapture","_createProbe","captureCubemap","_needRender","RenderQulityNode","High","Medium","Low","renderSetting","quality","RenderToScreen","RenderTool","createMat","effect","EffectAsset","initialize","changeEffect","_json","_prefab","_txt","_sound","_callback","callback","checkEnd","jsonPrefab","loadPrefab","loadSprite","loadSound","addLoad","getTxt","getSound","setJson","preloadFxShader","preload","setPrefab","setText","_this5","setSprite","_this6","setSound","_this7","_this8","loadDirJson","_this9","loadDirPrefab","loadText","_this10","loadDirText","_this11","loadDirSprite","_this12","loadDirSound","ResDestroy","ppSettings","ResEditorCache","Prefab","jsonAssets","ResPool","_root","initPool","pool_recycle","recycle","has","newPool","pushByName","newpool","_items","_state","_realMax","IncreaseSize","newRes","poolindex","checkAndIncreaseSize","newnode","last","ParallelMaxTextures","allTextures","_loadTextures","some","loader","loadRes","message","loadTxt","TextAsset","loadTex2D","Texture2D","loadImage","ImageAsset","SpriteFrame","loadSpriteAtlas","SpriteAtlas","loadEffect","loadAudio","loadAnimationClip","AnimationClip","loadMesh","Mesh","loadMateiral","loadSkeleton","Skeleton","SceneAsset","instObj","_director$getScene","addChild","setParent","_director$getScene2","Router","_attributes","vertices","attr","componentType","bytesPerElement","normals","uv","uv1","joints","MeshData","tangents","toGltfMesh","gltf","gltfMesh","bufferIndex","primitive","attributes","mode","primitives","byteOffset","bufferViews","attrName","attrDef","accessor","bufferView","accessors","byteLength","ArrayBuffer","float32Buffer","uint16Buffer","Uint16Array","buffers","uri","encode","loadAssetByUrl","_loadAssetByUrl","assetUid","saveGltf","_saveGltf","gltfUrl","meshUrl","gltfPath","writeJSONSync","max_history_statistics","_uuid","_uuidKey","_archiveKey","_archiveList","_backup_counter","newArchive","loadArchive","statisticsTimes","statisticsDistance","saveArchive","backup","saveArchiveList","hasArchive","read_data","input_index","loadBackup","deleteArchive","UtilArray","statisticsFinalScore","statKey","history_index","history","player_id","SceneParticles","SensorActions","SensorAnig","onCollisionEnter","_this$graph","SensorAudio","SensorEffect","_rigid","_mask","checkGroundRays","original","checkDistance","SensorMsg","_safeTime","_curTime","exit_msg","onTriggerExit","onCollisionExit","array","checkFilter","isHitRemove","exit_data","unSafeEnter","SensorProbe","_direction","startNode","_this$hitPoint","_dirs","hitStates","notHitCount","eachAngle","rotationOrigins","curAngle","newDir","check_time","worldEulerAngles","getWorldEulerAngles","rotationY","getRandomWalkableDirection","randomIndex","walkableIndex","SfxHeart","_sfxAudio","currentVolume","sceneVolume","currentSceneVolume","isLow","_player$_data","sceneMusicPercent","mainShadowName","_instance","Sky","skybox","globals","reflectionMap","envmap","Slider2D","uipos","uitran","halfx","halfy","px","py","contentSize","getUIDelta","dx","dy","getPercent","offset_x","setOffsetX","wait","smoothLerp","SoundActor","addSfx","sfx_name","SoundEnablePlay","_audioSource","_distance_percent","_volume","relate_height","max_height","max_sound","min_sound","soundNode","_soundNode$getChildBy","_bgmAudio","_soundNode$getChildBy2","_poolRoot","_templateSource","_sourcePoolCount","addPool","Refresh","setVolume","setVolumeMusic","onLoadEnd","volumeMultiply","playOneShot","isValid","_volumeLoad","currentBGMName","pauseBGM","SPECTORTOOLS","Loader","onReady","fullCapture","SPECTOR","Spector","timeSpy","spyRequestAnimationFrame","displayUI","spyCanvas","getFirstAvailable3dContext","rAF","requestAnimationFrame","_pacer","_rAF","capture","captureCanvas","KEY_H","host","dequeue","shift","getElementsByTagName","script","loadScript","loadSPECTORScripts","newCallback","scriptPaths","scriptPath","SpawnsGroup","createStageGraph","sclass","js","getClassName","Stage","onPropertyChanges","updateSize","originHeight","outputTexture","framebuffer","colorTextures","showResult","props","__props__","attrs","__attrs__","startsWith","widget","enumList","customSize","getInputData","createDrawFunc","imgData","imgCanvas","imgCtx","buffer32f","draw","ctx","tex","imgWidth","imgHeight","getContext","getImageData","readPixels","dstIdx","putImageData","save","drawImage","restore","onDrawBackground","funcName","onRemoved","ZoomScreenStage","showing","btn","onclick","SubMeshRenderer","StaticAreaBatchBlock","aabb","renderers","_materialCount","_totalCount","StaticAreaBatch","blockMap","totalRenderers","doClear","blocks","doRevert","doMerge","doSearch","processedCount","toProcessCount","tempMin","tempMax","tempNormal","tempMat4","blockPair","block","_loop2","rendPair","countPerRow","startVerticeIdx","meshData","lightMapSize","subfix","sub","StaticBatchComp","bakeSettings","bakeable","castShadow","receiveShadow","lightmapSize","maxLightMapSize","readAttribute","AttributeName","ATTR_POSITION","mergedVertexCount","pi","uv0","ATTR_TEX_COORD","inverseTranspose","ATTR_NORMAL","ni","ATTR_TEX_COORD1","uv1OffsetX","uv1OffsetY","uvi","readIndices","totalProcess","costTime","leftTime","_iterator2","_iterator","blockSize","sharedMaterials","smr","materialCount","USE_INSTANCING","StaticCulling","hack","StaticOcclusionArea","CullingBlock","initBlocks","useSelfBlockSize","halfBlockSize","wolrdPos","xCount","yCount","zCount","blockCells","blockIdx","subtract3f","areas","_startBake","visible","bakedInstances","instances","Set","bakingTotalCount","bakingDirections","bakeInstances","originState","subs","originClear","originUpload","uploadBuffers","cmdBuffer","uploaded","modelIndices","_tempOBB","OBB","_tempRay","_cornerResults","CornerType","ccenum","_cornerType","Corner8_Center","_loadCompeleted","_currentLocatedBlock","_lastLocatedBlock","_isBaking","_bakingAreaIndex","_bakingAreaEndIndex","_bakingBlockIndex","_bakingDirections","_gpuKernelDirty","_startTime","_updateAreas","_init","modelNames","_enabledCulling","_originUpdateUBOs","_uboDirty","stamp","calcCulling","obbPoint","discardCulling","areaStartIndex","areaEndIndex","localeCompare","oldModelNames","shouldReIndex","newIndices","newI","newArray","_modelRange","maxModelCount","rendererCount","shouldFastBack","sphereDirections","sphereBakeCount","modelPoints","useGpu","maxDirectionsOneFrame","raycastGpu","_bake","maxBakeBlockCountPerFrame","bakedBlockCount","totalCount","blockCount","bakingProcess","directions","_raycastDirections","_raycastPoints","raycast","_forEachCorner","corners","Seprate_Corner8_Center","corner","bakedResults","finalResults","_baked","debugDraw","areaColor","blockColor","locateBlockColor","tempMatrix","identityAABB","addBoundingBox","_blockSize","_maxDirectionsOneFrame","_maxModelCount","SteeringBasic","moveVelocity","desiredVelocity","SteeringBehaviors","Seek","targetPos","SteeringSeek","steeringBasic","SeekToward","_this$steeringBasic","StretchedBillboard","_CameraSetting$main","_CameraSetting$main$c","billboardAngle","up","SubstanceCore","checkNodeType","substanceType","SubstanceType","GROUND","SwitchProbe","_useProbe","getComponents","reflectionProbe","ReflectionProbeType","BAKED_CUBEMAP","slotNames","prevMatViewProj","firstRender","taaTextureIndex","feedback","historyTexture","posTex","PERSISTENT","halton8","SampleOffsets","x2","x3","x4","x5","samples","updateSample","forceRender","sampleScale","TapPlay","TaskRuner","_active","TestActorMove","_this$actorMove","_this$actorMove2","_this$actorMove3","TestAmoyAnimation","bool_crouch","bool_iron_sights","cameraTargetIndex","angleVelocity","linearVelocity","_this$view","keyDown","keyUp","updateMove","KEY_I","_this$_animationGraph5","_this$_animationGraph6","_this$_animationGraph7","_this$_animationGraph8","KEY_Z","_this$_animationGraph9","targetRigid","getAngularVelocity","moveSpeedRate","angleSpeedRate","_this$_animationGraph10","_this$_animationGraph11","_this$_animationGraph12","TestAnimationGraph","KEY_F","test_camera_debug","TestColliderMeshSwitch","meshRenderState","show_collider","GBufferInfo","buildGBufferPass","gBufferPassRTName","gBufferPassNormal","gBufferPassEmissive","gBufferPassDSName","gBufferPass","rtColor","isHDR","SRGBToLinear","passColorView","passNormalView","passEmissiveView","gBufferInfo","emissive","ds","LightingInfo","deferredLightingMaterial","defines","tryCompile","lightingInfo","buildLightingPass","gBuffer","deferredLightingPassRTName","deferredLightingPassDS","lightingPass","computeNormalView","computeEmissiveView","computeDepthView","lightingClearColor","lightingPassView","rtName","dsName","PostInfo","postMaterial","ANTIALIAS_TYPE","postInfo","buildPostprocessPass","inputTex","postprocessPassRTName","postprocessPassDS","postprocessPass","postClearColor","postprocessPassView","postprocessPassDSView","addFullscreenQuad","PROFILER","buildDeferred","lightInfo","test_forward","SolderController","zAxis","code","test_gun_fire","TestGunTracer","TestIk","aimControl","animationGraph","targetIndex","ikNode","_this$ikNode","_this$anim","_this$animationGraph","_this$animationGraph2","nextTarget","_this$target","test_move_target","TestNormal","startPos","calculateSlopeDirection","hitNormal","o1","pos2","CYAN","calculateSlopNormal","p2","hit3","calculateSlopDirection","test_reflect","_probeCubemap","setMaterialInstance","_probe","_material","TestRigidBodyVector","TestSlopeDirection","TestSlopeVector","TestSlopeMove","TestStairs","TestSteeringInit","jsonAsset","_this$jsonAsset","playerNode","_this2$player","enemiesNode","_this2$enemiesNode","TestStretchedBillboard","test_taa","test_ui","TouchCancel","Touch","cancelEvent","EventTouch","dispatchEvent","TransparentDepth","objects","TransparentDepthObject","processor","getModel","resort","priority","UBOBase","increaseIndex","ubo_index","COUNT","NAME","BINDING","LAYOUT","DESCRIPTOR","UIAimRange","sprite","dirs","baseSize","currentSize","ui_animation","UiAutoHidden","_color_a","_wait","setDisplay","UIBase","isOn","UICom","_node","BtnBase","TxtBase","GrpBase","SprBase","TglBase","GrpGM","SliBase","FilBase","GrpPickedTips","GrpSelectEquips","GrpEquipInfo","GrpBag","GrpMap","getChildren","comList","tempi","com","comType","_btn","_self$_node","Button","_this$_node","CLICK","text","_this2$_node","_UICom2","slider","Slider","Type","FILLED","defaultValue","_this3$slider","_this3$slider2","_UICom3","fil_smooth","spriteFrame","_proto6","_UICom5","_UICom6","btn_gm","inp_gm","EditBox","_toggle","Toggle","TOGGLE","list","img_select_highlight","_curIndex","count_bag_count","V2FORWARD","getPosFromAngle","iAngle","newItem","GrpSelectItem","projOrigin","selectAngle","_proto7","itemsName","itemObj","hasItem","setInfo","txt_nun","img_icon","img_bg","_proto8","txt_equip_info","hasHighLight","itemData","showNum","img_highlight","itemRoot","GrpBagItem","highPos","_proto9","msgs","count_picked_info","GrpPickedTipsItem","setSiblingIndex","img_enemy_point","newPoint","map_width","map_height","world_map_width","world_map_height","scale_x","scale_y","enemyCount","hasEnemy","txt_info","_proto10","UIDisplayByStateAutoHidden","_hiddenTime","onChangeState","_UIDisplayByState","UIDisplayByState","UIEnablePlayAnimation","_this$_anim","_this$_anim2","UIEnablePlay","enable_opacity","UIFadeIn","tweenUpdateColor","bindTarget","BindTarget","startColor","tween","endColor","UIFx","UIGuidePlatform","guideSprites","UILoading","_percent","_realPercent","waitList","viewNode","current_msg","isLoading","onWaitList","calculateLoading","txtLoading","img_loading_bar","onLoadFinished","waitMsg","UIMoveShow","_a","hiddenSpeed","showSpeed","ui_roller","_orignal","UIScrollViewResetPos","layout","Layout","panelRoot","cacheList","_this$node$getChildBy","panel","order","ui_order","uiBase","deltaLimit","calculateMaxBounders","renders","max_y","UtilStr","equal","include","selectFromItems","UtilMaterial","setColor","_meshRender$material","vec","clampMagnitude","init_3","a0","ai","aj","reset_3","addArray","component","ls","blurName","getParentComponent","_worldRotation","getEulerAngles","UtilLog","waitFor","duration","UtilCurve","Bezier","ParaCurve","vx","vy","vz","cell_time","cur_time","xi","zi","yi","ParaCurveByDir","dz","UtilRandom","getGeometryRender","_Gizmo","addCircle","border","seconds","date","getFullYear","getMonth","getDate","getHours","timeStamp","FaceIndex","faces","maxSize","capabilities","maxTextureSize","atlasWidth","atlasHeight","texImages","regions","minMipMapLevel","ci","mipmapAtlas","offsetX","mipmap","mipmaps","front","fi","img","BufferTextureCopy","Offset","Extent","TextureSubresLayers","texture","createTexture","TextureInfo","TextureType","TEX2D","TextureUsageBit","SAMPLED","TRANSFER_DST","TextureFlagBit","GEN_MIPMAP","copyTexImagesToTexture","_quadMesh","getQuadMesh","minPos","maxPos","_quadIA","getQuadIA","createInputAssembler","renderingSubMeshes","iaInfo","rt","gfxTexture","region0","texOffset","texExtent","copyTextureToBuffers","_cameras","vp","viewport","DIRECTIONAL","LEVEL_1","attachment","loadOp","DEPTH","STENCIL","sceneData","baked","sphereFrustum","gamma","goldenRatio","angleIncrement","inclination","acos","azimuth","ModelSampleCount","_tempMin","_tempMax","totalVertices","setOutputData","AimControls","AimRotateType","WeaponAim","Mouse","currentYaw","currentPitch","_currentAim","_lookRotation","aimWasReady","_currentTarget","initialization","updateCurrentAim","Center","updateCenterAim","updateMouseAim","Auto","updateAutoAim","calculateCurrentAim","getViewportRect","refNode","aimRange","addYaw","addPitch","pitchWhenYawInRange","minPitch","maxPitch","aimReady","aimReadyValue","earlyProcess","process","determineWeaponRotation","lateProcess","yawRotateType","ByWeapon","pitchRotateType","yaw","pitch","ByCharacter","tempMin3","tempMax3","ClusterObject","minCell","maxCell","_cellsLimit","_bounds","boundsMax","maxCount","reportCount","_cellsDirty","maxCellObjectCount","initTexture","updateCells","cx","cy","cz","numCells","totalPixels","Uint8Array","collectObjects","objIndex","evaluateBounds","evalCellMinMax","divide","filterObjects","da","db","uploadTextures","drawDebug","region","copyBuffersToTexture","_this$clusterTexture","_this$dataInfoTexture","renderDebug","drawCluster","cells","xStep","yStep","zStep","fromRTS","screenParams","touchPos","lastTouchDist","pressed","onTouchDown","onTouchUp","updateMousePosition","updateScale","propagationStopped","scrollY","getScrollY","scaleOffset","bindSampler","getBinding"],"mappings":"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SANA;;AAMA,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJL,UAAMm2F,mBAAmB,GAAG,EAA5B;AAEA,UAAIC,WAAqB,GAAG,CACxB,kBADwB,EACJ,iBADI,EACe,mBADf,EACoC,kBADpC,EACwD,iBADxD,EAC2E,mBAD3E,EACgG,2BADhG,EAC6H,mCAD7H,EACkK,wBADlK,EAC4L,gCAD5L,EAC8N,wCAD9N,EACwQ,6BADxQ,EACuS,gCADvS,EACyU,qCADzU,EACgX,6CADhX,EAC+Z,kCAD/Z,EACmc,qCADnc,EAC0e,6CAD1e,EACyhB,kCADzhB,EAC6jB,qCAD7jB,EAComB,iCADpmB,EACuoB,yCADvoB,EACkrB,8BADlrB,EACktB,iCADltB,EACqvB,0BADrvB,EACixB,6BADjxB,EACgzB,qCADhzB,EACu1B,0BADv1B,EACm3B,6BADn3B,EACk5B,4BADl5B,EACg7B,uBADh7B,EACy8B,+BADz8B,EAC0+B,oBAD1+B,EACggC,uBADhgC,EACyhC,8BADzhC,EACyjC,sCADzjC,EACimC,2BADjmC,EAC8nC,8BAD9nC,EAC8pC,sCAD9pC,EACssC,2BADtsC,EACmuC,4BADnuC,EACiwC,oCADjwC,EACuyC,4BADvyC,EACq0C,sBADr0C,EAC61C,uBAD71C,EACs3C,uBADt3C,EAC+4C,0BAD/4C,EAC26C,kCAD36C,EAC+8C,uBAD/8C,EACw+C,0BADx+C,EACogD,kCADpgD,EACwiD,2BADxiD,EACqkD,mCADrkD,EAC0mD,wBAD1mD,EACooD,2BADpoD,EACiqD,+BADjqD,EACksD,uCADlsD,EAC2uD,4BAD3uD,EACywD,+BADzwD,EAC0yD,uCAD1yD,EACm1D,4BADn1D,EACi3D,4BADj3D,EAC+4D,iCAD/4D,EACk7D,yCADl7D,EAC69D,8BAD79D,EAC6/D,iCAD7/D,EACgiE,8BADhiE,EACgkE,sCADhkE,EACwmE,2BADxmE,EACqoE,8BADroE,EACqqE,yBADrqE,EACgsE,iCADhsE,EACmuE,sBADnuE,EAC2vE,yBAD3vE,EACsxE,yBADtxE,EACizE,iCADjzE,EACo1E,sBADp1E,EAC42E,yBAD52E,EACu4E,iCADv4E,EAC06E,yCAD16E,EACq9E,8BADr9E,EACq/E,iCADr/E,EACwhF,0BADxhF,EACojF,kCADpjF,EACwlF,uBADxlF,EACinF,0BADjnF,EAC6oF,+BAD7oF,EAC8qF,uCAD9qF,EACutF,4BADvtF,EACqvF,+BADrvF,EACsxF,2BADtxF,EACmzF,0BADnzF,EAC+0F,mCAD/0F,EACo3F,wBADp3F,EAC84F,2BAD94F,EAC26F,6BAD36F,EAC08F,qCAD18F,EACi/F,0BADj/F,EAC6gG,6BAD7gG,EAC4iG,0BAD5iG,EACwkG,6BADxkG,EACumG,+BADvmG,EACwoG,uBADxoG,EACiqG,+BADjqG,EACksG,oBADlsG,EACwtG,uBADxtG,EACivG,oBADjvG,EACuwG,oBADvwG,EAC6xG,yBAD7xG,EACwzG,wBADxzG,EACk1G,uBADl1G,EAC22G,wBAD32G,EACq4G,uBADr4G,EAC85G,yBAD95G,EACy7G,6BADz7G,EACw9G,0CADx9G,EACogH,8BADpgH,EACoiH,gBADpiH,EACsjH,oBADtjH,EAC4kH,iBAD5kH,EAC+lH,cAD/lH,EAC+mH,kBAD/mH,EACmoH,eADnoH,EACopH,+BADppH,EACqrH,8BADrrH,EACqtH,gCADrtH,EACuvH,oBADvvH,EAC6wH,mBAD7wH,EACkyH,qBADlyH,EACyzH,iBADzzH,EAC40H,gBAD50H,EAC81H,kBAD91H,EACk3H,iBADl3H,EACq4H,mBADr4H,EAC05H,gBAD15H,EAC46H,kBAD56H,EACg8H,kBADh8H,EACo9H,oBADp9H,EAC0+H,iBAD1+H,EAC6/H,gBAD7/H,EAC+gI,kBAD/gI,EACmiI,iBADniI,EACsjI,gBADtjI,EACwkI,kBADxkI,EAC4lI,iBAD5lI,EAC+mI,gBAD/mI,EACioI,kBADjoI,EACqpI,iBADrpI,EACwqI,gBADxqI,EAC0rI,kBAD1rI,EAC8sI,iBAD9sI,EACiuI,gBADjuI,EACmvI,kBADnvI,EACuwI,gBADvwI,EACyxI,eADzxI,EAC0yI,iBAD1yI,EAC6zI,UAD7zI,EACy0I,aADz0I,EACw1I,SADx1I,EACm2I,WADn2I,EACg3I,qBADh3I,EACu4I,qBADv4I,EAC85I,uBAD95I,EACu7I,sBADv7I,EAC+8I,wBAD/8I,EACy+I,2BADz+I,EACsgJ,qBADtgJ,EAC6hJ,uBAD7hJ,EACsjJ,yBADtjJ,EACilJ,mBADjlJ,EACsmJ,qBADtmJ,EAC6nJ,6BAD7nJ,EAC4pJ,kBAD5pJ,EACgrJ,iBADhrJ,EACmsJ,mBADnsJ,EACwtJ,mBADxtJ,EAC6uJ,kBAD7uJ,EACiwJ,oBADjwJ,EACuxJ,iBADvxJ,EAC0yJ,WAD1yJ,EACuzJ,aADvzJ,EACs0J,YADt0J,EACo1J,WADp1J,EACi2J,aADj2J,EACg3J,WADh3J,EAC63J,UAD73J,EACy4J,YADz4J,EACu5J,gBADv5J,EACy6J,eADz6J,EAC07J,iBAD17J,EAC68J,gBAD78J,EAC+9J,eAD/9J,EACg/J,iBADh/J,EACmgK,gBADngK,EACqhK,eADrhK,EACsiK,iBADtiK,EACyjK,iBADzjK,EAC4kK,gBAD5kK,EAC8lK,kBAD9lK,EACknK,iBADlnK,EACqoK,mBADroK,EAC0pK,iBAD1pK,EAC6qK,gBAD7qK,EAC+rK,kBAD/rK,EACmtK,mBADntK,EACwuK,qBADxuK,EAC+vK,mBAD/vK,EACoxK,qBADpxK,EAC2yK,oBAD3yK,EACi0K,mBADj0K,EACs1K,qBADt1K,EAC62K,iBAD72K,EACg4K,gBADh4K,EACk5K,kBADl5K,EACs6K,wBADt6K,EACg8K,uBADh8K,EACy9K,yBADz9K,EACo/K,iBADp/K,EACugL,gBADvgL,EACyhL,kBADzhL,EAC6iL,aAD7iL,EAC4jL,YAD5jL,EAC0kL,cAD1kL,EAC0lL,sBAD1lL,EACknL,qBADlnL,EACyoL,uBADzoL,EACkqL,eADlqL,EACmrL,iBADnrL,EACssL,uBADtsL,EAC+tL,sBAD/tL,EACuvL,wBADvvL,EACixL,iBADjxL,EACoyL,gBADpyL,EACszL,kBADtzL,EAC00L,gBAD10L,EAC41L,eAD51L,EAC62L,iBAD72L,EACg4L,kBADh4L,EACo5L,iBADp5L,EACu6L,mBADv6L,EAC47L,iBAD57L,EAC+8L,gBAD/8L,EACi+L,kBADj+L,EACq/L,aADr/L,EACogM,eADpgM,EACqhM,kBADrhM,EACyiM,YADziM,EACujM,cADvjM,EACukM,kBADvkM,EAC2lM,YAD3lM,EACymM,cADzmM,EACynM,kBADznM,EAC6oM,YAD7oM,EAC2pM,cAD3pM,EAC2qM,kBAD3qM,EAC+rM,YAD/rM,EAC6sM,cAD7sM,EAC6tM,mBAD7tM,EACkvM,kBADlvM,EACswM,oBADtwM,EAC4xM,WAD5xM,EACyyM,eADzyM,EAC0zM,YAD1zM,EACw0M,6BADx0M,EACu2M,qCADv2M,EAC84M,0BAD94M,CAA5B;;eAIsB3jC;AAAY,mDAAA;;;AAqBjC,4BAAA;AAAA4jC,QAAAA,2EArBM,iBAAA;AAAA,kBAAA;AAAA;AAAA,oBAAA;AAAA,oBAAA;AACCC,gBAAAA,IAAI,GAAGF,WAAW,CAACv0F,MAAZu0F,CAAmB,CAAnBA,EAAsBD,mBAAtBC,CAAPE;AAAiDtd,gBAAAA,cAAA,IAAA;AAAA,uBAE/CvrC,OAAO,CAAC2sC,GAAR3sC,CAAY6oD,IAAI,CAAC1kE,GAAL0kE,0EAAS,gBAAA,CAAMxQ,CAAN;AAAO;AAAA,4BAAA;AAAA,4BAAA;AAC9BA,wBAAAA,CAAC,GAAG,cAAcA,CAAlBA;AACA,4BAAIr4C,OAAJ,CAAY,UAAAC,OAAA,EAAW;AACnB6oD,0BAAAA,MAAM,CAACC,OAAPD,CAAezQ,CAAfyQ,EAAkB,UAAC1oD,GAAD,EAAMwD,CAAN,EAAY;AAC1B3D,4BAAAA,OAAO,CAAC,IAAD,CAAPA;AACH,2BAFD6oD;AAGH,yBAJD;;AAIE,4BAAA;AAAA,gCAAA;AAAA,8CAAA;;6BAN4B;AAOjC,mBAPiBD,CAAZ7oD,CAF+C;;AASlD,oBAAA;AAAA,qBAEC2oD,WAAW,CAACv4F,MAFb;AAEmBm7E,kBAAAA,cAAA,IAAA;AAAA;;;AAAAA,gBAAAA,cAAA,IAAA;AAAA,uBACZ,IAAIvrC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC3B/c,kBAAAA,UAAU,CAAC,YAAM;AACb+c,oBAAAA,OAAO,CAAC,IAAD,CAAPA;AACH,mBAFS,EAEP,EAFO,CAAV/c;AAGH,iBAJK,CADY;;AAKhB,oBAAA;AAAAqoD,gBAAAA,cAAA,IAAA;AAAA,uBAEIvmB,YAAY,EAFhB;;AAEkB,oBAAA;AAAA,wBAAA;AAAA,uCAAA;;sBAnBrB;AAqBN,WAAA;AAAA,mDAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC1BYrtD,GAAG;AAAA,oBAAA;;AAAAA,QAAAA,IAIEotD,IAJF,GAIZ,aAAA,CAAoCvmB,IAApC,EAAkD3xB,IAAlD,EAA+Ei1B,EAA/E,EAAiI;AAC7H,eAAKzwC,KAAL;AACA+5E,UAAAA,SAAS,CAACrmB,IAAVqmB,CAAe5sC,IAAf4sC,EAAqBv+D,IAArBu+D,EAA2B,UAAShrC,GAAT,EAAc5nC,GAAd,EAAkB;AACzC,gBAAI4nC,GAAJ,EAAQ;AACJlsC,cAAAA,KAAK,CAACsqC,IAAD,EAAM4B,GAAG,CAAC4oD,OAAJ5oD,IAAeA,GAArB,CAALlsC;AACA1B,cAAAA,GAAG,CAACC,IAAJD,CAAS,eAATA;;;AAEJ,gBAAIsvC,EAAJ,EAAQ;AACJA,cAAAA,EAAE,CAAC1B,GAAD,EAAM5nC,GAAN,CAAFspC;;;AAEJnqC,YAAAA,GAAG,CAACtG,KAAJsG;AACAnF,YAAAA,GAAG,CAACC,IAAJD,CAAS,yBAATA;AACH,WAVD44E;AAWH,SAjBW;;AAiBXzzE,QAAAA,IAEawxD,QAFb,GAED,iBAAA,CAAuB3qB,IAAvB,EAAqCsD,EAArC,EAA+F;AAC3F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBy1C,SAAhB,EAA2BnyC,EAA3B;AACH,SAJA;;AAIAnqC,QAAAA,IAEasxF,OAFb,GAED,gBAAA,CAAsBzqD,IAAtB,EAAoCsD,EAApC,EAA8F;AAC1F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB0qD,SAAhB,EAA2BpnD,EAA3B;AACH,SAJA;;AAIAnqC,QAAAA,IAEa6tF,UAFb,GAED,mBAAA,CAAyBhnD,IAAzB,EAAuCsD,EAAvC,EAA8F;AAC1F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB8oD,MAAhB,EAAwBxlD,EAAxB;AACH,SAJA;;AAIAnqC,QAAAA,IAEawxF,SAFb,GAED,kBAAA,CAAwB3qD,IAAxB,EAAsCsD,EAAtC,EAAgG;AAC5F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB4qD,SAAhB,EAA2BtnD,EAA3B;AACH,SAJA;;AAIAnqC,QAAAA,IAEa0xF,SAFb,GAED,kBAAA,CAAwB7qD,IAAxB,EAAsCsD,EAAtC,EAAiG;AAC7F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB8qD,UAAhB,EAA4BxnD,EAA5B;AACH,SAJA;;AAIAnqC,QAAAA,IAEa8tF,UAFb,GAED,mBAAA,CAAyBjnD,IAAzB,EAAuCsD,EAAvC,EAAmG;AAC/F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB+qD,WAAhB,EAA6BznD,EAA7B;AACH,SAJA;;AAIAnqC,QAAAA,IAEa6xF,eAFb,GAED,wBAAA,CAA8BhrD,IAA9B,EAA4CsD,EAA5C,EAAwG;AACpG,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBirD,WAAhB,EAA6B3nD,EAA7B;AACH,SAJA;;AAIAnqC,QAAAA,IAEa+xF,UAFb,GAED,mBAAA,CAAyBlrD,IAAzB,EAAuCsD,EAAvC,EAAmG;AAC/F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBqmD,WAAhB,EAA6B/iD,EAA7B;AACH,SAJA;;AAIAnqC,QAAAA,IAEagyF,SAFb,GAED,kBAAA,CAAwBnrD,IAAxB,EAAsCsD,EAAtC,EAAgG;AAC5F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBwlC,SAAhB,EAA2BliC,EAA3B;AACH,SAJA;;AAIAnqC,QAAAA,IAEaiyF,iBAFb,GAED,0BAAA,CAAgCprD,IAAhC,EAA8CsD,EAA9C,EAA4G;AACxG,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBqrD,aAAhB,EAA+B/nD,EAA/B;AACH,SAJA;;AAIAnqC,QAAAA,IAEamyF,QAFb,GAED,iBAAA,CAAuBtrD,IAAvB,EAAqCsD,EAArC,EAA0F;AACtF,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBurD,IAAhB,EAAsBjoD,EAAtB;AACH,SAJA;;AAIAnqC,QAAAA,IAEaqyF,YAFb,GAED,qBAAA,CAA2BxrD,IAA3B,EAAyCsD,EAAzC,EAAkG;AAC9F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgBixC,QAAhB,EAA0B3tC,EAA1B;AACH,SAJA;;AAIAnqC,QAAAA,IAEasyF,YAFb,GAED,qBAAA,CAA2BzrD,IAA3B,EAAyCsD,EAAzC,EAAkG;AAC9F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB0rD,QAAhB,EAA0BpoD,EAA1B;AACH,SAJA;;AAIAnqC,QAAAA,IAEaw4C,SAFb,GAED,kBAAA,CAAwB3R,IAAxB,EAAsCsD,EAAtC,EAAiG;AAC7F,eAAKijB,IAAL,CAAUvmB,IAAV,EAAgB2rD,UAAhB,EAA4BroD,EAA5B;AACH,SAJA;;AAIAnqC,QAAAA,IAGaC,IAHb,GAGD,aAAA,CAAmBJ,KAAnB,EAAkCswB,IAAlC,EAAsE3oB,GAAtE,EAAmG;AAAA,cAAjE2oB,IAAqB,WAA4C;AAAjEA,YAAAA,IAAqB,GAAGt3B,SAAxBs3B;;;AAAiC,cAAG3oB,GAAQ,WAAX;AAAGA,YAAAA,GAAQ,GAAGW,IAAI,CAAC0S,IAAhBrT;;;AAClE,cAAMirF,OAAO,GAAG9kE,WAAW,CAAC9tB,KAAD,CAA3B;;AACA,cAAIswB,IAAI,KAAKt3B,SAAb,EAAwB;AAAA,kCAAA;;AACpB,kCAAAq3B,QAAQ,CAAC4xB,QAAT5xB,EAAA,SAAA,SAAA,GAAAwiE,mBAAqBC,QAArB,CAA8BF,OAA9B,CAAA;AACH,WAFD,MAEK;AACDA,YAAAA,OAAO,CAACG,SAARH,CAAkBtiE,IAAlBsiE;;;AAEJA,UAAAA,OAAO,CAACryF,WAARqyF,CAAoBjrF,GAApBirF;AACAA,UAAAA,OAAO,CAACttD,QAARstD,CAAiBtqF,IAAI,CAAC4nE,GAAtB0iB;AACA,iBAAOA,OAAP;AACH,SAbA;;AAaAzyF,QAAAA,IAEagX,QAFb,GAED,iBAAA,CAAuBhW,IAAvB,EAAkCmvB,IAAlC,EAAqE3oB,GAArE,EAAkG;AAAA,cAAhE2oB,IAAqB,WAA2C;AAAhEA,YAAAA,IAAqB,GAAGt3B,SAAxBs3B;;;AAAiC,cAAE3oB,GAAQ,WAAV;AAAEA,YAAAA,GAAQ,GAAGW,IAAI,CAAC0S,IAAhBrT;;;AACjE,cAAMirF,OAAO,GAAG9kE,WAAW,CAAC3sB,IAAD,CAA3B;;AACA,cAAImvB,IAAI,KAAKt3B,SAAb,EAAwB;AAAA,mCAAA;;AACpB,mCAAAq3B,QAAQ,CAAC4xB,QAAT5xB,EAAA,SAAA,SAAA,GAAA2iE,oBAAqBF,QAArB,CAA8BF,OAA9B,CAAA;AACH,WAFD,MAEK;AACDA,YAAAA,OAAO,CAACG,SAARH,CAAkBtiE,IAAlBsiE;;;AAEJA,UAAAA,OAAO,CAACryF,WAARqyF,CAAoBjrF,GAApBirF;AACAA,UAAAA,OAAO,CAACttD,QAARstD,CAAiBtqF,IAAI,CAAC4nE,GAAtB0iB;AACA,iBAAOA,OAAP;AACH,SAZA;;AAYAzyF,QAAAA,IAEai1E,OAFb,GAED,gBAAA,CAAuCpuC,IAAvC,EAAqD3xB,IAArD,EAAkFi1B,EAAlF,EAAsI;AAClI,eAAKzwC,KAAL;AACA+5E,UAAAA,SAAS,CAACwB,OAAVxB,CAAkB5sC,IAAlB4sC,EAAwBv+D,IAAxBu+D,EAA8B,UAAShrC,GAAT,EAAc5nC,GAAd,EAAkB;AAC5C,gBAAI4nC,GAAJ,EAAQ;AACJlsC,cAAAA,KAAK,CAACksC,GAAG,CAAC4oD,OAAJ5oD,IAAeA,GAAhB,CAALlsC;AACA1B,cAAAA,GAAG,CAACC,IAAJD,CAAS,eAATA;;;AAEJ,gBAAIsvC,EAAJ,EAAQ;AACJA,cAAAA,EAAE,CAAC1B,GAAD,EAAM5nC,GAAN,CAAFspC;;;AAEJnqC,YAAAA,GAAG,CAACtG,KAAJsG;AACAnF,YAAAA,GAAG,CAACC,IAAJD,CAAS,yBAATA;AACH,WAVD44E;AAWH,SAfA;;AAeAzzE,QAAAA,IAEa8uF,WAFb,GAED,oBAAA,CAA0BjoD,IAA1B,EAAuCsD,EAAvC,EAAmG;AAC/F,eAAK8qC,OAAL,CAAapuC,IAAb,EAAmBy1C,SAAnB,EAA8BnyC,EAA9B;AACH,SAJA;;AAIAnqC,QAAAA,IAEagvF,aAFb,GAED,sBAAA,CAA4BnoD,IAA5B,EAAyCsD,EAAzC,EAAkG;AAC9F,eAAK8qC,OAAL,CAAapuC,IAAb,EAAmB8oD,MAAnB,EAA2BxlD,EAA3B;AACH,SAJA;;AAIAnqC,QAAAA,IAEamvF,WAFb,GAED,oBAAA,CAA0BtoD,IAA1B,EAAuCsD,EAAvC,EAAmG;AAC/F,eAAK8qC,OAAL,CAAapuC,IAAb,EAAmB0qD,SAAnB,EAA8BpnD,EAA9B;AACH,SAJA;;AAIAnqC,QAAAA,IAEaqvF,aAFb,GAED,sBAAA,CAA4BxoD,IAA5B,EAAyCsD,EAAzC,EAAuG;AACnG,eAAK8qC,OAAL,CAAapuC,IAAb,EAAmB+qD,WAAnB,EAAgCznD,EAAhC;AACH,SAJA;;AAIAnqC,QAAAA,IAEauvF,YAFb,GAED,qBAAA,CAA2B1oD,IAA3B,EAAwCsD,EAAxC,EAAmG;AAC/F,eAAK8qC,OAAL,CAAapuC,IAAb,EAAmBwlC,SAAnB,EAA8BliC,EAA9B;AACH,SAJA;;AAIA,kBAAA;;AArIQnqC,MAAAA,GAAG,CAEEtG,KAFLsG,GAEqB,CAFrBA;;;;;;;;;;;;;;;;;;;;;;;;ACEN,eAAS8yF,MAAT,GAAmB;AACtB,YAAI7+E,IAAI,GAAG,IAAX;AAEAA,QAAAA,IAAI,CAACqiE,QAALriE,CAAc,iBAAdA,EAAiC,eAAjCA;AACAA,QAAAA,IAAI,CAACqiE,QAALriE,CAAc,iBAAdA,EAAiC,eAAjCA;AACAA,QAAAA,IAAI,CAACqiE,QAALriE,CAAc,iBAAdA,EAAiC,eAAjCA;AAEAA,QAAAA,IAAI,CAACsnE,SAALtnE,CAAe,QAAfA,EAAyB,eAAzBA;;AAEA,aAAKs+D,aAAL,GAAqB,SAASkE,WAAT,CAAsBC,IAAtB,EAAwC9kD,MAAxC,EAA6D;AAC7E3d,UAAAA,IAAI,CAAS0iE,KAAb1iE,GAAsByiE,IAAI,CAASC,KAAnC1iE;AACDi+D,UAAAA,eAAe,CAACj+D,IAAD,EAAO2d,MAAP,CAAfsgD;AACH,SAHD;;AAKAj+D,QAAAA,IAAI,CAAC4Z,IAAL5Z,GAAYA,IAAI,CAAC2iE,WAAL3iE,EAAZA;;;AAGJ,aAAO8oC,SAAS,CAAC85B,qBAAV95B,eAAAA,CAAP;AACAA,MAAAA,SAAS,CAAC+5B,gBAAV/5B,eAAAA,EAA2C+1C,MAA3C/1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA,UAAMg2C,WAAW,GAAG;AAChBC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,UADA;AAENC,UAAAA,aAAa,EAAE,IAFT;AAGNx5F,UAAAA,KAAK,EAAE,CAHD;AAINy5F,UAAAA,eAAe,EAAE,CAJX;AAKNj+E,UAAAA,IAAI,EAAE;AALA,SADM;AAQhBk+E,QAAAA,OAAO,EAAE;AACLH,UAAAA,IAAI,EAAE,QADD;AAELC,UAAAA,aAAa,EAAE,IAFV;AAGLx5F,UAAAA,KAAK,EAAE,CAHF;AAILy5F,UAAAA,eAAe,EAAE,CAJZ;AAKLj+E,UAAAA,IAAI,EAAE;AALD,SARO;AAehB+qC,QAAAA,MAAM,EAAE;AACJgzC,UAAAA,IAAI,EAAE,SADF;AAEJC,UAAAA,aAAa,EAAE,IAFX;AAGJx5F,UAAAA,KAAK,EAAE,CAHH;AAIJy5F,UAAAA,eAAe,EAAE,CAJb;AAKJj+E,UAAAA,IAAI,EAAE;AALF,SAfQ;AAsBhBm+E,QAAAA,EAAE,EAAE;AACAJ,UAAAA,IAAI,EAAE,YADN;AAEAC,UAAAA,aAAa,EAAE,IAFf;AAGAx5F,UAAAA,KAAK,EAAE,CAHP;AAIAy5F,UAAAA,eAAe,EAAE,CAJjB;AAKAj+E,UAAAA,IAAI,EAAE;AALN,SAtBY;AA6BhBo+E,QAAAA,GAAG,EAAE;AACDL,UAAAA,IAAI,EAAE,YADL;AAEDC,UAAAA,aAAa,EAAE,IAFd;AAGDx5F,UAAAA,KAAK,EAAE,CAHN;AAIDy5F,UAAAA,eAAe,EAAE,CAJhB;AAKDj+E,UAAAA,IAAI,EAAE;AALL,SA7BW;AAoChBmV,QAAAA,WAAW,EAAE;AACT4oE,UAAAA,IAAI,EAAE,WADG;AAETC,UAAAA,aAAa,EAAE,IAFN;AAGTx5F,UAAAA,KAAK,EAAE,CAHE;AAITy5F,UAAAA,eAAe,EAAE,CAJR;AAKTj+E,UAAAA,IAAI,EAAE;AALG,SApCG;AA2ChBq+E,QAAAA,MAAM,EAAE;AACJN,UAAAA,IAAI,EAAE,UADF;AAEJC,UAAAA,aAAa,EAAE,IAFX;AAGJx5F,UAAAA,KAAK,EAAE,CAHH;AAIJy5F,UAAAA,eAAe,EAAE,CAJb;AAKJj+E,UAAAA,IAAI,EAAE;AALF,SA3CQ;AAkDhB0qC,QAAAA,OAAO,EAAE;AACLszC,UAAAA,aAAa,EAAE,IADV;AAELx5F,UAAAA,KAAK,EAAE,CAFF;AAGLy5F,UAAAA,eAAe,EAAE,CAHZ;AAILj+E,UAAAA,IAAI,EAAE;AAJD;AAlDO,OAApB;UA0Das+E,QAAQ;AAAA,aACjBR,QADiB,GACI,EADJ;AACM,aACvBK,EADuB,GACR,EADQ;AACN,aACjBC,GADiB,GACD,EADC;AACC,aAClBF,OADkB,GACE,EADF;AACI,aACtBnzC,MADsB,GACH,EADG;AACD,aACrB51B,WADqB,GACG,EADH;AACK,aAC1BopE,QAD0B,GACL,EADK;AACH,aACvBF,MADuB,GACJ,EADI;AACF,aAErB3zC,OAFqB,GAED,EAFC;AAEC,aAEtBpJ,GAFsB,GAEhB,IAAIruC,IAAJ,CAASqgF,QAAT,EAAmBA,QAAnB,EAA6BA,QAA7B,CAFgB;AAEsB,aAC5C3zE,GAD4C,GACtC,IAAI1M,IAAJ,CAAS,CAACqgF,QAAV,EAAoB,CAACA,QAArB,EAA+B,CAACA,QAAhC,CADsC;;;AAIzC,eAASkL,UAAT,CAAqB96F,IAArB,EAAmCm7C,IAAnC,EAAmD;AACtD,YAAI4/C,IAAI,GAAG;AACP,mBAAS;AACL,yBAAa,kCADR;AAEL,uBAAW;AAFN,WADF;AAKP,mBAAS,CALF;AAMP,oBAAU,CACN;AACI,oBAAQ,OADZ;AAEI,qBAAS,CACL,CADK;AAFb,WADM,CANH;AAcP,mBAAS,CACL;AACI,oBAAQ,CADZ;AAEI,oBAAQ;AAFZ,WADK,CAdF;AAoBP,oBAAU,CACN;AACI,oBAAQ/6F,IADZ;AAEI,0BAAc;AAFlB,WADM,CApBH;AA0BP,uBAAa,EA1BN;AA2BP,yBAAe,EA3BR;AA4BP,qBAAW;AA5BJ,SAAX;AA+BA,YAAIg7F,QAAQ,GAAGD,IAAI,CAAC/M,MAAL+M,CAAY,CAAZA,CAAf;AAEA,YAAIE,WAAW,GAAG,CAAlB;AACA,YAAI7M,OAAO,GAAGjzC,IAAd;AAEA,YAAI+/C,SAAS,GAAG;AACZl0C,UAAAA,OAAO,EAAE,CAAC,CADE;AAEZm0C,UAAAA,UAAU,EAAE,EAFA;AAGZC,UAAAA,IAAI,EAAE;AAHM,SAAhB;AAMAJ,QAAAA,QAAQ,CAACK,UAATL,CAAoBh5F,IAApBg5F,CAAyBE,SAAzBF;AAEA,YAAIM,UAAU,GAAG,CAAjB;AACA,YAAIC,WAAW,GAAGR,IAAI,CAACQ,WAAvB;;AAGA,aAAK,IAAIC,QAAT,IAAqBrB,WAArB,EAAkC;AAC9B,cAAIn0B,MAAM,GAAIooB,OAAO,CAASoN,QAAT,CAArB;;AACA,cAAI,CAACx1B,MAAD,IAAW,CAACA,MAAM,CAACnmE,MAAvB,EAA+B;AAC3B;WAH0B;;;AAO9B,cAAI47F,OAAO,GAAItB,WAAW,CAASqB,QAAT,CAA1B;;AAEA,cAAIC,OAAO,KAAKtB,WAAW,CAACnzC,OAA5B,EAAqC;AACjCk0C,YAAAA,SAAS,CAACl0C,OAAVk0C,GAAoBD,WAApBC;AACH,WAFD,MAGK;AACDA,YAAAA,SAAS,CAACC,UAAVD,CAAqBO,OAAO,CAACpB,IAA7Ba,IAAqCD,WAArCC;WAb0B;;;AAiB9B,cAAIQ,QAAa,GAAG;AAChBC,YAAAA,UAAU,EAAEV,WADI;AAEhBX,YAAAA,aAAa,EAAEmB,OAAO,CAACnB,aAFP;AAGhBx5F,YAAAA,KAAK,EAAEklE,MAAM,CAACnmE,MAAPmmE,GAAgBy1B,OAAO,CAAC36F,KAHf;AAIhBwb,YAAAA,IAAI,EAAEm/E,OAAO,CAACn/E;AAJE,WAApB;;AAOA,cAAIm/E,OAAO,KAAKtB,WAAW,CAACC,QAA5B,EAAsC;AAClCsB,YAAAA,QAAQ,CAAC99C,GAAT89C,GAAensF,IAAI,CAACq/E,OAALr/E,CAAa,EAAbA,EAAiB4rC,IAAI,CAACyC,GAAtBruC,CAAfmsF;AACAA,YAAAA,QAAQ,CAACz/E,GAATy/E,GAAensF,IAAI,CAACq/E,OAALr/E,CAAa,EAAbA,EAAiB4rC,IAAI,CAACl/B,GAAtB1M,CAAfmsF;;;AAGJX,UAAAA,IAAI,CAACa,SAALb,CAAe/4F,IAAf+4F,CAAoBW,QAApBX,EA7B8B;;AAgC9B,cAAIc,UAAU,GAAG71B,MAAM,CAACnmE,MAAPmmE,GAAgBy1B,OAAO,CAAClB,eAAzC;AACAgB,UAAAA,WAAW,CAACv5F,IAAZu5F,CAAiB;AACbzoB,YAAAA,MAAM,EAAE,CADK;AAEbwoB,YAAAA,UAAU,EAAEA,UAFC;AAGbO,YAAAA,UAAU,EAAEA;AAHC,WAAjBN;AAOAD,UAAAA,UAAU,IAAIO,UAAdP;AACAL,UAAAA,WAAW;;;AAGf,YAAInoB,MAAM,GAAG,IAAIgpB,WAAJ,CAAgBR,UAAhB,CAAb;AACA,YAAIS,aAAa,GAAG,IAAIppB,YAAJ,CAAiBG,MAAjB,EAAyB,CAAzB,EAA4ByoB,WAAW,CAACL,SAAS,CAACl0C,OAAX,CAAXu0C,CAA+BD,UAA/BC,GAA4C,CAAxE,CAApB;AACA,YAAIS,YAAY,GAAG,IAAIC,WAAJ,CAAgBnpB,MAAhB,CAAnB;;AAEA,aAAK,IAAI0oB,SAAT,IAAqBrB,WAArB,EAAkC;AAC9B,cAAIn0B,OAAM,GAAIooB,OAAO,CAASoN,SAAT,CAArB;;AACA,cAAI,CAACx1B,OAAD,IAAW,CAACA,OAAM,CAACnmE,MAAvB,EAA+B;AAC3B;;;AAGJ,cAAI47F,QAAO,GAAItB,WAAW,CAASqB,SAAT,CAA1B;;AAEA,cAAIP,YAAW,SAAf;;AACA,cAAIQ,QAAO,KAAKtB,WAAW,CAACnzC,OAA5B,EAAqC;AACjCi0C,YAAAA,YAAW,GAAGC,SAAS,CAACl0C,OAAxBi0C;AACH,WAFD,MAGK;AACDA,YAAAA,YAAW,GAAGC,SAAS,CAACC,UAAVD,CAAqBO,QAAO,CAACpB,IAA7Ba,CAAdD;;;AAGJ,cAAIQ,QAAO,CAAClB,eAARkB,KAA4B,CAAhC,EAAmC;AAC/BO,YAAAA,YAAY,CAACt9D,GAAbs9D,CAAiBh2B,OAAjBg2B,EAAyBT,WAAW,CAACN,YAAD,CAAXM,CAAyBD,UAAzBC,GAAsC,CAA/DS;AACH,WAFD,MAGK,IAAIP,QAAO,CAAClB,eAARkB,KAA4B,CAAhC,EAAmC;AACpCM,YAAAA,aAAa,CAACr9D,GAAdq9D,CAAkB/1B,OAAlB+1B,EAA0BR,WAAW,CAACN,YAAD,CAAXM,CAAyBD,UAAzBC,GAAsC,CAAhEQ;;;;AAIRhB,QAAAA,IAAI,CAACmB,OAALnB,CAAa/4F,IAAb+4F,CAAkB;AACdc,UAAAA,UAAU,EAAEP,UADE;AAEda,UAAAA,GAAG,EAAE,0CAA0ChuD,kBAAkB,CAACiuD,MAAnBjuD,CAA0B2kC,MAA1B3kC;AAFjC,SAAlB4sD;AAKA,eAAOA,IAAP;;;AACH,eAEcsB,cAFd,GAAA,KAAA;AAE4B,qDAAA;;;AAAA,8BAAA;AAAAC,QAAAA,6EAA7B,gBAAA,CAA+B9sD,GAA/B,EAA4CjrC,KAA5C;AAAiD,sBAAA;AAAA;AAAA,oBAAA;AAAA,oBAAA;AAAA,oBAALA,KAAK,WAAA;AAALA,kBAAAA,KAAK,GAAG,EAARA;;;AAAU8rC,gBAAAA,aAAA,IAAA;AAAA,uBAC7BpB,MAAM,CAACgsC,OAAPhsC,CAAeV,OAAfU,CAAuB,UAAvBA,EAAmC,YAAnCA,EAAiDO,GAAjDP,CAD6B;;AACwB,oBAAA;AAAtEstD,gBAAAA,QAAQ,gBAARA;AAAQ,iDACL,IAAI9sD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,sBAAI,CAAC4sD,QAAL,EAAe;AACXj6F,oBAAAA,OAAO,CAACqB,KAARrB,CAAc,6BAA6BktC,GAA3CltC;AACA,2BAAOotC,OAAO,CAAC,IAAD,CAAd;;;AAGJ/c,kBAAAA,UAAU,CAAC,YAAM;AACb41B,oBAAAA,YAAY,CAACC,OAAbD,CAAqBg0C,QAArBh0C,EAA+B,UAAC1Y,GAAD,EAAW5oC,KAAX,EAA4B;AACvD,0BAAI4oC,GAAJ,EAAS;AACLvtC,wBAAAA,OAAO,CAACqB,KAARrB,CAAcutC,GAAdvtC;AACA,+BAAOotC,OAAO,CAAC,IAAD,CAAd;;;AAEJA,sBAAAA,OAAO,CAACzoC,KAAD,CAAPyoC;AACH,qBAND6Y;AAOH,mBARS,EAQPhkD,KARO,CAAVouB;AASH,iBAhBM,EADK;;AAiBV,oBAAA;AAAA,wBAAA;AAAA,sCAAA;;qBAlB2C;AAmBhD,WAnB4B;AAmB5B,qDAAA;;;eAEqB6pE;AAAQ,+CAAA;;;AAS7B,wBAAA;AAAAC,QAAAA,uEATM,iBAAA,CAAyB1B,IAAzB,EAA+B2B,OAA/B,EAAwCC,OAAxC;AAA+C,sBAAA;AAAA;AAAA,oBAAA;AAAA,oBAAA;AAAA3hB,gBAAAA,cAAA,IAAA;AAAA,uBAC3B/rC,MAAM,CAACgsC,OAAPhsC,CAAeV,OAAfU,CAAuB,UAAvBA,EAAmC,YAAnCA,EAAiDytD,OAAjDztD,CAD2B;;AAC8B,oBAAA;AAA1E2tD,gBAAAA,QAAQ,iBAARA;AAEN1uD,gBAAAA,GAAG,CAACqtC,aAAJrtC,CAAkBD,IAAI,CAACc,OAALd,CAAa2uD,QAAb3uD,CAAlBC;AACAA,gBAAAA,GAAG,CAAC2uD,aAAJ3uD,CAAkB0uD,QAAlB1uD,EAA4B6sD,IAA5B7sD;AAAkC8sC,gBAAAA,cAAA,IAAA;AAAA,uBAE5B/rC,MAAM,CAACgsC,OAAPhsC,CAAeV,OAAfU,CAAuB,UAAvBA,EAAmC,eAAnCA,EAAoDytD,OAApDztD,CAF4B;;AAEgC,oBAAA;AAAA+rC,gBAAAA,cAAA,IAAA;AAAA,uBAErDqhB,cAAc,CAACM,OAAD,EAAU,GAAV,CAFuC;;AAEzB,oBAAA;AAAA,iEAAA;;AAAA,qBAAA;AAAA,wBAAA;AAAA,uCAAA;;sBARS;AASrD,WAAA;AAAA,+CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtND,UAAMG,sBAAsB,GAAG,EAA/B;UAMat9F,IAAI;AAAAX,QAAAA,gCAAA;;AAAA,qBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAEbg+F,KAFa,GAEL,EAFK;AAEHh+F,UAAAA,MACVY,IADU,GACM,EADN;AACQZ,UAAAA,MAClBi+F,QADkB,GACP,MADO;AACDj+F,UAAAA,MACjBk+F,WADiB,GACH,cADG;AACWl+F,UAAAA,MAC5Bm+F,YAD4B,SAAA;AAChBn+F,UAAAA,MAEZo8E,SAFY,SAAA;AAEHp8E,UAAAA,MACTo+F,eADS,GACS,CADT;AACUp+F,UAAAA,MAEnByrE,kBAFmB,GAEU,EAFV;AAEY,sBAAA;;;AAAA,mCAAA;;AAAAtrE,QAAAA,OAOxBC,IAPwB,GAO/B,aAAA,GAAqB;AAAA,2BAAA;;AAEjB,eAAKg8E,SAAL,GAAiBx5E,QAAQ,CAAClC,QAATkC,CAAkBC,OAAlBD,CAA0B,WAA1BA,EAAuCE,IAAxD;;AACA,cAAI,CAACi9D,EAAE,CAACiB,KAAHjB,CAAS,KAAKm+B,WAAL,GAAmB,OAA5Bn+B,CAAL,EAA2C;AACvC,iBAAKo+B,YAAL,GAAoB,EAApB;AACA,iBAAKE,UAAL;AACH,WAHD,MAGO;AACH,iBAAKF,YAAL,GAAoB/5B,QAAQ,CAACM,UAATN,CAAoB,KAAK85B,WAAzB95B,CAApB;AACA,iBAAK45B,KAAL,GAAa,KAAKG,YAAL,CAAmB,CAAnB,CAAb;AACA,iBAAKG,WAAL,CAAiB,KAAKN,KAAtB;AACA,iBAAKA,KAAL,GAAaj+B,EAAE,CAACG,IAAHH,CAAQ,KAAKk+B,QAAL,GAAgB,OAAxBl+B,CAAb;;;AAGJ78D,UAAAA,GAAG,CAACF,EAAJE,CAAO,cAAPA,EAAuB,UAACiB,IAAD,EAAmC;AACtDkB,YAAAA,MAAI,CAACs6B,GAAL,CAASx7B,IAAI,CAACtC,GAAd,EAAmBsC,IAAI,CAAC/C,KAAxB;AACH,WAFD8B;AAIAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,gBAAPA,EAAyB,KAAKq7F,eAAL,CAAqBv9E,IAArB,CAA0B,IAA1B,CAAzB9d;AACAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,eAAPA,EAAwB,KAAKg/C,cAAL,CAAoBlhC,IAApB,CAAyB,IAAzB,CAAxB9d;AACAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,mBAAPA,EAA4B,KAAKs7F,kBAAL,CAAwBx9E,IAAxB,CAA6B,IAA7B,CAA5B9d;AACAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,kBAAPA,EAA2B,KAAKu7F,WAAL,CAAiBz9E,IAAjB,CAAsB,IAAtB,CAA3B9d;AAEH,SA7B8B;;AA6B9B/C,QAAAA,OAEMu+F,MAFN,GAED,eAAA,GAAgB;AAEZ,eAAKN,eAAL;AACA,cAAI,KAAKA,eAAL,GAAuB,CAA3B,EAA8B;AAC9B,eAAKA,eAAL,GAAuB,CAAvB;AAEH,SARA;;AAQAj+F,QAAAA,OAEMw+F,eAFN,GAED,wBAAA,GAA0B;AACtB5+B,UAAAA,EAAE,CAACO,KAAHP,CAAS,KAAKm+B,WAAL,GAAmB,OAA5Bn+B,EAAqCqE,QAAQ,CAACC,MAATD,CAAgB,KAAK+5B,YAArB/5B,CAArCrE;AACH,SAJA;;AAIA5/D,QAAAA,OAEMs+F,WAFN,GAED,oBAAA,GAAsB;AAClB,cAAI;;AAEA,gBAAIt6F,IAAI,GAAGigE,QAAQ,CAACC,MAATD,CAAgB,KAAKxjE,IAArBwjE,CAAX;AACArE,YAAAA,EAAE,CAACO,KAAHP,CAAS,KAAKi+B,KAAL,GAAa,OAAtBj+B,EAA+B57D,IAA/B47D;AACA,iBAAK2+B,MAAL;AACH,WALD,QAKO95F,OAAM;AACTrB,YAAAA,OAAO,CAACqB,KAARrB,CAAc,qBAAdA;;AAGP,SAZA;;AAYApD,QAAAA,OAEMy+F,UAFN,GAED,mBAAA,GAA8B;AAC1B,iBAAO,KAAKT,YAAL,CAAmBr9F,MAAnB,GAA4B,CAAnC;AACH,SAJA;;AAIAX,QAAAA,OAEMk+F,UAFN,GAED,mBAAA,GAAqB;AACjB,eAAKz9F,IAAL,GAAY,KAAKw7E,SAAjB;AACA,eAAK4hB,KAAL,GAAax/C,KAAK,CAACC,IAAND,EAAb;;AACA,eAAK2/C,YAAL,CAAmBl7F,IAAnB,CAAwB,KAAK+6F,KAA7B;;AACAj+B,UAAAA,EAAE,CAACO,KAAHP,CAAS,KAAKk+B,QAAL,GAAgB,OAAzBl+B,EAAkC,KAAKi+B,KAAvCj+B;AACA,eAAK0+B,WAAL;AACA,eAAKE,eAAL;AACH,SATA;;AASAx+F,QAAAA,OAEMm+F,WAFN,GAED,oBAAA,CAAoBr9F,IAApB,EAAkC;AAC9B,eAAK+8F,KAAL,GAAa/8F,IAAb;AACA8+D,UAAAA,EAAE,CAACO,KAAHP,CAAS,KAAKk+B,QAAL,GAAgB,OAAzBl+B,EAAkC,KAAKi+B,KAAvCj+B;AACA,cAAI8+B,SAAS,GAAG9+B,EAAE,CAACG,IAAHH,CAAQ9+D,IAAI,GAAG,OAAf8+D,CAAhB,CAH8B;;AAK9B,cAAI8+B,SAAS,KAAK39F,SAAlB,EAA6B;AACzBqC,YAAAA,OAAO,CAACqB,KAARrB,CAAc,6BAAdA,EAA6C,KAAKy6F,KAAlDz6F;AACA,iBAAK3C,IAAL,GAAY6B,MAAM,CAACqO,MAAPrO,CAAc,KAAK25E,SAAnB35E,CAAZ;AACH,WAHD,MAGK;AACD,iBAAK7B,IAAL,GAAYwjE,QAAQ,CAACI,QAATJ,CAAkBy6B,SAAlBz6B,CAAZ;WAT0B;;;AAa9B,cAAI,KAAKxjE,IAAL,CAAUk+F,WAAV,KAA0B59F,SAA9B,EAAyC,KAAKN,IAAL,CAAUk+F,WAAV,GAAwB,CAAxB;AAC5C,SAhBA;;AAgBA3+F,QAAAA,OAEM4+F,UAFN,GAED,mBAAA,CAAmB99F,IAAnB,EAAiC;AAC7B,eAAK+8F,KAAL,GAAa/8F,IAAb;AACA,cAAIkD,IAAI,GAAG47D,EAAE,CAACG,IAAHH,CAAQ9+D,IAAI,GAAG,UAAf8+D,CAAX;AACA,eAAKn/D,IAAL,GAAYwjE,QAAQ,CAACI,QAATJ,CAAkBjgE,IAAlBigE,CAAZ;AACH,SANA;;AAMAjkE,QAAAA,OAEM6+F,aAFN,GAED,sBAAA,CAAsB/9F,IAAtB,EAAoC;AAChCg+F,UAAAA,SAAS,CAACnmD,MAAVmmD,CAAiB,KAAKd,YAAtBc,EAAqCh+F,IAArCg+F;AACA,eAAKN,eAAL;AACA5+B,UAAAA,EAAE,SAAA,CAAFA,CAAU9+D,IAAI,GAAG,OAAjB8+D;AACH,SANA;;AAMA5/D,QAAAA,OAEMmjD,gBAFN,GAED,yBAAA,GAA2B;AACvB,cAAI,KAAK66C,YAAT,EAAuB;AACnB,iBAAKA,YAAL,CAAkB5rE,OAAlB,CAA0B,UAAA1tB,OAAA,EAAW;AACjCk7D,cAAAA,EAAE,SAAA,CAAFA,CAAUl7D,OAAO,GAAG,OAApBk7D;AACH,aAFD;;AAGA,iBAAKo+B,YAAL,GAAoBj9F,SAApB;;;AAEJ6+D,UAAAA,EAAE,SAAA,CAAFA,CAAU,KAAKm+B,WAAL,GAAmB,OAA7Bn+B;AACAA,UAAAA,EAAE,SAAA,CAAFA,CAAU,KAAKi+B,KAAL,GAAa,OAAvBj+B;AACH,SAXA;;AAWA5/D,QAAAA,OAEMQ,GAFN,GAED,YAAA,CAAeM,IAAf,EAAgC;AAC5B,cAAI;AACA,mBAAO,KAAKL,IAAL,CAAUK,IAAV,CAAP;AACH,WAFD,CAEE,cAAA,EAAM;AACJ,kBAAM,IAAIoD,KAAJ,8CAAqDpD,IAArD,CAAN;;AAGP,SATA;;AASAd,QAAAA,OAEMw/B,GAFN,GAED,YAAA,CAAe1+B,IAAf,EAA6BG,KAA7B,EAAuC;AACnC,eAAKR,IAAL,CAAUK,IAAV,IAAkBG,KAAlB;AACA,eAAKq9F,WAAL;AACH,SALA;;AAKAt+F,QAAAA,OAED8L,QAFC,GAED,iBAAA,CAAShL,IAAT,EAAsBG,KAAtB,EAAiC;AAC7B,eAAKR,IAAL,CAAUK,IAAV,IAAkBG,KAAlB;AACH,SAJA;;AAIAjB,QAAAA,OAEMuqE,aAFN,GAED,sBAAA,CAAqBzpE,IAArB,EAAkCG,KAAlC,EAAgD;AAC5C,eAAKqqE,kBAAL,CAAwBxqE,IAAxB,IAAgCG,KAAhC;AACH,SAJA;;AAIAjB,QAAAA,OAEM66B,aAFN,GAED,sBAAA,CAAqB/5B,IAArB,EAAmC;AAC/B,cAAMG,KAAK,GAAG,KAAKqqE,kBAAL,CAAwBxqE,IAAxB,CAAd;AACA,iBAAOG,KAAK,KAAKF,SAAVE,GAAsB,CAAtBA,GAA0BA,KAAjC;AACH,SALA;;AAKAjB,QAAAA,OAEMgqE,YAFN,GAED,qBAAA,GAAuB;AACnB,eAAK+0B,oBAAL;AACH,SAJA;;AAIA/+F,QAAAA,OAEMojD,UAFN,GAED,mBAAA,CAAkB1hD,GAAlB,EAA8B;AAC1B,eAAKjB,IAAL,CAAUiB,GAAV,IAAiB,EAAjB;AACA,eAAK48F,WAAL;AACH,SALA;;AAKAt+F,QAAAA,OAEMo+F,eAFN,GAED,wBAAA,CAAuB18F,GAAvB,EAAmC;AAC/B,cAAIs9F,OAAO,GAAGt9F,GAAG,GAAG,OAApB;AACA,cAAI,KAAK4pE,kBAAL,CAAwB0zB,OAAxB,MAAqCj+F,SAAzC,EAAoD,KAAKuqE,kBAAL,CAAwB0zB,OAAxB,IAAmC,CAAnC;AACpD,eAAK1zB,kBAAL,CAAwB0zB,OAAxB,KAAoC,CAApC;AACH,SANA;;AAMAh/F,QAAAA,OAEM+hD,cAFN,GAED,uBAAA,CAAsB/9C,IAAtB,EAAsD;AAClD,cAAIg7F,OAAO,GAAGh7F,IAAI,CAACtC,GAALsC,GAAW,MAAzB;AACA,cAAI,KAAKsnE,kBAAL,CAAwB0zB,OAAxB,MAAqCj+F,SAAzC,EAAoD,KAAKuqE,kBAAL,CAAwB0zB,OAAxB,IAAmC,CAAnC;AACpD,eAAK1zB,kBAAL,CAAwB0zB,OAAxB,KAAoCh7F,IAAI,CAAC5C,IAAzC;AACH,SANA;;AAMApB,QAAAA,OAEMq+F,kBAFN,GAED,2BAAA,CAA0Br6F,IAA1B,EAA8D;AAC1D,cAAIg7F,OAAO,GAAGh7F,IAAI,CAACtC,GAALsC,GAAW,UAAzB;AACA,cAAI,KAAKsnE,kBAAL,CAAwB0zB,OAAxB,MAAqCj+F,SAAzC,EAAoD,KAAKuqE,kBAAL,CAAwB0zB,OAAxB,IAAmC,CAAnC;AACpD,eAAK1zB,kBAAL,CAAwB0zB,OAAxB,KAAoCh7F,IAAI,CAACoJ,QAAzC;AACH,SANA;;AAMApN,QAAAA,OAEMqB,eAFN,GAED,wBAAA,CAAuBK,GAAvB,EAA2C;AACvC,iBAAO,KAAK4pE,kBAAL,CAAwB5pE,GAAxB,CAAP;AACH,SAJA;;AAIA1B,QAAAA,OAEM++F,oBAFN,GAED,6BAAA,GAA8B;AAC1B,eAAI,IAAIx0F,CAAR,IAAa,KAAK+gE,kBAAlB,EAAsC;AAClC,iBAAK7qE,IAAL,CAAUkB,UAAV,CAAqB4I,CAArB,KAA2B,KAAK+gE,kBAAL,CAAwB/gE,CAAxB,CAA3B;;AAEP,SANA;;AAMAvK,QAAAA,OAEM6oE,cAFN,GAED,uBAAA,GAAwB;AACpB,cAAG,KAAKpoE,IAAL,CAAUw+F,aAAV,KAA4Bl+F,SAA/B,EAA0C,KAAKN,IAAL,CAAUw+F,aAAV,GAA0B,CAAC,CAA3B;AAE1C,eAAKx+F,IAAL,CAAUw+F,aAAV;AAEA77F,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,gBAAZA,EAA8B,KAAK3C,IAAL,CAAUw+F,aAAxC77F;AAEA,cAAG,KAAK3C,IAAL,CAAUw+F,aAAV,GAA0BrB,sBAA7B,EACI,KAAKn9F,IAAL,CAAUw+F,aAAV,GAA0B,CAA1B;AAEJ,cAAG,KAAKx+F,IAAL,CAAUy+F,OAAV,KAAsBn+F,SAAzB,EAAoC,KAAKN,IAAL,CAAUy+F,OAAV,GAAoB,EAApB;;AAEpC,cAAG,KAAKz+F,IAAL,CAAUw+F,aAAV,IAA2B,KAAKx+F,IAAL,CAAUy+F,OAAV,CAAkBv+F,MAAhD,EAAwD;AACpD,iBAAKF,IAAL,CAAUy+F,OAAV,CAAkBp8F,IAAlB,CAAuB,EAAvB;;;AAGJ,eAAKwoE,kBAAL,GAA0B,KAAK7qE,IAAL,CAAUy+F,OAAV,CAAkB,KAAKz+F,IAAL,CAAUw+F,aAA5B,CAA1B;AAEH,SApBA;;AAoBA5wE,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KA3LD,YAAA,GAAe;AACX,gBAAI,KAAKC,IAAL,CAAU0+F,SAAV,KAAwBp+F,SAA5B,EAAuC,KAAKN,IAAL,CAAU0+F,SAAV,GAAsB,EAAtB;AACvC,mBAAO,KAAK1+F,IAAL,CAAU0+F,SAAjB;;WAyLH;;AAxLA,mBAAA;QAhBqBl9F;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnC1B,UAAQ1C,OAAO,GAAKC,UAAU,CAAtBD,OAAR;UAGa6/F,cAAc,qCAD1B7/F,OAAO,CAAC,gBAAD;AAAkBI,QAAAA,0CAAA;;AAAA,+BAAA;AAAA,0DAAA;;;AAAA,6CAAA;;AAAAK,QAAAA,OAEtByL,KAFsB,GAEtB,cAAA,GAAS;AACL,cAAI,CAACktB,WAAW,CAAC21B,cAAjB,EAAiC;AAC7B,iBAAKplD,IAAL,CAAU8jC,gBAAV;;AAEP,SANqB;;AAMrB,6BAAA;QAL+BzhC;;;;;;;;;;;;;;;;;;;;;;;;;ACJpC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa4/F,aAAa,oCADzB9/F,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,0DAAA;;;AAAA,4CAAA;;AAAAK,QAAAA,OAErByL,KAFqB,GAErB,cAAA,GAAS,CACR,CAHoB;;AAGpB,4BAAA;QAF8BF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJnC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa6/F,UAAU,iCADtB//F,OAAO,CAAC,YAAD,WAKHE,QAAQ,CAACkM,SAAS,CAACC,mBAAX;AAA+BjM,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAFxC4zC,SAEwC,GAFlB,IAEkB;;AAFdj2B,UAAAA,sFAAA;;AAAAA,UAAAA,qFAAA;;AAAA,sBAAA;;;AAAA,yCAAA;;AAAAxd,QAAAA,OAQ1ByL,KAR0B,GAQ1B,cAAA,GAAS;;AAEL,eAAKgoC,SAAL,GAAiB,KAAK/nC,YAAL,CAAkBu4B,QAAlB,CAAjB;;AACA,eAAKwP,SAAL,CAAe5wC,EAAf,CAAkB,gBAAlB,EAAoC,KAAK6wC,cAAzC,EAAyD,IAAzD;;AACA,eAAKD,SAAL,CAAe5wC,EAAf,CAAkB,kBAAlB,EAAsC,KAAK08F,gBAA3C,EAA6D,IAA7D;AACH,SAbyB;;AAazBv/F,QAAAA,OAED0zC,cAFC,GAED,uBAAA,CAAgBzY,KAAhB,EAAsC;AAClC,eAAKjxB,IAAL,CAAU,KAAKtI,GAAf,EAAoB,IAApB;AACH,SAJA;;AAIA1B,QAAAA,OAEDu/F,gBAFC,GAED,yBAAA,CAAkBtkE,KAAlB,EAA0C;AACtC,eAAKjxB,IAAL,CAAU,KAAKtI,GAAf,EAAoB,IAApB;AACH,SAJA;;AAIA1B,QAAAA,OAEDgK,IAFC,GAED,aAAA,CAAMtI,GAAN,EAAmBT,KAAnB,EAA4C;AAAA,yBAAA;;AACxC,8BAAKmkD,KAAL,SAAA,SAAA,GAAAo6C,YAAY1zF,QAAZ,CAAqBpK,GAArB,EAA0BT,KAA1B,CAAA;AACH,SAJA;;AAIA,yBAAA;QA3B2BsK;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAKE,IALF;;8EAOpCpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,EADJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaggG,WAAW,kCADvBlgG,OAAO,CAAC,aAAD;AAAeI,QAAAA,uCAAA;;AAAA,4BAAA;AAAA,0DAAA;;;AAAA,0CAAA;;AAAAK,QAAAA,OAGnByL,KAHmB,GAGnB,cAAA,GAAS,CACR,CAJkB;;AAIlB,0BAAA;QAH4BF;;;;;;;;;;;;;;;;;;;;;;;;;ACHjC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaigG,YAAY,mCADxBngG,OAAO,CAAC,cAAD;AAAgBI,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,0DAAA;;;AAAA,2CAAA;;AAAAK,QAAAA,OAEpByL,KAFoB,GAEpB,cAAA,GAAS,CACR,CAHmB;;AAGnB,2BAAA;QAF6BF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDlC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa6jB,YAAY,mCADxB/jB,OAAO,CAAC,cAAD,WAWHE,QAAQ,CAAC8d,OAAD,WAGR9d,QAAQ,CAAC,CAAC4Q,IAAD,CAAD,WAGR5Q,QAAQ,CAAC,CAAC8d,OAAD,CAAD;AAAW5d,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAdpB4zC,SAcoB,SAAA;AAdX5zC,UAAAA,MACTiF,MADS,SAAA;AACHjF,UAAAA,MACN8kB,SADM,GACM,KADN;AACW9kB,UAAAA,MACjBi4C,IADiB,GACI,IAAIhrC,QAAQ,CAACC,GAAb,EADJ;AACsBlN,UAAAA,MACvCsoB,SADuC,GACrBzV,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADmB;AACV7S,UAAAA,MAE7B8/F,MAF6B,SAAA;;AAEvBniF,UAAAA,8FAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,uFAAA;;AAAA3d,UAAAA,MAWN+/F,KAXM,GAWE,CAXF;AAWG//F,UAAAA,MAET6P,GAFS,GAEHgD,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFC;AAEQ,sBAAA;;;AAAA,2CAAA;;AAAA1S,QAAAA,OAEjByL,KAFiB,GAEjB,cAAA,GAAS;AAEL,eAAKgoC,SAAL,GAAiB,KAAK/nC,YAAL,CAAkBu4B,QAAlB,CAAjB;AACA,eAAK6T,IAAL,CAAU9+B,CAAV,CAAYhM,CAAZ,GAAgB,CAAhB;AACA,eAAK8qC,IAAL,CAAU9+B,CAAV,CAAY/L,CAAZ,GAAgB,CAAC,CAAjB;AACA,eAAK6qC,IAAL,CAAU9+B,CAAV,CAAY9L,CAAZ,GAAgB,CAAhB;AACA,eAAKpI,MAAL,GAAc,KAAKoE,IAAL,CAAUwC,YAAV,CAAuBkI,KAAvB,CAAd;;AAEA,eAAK,IAAIlT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKy0D,KAAL,CAAWx0D,MAA/B,EAAuCD,CAAC,EAAxC,EACI,KAAKk/F,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAK,KAAKzqC,KAAL,CAAWz0D,CAAX,CAA/B;AACP,SAZgB;;AAYhBV,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AACvB,eAAKk8F,eAAL;AACH,SAJA;;AAIA7/F,QAAAA,OAED6/F,eAFC,GAED,wBAAA,GAAmB;AAAA,2BAAA;;AAEf,eAAK,IAAIn/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKo/F,QAAL,CAAcn/F,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CoR,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgmC,IAAL,CAAU/+B,CAAxBjH,EAA2B,KAAK5I,IAAL,CAAUwD,aAArCoF;;AACA,iBAAKgmC,IAAL,CAAU/+B,CAAV,CAAY7B,GAAZ,CAAgB,KAAK4oF,QAAL,CAAcp/F,CAAd,CAAhB;;AACA,gBAAI6M,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKuqC,IAA3CvqC,EAAiD,KAAKqyF,KAAtDryF,EAA6D,KAAKwyF,aAAlExyF,CAAJ,EAAsF;AAAA,8BAAA;;AAClF,kBAAMxE,GAAG,GAAGwE,aAAa,CAACC,QAAdD,CAAuBG,oBAAnC,CADkF;;AAGlF,kBAAI,CAAC,KAAKiX,SAAV,EAAqB,qBAAK7f,MAAL,SAAA,SAAA,GAAAgQ,aAAa0W,QAAb,EAAA;AACrB,mBAAK7G,SAAL,GAAiB,IAAjB;AACA;;;;AAIR,cAAI,KAAKA,SAAT,EAAoB,sBAAK7f,MAAL,SAAA,SAAA,GAAA6Q,cAAa8V,SAAb,EAAA;AACpB,eAAK9G,SAAL,GAAiB,KAAjB;AAEH,SAnBA;;AAmBA,2BAAA;QAxD6BpZ;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAWvB,GAXuB;;;AAWpBH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGR,EAHQ;;;AAGNH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGL,EAHK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBjB,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaugG,SAAS,gCADrBzgG,OAAO,CAAC,WAAD,WAoBHE,QAAQ,CAAC,CAACq3B,QAAD,CAAD;AAAYn3B,QAAAA,qCAAA;;AAAA,0BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAjBrB4zC,SAiBqB,GAjBC,IAiBD;;AAjBKj2B,UAAAA,oFAAA;;AAAAA,UAAAA,sFAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,2FAAA;;AAAAA,UAAAA,6FAAA;;AAAAA,UAAAA,wFAAA;;AAAA3d,UAAAA,MAoB1BogG,SApB0B,GAoBN,GApBM;AAoBHpgG,UAAAA,MACvBqgG,QADuB,GACJ,CADI;AACH,sBAAA;;;AAAA,wCAAA;;AAAAlgG,QAAAA,OAEpB0gC,QAFoB,GAEpB,iBAAA,GAAY;AACR,eAAK+S,SAAL,GAAiB,KAAK/nC,YAAL,CAAkBu4B,QAAlB,CAAjB;AACA,eAAKhkC,IAAL;AACH,SALmB;;AAKnBD,QAAAA,OAED2gC,SAFC,GAED,kBAAA,GAAa;AACT,eAAK8S,SAAL,CAAexwC,GAAf,CAAmB,gBAAnB,EAAqC,KAAKs8F,gBAA1C,EAA4D,IAA5D;;AACA,eAAK9rD,SAAL,CAAexwC,GAAf,CAAmB,kBAAnB,EAAuC,KAAKs8F,gBAA5C,EAA8D,IAA9D;;AACA,cAAI,KAAKY,QAAL,CAAcx/F,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,iBAAK8yC,SAAL,CAAexwC,GAAf,CAAmB,eAAnB,EAAoC,KAAKm9F,aAAzC,EAAwD,IAAxD;;AACA,iBAAK3sD,SAAL,CAAexwC,GAAf,CAAmB,iBAAnB,EAAsC,KAAKo9F,eAA3C,EAA4D,IAA5D;;AAEP,SATA;;AASArgG,QAAAA,OAEDC,IAFC,GAED,aAAA,GAAQ;AACJ,cAAI,KAAKo0B,GAAL,KAAa,EAAjB,EAAqB;AACjB,gBAAMisE,KAAK,GAAG,KAAKp3F,IAAL,CAAUpI,IAAV,CAAewjC,KAAf,CAAqB,GAArB,CAAd;AACA,iBAAKjQ,GAAL,GAAWisE,KAAK,CAAC,CAAD,CAAhB;AACA,gBAAIA,KAAK,CAAC3/F,MAAN2/F,IAAgB,CAApB,EAAuB,KAAKt8F,IAAL,GAAYs8F,KAAK,CAAC,CAAD,CAAjB;;;AAE3B,eAAK7sD,SAAL,CAAe5wC,EAAf,CAAkB,gBAAlB,EAAoC,KAAK6wC,cAAzC,EAAyD,IAAzD;;AACA,eAAKD,SAAL,CAAe5wC,EAAf,CAAkB,kBAAlB,EAAsC,KAAK08F,gBAA3C,EAA6D,IAA7D;;AAEA,cAAI,KAAKY,QAAL,CAAcx/F,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,iBAAK8yC,SAAL,CAAe5wC,EAAf,CAAkB,eAAlB,EAAmC,KAAKu9F,aAAxC,EAAuD,IAAvD;;AACA,iBAAK3sD,SAAL,CAAe5wC,EAAf,CAAkB,iBAAlB,EAAqC,KAAKw9F,eAA1C,EAA2D,IAA3D;;;AAGJ,eAAKH,QAAL,GAAgBlwF,IAAI,CAAC7O,SAArB;AACH,SAjBA;;AAiBAnB,QAAAA,OAED0zC,cAFC,GAED,uBAAA,CAAgBzY,KAAhB,EAAsC;AAElC,cAAI,KAAKslE,WAAL,CAAiBtlE,KAAK,CAACmZ,aAANnZ,CAAoBn6B,IAArC,CAAJ,EAAgD;;AAEhD,cAAI,KAAKuzB,GAAL,KAAa,aAAjB,EAAgC;AAC5B4G,YAAAA,KAAK,CAACmZ,aAANnZ,CAAoB/xB,IAApB+xB,CAAyBj4B,IAAzBi4B,CAA8B,IAA9BA,EAAoC,KAAKj3B,IAAzCi3B;AACH,WAFD,MAEO;AACHl4B,YAAAA,GAAG,CAACC,IAAJD,CAAS,KAAKsxB,GAAdtxB,EAAmB,KAAKiB,IAAxBjB;AACAk4B,YAAAA,KAAK,CAACmZ,aAANnZ,CAAoBj4B,IAApBi4B,CAAyB,IAAzBA,EAA+B,KAAKj3B,IAApCi3B;;;AAEJ,cAAI,KAAKulE,WAAT,EAAsB;AAClB,iBAAKt3F,IAAL,CAAUoI,MAAV,GAAmB,KAAnB;;AAEP,SAfA;;AAeAtR,QAAAA,OAEDogG,aAFC,GAED,sBAAA,CAAenlE,KAAf,EAAqC;AAEjC,cAAI,KAAKslE,WAAL,CAAiBtlE,KAAK,CAACmZ,aAANnZ,CAAoBn6B,IAArC,CAAJ,EAAgD;;AAEhD,cAAI,KAAKq/F,QAAL,KAAkB,aAAtB,EAAqC;AACjCllE,YAAAA,KAAK,CAACmZ,aAANnZ,CAAoB/xB,IAApB+xB,CAAyBj4B,IAAzBi4B,CAA8B,IAA9BA,EAAoC,KAAKwlE,SAAzCxlE;AACH,WAFD,MAEO;AACHl4B,YAAAA,GAAG,CAACC,IAAJD,CAAS,KAAKo9F,QAAdp9F,EAAwB,KAAK09F,SAA7B19F;AACAk4B,YAAAA,KAAK,CAACmZ,aAANnZ,CAAoBj4B,IAApBi4B,CAAyB,IAAzBA,EAA+B,KAAKwlE,SAApCxlE;;AAEP,SAZA;;AAYAj7B,QAAAA,OAEDu/F,gBAFC,GAED,yBAAA,CAAkBtkE,KAAlB,EAA0C;AAEtC,cAAI,KAAKslE,WAAL,CAAiBtlE,KAAK,CAACmZ,aAANnZ,CAAoBn6B,IAArC,CAAJ,EAAgD;;AAEhD,cAAI,KAAKuzB,GAAL,KAAa,aAAjB,EAAgC;AAC5B4G,YAAAA,KAAK,CAACmZ,aAANnZ,CAAoB/xB,IAApB+xB,CAAyBj4B,IAAzBi4B,CAA8B,IAA9BA,EAAoC,KAAKj3B,IAAzCi3B;AACH,WAFD,MAEO;AACHl4B,YAAAA,GAAG,CAACC,IAAJD,CAAS,KAAKsxB,GAAdtxB,EAAmB,KAAKiB,IAAxBjB;;;AAEJ,cAAI,KAAKy9F,WAAT,EAAsB;AAClB,iBAAKt3F,IAAL,CAAUoI,MAAV,GAAmB,KAAnB;;AAEP,SAdA;;AAcAtR,QAAAA,OAEDqgG,eAFC,GAED,wBAAA,CAAiBplE,KAAjB,EAAyC;AAErC,cAAI,KAAKslE,WAAL,CAAiBtlE,KAAK,CAACmZ,aAANnZ,CAAoBn6B,IAArC,CAAJ,EAAgD;;AAEhD,cAAI,KAAKq/F,QAAL,KAAkB,aAAtB,EAAqC;AACjCllE,YAAAA,KAAK,CAACmZ,aAANnZ,CAAoB/xB,IAApB+xB,CAAyBj4B,IAAzBi4B,CAA8B,IAA9BA,EAAoC,KAAKwlE,SAAzCxlE;AACH,WAFD,MAEO;AACHl4B,YAAAA,GAAG,CAACC,IAAJD,CAAS,KAAKo9F,QAAdp9F,EAAwB,KAAK09F,SAA7B19F;;AAEP,SAXA;;AAWA/C,QAAAA,OAED0gG,WAFC,GAED,oBAAA,GAAwB;AACpB,cAAM/8F,SAAS,GAAGqM,IAAI,CAAC7O,SAAL6O,GAAiB,KAAKkwF,QAAxC;;AACA,cAAIlwF,IAAI,CAAC7O,SAAL6O,GAAiB,KAAKkwF,QAAtBlwF,GAAiC,KAAKiwF,SAA1C,EAAqD;AAEjD,iBAAKC,QAAL,GAAgBlwF,IAAI,CAAC7O,SAArB;AACA,mBAAO,KAAP;AACH,WAJD,MAIO;AACH,mBAAO,IAAP;;AAEP,SAXA;;AAWAnB,QAAAA,OAEDugG,WAFC,GAED,oBAAA,CAAajzF,GAAb,EAAmC;AAE/B,eAAK,IAAI5M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKypC,MAAL,CAAYxpC,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,gBAAIy1B,CAAC,GAAG,KAAKgU,MAAL,CAAYzpC,CAAZ,CAAR;AACA,gBAAI4M,GAAG,CAACqwC,QAAJrwC,CAAa6oB,CAAb7oB,CAAJ,EAAqB,OAAO,IAAP;;;AAGzB,iBAAO,KAAP;AAEH,SAXA;;AAWA,wBAAA;QAhI0B/B,gFAI1B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACH,EADG;;+EAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACF,EADE;;mFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACE,EADF;;oFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,EADH;;sFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,KADL;;;AACUH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGA,EAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBvB,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGakhG,WAAW,kCADvBphG,OAAO,CAAC,aAAD;AAAeI,QAAAA,uCAAA;;AAAA,4BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAEnB4zC,SAFmB,SAAA;AAEV,sBAAA;;;AAAA,0CAAA;;AAAAzzC,QAAAA,OAETyL,KAFS,GAET,cAAA,GAAQ;AACJ,eAAKgoC,SAAL,GAAiB,KAAK/nC,YAAL,CAAkBu4B,QAAlB,CAAjB;;AACA,eAAKwP,SAAL,CAAgB5wC,EAAhB,CAAmB,kBAAnB,EAAuC,KAAK08F,gBAA5C,EAA8D,IAA9D;AACH,SALQ;;AAKRv/F,QAAAA,OAEDu/F,gBAFC,GAED,yBAAA,CAAiBtkE,KAAjB,EAAyC;AACrC73B,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,qBAAZA,EAAmC63B,KAAK,CAACmZ,aAANnZ,CAAoBn6B,IAAvDsC;AACA,eAAK8F,IAAL,CAAUlG,IAAV,CAAe,OAAf,EAAwBi4B,KAAK,CAACmZ,aAANnZ,CAAoBn6B,IAA5C;AACH,SALA;;AAKA,0BAAA;QAX4ByK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBjC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaijC,mBAAmB,0CAD/BnjC,OAAO,CAAC,qBAAD,WAGHE,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAAC,CAAC8d,OAAD,CAAD;AAAW5d,QAAAA,+CAAA;;AAAA,oCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,0FAAA;;AAAAA,UAAAA,yFAAA;;AAAAA,UAAAA,uFAAA;;AAAAA,UAAAA,4FAAA;;AAAA3d,UAAAA,MAMpB+/F,KANoB,GAMJ,CANI;AAMH//F,UAAAA,MAEjBsC,KAFiB,GAET,CAFS;AAERtC,UAAAA,MAET+gG,UAFS,GAEIluF,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFN;AAEe7S,UAAAA,MAExBi4C,IAFwB,GAEH,IAAIhrC,QAAQ,CAACC,GAAb,EAFG;AAEelN,UAAAA,MAEvC2a,QAFuC,GAE5B9H,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAF0B;AAEjB,sBAAA;;;AAAA,kDAAA;;AAAA1S,QAAAA,OAEtByL,KAFsB,GAEtB,cAAA,GAAS;AAEL,eAAK,IAAI/K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKy0D,KAAL,CAAWx0D,MAA/B,EAAuCD,CAAC,EAAxC,EACI,KAAKk/F,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAK,KAAKzqC,KAAL,CAAWz0D,CAAX,CAA/B;AAEP,SAPqB;;AAOrBV,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AAEvB,eAAKxB,KAAL,IAAcwB,SAAd;;AACA,cAAI,KAAKxB,KAAL,GAAa,CAAjB,EAAoB;AAChB2P,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgmC,IAAL,CAAU/+B,CAAxBjH,EAA2B,KAAK+uF,SAAL,CAAgBn0F,aAA3CoF;AACAA,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK8uF,UAAnB9uF,EAA+B,KAAKqxB,OAAL,CAAcz2B,aAA7CoF;;AACA,iBAAK8uF,UAAL,CAAgB9pF,QAAhB,CAAyB,KAAK+pF,SAAL,CAAgBn0F,aAAzC;;AACA,gBAAMU,QAAQ,GAAG,KAAKwzF,UAAL,CAAgBjgG,MAAhB,EAAjB;;AAEA,iBAAKigG,UAAL,CAAgBzpF,SAAhB;;AACArF,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgmC,IAAL,CAAU9+B,CAAxBlH,EAA2B,KAAK8uF,UAAhC9uF;;AAEA,gBAAIvE,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKuqC,IAA3CvqC,EAAiD,KAAKqyF,KAAtDryF,EAA6DH,QAA7DG,CAAJ,EAA4E;AAAA,gCAAA;;AACxEuE,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK0I,QAAnB1I,EAA6BvE,aAAa,CAACC,QAAdD,CAAuBG,oBAAvBH,CAA4CiN,QAAzE1I;AACA,qCAAK0I,QAAL,SAAA,SAAA,GAAAsmF,eAAehqF,QAAf,CAAwB,KAAK8pF,UAA7B,CAAA,CAFwE;;AAKxE,kBAAM9+E,WAAW,GAAG,KAAKtH,QAAL,CAAc3D,KAAd,GAAsBC,QAAtB,CAA+B,KAAK+pF,SAAL,CAAgBn0F,aAA/C,EAA8D/L,MAA9D,EAApB;AAEH,aAPD,MAOO;AACHmR,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK0I,QAAnB1I,EAA6BzB,IAAI,CAAC0S,IAAlCjR;;;AAIX,SA1BA;;AA0BA,kCAAA;QAvDoCvG;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAStC,EATsC;;qFAW7Cpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,GADJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCb,UAAQtf,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIa1sB,eAAe,sCAF3BxU,OAAO,CAAC,iBAAD,WAIHE,QAAQ,CAAC,CAAC4Q,IAAD,CAAD,WAGR5Q,QAAQ,CAAC8d,OAAD,WAGR9d,QAAQ,CAAC8d,OAAD,WAGR9d,QAAQ,CAAC,CAAC8d,OAAD,CAAD,iBAZZkjB,iBAAiB;AAAA9gC,QAAAA,2CAAA;;AAAA,gCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,oFAAA;;AAAAA,UAAAA,uFAAA;;AAAAA,UAAAA,yFAAA;;AAAAA,UAAAA,uFAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,0FAAA;;AAAA3d,UAAAA,MAqBdi4C,IArBc,GAqBO,IAAIhrC,QAAQ,CAACC,GAAb,EArBP;AAqByBlN,UAAAA,MAEvConB,OAFuC,GAE7B,KAF6B;AAExBpnB,UAAAA,MACf8W,WADe,SAAA;AACJ9W,UAAAA,MAEX2a,QAFW,GAEM9H,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFR;AAEiB7S,UAAAA,MAC5BsC,KAD4B,GACpB,CADoB;AACnBtC,UAAAA,MACT+/F,KADS,GACD,CADC;AACA//F,UAAAA,MACTyQ,OADS,GACCoC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADH;AACY7S,UAAAA,MACrBkhG,KADqB,SAAA;AAChBlhG,UAAAA,MAELmhG,SAFK,SAAA;AAEInhG,UAAAA,MAETohG,WAFS,GAEK,CAFL;AAEM,sBAAA;;;AAAA,8CAAA;;AAAAjhG,QAAAA,OAEf0gC,QAFe,GAEf,iBAAA,GAAY;AAER,eAAK,IAAIhgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKy0D,KAAL,CAAWx0D,MAA/B,EAAuCD,CAAC,EAAxC,EACI,KAAKk/F,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAK,KAAKzqC,KAAL,CAAWz0D,CAAX,CAA/B;;AAEJ,cAAMkB,KAAK,GAAG,KAAK+K,GAAL,CAAShM,MAAT,GAAkB,KAAKi5C,OAArC;AACA,eAAKmnD,KAAL,GAAa,IAAI7yF,KAAJ,CAAUtM,KAAV,CAAb;AAEA,eAAKo/F,SAAL,GAAiB,IAAI9yF,KAAJ,CAAUtM,KAAV,CAAjB;AACA,cAAMs/F,SAAS,GAAG,KAAK1rF,KAAL,GAAa,KAAKokC,OAApC;AAEA,cAAMunD,eAAe,GAAGzuF,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA1B;;AACA,eAAK,IAAIhS,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKiM,GAAL,CAAShM,MAA7B,EAAqCD,EAAC,EAAtC,EAA0C;AACtC,gBAAMsY,CAAC,GAAG,KAAKrM,GAAL,CAASjM,EAAT,CAAV;AACA,gBAAI0gG,QAAQ,GAAG,CAAC,KAAK5rF,KAAN,GAAc,CAA7B;;AACA,iBAAK,IAAI8f,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKskB,OAAzB,EAAkCtkB,CAAC,EAAnC,EAAuC;AACnC8rE,cAAAA,QAAQ,IAAIF,SAAZE;AACA,kBAAIC,MAAM,GAAG3uF,EAAE,CAACsG,CAAC,CAAChM,CAAH,EAAMgM,CAAC,CAAC/L,CAAR,EAAW+L,CAAC,CAAC9L,CAAb,CAAf;AACAmD,cAAAA,IAAI,CAACiU,OAALjU,CAAagxF,MAAbhxF,EAAqBgxF,MAArBhxF,EAA6B8wF,eAA7B9wF,EAA8C6H,IAAI,CAACqM,QAALrM,CAAckpF,QAAdlpF,CAA9C7H;AACA,kBAAMlB,KAAK,GAAGzO,EAAC,GAAG,KAAKk5C,OAATl5C,GAAmB40B,CAAjC;AACA,mBAAKyrE,KAAL,CAAY5xF,KAAZ,IAAqBkyF,MAArB;;;AAGX,SAzBc;;AAyBdrhG,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AACvB,eAAKxB,KAAL,IAAcwB,SAAd;;AACA,cAAI,KAAKxB,KAAL,GAAa,CAAjB,EAAoB;AAChB,iBAAKA,KAAL,GAAa,KAAKm/F,UAAlB;AACAxvF,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgmC,IAAL,CAAU/+B,CAAxBjH,EAA2B,KAAK5I,IAAL,CAAUwD,aAArCoF;AAEA,gBAAMyvF,gBAAgB,GAAG3wF,QAAQ,CAAC4wF,mBAAT5wF,CAA6B,KAAK1H,IAAlC0H,CAAzB;AACA,gBAAM6wF,SAAS,GAAGvpF,IAAI,CAACqM,QAALrM,CAAcqpF,gBAAgB,CAACt0F,CAA/BiL,CAAlB;;AAEA,iBAAK,IAAIxX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKqgG,KAAL,CAAYpgG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzCoR,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKxB,OAAnBwB,EAA4B,KAAKivF,KAAL,CAAYrgG,CAAZ,CAA5BoR;AAEAzB,cAAAA,IAAI,CAACiU,OAALjU,CAAa,KAAKC,OAAlBD,EAA2B,KAAKC,OAAhCD,EAAyCA,IAAI,CAAC0S,IAA9C1S,EAAoDoxF,SAApDpxF;AACAyB,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgmC,IAAL,CAAU9+B,CAAxBlH,EAA2B,KAAKxB,OAAhCwB;AAaA,mBAAKkvF,SAAL,CAAgBtgG,CAAhB,IAAqB6M,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKuqC,IAA3CvqC,EAAiD,KAAKqyF,KAAtDryF,EAA6D,KAAKH,QAAlEG,CAArB;AACA,mBAAK0zF,WAAL,GAAmB,CAAnB;;AACA,kBAAI,KAAKD,SAAL,CAAgBtgG,CAAhB,CAAJ,EAAwB;AACpB,oBAAIqI,GAAG,GAAGwE,aAAa,CAACC,QAAdD,CAAuBG,oBAAjC;AACAoE,gBAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK0I,QAAnB1I,EAA6B/I,GAAG,CAACyR,QAAjC1I;AACA,qBAAKmV,OAAL,GAAe,IAAf;AACA,qBAAKtQ,WAAL,GAAmB5N,GAAG,CAACue,QAAJve,CAAaG,IAAhC;AACH,eALD,MAKO;AACH,qBAAKyN,WAAL,GAAmB5V,SAAnB;AACA,qBAAKkmB,OAAL,GAAe,KAAf;AACA,qBAAKg6E,WAAL;;;;AAIf,SA1CA;;AA0CAjhG,QAAAA,OAED0hG,0BAFC,GAED,mCAAA,GAAgD;AAE5C,cAAMC,WAAW,GAAG52F,cAAc,CAAC,CAAD,EAAI,KAAKk2F,WAAT,CAAlC,CAF4C;;AAK5C,cAAIW,aAAa,GAAG,CAAC,CAArB;;AACA,eAAK,IAAIlhG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsgG,SAAL,CAAgBrgG,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,gBAAI,KAAKsgG,SAAL,CAAgBtgG,CAAhB,KAAsB,KAA1B,EAAiCkhG,aAAa;AAC9C,gBAAIA,aAAa,KAAKD,WAAtB,EAAmC;;;AAGvC,cAAIC,aAAa,KAAK,CAAC,CAAvB,EAA0B,OAAO7gG,SAAP;AAE1B,eAAKuP,OAAL,GAAe,KAAK3D,GAAL,CAASi1F,aAAT,CAAf;AAEA,cAAML,gBAAgB,GAAG3wF,QAAQ,CAAC4wF,mBAAT5wF,CAA6B,KAAK1H,IAAlC0H,CAAzB;AACA,cAAM6wF,SAAS,GAAGvpF,IAAI,CAACqM,QAALrM,CAAcqpF,gBAAgB,CAACt0F,CAA/BiL,CAAlB;AAEA,iBAAO7H,IAAI,CAACiU,OAALjU,CAAa,KAAKC,OAAlBD,EAA2B,KAAKC,OAAhCD,EAAyCA,IAAI,CAAC0S,IAA9C1S,EAAoDoxF,SAApDpxF,CAAP;AAEH,SAtBA;;AAsBA,8BAAA;QA1HgC9E;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAG5B,EAH4B;;;AAG1BH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGR,EAHQ;;;AAGNH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGA,EAHA;;;AAGEH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGJ,EAHI;;qFAKXpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,GADJ;;mFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACE,CADF;;mBAlBK,CAAjB4hB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaunB,UAAU,iCADtBznB,OAAO,CAAC,YAAD,WAGHE,QAAQ,CAAC,CAAC4Q,IAAD,CAAD,WAGR5Q,QAAQ,CAAC,CAAC4Q,IAAD,CAAD,WAGR5Q,QAAQ,CAAC,CAAC8d,OAAD,CAAD;AAAW5d,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,oFAAA;;AAAAA,UAAAA,wFAAA;;AAAAA,UAAAA,uFAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,0FAAA;;AAAA3d,UAAAA,MASpBi4C,IAToB,GASC,IAAIhrC,QAAQ,CAACC,GAAb,EATD;AASmBlN,UAAAA,MAEvConB,OAFuC,GAE7B,KAF6B;AAExBpnB,UAAAA,MAEf8W,WAFe,SAAA;AAEJ9W,UAAAA,MAEXsC,KAFW,GAEH,CAFG;AAEFtC,UAAAA,MAET+/F,KAFS,GAEO,CAFP;AAEQ//F,UAAAA,MAEjByQ,OAFiB,GAEPoC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFK;AAEI,sBAAA;;;AAAA,yCAAA;;AAAA1S,QAAAA,OAErByL,KAFqB,GAErB,cAAA,GAAS;AACL,eAAK,IAAI/K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKy0D,KAAL,CAAWx0D,MAA/B,EAAuCD,CAAC,EAAxC,EACI,KAAKk/F,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAK,KAAKzqC,KAAL,CAAWz0D,CAAX,CAA/B;AACP,SALoB;;AAKpBV,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AACvB,eAAKxB,KAAL,IAAcwB,SAAd;;AACA,cAAI,KAAKxB,KAAL,GAAa,CAAjB,EAAoB;AAChB,iBAAKA,KAAL,GAAa,KAAKm/F,UAAlB;;AAEA,iBAAK,IAAI5gG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiM,GAAL,CAAShM,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AAEtC2P,cAAAA,IAAI,CAAC0/D,aAAL1/D,CAAmB,KAAKC,OAAxBD,EAAiC,KAAK1D,GAAL,CAASjM,CAAT,CAAjC2P,EAA8C,KAAKnH,IAAL,CAAUymF,WAAxDt/E;AACA,mBAAKC,OAAL,GAAe,KAAKA,OAAL,CAAawG,QAAb,CAAsB,KAAK5N,IAAL,CAAUwD,aAAhC,EAA+CyK,SAA/C,EAAf;AAEA,mBAAK2gC,IAAL,CAAU9+B,CAAV,CAAYhM,CAAZ,GAAgB,KAAKsD,OAAL,CAAatD,CAA7B,CALsC;;AAMtC,mBAAK8qC,IAAL,CAAU9+B,CAAV,CAAY/L,CAAZ,GAAgB,KAAKqD,OAAL,CAAarD,CAA7B,CANsC;;AAOtC,mBAAK6qC,IAAL,CAAU9+B,CAAV,CAAY9L,CAAZ,GAAgB,KAAKoD,OAAL,CAAapD,CAA7B,CAPsC;;AAStC,mBAAK4qC,IAAL,CAAU/+B,CAAV,CAAY/L,CAAZ,GAAgB,KAAKP,MAAL,CAAY/L,CAAZ,EAAesM,CAAf,GAAmB,KAAK9D,IAAL,CAAUwD,aAAV,CAAwBM,CAA3D;AACA,mBAAK8qC,IAAL,CAAU/+B,CAAV,CAAY9L,CAAZ,GAAgB,KAAKR,MAAL,CAAY/L,CAAZ,EAAeuM,CAAf,GAAmB,KAAK/D,IAAL,CAAUwD,aAAV,CAAwBO,CAA3D;AACA,mBAAK6qC,IAAL,CAAU/+B,CAAV,CAAY7L,CAAZ,GAAgB,KAAKT,MAAL,CAAY/L,CAAZ,EAAewM,CAAf,GAAmB,KAAKhE,IAAL,CAAUwD,aAAV,CAAwBQ,CAA3D;;AAEA,kBAAIK,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKuqC,IAA3CvqC,EAAiD,KAAKqyF,KAAtDryF,EAA6D,KAAKH,QAAlEG,CAAJ,EAAiF;AAC7E,oBAAMxE,GAAG,GAAGwE,aAAa,CAACC,QAAdD,CAAuBG,oBAAnC;AACA,qBAAKuZ,OAAL,GAAe,IAAf;AACA,qBAAKtQ,WAAL,GAAmB5N,GAAG,CAACue,QAAJve,CAAaG,IAAhC;AACA;AACH,eALD,MAKO;AACH,qBAAKyN,WAAL,GAAmB5V,SAAnB;;;;AAGR,iBAAKkmB,OAAL,GAAe,KAAf;;AAEP,SA/BA;;AA+BA,yBAAA;QA/D2B1b;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAG/B,EAH+B;;;AAG7BH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGC,EAHD;;;AAGGH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGH,EAHG;;qFAKVpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,GADJ;;mFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACE,CADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa4jB,WAAW,kCADvB9jB,OAAO,CAAC,aAAD,WAGHE,QAAQ,CAAC,CAAC8d,OAAD,CAAD,WAGR9d,QAAQ,CAAC8d,OAAD,WAGR9d,QAAQ,CAAC4Q,IAAD,WAOR5Q,QAAQ,CAAC4Q,IAAD;AAAM1Q,QAAAA,uCAAA;;AAAA,4BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,2FAAA;;AAAA3d,UAAAA,MAJf+/F,KAIe,GAJC,CAID;AAJE//F,UAAAA,MACjBi4C,IADiB,GACI,IAAIhrC,QAAQ,CAACC,GAAb,EADJ;AACsBlN,UAAAA,MACvC2a,QADuC,GAC5B9H,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,CAD0B;;AACb8K,UAAAA,4FAAA;;AAAA,sBAAA;;;AAAA,0CAAA;;AAAAxd,QAAAA,OAK1ByL,KAL0B,GAK1B,cAAA,GAAS;AACL,eAAK,IAAI/K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKy0D,KAAL,CAAWx0D,MAA/B,EAAuCD,CAAC,EAAxC,EACI,KAAKk/F,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAK,KAAKzqC,KAAL,CAAWz0D,CAAX,CAA/B;AACP,SARyB;;AAQzBV,QAAAA,OAED4kB,UAFC,GAED,mBAAA,CAAY9B,SAAZ,EAA6B;AAEzBhR,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgR,SAAnBhR,EAA8BgR,SAA9BhR;AACA,eAAKgR,SAAL,CAAe7V,CAAf,GAAmB,CAAnB;AACA,eAAK6V,SAAL,CAAe3L,SAAf;AAEArF,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgmC,IAAL,CAAU/+B,CAAxBjH,EAA2B,KAAKgR,SAAhChR;;AACA,eAAKgmC,IAAL,CAAU/+B,CAAV,CAAYhB,cAAZ,CAA2B,GAA3B;;AACA,eAAK+/B,IAAL,CAAU/+B,CAAV,CAAY7B,GAAZ,CAAgB,KAAKhO,IAAL,CAAUwD,aAA1B;;AACA,eAAKorC,IAAL,CAAU/+B,CAAV,CAAY9L,CAAZ,IAAiB,GAAjB;AACA,eAAK6qC,IAAL,CAAU9+B,CAAV,CAAY/L,CAAZ,GAAgB,CAAC,CAAjB;AACA,eAAK6qC,IAAL,CAAU9+B,CAAV,CAAYhM,CAAZ,GAAgB,CAAhB;AACA,eAAK8qC,IAAL,CAAU9+B,CAAV,CAAY9L,CAAZ,GAAgB,CAAhB;;AAEA,cAAIK,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKuqC,IAA3CvqC,EAAiD,KAAKqyF,KAAtDryF,EAA6D,KAAKH,QAAlEG,CAAJ,EAAiF;AAC7EuE,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK0I,QAAnB1I,EAA6BvE,aAAa,CAACC,QAAdD,CAAuBG,oBAAvBH,CAA4CiN,QAAzE1I;AACA,gBAAM6lE,gBAAgB,GAAGpgE,IAAI,CAACC,GAALD,CAAS,KAAKiD,QAAL,CAAcvN,CAAd,GAAkB,KAAK/D,IAAL,CAAUwD,aAAV,CAAwBO,CAAnDsK,CAAzB;;AACA,gBAAIogE,gBAAgB,GAAG,IAAvB,EAA6B;;AAEzB7lE,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK+S,UAAnB/S,EAA+B,KAAK0I,QAApC1I;AACA,mBAAK+S,UAAL,CAAgB/N,QAAhB,CAAyB,KAAK5N,IAAL,CAAUwD,aAAnC;AACA,qBAAO,IAAP;;;AAEJ,mBAAO,KAAP;AACH,WAVD,MAUO;AACHoF,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK0I,QAAnB1I,EAA6BzB,IAAI,CAAC0S,IAAlCjR;AACAA,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK+S,UAAnB/S,EAA+BzB,IAAI,CAAC0S,IAApCjR;AACA,mBAAO,KAAP;;AAGP,SAhCA;;AAgCA,0BAAA;QArD4BvG;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAG9B,EAH8B;;;AAG5BH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGC,CAHD;;;AAGEH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGAnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF;;;AAGWgM,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAOVnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPQ;;;;;;;;;;;;;;;;;;;;UCbhBmmB,QAAQ,uBAAG;AAClBwG,QAAAA,gBAAgB,EAAE,KADA;AAElB6M,QAAAA,UAAU,EAAE,KAFM;AAGlBC,QAAAA,UAAU,EAAE,KAHM;AAKlBpC,QAAAA,WAAW,EAAEhpC,SALK;AAMlBmmC,QAAAA,YAAY,EAAEnmC,SANI;AAQlB23B,QAAAA,cAAc,EAAE,KARE;AAUlB0mD,QAAAA,YAAY,EAAE,EAVI;AAYlBE,QAAAA,WAAW,EAAE;AAZK;AAetB7lD,MAAAA,UAAU,CAACk+D,UAAXl+D,GAAwBZ,QAAxBY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYA,UAAQl6B,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaoiG,QAAQ,+BADpBtiG,OAAO,CAAC,UAAD;AAAYI,QAAAA,oCAAA;;AAAA,yBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGhBiiG,SAHgB,SAAA;AAGPjiG,UAAAA,MAETkH,MAFS,GAEA,CAFA;AAEClH,UAAAA,MACVkiG,aADU,GACM,CADN;AACOliG,UAAAA,MAEjBmiG,WAFiB,GAEH,CAFG;AAEFniG,UAAAA,MACfoiG,kBADe,GACM,CADN;AACOpiG,UAAAA,MAEtBqiG,KAFsB,GAEd,KAFc;AAET,sBAAA;;;AAAA,uCAAA;;AAAAliG,QAAAA,OAGbyL,KAHa,GAGb,cAAA,GAAQ;AACJ,eAAKq2F,SAAL,GAAiB,KAAKp2F,YAAL,CAAkBopE,WAAlB,CAAjB;AACA,eAAKgtB,SAAL,CAAe/6F,MAAf,GAAwB,CAAxB;AACA,eAAK+6F,SAAL,CAAelwF,IAAf,GAAsB,IAAtB;;AACA,eAAKkwF,SAAL,CAAe93F,IAAf;AACH,SARY;;AAQZhK,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B;AAAA,2BAAA;;AAEtB,cAAMqR,MAAM,GAAG5M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAA9B;AAEA,cAAG,CAACD,MAAJ,EAAY;;AAEZ,cAAGA,MAAM,IAAIA,MAAM,QAAhBA,qBAAUA,MAAM,CAAE5U,cAAlB4U,IAAUmtF,cAAe/vF,SAAzB4C,IAAsC,CAACA,MAAM,CAACD,OAAjD,EAA0D;AACtD,gBAAG,KAAKmtF,KAAL,IAAc,KAAjB,EAAwB;AACpB,mBAAKA,KAAL,GAAa,IAAb;AACAn/F,cAAAA,GAAG,CAACC,IAAJD,CAAS,gBAATA,EAA2B,eAA3BA;;;AAEJ,iBAAKg/F,aAAL,GAAqBn7F,KAAK,CAAC4zB,WAA3B;AACA,iBAAKynE,kBAAL,GAA0B,GAA1B;AACH,WAPD,MAOK;AACD,gBAAG,KAAKC,KAAR,EAAc;AACV,mBAAKA,KAAL,GAAa,KAAb;AACAn/F,cAAAA,GAAG,CAACC,IAAJD,CAAS,iBAATA,EAA4B,eAA5BA;;;AAEJ,iBAAKg/F,aAAL,GAAqB,CAArB;AACA,iBAAKE,kBAAL,GAA0B,CAA1B;;;AAEJ,eAAKl7F,MAAL,GAAcmR,IAAI,CAAC8E,IAAL9E,CAAU,KAAKnR,MAAfmR,EAAuB,KAAK6pF,aAA5B7pF,EAA2CvU,SAA3CuU,CAAd;AACA,eAAK8pF,WAAL,GAAmB9pF,IAAI,CAAC8E,IAAL9E,CAAU,KAAK8pF,WAAf9pF,EAA4B,KAAK+pF,kBAAjC/pF,EAAqDvU,SAArDuU,CAAnB;AACA,eAAK4pF,SAAL,CAAgB/6F,MAAhB,GAAyB,KAAKA,MAA9B;AACAH,UAAAA,KAAK,CAACw7F,iBAANx7F,GAA0B,KAAKo7F,WAA/Bp7F;AACAA,UAAAA,KAAK,CAACY,SAANZ;AAEH,SA7BA;;AA6BA,uBAAA;QA/CyB2E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB9B,UAAQgpC,uBAAuB,GAAKjc,QAAQ,CAApCic,uBAAR;AACA,4BAAyDjK,QAAQ,CAACkK,KAAlE;AAAA,UAAQC,UAAU,mBAAVA,UAAR;AAAA,UAAoBC,SAAS,mBAATA,SAApB;AAAA,UAA+BC,WAAW,mBAAXA,WAA/B;AAAA,UAA4CC,QAAQ,mBAARA,QAA5C;AACA,UAAQ/Y,MAAM,GAAqDvE,GAAG,CAA9DuE,MAAR;AAAA,UAAgBC,MAAM,GAA6CxE,GAAG,CAAtDwE,MAAhB;AAAA,UAAwBC,OAAO,GAAoCzE,GAAG,CAA9CyE,OAAxB;AAAA,UAAiCC,YAAY,GAAsB1E,GAAG,CAArC0E,YAAjC;AAAA,UAA+CvE,KAAK,GAAeH,GAAG,CAAvBG,KAA/C;AAAA,UAAsDwE,QAAQ,GAAK3E,GAAG,CAAhB2E,QAAtD;AACA,UAAQb,UAAU,GAAmGC,SAAS,CAAtHD,UAAR;AAAA,UAAoBE,cAAc,GAAmFD,SAAS,CAA1GC,cAApB;AAAA,UAAoCC,UAAU,GAAuEF,SAAS,CAA1FE,UAApC;AAAA,UAAgDC,iBAAiB,GAAoDH,SAAS,CAA9EG,iBAAhD;AAAA,UAAmEC,SAAS,GAAyCJ,SAAS,CAA3DI,SAAnE;AAAA,UAA8EC,UAAU,GAA6BL,SAAS,CAAhDK,UAA9E;AAAA,UAA0FC,SAAS,GAAkBN,SAAS,CAApCM,SAA1F;AAAA,UAAqGC,WAAW,GAAKP,SAAS,CAAzBO,WAArG;AAEA,UAAQr8B,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa2jF,iBAAiB,wCAD7B7jF,OAAO,CAAC,mBAAD,WAIHE,QAAQ,CAAC;AAAE08B,QAAAA,QAAQ,EAAE;AAAZ,OAAD;AAAoBx8B,QAAAA,6CAAA;;AAAA,kCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAF7Bm3B,aAE6B,GAFb,aAEa;;AAFAxZ,UAAAA,qFAAA;;AAAAA,UAAAA,+FAAA;;AAAA3d,UAAAA,MAQ7BmqC,gBAR6B,GAQA,EARA;AAQE,sBAAA;;;AAAA,gDAAA;;AAAAhqC,QAAAA,OAE/B80C,eAF+B,GAE/B,wBAAA,CAAiBC,QAAjB,EACIvb,GADJ,EAEIzB,MAFJ,EAEmCid,KAFnC,EAEgEC,KAFhE,EAGI5b,KAHJ,EAG6B5a,MAH7B,EAGuD;AACnD,cAAMy2B,MAAM,GAAG1b,GAAG,CAAC0b,MAAnB;AACA,cAAMC,aAAa,GAAGJ,QAAtB;;AACA,cAAI,CAACvb,GAAG,CAAC+C,gBAAJ/C,CAAqB2b,aAArB3b,CAAL,EAA0C;AACtC,gBAAMiG,MAAM,GAAG8U,uBAAuB,CAACW,MAAD,CAAvBX,GAAkC1Y,MAAM,CAACuZ,IAAzCb,GAAgD1Y,MAAM,CAACiC,KAAtE;AACAtE,YAAAA,GAAG,CAACkD,eAAJlD,CAAoB2b,aAApB3b,EAAmCiG,MAAnCjG,EAA2CH,KAA3CG,EAAkD/a,MAAlD+a,EAA0DgC,iBAAiB,CAACmB,OAA5EnD;AACAA,YAAAA,GAAG,CAAC6b,eAAJ7b,CAAuB2b,aAAa,UAApC3b,EAA6CqC,MAAM,CAACwL,aAApD7N,EAAmEH,KAAnEG,EAA0E/a,MAA1E+a,EAAkFgC,iBAAiB,CAACmB,OAApGnD;;;AAEJ,cAAMR,IAAI,GAAGQ,GAAG,CAACoD,aAAJpD,CAAkBH,KAAlBG,EAAyB/a,MAAzB+a,EAAiC,SAAjCA,CAAb;AACAR,UAAAA,IAAI,CAACl4B,IAALk4B,GAAY+b,QAAZ/b;AAEAA,UAAAA,IAAI,CAACyE,aAALzE,CAAmBmc,aAAnBnc,EAAkC,IAAIoC,UAAJ,CAAe,GAAf,EAC9BG,UAAU,CAAC0B,KADmB,EACZ3B,cAAc,CAAC4B,aADH,EAE9BpB,MAAM,CAACqB,KAFuB,EAEhBpB,OAAO,CAACuB,KAFQ,EAG9BtB,YAAY,CAACuD,KAHiB,EAI9B,IAAI9H,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBM,MAAM,CAACwF,UAAPxF,CAAkByF,CAArC,CAJ8B,CAAlCxE;AAKAA,UAAAA,IAAI,CAACyE,aAALzE,CAAsBmc,aAAa,UAAnCnc,EAA4C,IAAIoC,UAAJ,CAAe,GAAf,EACxCG,UAAU,CAAC0B,KAD6B,EACtB3B,cAAc,CAAC+L,aADO,EAExCvL,MAAM,CAACqB,KAFiC,EAE1BpB,OAAO,CAACuZ,OAFkB,EAGxCtZ,YAAY,CAACqL,aAH2B,EAIxC,IAAI5P,KAAJ,CAAUM,MAAM,CAACwP,UAAjB,EAA6BxP,MAAM,CAACyP,YAApC,EAAkD,CAAlD,EAAqD,CAArD,CAJwC,CAA5CxO;AAKA,cAAMuc,IAAI,GAAGrc,aAAa,CAAC,IAAI5B,GAAG,CAACC,IAAR,EAAD,EAAeQ,MAAf,EAAuBsB,KAAvB,EAA8B5a,MAA9B,EAAsCu2B,KAAtC,EAA6CC,KAA7C,CAA1B;AACAjc,UAAAA,IAAI,CAACgH,WAALhH,CAAiB,IAAIiD,QAAJ,CAAasZ,IAAI,CAACvoC,CAAlB,EAAqBuoC,IAAI,CAACtoC,CAA1B,EAA6BsoC,IAAI,CAAClc,KAAlC,EAAyCkc,IAAI,CAAC92B,MAA9C,CAAjBua;AACA,cAAMwc,KAAK,GAAGxc,IAAI,CAAC0E,QAAL1E,CAAc2C,SAAS,CAACsM,aAAxBjP,CAAd;AACAwc,UAAAA,KAAK,CAACtN,gBAANsN,CAAuBzd,MAAvByd,EAA+B,IAAI/Z,SAAJ,CAAcuZ,KAAd,EAAqBC,KAArB,CAA/BO,EACI9Z,UAAU,CAAC+Z,aADfD;AAGa;AACT3c,YAAAA,QAAQ,CAACumD,YAATvmD,IAAyBkc,QAAzBlc;AACAG,YAAAA,IAAI,CAACqmD,UAALrmD,CAAgBH,QAAQ,CAACumD,YAAzBpmD,EAAuC,CAAvCA;;AAEP,SApC8B;;AAoC9Bh5B,QAAAA,OAEMu5B,MAFN,GAED,eAAA,CAAexB,MAAf,EAA8CyB,GAA9C,EAA6E;AACzE,cAAI,CAACb,WAAW,CAACqS,MAAjB,EAAyB;AACrB;;;AAGJnS,UAAAA,QAAQ,CAACkR,WAATlR,GAAuB,IAAvBA,CALyE;;AAQzE,cAAMP,QAAQ,GAAGkB,GAAjB;AACA,cAAMoc,UAAU,GAAGtd,QAAQ,CAACC,iBAATD,CAA2Bud,OAA9C,CATyE;;AAWzE,cAAMA,OAAO,GAAGrc,GAAG,CAACjB,iBAAJiB,CAAsBqc,OAAtC;;AACA,cAAI,CAACD,UAAU,CAACpiB,OAAZ,IAAuBoiB,UAAU,CAACx4B,IAAXw4B,KAAoBnB,UAAU,CAACwB,SAA1D,EAAqE;AACjE;WAbqE;;;;;;;;;;;;;;;;AA+BzE,eAAKjM,gBAAL,CAAsBrpC,MAAtB,GAA+B,CAA/B;AAEA,cAAMg/B,QAAQ,GAAG1H,iBAAiB,CAACF,MAAD,CAAlC;AACA,cAAMye,SAAS,GAAGze,MAAM,CAACyc,KAAPzc,CAAaye,SAA/B,CAlCyE;;AAqCzE,cAAMC,QAAQ,GAAGZ,OAAO,CAAC9f,IAAR8f,CAAa7oC,CAA9B;AACA,cAAM0pC,SAAS,GAAGb,OAAO,CAAC9f,IAAR8f,CAAa5oC,CAA/B;;AACA,cAAIupC,SAAS,IAAIA,SAAS,CAACN,aAA3B,EAA0C;AACtC,gBAAImsD,cAAc,uBAAqB1iE,QAAvC;AACA,iBAAKqK,gBAAL,CAAsB,CAAtB,IAA2Bq4D,cAA3B;;AACA,gBAAI7rD,SAAS,CAACI,eAAd,EAA+B;AAC3B,mBAAK9B,eAAL,CAAqB,KAAK9K,gBAAL,CAAsB,CAAtB,CAArB,EAA+CxQ,GAA/C,EACIzB,MADJ,EACYye,SADZ,EACuB,CADvB,EAC0BC,QAD1B,EACoCC,SADpC;AAEH,aAHD,MAGO;AACH,kBAAMG,QAAQ,GAAGve,QAAQ,CAACC,iBAATD,CAA2Bwe,YAA3Bxe,GAA0Cke,SAAS,CAACK,QAApDve,GAA+D,CAAhF;;AACA,mBAAK,IAAI53B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGm2C,QAApB,EAA8Bn2C,CAAC,EAA/B,EAAmC;AAC/B,qBAAKspC,gBAAL,CAAsBtpC,CAAtB,IAA2B2hG,cAA3B;AACA,qBAAKvtD,eAAL,CAAqB,KAAK9K,gBAAL,CAAsBtpC,CAAtB,CAArB,EAA+C84B,GAA/C,EACIzB,MADJ,EACYye,SADZ,EACuB91C,CADvB,EAC0B+1C,QAD1B,EACoCC,SADpC;;;WAjD6D;;;;;;;;AA8D5E,SAhEA;;AAgEA,gCAAA;QA7GkC7f;AAASnY,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAIrC,mBAJqC;;wFAM3Cpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACOyY,GAAG,CAACuE,MAAJvE,CAAWwG,KADlB;;;;;;;;;;;;;;;;;;;;;;;UCpBA77B,SAAS;AAAA,0BAAA;;AAAA,wCAAA;;AAAAjC,QAAAA,OAYXC,IAZW,GAYlB,aAAA,GAAc,CAAE,CAZE;;AAYFD,QAAAA,OAETomC,KAFS,GAEhB,cAAA,GAAe;AACXnkC,UAAAA,SAAS,CAACqgG,SAAVrgG,GAAsB,IAAtBA;AACH,SAJe;;AAIfosB,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KAZD,YAAA,GAA6B;AACzB,gBAAI,CAAC,KAAK8hG,SAAV,EAAqB;AACjB,mBAAKA,SAAL,GAAiB,IAAI,IAAJ,EAAjB;;;AAGJ,mBAAO,KAAKA,SAAZ;;WAOH;;AANA,wBAAA;;AAVQrgG,MAAAA,SAAS,CAEHqgG,SAFNrgG,GAEuB,IAFvBA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,UAAQ1C,OAAO,GAAwBC,UAAU,CAAzCD,OAAR;AAAA,UAAiBkhC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAAjB;UAIa8hE,GAAG,0BAFfhjG,OAAO,CAAC,YAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,+BAAA;;AAAA,oBAAA;AAAA,0DAAA;;;AAAA,kCAAA;;AAAAK,QAAAA,OAEdyL,KAFc,GAEd,cAAA,GAAS;AACL,cAAIqiC,EAAE,GAAG,KAAKpiC,YAAL,CAAkBmiC,YAAlB,CAAT;AAEA,cAAI20D,MAAM,GAAGpqE,QAAQ,CAAC4xB,QAAT5xB,GAAoBqqE,OAApBrqE,CAA4BoqE,MAAzC;AACA10D,UAAAA,EAAE,CAAC1R,QAAH0R,CAAYhO,WAAZgO,CAAwB,QAAxBA,EAAkC00D,MAAM,CAACE,aAAPF,IAAwBA,MAAM,CAACG,MAAjE70D;AACH,SAPa;;AAOb,kBAAA;QANoBviC,UADP,CAAjBk1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGamjG,QAAQ,+BADpBrjG,OAAO,CAAC,UAAD;AAAYI,QAAAA,oCAAA;;AAAA,yBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAEhB6P,GAFgB,GAEJgD,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFE;AAEO7S,UAAAA,MACvBgjG,KADuB,GACT9sC,EAAE,CAAC,CAAD,EAAI,CAAJ,CADO;AACDl2D,UAAAA,MACtBupE,KADsB,GACR9mE,MAAM,CAACC,MAAPD,CAAc,IAAdA,CADQ;AACWzC,UAAAA,MACjCijG,MADiC,GACXxgG,MAAM,CAACC,MAAPD,CAAc,IAAdA,CADW;AACQzC,UAAAA,MAEzCk2B,IAFyC,GAE5BggC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAF0B;AAEpBl2D,UAAAA,MACrBkjG,KADqB,GACL,CADK;AACJljG,UAAAA,MACjBmjG,KADiB,GACD,CADC;AACAnjG,UAAAA,MAEjBojG,EAFiB,GAEJ,CAFI;AAEHpjG,UAAAA,MACdqjG,EADc,GACD,CADC;AACArjG,UAAAA,MAEd4hB,QAFc,GAEKnf,MAAM,CAACC,MAAPD,CAAc,IAAdA,CAFL;AAEwB,sBAAA;;;AAAA,uCAAA;;AAAAtC,QAAAA,OAEtCyL,KAFsC,GAEtC,cAAA,GAAQ;AAEJ,eAAKvC,IAAL,CAAUrG,EAAV,CAAasa,IAAI,CAAC6V,SAAL7V,CAAe84C,UAA5B,EAAwC,KAAKhiD,MAA7C,EAAqD,IAArD;AACA,eAAKm1D,KAAL,GAAa,KAAKlgE,IAAL,CAAUuY,QAAV,CAAmB,CAAnB,EAAsBA,QAAtB,CAA+B,CAA/B,CAAb;AACA,eAAKA,QAAL,GAAgB,KAAK2nD,KAAL,CAAW3nD,QAA3B;AACA,eAAKqhF,MAAL,GAAc,KAAK55F,IAAL,CAAUwC,YAAV,CAAuB05E,WAAvB,CAAd;AACA,eAAKrvD,IAAL,CAAU/oB,CAAV,GAAc,KAAK81F,MAAL,CAAYK,WAAZ,CAAwBn2F,CAAtC;AACA,eAAK+oB,IAAL,CAAU9oB,CAAV,GAAc,KAAK61F,MAAL,CAAYK,WAAZ,CAAwBl2F,CAAtC;AAEA,eAAK81F,KAAL,GAAa,KAAKhtE,IAAL,CAAU/oB,CAAV,GAAc,CAA3B;AACA,eAAKg2F,KAAL,GAAa,KAAKjtE,IAAL,CAAU9oB,CAAV,GAAc,CAA3B;AAEA,eAAKuyB,GAAL,CAAS;AAAExyB,YAAAA,CAAC,EAAEuK,IAAI,CAACnD,MAALmD,EAAL;AAAoBtK,YAAAA,CAAC,EAAEsK,IAAI,CAACnD,MAALmD;AAAvB,WAAT;AACH,SAfqC;;AAerCvX,QAAAA,OAEDw/B,GAFC,GAED,YAAA,CAAIv+B,KAAJ,EAAqB;AACjB,eAAKyO,GAAL,CAAS1C,CAAT,GAAa,KAAK+oB,IAAL,CAAU/oB,CAAV,GAAc/L,KAAK,CAAC+L,CAApB,GAAwB,KAAK+1F,KAA1C;AACA,eAAKrzF,GAAL,CAASzC,CAAT,GAAa,KAAK8oB,IAAL,CAAU9oB,CAAV,GAAchM,KAAK,CAACgM,CAApB,GAAwB,KAAK+1F,KAA1C;AACA,eAAK55B,KAAL,CAAW9gE,WAAX,CAAuB,KAAKoH,GAA5B;AACH,SANA;;AAMA1P,QAAAA,OAEDiU,MAFC,GAED,eAAA,CAAOgnB,KAAP,EAA0B;AAEtB,cAAIoY,KAAK,GAAGpY,KAAK,CAACmoE,UAANnoE,EAAZ;AACA,cAAIooE,EAAE,GAAGhwD,KAAK,CAACrmC,CAAf;AACA,cAAIs2F,EAAE,GAAGjwD,KAAK,CAACpmC,CAAf;AAEA,eAAKyC,GAAL,CAAS1C,CAAT,IAAcq2F,EAAd;AACA,eAAK3zF,GAAL,CAASzC,CAAT,IAAcq2F,EAAd;AAEA,eAAK5zF,GAAL,CAAS1C,CAAT,IAAc,KAAK+1F,KAAnB;AACA,eAAKrzF,GAAL,CAASzC,CAAT,IAAc,KAAK+1F,KAAnB;AACA,eAAKtzF,GAAL,CAAS1C,CAAT,IAAc,KAAK+oB,IAAL,CAAU/oB,CAAxB;AACA,eAAK0C,GAAL,CAASzC,CAAT,IAAc,KAAK8oB,IAAL,CAAU9oB,CAAxB;AAEA,eAAKg2F,EAAL,GAAU,KAAKvzF,GAAL,CAAS1C,CAAT,GAAa,KAAK+oB,IAAL,CAAU/oB,CAAjC;AACA,eAAKk2F,EAAL,GAAU,KAAKxzF,GAAL,CAASzC,CAAT,GAAa,KAAK8oB,IAAL,CAAU9oB,CAAjC;AAEA,eAAKg2F,EAAL,GAAU,KAAKA,EAAL,GAAU,CAAV,GAAc,IAAI,KAAKA,EAAvB,GAA4B,KAAKA,EAA3C;AACA,eAAKC,EAAL,GAAU,KAAKA,EAAL,GAAU,CAAV,GAAc,IAAI,KAAKA,EAAvB,GAA4B,KAAKA,EAA3C;AAEA,eAAKxzF,GAAL,CAAS1C,CAAT,IAAc,KAAK+1F,KAAnB;AACA,eAAKrzF,GAAL,CAASzC,CAAT,IAAc,KAAK+1F,KAAnB;AACA,eAAK55B,KAAL,CAAW9gE,WAAX,CAAuB,KAAKoH,GAA5B;AACH,SAzBA;;AAyBA1P,QAAAA,OAEDujG,UAFC,GAED,mBAAA,GAAuB;AACnB,iBAAO;AAAEv2F,YAAAA,CAAC,EAAE,KAAKi2F,EAAV;AAAch2F,YAAAA,CAAC,EAAE,KAAKi2F;AAAtB,WAAP;AACH,SAJA;;AAIA,uBAAA;QA/DyB33F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF9B,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaoiC,YAAY,mCADxBtiC,OAAO,CAAC,cAAD;AAAgBI,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,uFAAA;;AAAAA,UAAAA,sFAAA;;AAAA3d,UAAAA,MASpB6P,GAToB,GASRgD,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CATM;AASG7S,UAAAA,MAEvBiE,GAFuB,GAEX4O,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFS;AAEA7S,UAAAA,MAEvBkwB,MAFuB,GAEN,CAFM;AAELlwB,UAAAA,MAElB2jG,QAFkB,GAEC,CAFD;AAEE3jG,UAAAA,MAEpBigG,QAFoB,GAEHptF,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFC;AAEQ,sBAAA;;;AAAA,2CAAA;;;;;;;;;;;;;AAE5B1S,QAAAA,OAYAC,IAZA,GAYA,aAAA,GAAO;AACH6R,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKpC,GAAnBoC,EAAwB,KAAK5I,IAAL,CAAU4U,QAAlChM;AACAA,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKguF,QAAnBhuF,EAA6B,KAAKpC,GAAlCoC;AACA,eAAKpC,GAAL,CAASxC,CAAT,GAAa,KAAK6iB,MAAL,GAAc,KAAK+vE,QAAL,CAAc5yF,CAAzC;AACA4E,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKhO,GAAnBgO,EAAwB,KAAKpC,GAA7BoC;AACA,eAAKhO,GAAL,CAASoJ,CAAT,GAAa,EAAb;AACA,eAAKwC,GAAL,CAASxC,CAAT,GAAa,EAAb;AACA,eAAKhE,IAAL,CAAUZ,WAAV,CAAsB,KAAKxE,GAA3B;AACAf,UAAAA,GAAG,CAACF,EAAJE,CAAO,cAAPA,EAAuB,KAAK0gG,UAAL,CAAgB5iF,IAAhB,CAAqB,IAArB,CAAvB9d;AACH,SArBD;;AAqBC/C,QAAAA,OAEDoR,SAFC,GAED,kBAAA,GAAa;AACTrO,UAAAA,GAAG,CAACE,GAAJF,CAAQ,cAARA,EAAwB,KAAKi/B,SAAL,CAAenhB,IAAf,CAAoB,IAApB,CAAxB9d;AACH,SAJA;;AAIA/C,QAAAA,OAEDgiC,SAFC,GAED,kBAAA,CAAWjS,MAAX,EAA2B;AACvB,eAAKA,MAAL,GAAcA,MAAd;AACA,eAAKrgB,GAAL,CAASxC,CAAT,GAAa,KAAK6iB,MAAL,GAAc,KAAK+vE,QAAL,CAAc5yF,CAAzC;AAEH,SANA;;AAMAlN,QAAAA,OAEDyjG,UAFC,GAED,mBAAA,CAAY1zE,MAAZ,EAA4B;AACxB,eAAKrgB,GAAL,CAAS1C,CAAT,GAAa+iB,MAAM,GAAG,KAAK+vE,QAAL,CAAc9yF,CAApC;AACH,SAJA;;AAIAhN,QAAAA,OAEDsiB,UAFC,GAED,mBAAA,CAAY3e,SAAZ,EAA+B;AAC3B,cAAI,KAAK+/F,IAAL,GAAY,CAAhB,EAAmB;AACf,iBAAKA,IAAL,IAAa//F,SAAb;AACA;;;AAEJ,eAAKggG,UAAL,CAAgBhgG,SAAhB;AACH,SARA;;AAQA3D,QAAAA,OAED2jG,UAFC,GAED,mBAAA,CAAYhgG,SAAZ,EAA+B;AAC3B0M,UAAAA,IAAI,CAAC2M,IAAL3M,CAAU,KAAKvM,GAAfuM,EAAoB,KAAKvM,GAAzBuM,EAA8B,KAAKX,GAAnCW,EAAwC1M,SAAS,GAAG,KAAKw+B,MAAzD9xB;AACA,eAAKnH,IAAL,CAAUZ,WAAV,CAAsB,KAAKxE,GAA3B;AACH,SALA;;AAKA,2BAAA;QAlE6ByH,mFAE7B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACQ,GADR;;+EAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACM,CADN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGamkG,UAAU,iCADtBrkG,OAAO,CAAC,YAAD,WAGHE,QAAQ,CAACq3B,QAAD;AAAUn3B,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,yFAAA;;AAAA,sBAAA;;;AAAA,yCAAA;;AAAAxd,QAAAA,OAGnB0gC,QAHmB,GAGnB,iBAAA,GAAY;AACR95B,UAAAA,KAAK,CAACi9F,MAANj9F,CAAa,KAAKsC,IAAlBtC,EAAwB,KAAKk9F,QAA7Bl9F;AACH,SALkB;;AAKlB,yBAAA;QAP2B2E;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFzC,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaskG,eAAe,sCAD3BxkG,OAAO,CAAC,iBAAD,WAGHE,QAAQ,CAACq3B,QAAD;AAAUn3B,QAAAA,2CAAA;;AAAA,gCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,yFAAA;;AAAAA,UAAAA,iGAAA;;AAAAA,UAAAA,8FAAA;;AAAAA,UAAAA,2FAAA;;AAAAA,UAAAA,2FAAA;;AAAAA,UAAAA,+FAAA;;AAAAA,UAAAA,4FAAA;;AAAA3d,UAAAA,MAqBnBmkG,YArBmB,GAqBS1hG,MAAM,CAACC,MAAPD,CAAc,IAAdA,CArBT;AAqB4BzC,UAAAA,MAE/CokG,iBAF+C,GAE3B,CAF2B;AAE1BpkG,UAAAA,MAErBqkG,OAFqB,GAEX,CAFW;AAEV,sBAAA;;;AAAA,8CAAA;;AAAAlkG,QAAAA,OAEXoL,SAFW,GAEX,kBAAA,GAAa;AACT,eAAK44F,YAAL,GAAoB,KAAK96F,IAAL,CAAUwB,YAAV,CAAuBoqE,WAAvB,CAApB;AACAluE,UAAAA,KAAK,CAACi9F,MAANj9F,CAAa,KAAKsC,IAAlBtC,EAAwB,KAAKk9F,QAA7Bl9F;;AACA,cAAI,KAAKu9F,aAAT,EAAwB;AACpB,gBAAI1lF,MAAM,GAAG,KAAKvV,IAAL,CAAUwD,aAAV,CAAwBO,CAArC;AACA,gBAAIwR,MAAM,GAAG,KAAK2lF,UAAlB,EAA8B3lF,MAAM,GAAG,KAAK2lF,UAAd3lF;AAC9B,iBAAKylF,OAAL,GAAezlF,MAAM,GAAG,KAAK2lF,UAA7B;AACA,gBAAI,KAAKF,OAAL,GAAe,KAAKG,SAAxB,EAAmC,KAAKH,OAAL,GAAe,KAAKG,SAApB;AACnC,gBAAI,KAAKH,OAAL,GAAe,KAAKI,SAAxB,EAAmC,KAAKJ,OAAL,GAAe,KAAKI,SAApB;;AAE1C,SAZU;;AAYVtkG,QAAAA,OAED0gC,QAFC,GAED,iBAAA,GAAY;AACR,eAAKsjE,YAAL,CAAkBh6F,IAAlB;AACH,SAJA;;AAIAhK,QAAAA,OAED2gC,SAFC,GAED,kBAAA,GAAa;AACT,eAAKqjE,YAAL,CAAkBpvF,IAAlB;AACH,SAJA;;AAIA5U,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;;;;;;;;AAU1B,SAZA;;AAYA,8BAAA;QA3DgC4H;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;0FAKzCpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACkB,KADlB;;uFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACM,CADN;;oFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,GADH;;oFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,GADH;;wFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACgB,KADhB;;qFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,EADJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAjY,KAAK;AAAA,sBAAA;;AAAAA,QAAAA,MAoBA3G,IApBA,GAoBd,aAAA,GAA4B;AAAA,mCAAA,wBAAA,CAAA;;;AAGxB,cAAM0b,MAAM,GAAGlZ,QAAQ,CAAClC,QAATkC,CAAkBuF,SAAlBvF,CAA4B,OAA5BA,CAAf;AAEA,cAAM8hG,SAAS,GAAGr8F,GAAG,CAACC,IAAJD,CAASyT,MAATzT,EAAiBS,IAAI,CAACpI,QAALoI,CAAcC,SAA/BV,CAAlB;AACA,eAAK45F,SAAL,4BAAiByC,SAAS,CAACp7F,cAAVo7F,CAAyB,KAAzBA,sBAAAC,sBAAiC94F,YAAjC,CAA8CopE,WAA9C,CAAjB;AACA,eAAK2vB,SAAL,6BAAiBF,SAAS,CAACp7F,cAAVo7F,CAAyB,KAAzBA,sBAAAG,uBAAiCh5F,YAAjC,CAA8CopE,WAA9C,CAAjB,CAPwB;;AAUxB,eAAK6vB,SAAL,GAAiBJ,SAAS,CAACp7F,cAAVo7F,CAAyB,WAAzBA,CAAjB;AACA,eAAKK,eAAL,GAAuBL,SAAS,CAACp7F,cAAVo7F,CAAyB,UAAzBA,CAAvB;;AACA,eAAK,IAAI7jG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmkG,gBAAzB,EAA2CnkG,CAAC,EAA5C,EAAgD,KAAKokG,OAAL,GAZxB;;;AAexB,cAAI/9F,MAAM,GAAGzG,IAAI,CAACC,QAALD,CAAcE,GAAdF,CAAkB,YAAlBA,CAAb;AACA,cAAIyG,MAAM,KAAKhG,SAAf,EAA0BgG,MAAM,GAAG,CAATA;AAC1B,eAAKyzB,WAAL,GAAmBzzB,MAAnB,CAjBwB;;AAoBxB,cAAI0zB,WAAW,GAAGn6B,IAAI,CAACC,QAALD,CAAcE,GAAdF,CAAkB,kBAAlBA,CAAlB;AACA,cAAIm6B,WAAW,KAAK15B,SAApB,EAA+B05B,WAAW,GAAG,CAAdA;AAC/B,eAAKA,WAAL,GAAmBA,WAAnB;AAEA,eAAKsqE,OAAL;AAEAhiG,UAAAA,GAAG,CAACF,EAAJE,CAAO,WAAPA,EAAoB,KAAKiiG,SAAL,CAAenkF,IAAf,CAAoB,IAApB,CAApB9d;AACAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,WAAPA,EAAoB,KAAKkiG,cAAL,CAAoBpkF,IAApB,CAAyB,IAAzB,CAApB9d;AAEAA,UAAAA,GAAG,CAAC8d,IAAJ9d,CAAS,YAATA,EAAuB,KAAKw4E,MAA5Bx4E,EAAoC,IAApCA;AACAA,UAAAA,GAAG,CAAC8d,IAAJ9d,CAAS,gBAATA,EAA2B,KAAKmiG,SAAhCniG,EAA2C,IAA3CA;AACH,SAnDa;;AAmDb6D,QAAAA,MAEck+F,OAFd,GAED,gBAAA,GAA0B;AACtB,cAAIhpD,OAAO,GAAG5zC,GAAG,CAACgX,QAAJhX,CAAa,KAAK08F,eAAlB18F,EAAmC,KAAKy8F,SAAxCz8F,CAAd;;AACA,eAAKi8E,KAAL,CAAWrhF,IAAX,CAAgBg5C,OAAO,CAACpwC,YAARowC,CAAqBg5B,WAArBh5B,CAAhB;AACH,SALA;;AAKAl1C,QAAAA,MAEao+F,SAFb,GAED,kBAAA,CAAyBj+F,MAAzB,EAAyC;AACrC,eAAKyzB,WAAL,GAAmBzzB,MAAnB;AACA,eAAK+6F,SAAL,CAAe/6F,MAAf,GAAwB,KAAKyzB,WAA7B;AACAl6B,UAAAA,IAAI,CAACC,QAALD,CAAck/B,GAAdl/B,CAAkB,YAAlBA,EAAgCyG,MAAhCzG;AACH,SANA;;AAMAsG,QAAAA,MAEaq+F,cAFb,GAED,uBAAA,CAA8Bl+F,MAA9B,EAA8C;AAC1C,eAAK0zB,WAAL,GAAmB1zB,MAAnB;AACA,eAAK09F,SAAL,CAAe19F,MAAf,GAAwB,KAAK0zB,WAA7B;AACAn6B,UAAAA,IAAI,CAACC,QAALD,CAAck/B,GAAdl/B,CAAkB,kBAAlBA,EAAsCyG,MAAtCzG;AACH,SANA;;AAMAsG,QAAAA,MAEcm+F,OAFd,GAED,gBAAA,GAA0B;AACtB,eAAKjD,SAAL,CAAe/6F,MAAf,GAAwB,KAAKyzB,WAA7B;AACA,eAAKiqE,SAAL,CAAe19F,MAAf,GAAwB,KAAK0zB,WAA7B;AACH,SALA;;AAKA7zB,QAAAA,MAEaI,QAFb,GAED,iBAAA,CAAwBtF,GAAxB,EAAqCyjG,cAArC,EAAyE;AAAA,0BAAA;;AAAA,cAApCA,cAAsB,WAAc;AAApCA,YAAAA,cAAsB,GAAG,CAAzBA;WAAoC;;;AAGrE,cAAIh2F,KAAK,GAAG,CAAC,CAAb;;AACA,eAAK,IAAIzO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKyjF,KAAL,CAAWxjF,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAI,KAAKyjF,KAAL,CAAWzjF,CAAX,EAAcq0E,IAAd,KAAuB,IAA3B,EAAiC;AAC7B5lE,cAAAA,KAAK,GAAGzO,CAARyO;AACA;;WAP6D;;;AAYrE,cAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,iBAAK21F,OAAL;AACA31F,YAAAA,KAAK,GAAG,KAAKg1E,KAAL,CAAWxjF,MAAX,GAAoB,CAA5BwO;;;AAGJjH,UAAAA,GAAG,CAACgyF,SAAJhyF,YAAuBxG,GAAvBwG,EAA8B,UAACyoC,GAAD,EAAM5oC,KAAN,EAAgB;AAC1C,gBAAI4oC,GAAJ,EAAS;AACL,oBAAM,IAAIzsC,KAAJ,0CAAiDxC,GAAjD,CAAN;;;AAEJ,gBAAIqG,KAAJ,EAAW;AACPlI,cAAAA,KAAI,CAACskF,KAAL,CAAWh1E,KAAX,EAAkB4lE,IAAlB,GAAyBhtE,KAAzB;AACAlI,cAAAA,KAAI,CAACskF,KAAL,CAAWh1E,KAAX,EAAkBpI,MAAlB,GAA2BlH,KAAI,CAAC26B,WAAL,GAAmB2qE,cAA9C;AACAtlG,cAAAA,KAAI,CAACskF,KAAL,CAAWh1E,KAAX,EAAkByC,IAAlB,GAAyB,IAAzB;;AACA/R,cAAAA,KAAI,CAACskF,KAAL,CAAWh1E,KAAX,EAAkBnF,IAAlB;;AAEP,WAVD9B;AAYA,iBAAOiH,KAAP;AAEH,SAjCA;;AAiCAvI,QAAAA,MAEaM,MAFb,GAED,eAAA,CAAsBiI,KAAtB,EAA2C;AACvC,eAAKg1E,KAAL,CAAWh1E,KAAX,EAAkByF,IAAlB;;AACA,eAAKuvE,KAAL,CAAWh1E,KAAX,EAAkByC,IAAlB,GAAyB,KAAzB;AACA,eAAKuyE,KAAL,CAAWh1E,KAAX,EAAkB4lE,IAAlB,GAAyB,IAAzB;AACH,SANA;;AAMAnuE,QAAAA,MAEa/D,EAFb,GAED,WAAA,CAAkBnB,GAAlB,EAA+ByjG,cAA/B,EAAiE;AAAA,2BAAA;;AAAA,cAAlCA,cAAsB,WAAY;AAAlCA,YAAAA,cAAsB,GAAG,CAAzBA;;;AAC3Bj9F,UAAAA,GAAG,CAACgyF,SAAJhyF,YAAuBxG,GAAvBwG,EAA8B,UAACyoC,GAAD,EAAM5oC,KAAN,EAAgB;AAC1C,gBAAIA,KAAJ,EAAW;AACP7C,cAAAA,MAAI,CAAC48F,SAAL,CAAesD,WAAf,CAA2Br9F,KAA3B,EAAkC7C,MAAI,CAACs1B,WAAL,GAAmB2qE,cAAnB,GAAoCjgG,MAAI,CAACk9F,iBAA3E;;AAEP,WAJDl6F;AAKH,SARA;;AAQAtB,QAAAA,MAEai9F,MAFb,GAED,eAAA,CAAsB36F,IAAtB,EAAkCxH,GAAlC,EAA+CqF,MAA/C,EAAmE;AAAA,2BAAA;;AAAA,cAApBA,MAAc,WAAM;AAApBA,YAAAA,MAAc,GAAG,CAAjBA;;;AAC3CmB,UAAAA,GAAG,CAACgyF,SAAJhyF,YAAuBxG,GAAvBwG,EAA8B,UAACyoC,GAAD,EAAM5oC,KAAN,EAAgB;AAC1C,gBAAI4oC,GAAJ,EAAS;AACL,oBAAM,IAAIzsC,KAAJ,0CAAiDxC,GAAjD,CAAN;;;AAEJ,gBAAIqG,KAAJ,EAAW;AACP,kBAAI,CAACmB,IAAI,CAACm8F,OAAV,EAAmB;AACnB,kBAAI3uE,MAAM,GAAGxtB,IAAI,CAACwC,YAALxC,CAAkB4rE,WAAlB5rE,CAAb;AACAwtB,cAAAA,MAAM,CAACq+C,IAAPr+C,GAAc3uB,KAAd2uB;AACAA,cAAAA,MAAM,CAAC9kB,IAAP8kB,GAAc,IAAdA;AACAA,cAAAA,MAAM,CAAC3vB,MAAP2vB,GAAgB3vB,MAAM,GAAGtB,MAAI,CAAC6/F,WAA9B5uE;;AAEP,WAXDxuB;AAYH,SAfA;;AAeAtB,QAAAA,MAEa3D,GAFb,GAED,YAAA,CAAmBvB,GAAnB,EAAgC,CAE/B,CAJA;;AAIAkF,QAAAA,MAEaQ,KAFb,GAED,cAAA,CAAqB1F,GAArB,EAAwC;AAAA,2BAAA;;AAEpC,cAAI,KAAK6jG,cAAL,IAAuB7jG,GAA3B,EAAgC;AAChC,eAAK6jG,cAAL,GAAsB7jG,GAAtB;AAEAwG,UAAAA,GAAG,CAACgyF,SAAJhyF,YAAuBxG,GAAvBwG,EAA8B,UAACyoC,GAAD,EAAM5oC,KAAN,EAAgB;AAC1C,gBAAI4oC,GAAJ,EAAS;AACL,oBAAM,IAAIzsC,KAAJ,0CAAiDxC,GAAjD,CAAN;;;AAEJ,gBAAIqG,KAAJ,EAAW;AACPlC,cAAAA,MAAI,CAAC4+F,SAAL,CAAe7vF,IAAf;;AACA/O,cAAAA,MAAI,CAAC4+F,SAAL,CAAe1vB,IAAf,GAAsBhtE,KAAtB;AACAlC,cAAAA,MAAI,CAAC4+F,SAAL,CAAe7yF,IAAf,GAAsB,IAAtB;AACA/L,cAAAA,MAAI,CAAC4+F,SAAL,CAAe19F,MAAf,GAAwBlB,MAAI,CAAC40B,WAA7B;;AACA50B,cAAAA,MAAI,CAAC4+F,SAAL,CAAez6F,IAAf;;AAEP,WAXD9B;AAYH,SAnBA;;AAmBAtB,QAAAA,MAEaU,MAFb,GAED,eAAA,CAAsB5F,GAAtB,EAAyC;AACrC,eAAK+iG,SAAL,CAAe7vF,IAAf;;AACA,eAAK6vF,SAAL,CAAe1vB,IAAf,GAAsB,IAAtB;AACA,eAAK0vB,SAAL,CAAe7yF,IAAf,GAAsB,KAAtB;AACA,eAAK2zF,cAAL,GAAsB,EAAtB;AAEH,SARA;;AAQA3+F,QAAAA,MAEaY,SAFb,GAED,kBAAA,GAA2B;AACvB,eAAKi9F,SAAL,CAAe19F,MAAf,GAAwB,KAAK0zB,WAAL,GAAmB,KAAK2nE,iBAAhD;AACH,SAJA;;AAIAx7F,QAAAA,MAEa4+F,QAFb,GAED,iBAAA,GAAgC;AAC5B,eAAKf,SAAL,CAAe37B,KAAf;AACH,SAJA;;AAIAliE,QAAAA,MAEa20E,MAFb,GAED,eAAA,GAAwB;AACpB,eAAK+pB,WAAL,GAAmB,CAAnB;AACH,SAJA;;AAIA1+F,QAAAA,MAEas+F,SAFb,GAED,kBAAA,GAA2B;AACvB,eAAKI,WAAL,GAAmB,CAAnB;AACH,SAJA;;AAIA,oBAAA;;AAtLQ1+F,MAAAA,KAAK,CAECk7F,SAFNl7F,SAAAA;AAAAA,MAAAA,KAAK,CAGC69F,SAHN79F,SAAAA;AAAAA,MAAAA,KAAK,CAKA4zB,WALL5zB,GAK2B,GAL3BA;AAAAA,MAAAA,KAAK,CAOA6zB,WAPL7zB,GAO2B,CAP3BA;AAAAA,MAAAA,KAAK,CASAw7F,iBATLx7F,GASiC,CATjCA;AAAAA,MAAAA,KAAK,CAWA0+F,WAXL1+F,GAWmB,CAXnBA;AAAAA,MAAAA,KAAK,CAYAi+F,gBAZLj+F,GAYwB,EAZxBA;AAAAA,MAAAA,KAAK,CAaAu9E,KAbLv9E,GAa4B,EAb5BA;AAAAA,MAAAA,KAAK,CAeCg+F,eAfNh+F,SAAAA;AAAAA,MAAAA,KAAK,CAgBC+9F,SAhBN/9F,SAAAA;AAAAA,MAAAA,KAAK,CAkBC2+F,cAlBN3+F,GAkBuB,EAlBvBA;;;;;;;;;;;;;;;;;;;;;;;;;;;8EC1Bb;;;AACA,UAAuB+xB,WAAW,CAACs1B,OAAnC,EAA4C;AAAA,YAyFzBhuD,IAAI;AAAA,gFAAnB,gBAAA;AAAA,2BAAA,SAAA;AAAA;AAAA,sBAAA;AAAA,sBAAA;AAAAkxC,kBAAAA,aAAA,IAAA;AAAA,yBACUZ,OAAO,CAAC2sC,GAAR3sC,CAAY,CACd,IAAIA,OAAJ,CAAY,UAAAC,OAAA,EAAW;AACnBi1D,oBAAAA,YAAY,CAACC,MAAbD,CAAoBE,OAApBF,CAA4B,YAAY;AACpCj1D,sBAAAA,OAAO,CAAC,IAAD,CAAPA;AACH,qBAFDi1D;AAGH,mBAJD,CADc,EAMd,IAAIl1D,OAAJ,CAAY,UAAAC,OAAA,EAAW;AACnBxgC,oBAAAA,IAAI,CAACnN,EAALmN,CAAQrH,IAAI,CAACwgD,iBAAbn5C,EAAgC,YAAM;AAClCwgC,sBAAAA,OAAO,CAAC,IAAD,CAAPA;AACH,qBAFDxgC;AAGH,mBAJD,CANc,CAAZugC,CADV;;AAYM,sBAAA;AAEEq1D,kBAAAA,WAAW,GAAG,IAAdA;AAEA33C,kBAAAA,OAAY,GAAG,IAAIx0B,UAAU,CAACosE,OAAXpsE,CAAmBqsE,OAAvB,EAAf73C;AACJA,kBAAAA,OAAO,CAAC23C,WAAR33C,GAAsB23C,WAAtB33C;AACAA,kBAAAA,OAAO,CAAC83C,OAAR93C,CAAgB+3C,wBAAhB/3C,CAAyC,uBAAzCA,EAAkE70B,MAAlE60B;AACAA,kBAAAA,OAAO,CAACg4C,SAARh4C,CAAkBltD,SAAlBktD,EAA6BltD,SAA7BktD,EAAwC,KAAxCA,EAA+C,KAA/CA;AACAA,kBAAAA,OAAO,CAACi4C,SAARj4C,CAAkBj+C,IAAI,CAACi8B,MAAvBgiB;AACAx0B,kBAAAA,UAAU,CAACosE,OAAXpsE,CAAmBqsE,OAAnBrsE,CAA2B0sE,0BAA3B1sE,CAAsDzpB,IAAI,CAACi8B,MAA3DxS;AAEAA,kBAAAA,UAAU,CAACw0B,OAAXx0B,GAAqBw0B,OAArBx0B;AACAA,kBAAAA,UAAU,CAAC2sE,GAAX3sE,GAAiBL,MAAM,CAACitE,qBAAxB5sE;AACCzpB,kBAAAA,IAAI,CAASs2F,MAAbt2F,CAAoBu2F,IAApBv2F,GAA2BypB,UAAU,CAAC2sE,GAAtCp2F;;AAEDi+C,kBAAAA,OAAO,CAACu4C,OAARv4C,GAAkB,YAAY;AAC1B,wBAAItjC,SAAS,GAAG3a,IAAI,CAAC2a,SAArB;AACA3a,oBAAAA,IAAI,CAAC2a,SAAL3a,GAAiB,EAAjBA;AACAi+C,oBAAAA,OAAO,CAACw4C,aAARx4C,CAAsBj+C,IAAI,CAACi8B,MAA3BgiB,EAAmCltD,SAAnCktD,EAA8CltD,SAA9CktD,EAAyD23C,WAAzD33C,EAH0B;AAK7B,mBALDA;;AAOAl7C,kBAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB8nC,QAAzB9nD,EAAmC,UAACsgE,CAAD,EAAO;AACtC,wBAAIA,CAAC,CAAC9mC,OAAF8mC,KAAc7mC,OAAO,CAACk6D,KAA1B,EAAiC;AAC7Bz4C,sBAAAA,OAAO,CAACu4C,OAARv4C;;AAEP,mBAJDl7C;;AAIE,uBAAA;AAAA,0BAAA;AAAA,wCAAA;;uBAtCN;AAuCC,aAvCkB;;AAuClB,0BAvCc9S;AAAI,8CAAA;WAuClB;WAhIuC;;AAExC,YAAIwlG,YAAJ;;AACA,SAAC,UAAUA,YAAV,EAAwB;AACrB,cAAIC,MAAW,GAAI,YAAY;AAE3B,gBAAIlwD,KAAJ;AACA,gBAAIogD,QAAJ,CAH2B;;AAO3B,gBAAI+Q,IAAI,GAAG,YAAYrkD,QAAQ,CAACqkD,IAATrkD,CAAche,KAAdge,CAAoB,GAApBA,EAAyB,CAAzBA,CAAvB;;AAKA,qBAASojD,MAAT,GAAmB;AACflwD,cAAAA,KAAK,GAAG,EAARA,CADe;;AAGfogD,cAAAA,QAAQ,GAAG,IAAXA;;;AAGJ8P,YAAAA,MAAM,CAACr/C,SAAPq/C,CAAiBkB,OAAjBlB,GAA2B,YAAY;AACnC,kBAAIlwD,KAAK,CAAC70C,MAAN60C,IAAgB,CAApB,EAAuB;AACnB,oBAAIogD,QAAJ,EAAc;AACVA,kBAAAA,QAAQ;;;AAEZxyF,gBAAAA,OAAO,CAAC6G,GAAR7G,CAAY,gBAAZA;AACA;;;AAGJ,kBAAIktC,GAAQ,GAAGkF,KAAK,CAACqxD,KAANrxD,EAAf;AAEA,kBAAI9E,IAAS,GAAG3vB,QAAQ,CAAC+lF,oBAAT/lF,CAA8B,MAA9BA,EAAsC,CAAtCA,CAAhB;AACA,kBAAIgmF,MAAW,GAAGhmF,QAAQ,CAAC0lC,aAAT1lC,CAAuB,QAAvBA,CAAlB;AACAgmF,cAAAA,MAAM,CAAC3pF,IAAP2pF,GAAc,iBAAdA;AACAA,cAAAA,MAAM,CAACh1B,GAAPg1B,GAAaz2D,GAAby2D;AAEA,kBAAI5qF,IAAS,GAAG,IAAhB;;AACA4qF,cAAAA,MAAM,CAACtmD,MAAPsmD,GAAgB,YAAY;AACxB5qF,gBAAAA,IAAI,CAACyqF,OAALzqF;AACH,eAFD4qF;;AAGAr2D,cAAAA,IAAI,CAACkW,WAALlW,CAAiBq2D,MAAjBr2D;AACH,aArBDg1D;;AAuBAA,YAAAA,MAAM,CAACr/C,SAAPq/C,CAAiBsB,UAAjBtB,GAA8B,UAAUp1D,GAAV,EAAuB;AACjDkF,cAAAA,KAAK,CAAC1yC,IAAN0yC,CAAWlF,GAAXkF;AACH,aAFDkwD;;AAIAA,YAAAA,MAAM,CAACr/C,SAAPq/C,CAAiBuB,kBAAjBvB,GAAsC,YAAY;AAIzC;AACD,qBAAKsB,UAAL,CAAmBL,IAAI,kCAAvB;;AAEP,aAPDjB;;AASAA,YAAAA,MAAM,CAACr/C,SAAPq/C,CAAiBC,OAAjBD,GAA2B,UAAUwB,WAAV,EAAiC;AACxDtR,cAAAA,QAAQ,GAAGsR,WAAXtR;AACA,qBAAO,IAAP;AACH,aAHD8P;;AAKAA,YAAAA,MAAM,CAACr/C,SAAPq/C,CAAiBpwC,IAAjBowC,GAAwB,UAAUyB,WAAV,EAAiC;AACrD,kBAAIhrF,IAAS,GAAG,IAAhB;AAEAA,cAAAA,IAAI,CAAC6qF,UAAL7qF,CAAmBwqF,IAAI,mCAAvBxqF;AACAA,cAAAA,IAAI,CAAC8qF,kBAAL9qF;;AAEA,kBAAIgrF,WAAJ,EAAiB;AACb,qBAAK,IAAIzmG,CAAM,GAAG,CAAlB,EAAqBA,CAAC,GAAGymG,WAAW,CAACxmG,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,sBAAI0mG,UAAe,GAAGD,WAAW,CAACzmG,CAAD,CAAjC;AACAyb,kBAAAA,IAAI,CAAC6qF,UAAL7qF,CAAgBirF,UAAhBjrF;;;;AAIRA,cAAAA,IAAI,CAACyqF,OAALzqF;AACH,aAdDupF;;AAgBA,mBAAOA,MAAP;AACH,WA5EkB,EAAnB;;AA8EA,cAAIrM,MAAW,GAAG,IAAIqM,MAAJ,EAAlB;AACAD,UAAAA,YAAY,CAACC,MAAbD,GAAsBpM,MAAtBoM;AAEH,SAlFD,EAkFGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAlFf;;AAoFAA,QAAAA,YAAY,CAACC,MAAbD,CAAoBnwC,IAApBmwC;AA2CAxlG,QAAAA,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtIR,UAAQV,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa4nG,WAAW,kCADvB9nG,OAAO,CAAC,aAAD;AAAeI,QAAAA,uCAAA;;AAAA,4BAAA;AAAA,0DAAA;;;AAAA,0CAAA;;AAAAK,QAAAA,OAGnB0gC,QAHmB,GAGnB,iBAAA,GAAW;AACP,eAAKx3B,IAAL,CAAUuY,QAAV,CAAmB2Q,OAAnB,CAA2B,UAAAykD,KAAA,EAAS;AAChC,gBAAMh7B,UAAU,GAAGg7B,KAAK,CAACnrE,YAANmrE,CAAmBhpC,YAAnBgpC,CAAnB;AACA,gBAAIh7B,UAAJ,EAAgBA,UAAU,CAACroB,OAAXqoB,GAAqB,KAArBA;AACnB,WAHD;AAIH,SARkB;;AAQlB77C,QAAAA,OAEDyL,KAFC,GAED,cAAA,GAAQ,CACP,CAHA;;AAGAzL,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,0BAAA;QAd4B4H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACc1B,eAAS+7F,gBAAT,CAA2BC,MAA3B,EAAqD;AACxD,YAAIzmG,IAAI,GAAG0mG,EAAE,CAACC,YAAHD,CAAgBD,MAAhBC,CAAX;;AAEA,iBAASE,KAAT,GAAkB;AACd,cAAIvrF,IAAI,GAAG,IAAX,CADc;;AAIdA,UAAAA,IAAI,CAACqiE,QAALriE,CAAc,eAAdA,EAA+B,eAA/BA;AACAA,UAAAA,IAAI,CAACqiE,QAALriE,CAAc,eAAdA,EAA+B,eAA/BA;AAEAA,UAAAA,IAAI,CAACqiE,QAALriE,CAAc,aAAdA,EAA6B,MAA7BA,EAPc;;AAUdA,UAAAA,IAAI,CAACsnE,SAALtnE,CAAe,eAAfA,EAAgC,eAAhCA;AAEA,cAAIwrF,iBAAwC,GAAG,IAAI9tE,GAAJ,EAA/C;AAEA,cAAIglD,KAAK,GAAG,IAAI0oB,MAAJ,EAAZ;AACA,eAAK1oB,KAAL,GAAaA,KAAb;AAEA1iE,UAAAA,IAAI,CAACsiE,WAALtiE,CAAiB,YAAjBA,EAA+B,KAA/BA,EAAsC,MAAtCA;;AAEA,mBAASyrF,UAAT,GAAuB;AACnB,gBAAIC,YAAY,GAAG1rF,IAAI,CAAC2iE,WAAL3iE,GAAmB,CAAnBA,CAAnB;AACAA,YAAAA,IAAI,CAAC4Z,IAAL5Z,CAAU,CAAVA,IAAe0rF,YAAf1rF;;AACA,gBAAI0iE,KAAK,CAACipB,aAAV,EAAyB;AACrB,kBAAIzuE,KAAK,GAAGld,IAAI,CAAC4Z,IAAL5Z,CAAU,CAAVA,CAAZ;AACA,kBAAIsC,MAAM,GAAG4a,KAAK,GAAGwlD,KAAK,CAACipB,aAANjpB,CAAoBpgE,MAA5B4a,GAAqCwlD,KAAK,CAACipB,aAANjpB,CAAoBxlD,KAAtE;AAEA5a,cAAAA,MAAM,IAAIogE,KAAK,CAACipB,aAANjpB,CAAoBzlD,MAApBylD,CAA2BkpB,WAA3BlpB,CAAuCmpB,aAAvCnpB,CAAqDl+E,MAA/D8d;;AAEA,kBAAItC,IAAI,CAAC4nE,UAAL5nE,CAAgB8rF,UAApB,EAAgC;AAC5B9rF,gBAAAA,IAAI,CAAC4Z,IAAL5Z,CAAU,CAAVA,IAAe0rF,YAAY,GAAGppF,MAAfopF,GAAwB,CAAvC1rF;;;;;AAKZwrF,UAAAA,iBAAiB,CAACnoE,GAAlBmoE,CAAsB,UAAtBA,EAAkC,UAACpyE,CAAD,EAAe,CAChD,CADDoyE,EAlCc;;;;;;;;;;;;;;;;;;AA6Dd,cAAIO,KAAK,GAAIX,MAAM,CAASY,SAA5B;AACA,cAAIC,KAAK,GAAIb,MAAM,CAASc,SAA5B;AACAH,UAAAA,KAAK,CAAC91E,OAAN81E,CAAc,UAAAv2F,CAAA,EAAK;AACf,gBAAIA,CAAC,CAAC22F,UAAF32F,CAAa,GAAbA,CAAJ,EAAuB;AACnB;;;AAEJ,gBAAIA,CAAC,KAAK,WAANA,IAAqBA,CAAC,KAAK,gBAA/B,EAAiD;AAC7C;;;AAGJ,gBAAI1Q,KAAK,GAAG49E,KAAK,CAACltE,CAAD,CAAjB;AACA,gBAAIyL,IAAI,GAAGgrF,KAAK,CAACz2F,CAAC,GAAG,SAAL,CAAhB;AACA,gBAAI42F,MAAJ;;AACA,gBAAInrF,IAAI,KAAK,MAAb,EAAqB;AACjB,kBAAIorF,QAAQ,GAAGJ,KAAK,CAACz2F,CAAC,GAAG,aAAL,CAALy2F,CAAyB1zE,GAAzB0zE,CAA6B,UAAC/0B,CAAD;AAAO,uBAAKA,CAAC,CAACvyE,IAAP;eAApCsnG,CAAf;AACAjsF,cAAAA,IAAI,CAACuiE,SAALviE,CAAe,OAAfA,EAAwBxK,CAAxBwK,EAA2BqsF,QAAQ,CAACvnG,KAAD,CAAnCkb,EAA4CxK,CAA5CwK,EAA+C;AAAE2qD,gBAAAA,MAAM,EAAE0hC;AAAV,eAA/CrsF;AAEAwrF,cAAAA,iBAAiB,CAACnoE,GAAlBmoE,CAAsBh2F,CAAtBg2F,EAAyB,UAACpyE,CAAD,EAAe;AACpCspD,gBAAAA,KAAK,CAACltE,CAAD,CAALktE,GAAW2pB,QAAQ,CAACppC,OAATopC,CAAiBjzE,CAAjBizE,CAAX3pB;AACH,eAFD8oB;AAGH,aAPD,MAQK,IAAI,OAAO1mG,KAAP,KAAiB,QAArB,EAA+B;AAChCsnG,cAAAA,MAAM,GAAGpsF,IAAI,CAACuiE,SAALviE,CAAe,MAAfA,EAAuBxK,CAAvBwK,EAA0Blb,KAA1Bkb,EAAiCxK,CAAjCwK,CAATosF;AACH,aAFI,MAGA,IAAI,OAAOtnG,KAAP,KAAiB,QAArB,EAA+B;AAChCsnG,cAAAA,MAAM,GAAGpsF,IAAI,CAACuiE,SAALviE,CAAe,QAAfA,EAAyBxK,CAAzBwK,EAA4Blb,KAA5Bkb,EAAmCxK,CAAnCwK,CAATosF;AACH,aAFI,MAGA,IAAI,OAAOtnG,KAAP,KAAiB,SAArB,EAAgC;AACjCsnG,cAAAA,MAAM,GAAGpsF,IAAI,CAACuiE,SAALviE,CAAe,QAAfA,EAAyBxK,CAAzBwK,EAA4Blb,KAA5Bkb,EAAmCxK,CAAnCwK,CAATosF;;;AAGJ,gBAAIA,MAAJ,EAAY;AACRpsF,cAAAA,IAAI,CAACsiE,WAALtiE,CAAiBxK,CAAjBwK,EAAoBosF,MAAM,CAACtnG,KAA3Bkb,EAAkCosF,MAAM,CAACnrF,IAAzCjB;;AAEP,WAhCD+rF;;AAkCA/rF,UAAAA,IAAI,CAACynE,iBAALznE,GAAyB,UAAUrb,IAAV,EAAwBG,KAAxB,EAAuC4iF,QAAvC,EAAyD;AAC9E,gBAAI55B,IAAI,GAAG09C,iBAAiB,CAACnnG,GAAlBmnG,CAAsB7mG,IAAtB6mG,CAAX;;AACA,gBAAI19C,IAAJ,EAAU;AACNA,cAAAA,IAAI,CAAChpD,KAAD,EAAQ4iF,QAAR,CAAJ55B;AACH,aAFD,MAGK;AACD40B,cAAAA,KAAK,CAAC/9E,IAAD,CAAL+9E,GAAc59E,KAAd49E;;AAEP,WARD1iE;;AAUA,eAAKs+D,aAAL,GAAqB,SAASkE,WAAT,CAAsBC,IAAtB,EAAwC9kD,MAAxC,EAA6D;AAC9E+kD,YAAAA,KAAK,CAAC3nD,cAAN2nD,GAAuB,KAAvBA,CAD8E;;AAI9E,gBAAIA,KAAK,CAACrmD,WAANqmD,EAAJ,EAAyB;AACrB,kBAAI4pB,UAAU,GAAGtsF,IAAI,CAACusF,YAALvsF,CAAkB,CAAlBA,CAAjB;;AACA,kBAAIssF,UAAJ,EAAgB;AACZ5pB,gBAAAA,KAAK,CAAC5nD,aAAN4nD,GAAsB,IAAtBA;AACAA,gBAAAA,KAAK,CAAC4pB,UAAN5pB,CAAiB7xE,CAAjB6xE,GAAqB4pB,UAAU,CAAC,CAAD,CAA/B5pB;AACAA,gBAAAA,KAAK,CAAC4pB,UAAN5pB,CAAiB5xE,CAAjB4xE,GAAqB4pB,UAAU,CAAC,CAAD,CAA/B5pB;AACH,eAJD,MAKK;AACDA,gBAAAA,KAAK,CAAC5nD,aAAN4nD,GAAsB,KAAtBA;;;AAGJ/kD,cAAAA,MAAM,CAACh3B,IAAPg3B,CAAY+kD,KAAZ/kD;AACAsgD,cAAAA,eAAe,CAACj+D,IAAD,EAAO2d,MAAP,CAAfsgD;AACH,aAbD,MAcK;AACDA,cAAAA,eAAe,CAACwE,IAAD,EAAO9kD,MAAP,EAAe,CAAf,EAAkB3d,IAAI,CAACo+D,cAALp+D,CAAoB,CAApBA,CAAlB,CAAfi+D;;AAGP,WAtBD;;AAwBA,mBAASuuB,cAAT,CAAyBx5F,KAAzB,EAAoC;AAAA,gBAAXA,KAAK,WAAM;AAAXA,cAAAA,KAAK,GAAG,CAARA;;;AACrB,gBAAIy5F,OAAJ;AACA,gBAAIC,SAAJ;AACA,gBAAIC,MAAJ;AACA,gBAAIC,SAAJ;AAEA,mBAAO,SAASC,IAAT,CAAeC,GAAf,EAA8CC,GAA9C,EAAgE;AACnE,kBAAIC,QAAQ,GAAGhtF,IAAI,CAAC4Z,IAAL5Z,CAAU,CAAVA,CAAf;AACA,kBAAIitF,SAAS,GAAGD,QAAQ,GAAGtqB,KAAK,CAACipB,aAANjpB,CAAoBpgE,MAA/B0qF,GAAwCtqB,KAAK,CAACipB,aAANjpB,CAAoBxlD,KAA5E;AAEA,kBAAIA,KAAK,GAAGwlD,KAAK,CAACipB,aAANjpB,CAAoBxlD,KAAhC;AACA,kBAAI5a,MAAM,GAAGogE,KAAK,CAACipB,aAANjpB,CAAoBpgE,MAAjC;;AAEA,kBAAI,CAACmqF,OAAL,EAAc;AACVC,gBAAAA,SAAS,GAAG9nF,QAAQ,CAAC0lC,aAAT1lC,CAAuB,QAAvBA,CAAZ8nF;AACAA,gBAAAA,SAAS,CAACxvE,KAAVwvE,GAAkBxvE,KAAlBwvE;AACAA,gBAAAA,SAAS,CAACpqF,MAAVoqF,GAAmBpqF,MAAnBoqF;AAEAC,gBAAAA,MAAM,GAAGD,SAAS,CAACQ,UAAVR,CAAqB,IAArBA,CAATC;AACAF,gBAAAA,OAAO,GAAGE,MAAM,CAACQ,YAAPR,CAAoB,CAApBA,EAAuB,CAAvBA,EAA0BzvE,KAA1ByvE,EAAiCrqF,MAAjCqqF,CAAVF;;;AAGJ,kBAAIM,GAAG,CAACzpE,MAAJypE,KAAe5xE,GAAG,CAACuE,MAAJvE,CAAW8d,IAA9B,EAAoC;AAChC,oBAAI,CAAC2zD,SAAL,EAAgB;AACZA,kBAAAA,SAAS,GAAG,IAAIt1B,YAAJ,CAAiBp6C,KAAK,GAAG5a,MAAzB,CAAZsqF;;;AAGJQ,gBAAAA,UAAU,CAAC1qB,KAAK,CAACipB,aAAP,EAAsBiB,SAAtB,EAAiC55F,KAAjC,CAAVo6F;;AAEA,qBAAK,IAAIv8F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqsB,KAApB,EAA2BrsB,CAAC,EAA5B,EAAgC;AAC5B,uBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwR,MAApB,EAA4BxR,CAAC,EAA7B,EAAiC;AAE7B,wBAAIu8F,MAAM,GAAG,CAACx8F,CAAC,GAAGC,CAAC,GAAGosB,KAAT,IAAkB,CAA/B;AACAuvE,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,MAAbZ,IAAuBG,SAAS,CAAC/7F,CAAC,GAAGC,CAAC,GAAGosB,KAAT,CAAT0vE,GAA2B,GAAlDH;AACAA,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,MAAM,GAAG,CAAtBZ,IAA2B,CAA3BA;AACAA,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,MAAM,GAAG,CAAtBZ,IAA2B,CAA3BA;AACAA,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,MAAM,GAAG,CAAtBZ,IAA2B,GAA3BA;;;AAGX,eAjBD,MAkBK,IAAIM,GAAG,CAACzpE,MAAJypE,KAAe5xE,GAAG,CAACuE,MAAJvE,CAAWsQ,OAA9B,EAAuC;AACxC,oBAAI,CAACmhE,SAAL,EAAgB;AACZA,kBAAAA,SAAS,GAAG,IAAIt1B,YAAJ,CAAiBp6C,KAAK,GAAG5a,MAAR4a,GAAiB,CAAlC,CAAZ0vE;;;AAGJQ,gBAAAA,UAAU,CAAC1qB,KAAK,CAACipB,aAAP,EAAsBiB,SAAtB,EAAiC55F,KAAjC,CAAVo6F;;AAEA,qBAAK,IAAIv8F,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGqsB,KAApB,EAA2BrsB,EAAC,EAA5B,EAAgC;AAC5B,uBAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGwR,MAApB,EAA4BxR,EAAC,EAA7B,EAAiC;AAE7B,wBAAIu8F,OAAM,GAAG,CAACx8F,EAAC,GAAGC,EAAC,GAAGosB,KAAT,IAAkB,CAA/B;;AACAuvE,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,OAAbZ,IAAuBG,SAAS,CAACS,OAAD,CAATT,GAAoB,GAA3CH;AACAA,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,OAAM,GAAG,CAAtBZ,IAA2BG,SAAS,CAACS,OAAM,GAAG,CAAV,CAATT,GAAwB,GAAnDH;AACAA,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,OAAM,GAAG,CAAtBZ,IAA2BG,SAAS,CAACS,OAAM,GAAG,CAAV,CAATT,GAAwB,GAAnDH;AACAA,oBAAAA,OAAO,CAAC5kG,IAAR4kG,CAAaY,OAAM,GAAG,CAAtBZ,IAA2BG,SAAS,CAACS,OAAM,GAAG,CAAV,CAATT,GAAwB,GAAnDH;;;AAGX,eAjBI,MAkBA;AACDW,gBAAAA,UAAU,CAAC1qB,KAAK,CAACipB,aAAP,EAAsBc,OAAO,CAAC5kG,IAA9B,EAA2CmL,KAA3C,CAAVo6F;;;AAGJT,cAAAA,MAAM,CAACW,YAAPX,CAAoBF,OAApBE,EAA6B,CAA7BA,EAAgC,CAAhCA;AAEA,kBAAId,aAAa,GAAGnpB,KAAK,CAACipB,aAANjpB,CAAoBzlD,MAApBylD,CAA2BkpB,WAA3BlpB,CAAuCmpB,aAA3D;AAEAiB,cAAAA,GAAG,CAACS,IAAJT;AACAA,cAAAA,GAAG,CAAChnE,KAAJgnE,CAAU,CAAVA,EAAa,CAAC,CAAdA;AACAA,cAAAA,GAAG,CAACU,SAAJV,CAAcJ,SAAdI,EAAyB,CAAzBA,EAA4B,CAA5BA,EAA+B5vE,KAA/B4vE,EAAsCxqF,MAAtCwqF,EAA8C,CAA9CA,EAAiD,CAAC9sF,IAAI,CAAC4Z,IAAL5Z,CAAU,CAAVA,CAAD,GAAgBitF,SAAS,IAAIpB,aAAa,CAACrnG,MAAdqnG,GAAuB,CAAvBA,GAA2B74F,KAA/B,CAA1E85F,EAAiHE,QAAjHF,EAA2HG,SAA3HH;AACAA,cAAAA,GAAG,CAACW,OAAJX;AACH,aAhED;;;AAmEJ9sF,UAAAA,IAAI,CAAC0tF,gBAAL1tF,GAAwB,UAAC8sF,GAAD,EAAMh9D,MAAN,EAAiB;AACrC27D,YAAAA,UAAU;;AAEV,gBAAIzrF,IAAI,CAAC4nE,UAAL5nE,CAAgB8rF,UAAhB9rF,IAA8B0iE,KAAK,CAACipB,aAAxC,EAAuD;AACnD,kBAAIE,aAAa,GAAGnpB,KAAK,CAACipB,aAANjpB,CAAoBzlD,MAApBylD,CAA2BkpB,WAA3BlpB,CAAuCmpB,aAA3D;;AAEA,mBAAK,IAAItnG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsnG,aAAa,CAACrnG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,oBAAIopG,QAAQ,GAAG,gBAAgBppG,CAA/B;;AACA,oBAAI,CAACyb,IAAI,CAAC2tF,QAAD,CAAT,EAAqB;AACjB3tF,kBAAAA,IAAI,CAAC2tF,QAAD,CAAJ3tF,GAAiBwsF,cAAc,CAACjoG,CAAD,CAA/Byb;;;AAGJA,gBAAAA,IAAI,CAAC2tF,QAAD,CAAJ3tF,CAAe8sF,GAAf9sF,EAAoB6rF,aAAa,CAACtnG,CAAD,CAAjCyb;;;AAGX,WAfDA;;AAiBAA,UAAAA,IAAI,CAAC4tF,SAAL5tF,GAAiB,YAAM;AACnB0iE,YAAAA,KAAK,CAACrsE,OAANqsE;AACH,WAFD1iE;;AAIAA,UAAAA,IAAI,CAAC4Z,IAAL5Z,GAAYA,IAAI,CAAC2iE,WAAL3iE,EAAZA;;;AAEJurF,QAAAA,KAAK,CAAChtB,KAANgtB,GAAc5mG,IAAd4mG;AAEA,eAAOziD,SAAS,CAAC85B,qBAAV95B,eAA4CnkD,IAA5CmkD,CAAP;AACAA,QAAAA,SAAS,CAAC+5B,gBAAV/5B,eAAuCnkD,IAAvCmkD,EAA+CyiD,KAA/CziD;;;AAIJqiD,MAAAA,gBAAgB,CAACzwE,SAAD,CAAhBywE;AACAA,MAAAA,gBAAgB,CAACprE,SAAD,CAAhBorE;AACAA,MAAAA,gBAAgB,CAACzyD,YAAD,CAAhByyD;AACAA,MAAAA,gBAAgB,CAACjzD,gBAAD,CAAhBizD;AACAA,MAAAA,gBAAgB,CAACrgE,oBAAD,CAAhBqgE;AACAA,MAAAA,gBAAgB,CAACh/D,qBAAD,CAAhBg/D;AACAA,MAAAA,gBAAgB,CAACx7D,iBAAD,CAAhBw7D;AACAA,MAAAA,gBAAgB,CAACpoE,UAAD,CAAhBooE;AACAA,MAAAA,gBAAgB,CAAC7kB,QAAD,CAAhB6kB;AACAA,MAAAA,gBAAgB,CAACjwD,QAAD,CAAhBiwD;AACAA,MAAAA,gBAAgB,CAAC0C,eAAD,CAAhB1C;AACAA,MAAAA,gBAAgB,CAAClkB,iBAAD,CAAhBkkB;;;;;;;;;;;;;;;;;;;;;;;4ECtQA;AACA;AACA;AACA;AACA;AAEA;;;AACA,UAAermF,GAAG,CAAC8kC,SAAnB,EAA8B;AAC1B/1C,QAAAA,IAAI,CAACnN,EAALmN,CAAQrH,IAAI,CAACwgD,iBAAbn5C,EAAgC,YAAM;AAClC,cAAI2oB,WAAW,CAACysB,KAAhB,EAAuB;AACnB,gBAAI6kD,OAAO,GAAG,KAAd;AACA,gBAAIC,GAAG,GAAGnpF,QAAQ,CAAC0lC,aAAT1lC,CAAuB,QAAvBA,CAAV;AACAmpF,YAAAA,GAAG,CAACxjD,SAAJwjD,GAAgB,MAAhBA;;AAEAA,YAAAA,GAAG,CAACC,OAAJD,GAAc,YAAY;AACtBD,cAAAA,OAAO,GAAG,CAACA,OAAXA;AACAC,cAAAA,GAAG,CAACxjD,SAAJwjD,GAAgBD,OAAO,GAAG,MAAH,GAAY,MAAnCC;AACAtkD,cAAAA,SAAS,CAACqkD,OAAD,CAATrkD;AACH,aAJDskD;;AAMCA,YAAAA,GAAG,CAAS3jD,KAAZ2jD,8IAAAA;AAMDnpF,YAAAA,QAAQ,CAAC6vB,IAAT7vB,CAAc6lC,WAAd7lC,CAA0BmpF,GAA1BnpF;;AAEP,SApBD/Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRJ,UAAQzQ,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBkhC,iBAAiB,GAAejhC,UAAU,CAA1CihC,iBAAjB;AAAA,UAAoChhC,QAAQ,GAAKD,UAAU,CAAvBC,QAApC;AAA2D,UAGrD2qG,eAAe,WADpB7qG,OAAO,CAAC,iBAAD,iBAKJ,wBAAA,CAAa4P,KAAb,EAA4B2+B,EAA5B,EAA8C;AAAA,aAH9C3+B,KAG8C,SAAA;AAHzC,aACL2+B,EADK,SAAA;AAID,aAAK3+B,KAAL,GAAaA,KAAb;AACA,aAAK2+B,EAAL,GAAUA,EAAV;AACH,kBAPgB,CAHsC;AAUtD,UAICu8D,oBAAoB,YADzB9qG,OAAO,CAAC,sBAAD;AAAwB,qCAAA;AAAA,eAE5BuB,IAF4B,GAErB,EAFqB;AAEnB,eACTwpG,IADS,GACF,IAAIx9F,QAAQ,CAACoxD,IAAb,EADE;AACe,eACxBqsC,SADwB,GACsB,IAAI1wE,GAAJ,EADtB;;AAC6Brc,UAAAA,kEAAA;;AAAA,eASrDgtF,cATqD,GASpC,CAToC;;;AASnCn8E,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KALlB,YAAA,GACkB;AACd,mBAAO,KAAKiqG,WAAZ;;;AACH/oG,UAAAA;AAAAlB,UAAAA,KAGD,YAAA,GACqB;AACjB,mBAAO,KAAKgqG,cAAZ;;WAHc;;AAIjB,mCAAA;uFAXA/qG;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,CADL;;sEAERpf,gKAMAA,yHAbqB,CAJrB;AAuBL,UAAIgsE,QAAQ,GAAG,IAAIp7D,IAAJ,EAAf;UAKaq6F,eAAe,uCAF3BnrG,OAAO,CAAC,iBAAD,WAGHE,QAAQ,CAAC0d,IAAD,WAuDR1d,QAAQ,CAAC4qG,oBAAD,mBAzDZ5pE,iBAAiB;AAAA9gC,QAAAA,2CAAA;;AAAA,gCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAAA,UAAAA,2FAAA;;AAAAA,UAAAA,wFAAA;;AAAAA,UAAAA,iGAAA;;AAAA3d,UAAAA,MAuDd8qG,QAvDc,GAuDgC,IAAI9wE,GAAJ,EAvDhC;;AAuDuCrc,UAAAA,wFAAA;;AAAA3d,UAAAA,MAmBrD+qG,cAnBqD,GAmBpB,EAnBoB;;AAmBlBptF,UAAAA,6FAAA;;AAAA,sBAAA;;;AAAA,8CAAA;;AAAAxd,QAAAA,OAdnC6qG,OAcmC,GAdnC,gBAAA,GAAW;AACP,eAAKxyE,IAAL,CAAU/mB,MAAV,GAAmB,IAAnB;AACA,eAAKpI,IAAL,CAAUy5C,iBAAV;AACA,eAAKmoD,MAAL,CAAYnqG,MAAZ,GAAqB,CAArB;AACA,eAAKgqG,QAAL,CAAcvkE,KAAd;AACH,SASkC;;AATlCpmC,QAAAA,OACD+qG,QADC,GACD,iBAAA,GAAY;AACR,eAAK1yE,IAAL,CAAU/mB,MAAV,GAAmB,CAAC,KAAK+mB,IAAL,CAAU/mB,MAA9B;AACA,cAAImQ,QAAQ,GAAG,KAAKvY,IAAL,CAAUuY,QAAzB;;AACA,eAAK,IAAI/gB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC+gB,YAAAA,QAAQ,CAAC/gB,CAAD,CAAR+gB,CAAYnQ,MAAZmQ,GAAqB,CAAC,KAAK4W,IAAL,CAAU/mB,MAAhCmQ;;AAEP,SAPA;;AAOAzhB,QAAAA,OAWKgrG,OAXL;AAWY,oFAAb,iBAAA;AAAA,6BAAA;;AAAA,8BAAA,gBAAA,WAAA,SAAA,SAAA,YAAA,UAAA,OAAA,WAAA,OAAA;;AAAA;AAAA,sBAAA;AAAA,sBAAA;AAAAvuB,kBAAAA,cAAA,IAAA;AAAA,yBACU,KAAKwuB,QAAL,EADV;;AACyB,sBAAA;AAEjBC,kBAAAA,cAAc,GAAG,CAAjBA;AACAC,kBAAAA,cAAc,GAAG,KAAKV,WAAtBU;AAEAxmB,kBAAAA,SAAS,GAAGjB,IAAI,CAACC,GAALD,EAAZiB;AAGAymB,kBAAAA,OAAO,GAAG,IAAI/6F,IAAJ,EAAV+6F;AACAC,kBAAAA,OAAO,GAAG,IAAIh7F,IAAJ,EAAVg7F;AACAC,kBAAAA,UAAU,GAAG,IAAI5sE,IAAJ,EAAb4sE;AACAC,kBAAAA,QAAQ,GAAG,IAAIv8B,IAAJ,EAAXu8B;AAEJ,uBAAKriG,IAAL,CAAUy5C,iBAAV;AAA8BpG,kBAAAA;AAAA,iCAAA,OAAA,QAAA,MAAA,QAAA,YAAA,QAAA;;AAAA;AAAA,8BAAA;AAAA,8BAAA;AACrBivD,0BAAAA,SAAS,cAATA;AACDC,0BAAAA,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAjBC;AACA3oD,0BAAAA,MAAM,GAAG2oD,KAAK,CAACnB,IAANmB,CAAW3oD,MAApBA;AACA55C,0BAAAA,IAAI,GAAG,IAAIiU,IAAJ,CAASsuF,KAAK,CAAC3qG,IAAf,CAAPoI;AACJA,0BAAAA,IAAI,CAACT,MAALS,GAAchE,MAAI,CAACgE,IAAnBA;AACAA,0BAAAA,IAAI,CAAC4U,QAAL5U,GAAgB45C,MAAhB55C;AACAA,0BAAAA,IAAI,CAACoI,MAALpI,GAAc,KAAdA;AAAmBwiG,0BAAAA;AAAA,wCAAA,WAAA,aAAA,iBAAA,UAAA,KAAA,KAAA,cAAA,QAAA,KAAA,GAAA,cAAA,IAAA,KAAA,KAAA,mBAAA,IAAA,KAAA,SAAA,IAAA,KAAA,YAAA,YAAA,KAAA,SAAA,IAAA,cAAA,UAAA,UAAA;;AAAA;AAAA,sCAAA;AAAA,sCAAA;AAEVC,kCAAAA,QAAQ,eAARA;AACDpB,kCAAAA,SAAS,GAAGoB,QAAQ,CAAC,CAAD,CAApBpB;AAEAqB,kCAAAA,WAAW,GAAGr0F,IAAI,CAACytD,IAALztD,CAAUA,IAAI,CAAC+1C,GAAL/1C,CAASgzF,SAAS,CAAC5pG,MAAnB4W,EAA2B,GAA3BA,CAAVA,CAAdq0F;AAEAC,kCAAAA,eAAe,GAAG,CAAlBA;AACAC,kCAAAA,QAAQ,GAAG,IAAIpQ,QAAJ,EAAXoQ;AACAptD,kCAAAA,GAAG,GAAG,IAAIruC,IAAJ,CAASqgF,QAAT,EAAmBA,QAAnB,EAA6BA,QAA7B,CAANhyC;AACA3hC,kCAAAA,GAAG,GAAG,IAAI1M,IAAJ,CAAS,CAACqgF,QAAV,EAAoB,CAACA,QAArB,EAA+B,CAACA,QAAhC,CAAN3zE;AACAgvF,kCAAAA,YAAY,GAAG,CAAfA;AAEAC,kCAAAA,MAAM,GAAG,CAATA;;AACAtxF,kCAAAA,GAAG;AAAA,0GAAG,gBAAA;AAAA,6CAAA,MAAA,MAAA,SAAA,SAAA,MAAA,KAAA,IAAA;AAAA;AAAA,gDAAA;AAAA,gDAAA;AACNoxF,4CAAAA,QAAQ,CAACptD,GAATotD,CAAatsE,GAAbssE,CAAiBptD,GAAjBotD,EAAsBh1F,QAAtBg1F,CAA+BhpD,MAA/BgpD;AACAA,4CAAAA,QAAQ,CAAC/uF,GAAT+uF,CAAatsE,GAAbssE,CAAiB/uF,GAAjB+uF,EAAsBh1F,QAAtBg1F,CAA+BhpD,MAA/BgpD;AAEI7d,4CAAAA,GAAG,GAAG0d,QAAQ,CAAC,CAAD,CAAd1d;AACAntF,4CAAAA,IAAI,GAAG2qG,KAAK,CAAC3qG,IAAN2qG,GAAa,GAAbA,GAAmBxd,GAAG,CAACntF,IAA9BA;AACA+6F,4CAAAA,IAAI,GAAGD,UAAU,CAAC96F,IAAD,EAAOgrG,QAAP,CAAjBjQ;AACA2B,4CAAAA,OAAO,oBAAkBplE,QAAQ,CAAC4xB,QAAT5xB,GAAoBt3B,2BAAsBA,cAAnE08F;AACAC,4CAAAA,OAAO,GAAGD,OAAO,UAAO18F,cAAP,CAAjB28F;AAAmCtsD,4CAAAA,aAAA,IAAA;AAAA,mDACtBmsD,QAAQ,CAACzB,IAAD,EAAO2B,OAAP,EAAgBC,OAAhB,CADc;;AACU,gDAAA;AAA7CxhD,4CAAAA,IAAI,gBAAJA;AAEAgwD,4CAAAA,GAAG,GAAG,IAAI9uF,IAAJ,CAAS8wE,GAAG,CAACntF,IAAJmtF,GAAY+d,MAAM,EAA3B,CAANC;AAEAn+D,4CAAAA,EAAE,GAAGm+D,GAAG,CAACvhG,YAAJuhG,CAAiBp+D,YAAjBo+D,CAALn+D;AACJA,4CAAAA,EAAE,CAACmO,IAAHnO,GAAUmO,IAAVnO;AACAA,4CAAAA,EAAE,CAAC1R,QAAH0R,GAAcmgD,GAAdngD;AAEAm+D,4CAAAA,GAAG,CAACvhG,YAAJuhG,CAAiBC,eAAjBD;AAEAn+D,4CAAAA,EAAE,CAACq+D,YAAHr+D,CAAgBs+D,QAAhBt+D,GAA2B,IAA3BA;AACAA,4CAAAA,EAAE,CAACq+D,YAAHr+D,CAAgBu+D,UAAhBv+D,GAA6B,IAA7BA;AACAA,4CAAAA,EAAE,CAACq+D,YAAHr+D,CAAgBw+D,aAAhBx+D,GAAgC,IAAhCA;AACAA,4CAAAA,EAAE,CAACq+D,YAAHr+D,CAAgBy+D,YAAhBz+D,GAA+Bv2B,IAAI,CAACmnC,GAALnnC,CAASrS,MAAI,CAACsnG,eAAdj1F,EAA+B+7D,UAAU,CAACy4B,YAAD,CAAzCx0F,CAA/Bu2B;AAEAm+D,4CAAAA,GAAG,CAACxjG,MAAJwjG,GAAa/iG,IAAb+iG;;AAAkB,iDAAA;AAAA,oDAAA;AAAA,kEAAA;;iDAxBZ;AAyBT,uCAzBM;;AAyBN,oDAzBGvxF;AAAG,wEAAA;qCAyBN;qCAzBGA;;AA2BKha,kCAAAA,CAAC,GAAG,CAAJA;;AAAK,uCAAA;AAAA,wCAAEA,CAAC,GAAG6pG,SAAS,CAAC5pG,OAAhB;AAAsBm7E,oCAAAA,cAAA,KAAA;AAAA;;;AAC5BhuC,kCAAAA,EAAE,GAAGy8D,SAAS,CAAC7pG,CAAD,CAAT6pG,CAAaz8D,EAAlBA;AACA7pC,kCAAAA,GAAG,GAAGsmG,SAAS,CAAC7pG,CAAD,CAAT6pG,CAAap7F,KAAnBlL;AAEAyL,kCAAAA,GAAG,GAAGo+B,EAAE,CAACmO,IAAHnO,CAAQ2+D,aAAR3+D,CAAsB7pC,GAAtB6pC,EAA2BxW,GAAG,CAACo1E,aAAJp1E,CAAkBq1E,aAA7C7+D,CAANp+B;AACAk9F,kCAAAA,iBAAiB,GAAG,CAACd,QAAQ,CAAC5Q,QAAT4Q,CAAkBnrG,MAAlBmrG,GAA2Bp8F,GAAG,CAAC/O,MAAhC,IAA0C,CAA9DisG;;AAA+D,wCAC/DA,iBAAiB,GAAG,MAD2C;AACtC9wB,oCAAAA,cAAA,KAAA;AAAA;;;AACzB14E,kCAAAA,OAAO,CAACC,IAARD,CAAgBqoG,KAAK,CAAC3qG,IAAN2qG,MAAAA,GAAcE,QAAQ,CAAC,CAAD,CAARA,CAAY7qG,IAA1B2qG,iCAAhBroG;AAA6E04E,kCAAAA,cAAA,KAAA;AAAA,yCAEvEphE,GAAG,EAFoE;;AAElE,uCAAA;AAEXmxF,kCAAAA,eAAe,GAAG,CAAlBA;AACAC,kCAAAA,QAAQ,GAAG,IAAIpQ,QAAJ,EAAXoQ;AACAptD,kCAAAA,GAAG,GAAG,IAAIruC,IAAJ,CAASqgF,QAAT,EAAmBA,QAAnB,EAA6BA,QAA7B,CAANhyC;AACA3hC,kCAAAA,GAAG,GAAG,IAAI1M,IAAJ,CAAS,CAACqgF,QAAV,EAAoB,CAACA,QAArB,EAA+B,CAACA,QAAhC,CAAN3zE;;AAA+C,uCAAA;AAEnD,uCAAS8vF,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGn9F,GAAG,CAAC/O,MAA1B,EAAkCksG,EAAE,IAAI,CAAxC,EAA2C;AACvCphC,oCAAAA,QAAQ,CAACjsC,GAATisC,CAAa/7D,GAAG,CAACm9F,EAAD,CAAhBphC,EAAsB/7D,GAAG,CAACm9F,EAAE,GAAG,CAAN,CAAzBphC,EAAmC/7D,GAAG,CAACm9F,EAAE,GAAG,CAAN,CAAtCphC;AACAp7D,oCAAAA,IAAI,CAAC0/D,aAAL1/D,CAAmBo7D,QAAnBp7D,EAA6Bo7D,QAA7Bp7D,EAAuCy9B,EAAE,CAAC5kC,IAAH4kC,CAAQ6hD,WAA/Ct/E;AACAy7F,oCAAAA,QAAQ,CAAC5Q,QAAT4Q,CAAkBhpG,IAAlBgpG,CAAuBrgC,QAAQ,CAACz+D,CAATy+D,GAAa3oB,MAAM,CAAC91C,CAA3C8+F,EAA8CrgC,QAAQ,CAACx+D,CAATw+D,GAAa3oB,MAAM,CAAC71C,CAAlE6+F,EAAqErgC,QAAQ,CAACv+D,CAATu+D,GAAa3oB,MAAM,CAAC51C,CAAzF4+F;;;AAGAgB,kCAAAA,GAAG,GAAGh/D,EAAE,CAACmO,IAAHnO,CAAQ2+D,aAAR3+D,CAAsB7pC,GAAtB6pC,EAA2BxW,GAAG,CAACo1E,aAAJp1E,CAAkBy1E,cAA7Cj/D,CAANg/D;;AACJ,kDAAAhB,QAAQ,CAACvQ,EAAT,EAAYz4F,IAAZ,MAAA,aAAA,EAAoBgqG,GAApB;;AAEA99B,kCAAAA,IAAI,CAACg+B,gBAALh+B,CAAsBu8B,QAAtBv8B,EAAgClhC,EAAE,CAAC5kC,IAAH4kC,CAAQ6hD,WAAxC3gB;AACIssB,kCAAAA,OAAO,GAAGxtD,EAAE,CAACmO,IAAHnO,CAAQ2+D,aAAR3+D,CAAsB7pC,GAAtB6pC,EAA2BxW,GAAG,CAACo1E,aAAJp1E,CAAkB21E,WAA7Cn/D,CAAVwtD;;AACJ,uCAAS4R,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG5R,OAAO,CAAC36F,MAA9B,EAAsCusG,EAAE,IAAI,CAA5C,EAA+C;AAC3C5B,oCAAAA,UAAU,CAAC9rE,GAAX8rE,CAAehQ,OAAO,CAAC4R,EAAD,CAAtB5B,EAA4BhQ,OAAO,CAAC4R,EAAE,GAAG,CAAN,CAAnC5B,EAA6ChQ,OAAO,CAAC4R,EAAE,GAAG,CAAN,CAApD5B,EAA8D,CAA9DA;AACA5sE,oCAAAA,IAAI,CAACqxC,aAALrxC,CAAmB4sE,UAAnB5sE,EAA+B4sE,UAA/B5sE,EAA2C6sE,QAA3C7sE;AACA4sE,oCAAAA,UAAU,CAACn0F,SAAXm0F;AACAQ,oCAAAA,QAAQ,CAACxQ,OAATwQ,CAAiBhpG,IAAjBgpG,CAAsBR,UAAU,CAACt+F,CAAjC8+F,EAAoCR,UAAU,CAACr+F,CAA/C6+F,EAAkDR,UAAU,CAACp+F,CAA7D4+F;;;AAGJh+D,kCAAAA,EAAE,CAACC,KAAHD,CAAS+U,WAAT/U,CAAqBi/B,WAArBj/B,CAAiCs9D,OAAjCt9D,EAA0Cu9D,OAA1Cv9D;AACAz9B,kCAAAA,IAAI,CAACquC,GAALruC,CAASquC,GAATruC,EAAcquC,GAAdruC,EAAmB+6F,OAAnB/6F;AACAA,kCAAAA,IAAI,CAAC0M,GAAL1M,CAAS0M,GAAT1M,EAAc0M,GAAd1M,EAAmBg7F,OAAnBh7F;AAEImrF,kCAAAA,GAAG,GAAG1tD,EAAE,CAACmO,IAAHnO,CAAQ2+D,aAAR3+D,CAAsB7pC,GAAtB6pC,EAA2BxW,GAAG,CAACo1E,aAAJp1E,CAAkB61E,eAA7Cr/D,CAAN0tD;AACA4R,kCAAAA,UAAU,GAAG1sG,CAAC,GAAGkrG,WAAjBwB;AACAC,kCAAAA,UAAU,GAAG91F,IAAI,CAAC+hB,KAAL/hB,CAAW7W,CAAC,GAAGkrG,WAAfr0F,CAAb81F;;AACJ,uCAASC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG9R,GAAG,CAAC76F,MAA5B,EAAoC2sG,GAAG,IAAI,CAA3C,EAA8C;AAC1CxB,oCAAAA,QAAQ,CAACtQ,GAATsQ,CAAahpG,IAAbgpG,CACI,CAACsB,UAAU,GAAG5R,GAAG,CAAC8R,GAAD,CAAjB,IAA0B1B,WAD9BE,EAEI,CAACuB,UAAU,GAAG7R,GAAG,CAAC8R,GAAG,GAAG,CAAP,CAAjB,IAA8B1B,WAFlCE;;;AAOAhkD,kCAAAA,OAAO,GAAGha,EAAE,CAACmO,IAAHnO,CAAQy/D,WAARz/D,CAAoB7pC,GAApB6pC,CAAVga;;AACJ,uCAASpnD,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGonD,OAAO,CAACnnD,MAA5B,EAAoCD,EAAC,EAArC,EAAyC;AACrCorG,oCAAAA,QAAQ,CAAChkD,OAATgkD,CAAiBhpG,IAAjBgpG,CAAsBhkD,OAAO,CAACpnD,EAAD,CAAPonD,GAAa+jD,eAAnCC;;;AAGJD,kCAAAA,eAAe,IAAIn8F,GAAG,CAAC/O,MAAJ+O,GAAa,CAAhCm8F;AAEAE,kCAAAA,YAAY,IAAIj+D,EAAE,CAACq+D,YAAHr+D,CAAgBy+D,YAAhCR;AAEIyB,kCAAAA,YAAY,GAAG,EAAEtC,cAAF,GAAmBC,cAAlCqC;AACAC,kCAAAA,QAAQ,GAAG,CAAC/pB,IAAI,CAACC,GAALD,KAAaiB,SAAd,IAA2B,IAAtC8oB;AACAC,kCAAAA,QAAQ,GAAGn2F,IAAI,CAAC+hB,KAAL/hB,CAAYk2F,QAAQ,GAAGD,YAAXC,IAA4B,IAAID,YAAhCC,CAAZl2F,CAAXm2F;AAEJtqG,kCAAAA,OAAO,CAAC6G,GAAR7G,8BAAuCoqG,gCAA2BE,cAAlEtqG;;AAA8E,uCAAA;AA9D5C1C,kCAAAA,CAAC;AAAEo7E,kCAAAA,cAAA,KAAA;AAAA;;AAAA,uCAAA;AAAAA,kCAAAA,cAAA,KAAA;AAAA,yCAiEnCphE,GAAG,EAjEgC;;AAiE9B,uCAAA;AAAA,0CAAA;AAAA,yDAAA;;sCA1GI;4BAAA;AA0GJizF,0BAAAA,6CAxGMlC,KAAK,CAAClB,UAwGZ;;AAxGqB,8BAAA;AAAA,0DAAA;AAAApuB,4BAAAA,cAAA,KAAA;AAAA;;;AAAA,4EAAA;;AAAA,+BAAA;AAAAA,0BAAAA,cAAA,IAAA;AAAA;;AAAA,+BAAA;AAAA,kCAAA;AAAA,iDAAA;;6BATV;oBAAA;AASUyxB,kBAAAA,4CARlB,KAAKjD,SAQa;;AARL,uBAAA;AAAA,gDAAA;AAAAluB,oBAAAA,cAAA,KAAA;AAAA;;;AAAA,mEAAA;;AAAA,uBAAA;AAAAA,kBAAAA,cAAA,KAAA;AAAA;;AAAA,uBAAA;AAqHnC,uBAAKsuB,QAAL;AAEA3nG,kBAAAA,OAAO,CAAC6G,GAAR7G,kCAAAA;;AAA8C,uBAAA;AAAA,0BAAA;AAAA,yCAAA;;8BAtIlD;AAuIC,aAvIY;;AAuIZ,0BAAA;AAAA,kDAAA;;;AAAA,wBAAA;WAlJA;;AAkJApD,QAAAA,OAEKirG,QAFL;AAEa,qFAAd,iBAAA;AAAA,6BAAA;;AAAA,mBAAA,WAAA,UAAA,QAAA;AAAA;AAAA,sBAAA;AAAA,sBAAA;AAAA,sBACS,KAAK5yE,IADd;AACkBitD,oBAAAA,cAAA,IAAA;AAAA;;;AAAA,mDAAA;;AAAA,sBAAA;AAId,uBAAKjtD,IAAL,CAAU/mB,MAAV,GAAmB,IAAnB;AACAmoB,kBAAAA,UAAU,CAACiK,GAAXjK,CAAeuX,MAAfvX,CAAsBsX,iBAAtBtX;AAAyC6rD,kBAAAA,cAAA,IAAA;AAAA,yBACnC,IAAI/0C,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC3B/c,oBAAAA,UAAU,CAAC+c,OAAD,EAAU,GAAV,CAAV/c;AACH,mBAFK,CADmC;;AAGvC,sBAAA;AAEEma,kBAAAA,GAAG,GAAG,KAAKvV,IAAL,CAAUhtB,uBAAV,CAAkCwiC,YAAlC,CAAND;AACJA,kBAAAA,GAAG,GAAGA,GAAG,CAACzD,MAAJyD,CAAW,UAAAE,EAAA,EAAM;AACnB,2BAAOA,EAAE,CAAC1D,kBAAV;AACH,mBAFKwD,CAANA;AAIA,uBAAKg9D,cAAL,GAAsBh9D,GAAtB;AAEIigE,kBAAAA,SAAS,GAAG,KAAKA,SAAjBA;AACAlD,kBAAAA,QAAQ,GAAG,KAAKA,QAAhBA;AACJA,kBAAAA,QAAQ,CAACvkE,KAATukE;AACIG,kBAAAA,MAAM,GAAG,KAAKA,MAAdA;AACJA,kBAAAA,MAAM,CAACnqG,MAAPmqG,GAAgB,CAAhBA;AACAl9D,kBAAAA,GAAG,CAACxb,OAAJwb,CAAY,UAAAE,EAAA,EAAM;AACd,wBAAIp+B,GAAG,GAAGo+B,EAAE,CAACC,KAAHD,CAAS+U,WAAT/U,CAAqBgV,MAA/B;AACA,wBAAI91C,CAAC,GAAGuK,IAAI,CAAC+hB,KAAL/hB,CAAW,CAAC7H,GAAG,CAAC1C,CAAJ0C,GAAQjK,MAAI,CAACsqB,MAAL,CAAY/iB,CAArB,IAA0B6gG,SAAS,CAAC7gG,CAA/CuK,CAAR;AACA,wBAAItK,CAAC,GAAGsK,IAAI,CAAC+hB,KAAL/hB,CAAW,CAAC7H,GAAG,CAACzC,CAAJyC,GAAQjK,MAAI,CAACsqB,MAAL,CAAY9iB,CAArB,IAA0B4gG,SAAS,CAAC5gG,CAA/CsK,CAAR;AACA,wBAAIrK,CAAC,GAAGqK,IAAI,CAAC+hB,KAAL/hB,CAAW,CAAC7H,GAAG,CAACxC,CAAJwC,GAAQjK,MAAI,CAACsqB,MAAL,CAAY7iB,CAArB,IAA0B2gG,SAAS,CAAC3gG,CAA/CqK,CAAR;AAEA,wBAAIzW,IAAI,GAAMkM,CAAC,MAADA,GAAKC,CAALD,MAAAA,GAAUE,CAAxB;AACA,wBAAIu+F,KAAK,GAAGd,QAAQ,CAACnqG,GAATmqG,CAAa7pG,IAAb6pG,CAAZ;;AACA,wBAAI,CAACc,KAAL,EAAY;AACRA,sBAAAA,KAAK,GAAG,IAAIpB,oBAAJ,EAARoB;AACAA,sBAAAA,KAAK,CAACnB,IAANmB,CAAW1oD,WAAX0oD,CAAuB35E,QAAvB25E,CAAgCoC,SAAhCpC,EAA2C1zF,cAA3C0zF,CAA0D,GAA1DA;AACAA,sBAAAA,KAAK,CAACnB,IAANmB,CAAW3oD,MAAX2oD,CAAkBjsE,GAAlBisE,CAAsBz+F,CAAtBy+F,EAAyBx+F,CAAzBw+F,EAA4Bv+F,CAA5Bu+F,EAA+B35E,QAA/B25E,CAAwCoC,SAAxCpC;AACAA,sBAAAA,KAAK,CAACnB,IAANmB,CAAW3oD,MAAX2oD,CAAkBv0F,GAAlBu0F,CAAsBA,KAAK,CAACnB,IAANmB,CAAW1oD,WAAjC0oD;AACAA,sBAAAA,KAAK,CAACnB,IAANmB,CAAW3oD,MAAX2oD,CAAkB30F,QAAlB20F,CAA2BhmG,MAAI,CAACsqB,MAAhC07E;AACAA,sBAAAA,KAAK,CAAC3qG,IAAN2qG,GAAa3qG,IAAb2qG;AAEAd,sBAAAA,QAAQ,CAACnrE,GAATmrE,CAAa7pG,IAAb6pG,EAAmBc,KAAnBd;AACAG,sBAAAA,MAAM,CAAChoG,IAAPgoG,CAAYW,KAAZX;;;AAGJh9D,oBAAAA,EAAE,CAACggE,eAAHhgE,CAAmB1b,OAAnB0b,CAA2B,UAACmgD,GAAD,EAAMhqF,GAAN,EAAc;AACrC,0BAAI8pG,GAAG,GAAG,IAAI3D,eAAJ,CAAoBnmG,GAApB,EAAyB6pC,EAAzB,CAAV;;AACA,0BAAI,CAACmgD,GAAL,EAAU;AACN7qF,wBAAAA,OAAO,CAACC,IAARD,CAAgB0qC,EAAE,CAACC,KAAHD,CAAS5kC,IAAT4kC,CAAchtC,IAAdgtC,eAAAA,GAA+B7pC,GAA/B6pC,cAAhB1qC;AACA;;;AAEJ,0BAAI,CAAC0qC,EAAE,CAACC,KAAHD,CAAS8wB,SAAT9wB,CAAmB7pC,GAAnB6pC,CAAL,EAA8B;AAC1B;;;AAEJ,0BAAIy8D,SAAS,GAAGkB,KAAK,CAAClB,SAANkB,CAAgBjrG,GAAhBirG,CAAoBxd,GAApBwd,CAAhB;;AACA,0BAAI,CAAClB,SAAL,EAAgB;AACZA,wBAAAA,SAAS,GAAG,EAAZA;AACAkB,wBAAAA,KAAK,CAACjB,cAANiB;AACAA,wBAAAA,KAAK,CAAClB,SAANkB,CAAgBjsE,GAAhBisE,CAAoBxd,GAApBwd,EAAyBlB,SAAzBkB;;;AAEJA,sBAAAA,KAAK,CAAChB,WAANgB;AACAhmG,sBAAAA,MAAI,CAACglG,WAAL;AACAF,sBAAAA,SAAS,CAACznG,IAAVynG,CAAewD,GAAfxD;AACH,qBAlBDz8D;AAmBH,mBAvCDF;;AAuCE,uBAAA;AAAA,0BAAA;AAAA,yCAAA;;8BA9DN;AA+DC,aA/Da;;AA+Db,2BAAA;AAAA,mDAAA;;;AAAA,yBAAA;WAjEA;;AAiEAvf,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KAtRD,YAAA,GACa;AACT,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAWjK,CAAX,EAAc;AACV,iBAAKy1E,OAAL;;;AACHtpG,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GACc;AACV,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAYjK,CAAZ,EAAe;AACX,iBAAK01E,QAAL;;;AACHvpG,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GACc;AACV,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAYjK,CAAZ,EAAe;AACX,iBAAKw1E,QAAL;;;AACHrpG,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GACa;AACT,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAWjK,CAAX,EAAc;AACV,iBAAKs1E,OAAL;;;AACHnpG,UAAAA;AAAAlB,UAAAA,KAWD,YAAA,GACkB;AACd,gBAAIoB,KAAK,GAAG,CAAZ;AACA,iBAAKkpG,MAAL,CAAY14E,OAAZ,CAAoB,UAAAmrB,CAAA,EAAK;AACrB37C,cAAAA,KAAK,IAAI27C,CAAC,CAACywD,aAAXpsG;AACH,aAFD;AAGA,mBAAOA,KAAP;;;AACHF,UAAAA;AAAAlB,UAAAA,KAyBD,YAAA,GACkB;AACd,mBAAO,KAAKiqG,WAAZ;;WA2MH;;AA1MA,8BAAA;QAhFgCl/F;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;iEAIzCpf,oJAQAA,qJAQAA,oJAQAA,sKAQAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,IAAIxO,IAAJ,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CADH;;iFAER5Q;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACA,IAAIxO,IAAJ,CAAS,CAAC,EAAV,EAAc,CAAC,EAAf,EAAmB,CAAC,EAApB,CADA;;0FAGR5Q;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACS,IADT;;sEAIRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAYwB,EAZxB;;sFA8BRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,CADL;;sEAERpf,0GA9Ea,CAAjBghC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCD,UAAQlhC,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAGayrE,eAAe,sCAD3B3sG,OAAO,CAAC,iBAAD;AAAmBI,QAAAA,2CAAA;;AAAA,gCAAA;AAAA,0DAAA;;;AAAA,8CAAA;;AAAAK,QAAAA,OAEvByL,KAFuB,GAEvB,cAAA,GAAS;AACL,cAAIqiC,EAAE,GAAG,KAAKpiC,YAAL,CAAkBmiC,YAAlB,CAAT;AAEA,cAAIzR,QAAQ,GAAG,IAAIkO,QAAQ,CAACC,gBAAb,CAA8B;AACzC9hC,YAAAA,MAAM,EAAEqlC,EAAE,CAAC1R;AAD8B,WAA9B,CAAf;AAGAA,UAAAA,QAAQ,CAACoO,gBAATpO,CAA0B;AAAE6xE,YAAAA,cAAc,EAAE;AAAlB,WAA1B7xE;AACA0R,UAAAA,EAAE,CAAC1R,QAAH0R,GAAc1R,QAAd0R;AACH,SAVsB;;AAUtB,8BAAA;QATgCviC;;;;;;;;;;;;;;;;;;;;;;;;;;ACHrC,UAAQhM,OAAO,GAAwBC,UAAU,CAAzCD,OAAR;AAAA,UAAiBkhC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAAjB;UAIaytE,aAAa,oCAFzB3uG,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,0DAAA;;;AAAA,4CAAA;;AAAAK,QAAAA,OAGrByL,KAHqB,GAGrB,cAAA,GAAS;AAAA,0BAAA;;AACLgoB,UAAAA,UAAU,CAAC,YAAM;AACb5zB,YAAAA,KAAI,CAACsuG,IAAL;AACH,WAFS,EAEP,IAFO,CAAV16E;AAGH,SAPoB;;AAOpBzzB,QAAAA,OACDmuG,IADC,GACD,aAAA,GAAQ;AACJ,cAAIvgE,GAAG,GAAG,KAAK1kC,IAAL,CAAUmC,uBAAV,CAAkCwiC,YAAlC,CAAV;AACAD,UAAAA,GAAG,CAACxb,OAAJwb,CAAY,UAAAE,EAAA,EAAM;AACdA,YAAAA,EAAE,CAACC,KAAHD,CAASE,UAATF,GAAsB,YAAM,CAAG,CAA/BA;AACH,WAFDF;AAGH,SANA;;AAMA,4BAAA;QAX8BriC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHnC,UAAQhM,OAAO,GAAqBC,UAAU,CAAtCD,OAAR;AAAA,UAAiB6d,IAAI,GAAe5d,UAAU,CAA7B4d,IAAjB;AAAA,UAAuB3d,QAAQ,GAAKD,UAAU,CAAvBC,QAAvB;UAGa2uG,mBAAmB,0CAD/B7uG,OAAO,CAAC,0BAAD,WAOHE,QAAQ,CAAC4uG,YAAD;AAAc1uG,QAAAA,+CAAA;;AAAA,oCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MALvBohC,OAKuB,GALkB,IAKlB;;AALsBzjB,UAAAA,2FAAA;;AAAAA,UAAAA,wFAAA;;AAAAA,UAAAA,2FAAA;;AAAAA,UAAAA,kGAAA;;AAAAA,UAAAA,gGAAA;;AAAA,sBAAA;;;AAAA,kDAAA;;AAAAxd,QAAAA,OAkC7CsuG,UAlC6C,GAkC7C,mBAAA,GAAc;AACV,cAAIrtE,OAAO,GAAG,KAAKA,OAAnB;AACA,cAAI4sE,SAAS,GAAG5sE,OAAO,CAAC4sE,SAAxB;;AACA,cAAI,KAAKU,gBAAT,EAA2B;AACvBV,YAAAA,SAAS,GAAG,KAAKA,SAAjBA;;;AAEJ,cAAIW,aAAa,GAAGX,SAAS,GAAG,CAAhC;AACA,cAAI/C,MAAM,GAAG,KAAKA,MAAlB;AACAA,UAAAA,MAAM,CAACnqG,MAAPmqG,GAAgB,CAAhBA;AAEA,cAAI2D,QAAQ,GAAG,KAAKvlG,IAAL,CAAUwD,aAAzB;AACA,cAAIwhF,UAAU,GAAG,KAAKhlF,IAAL,CAAUkkC,aAAV,EAAjB;AAEA,cAAIshE,MAAM,GAAGn3F,IAAI,CAAC+hB,KAAL/hB,CAAW22E,UAAU,CAAClhF,CAAXkhF,GAAe2f,SAA1Bt2F,CAAb;AACA,cAAIo3F,MAAM,GAAGp3F,IAAI,CAAC+hB,KAAL/hB,CAAW22E,UAAU,CAACjhF,CAAXihF,GAAe2f,SAA1Bt2F,CAAb;AACA,cAAIq3F,MAAM,GAAGr3F,IAAI,CAAC+hB,KAAL/hB,CAAW22E,UAAU,CAAChhF,CAAXghF,GAAe2f,SAA1Bt2F,CAAb;AAEA,eAAKs3F,UAAL,CAAgBrvE,GAAhB,CAAoBkvE,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC;;AAEA,eAAK,IAAI5hG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0hG,MAApB,EAA4B1hG,CAAC,EAA7B,EAAiC;AAC7B,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0hG,MAApB,EAA4B1hG,CAAC,EAA7B,EAAiC;AAC7B,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0hG,MAApB,EAA4B1hG,CAAC,EAA7B,EAAiC;AAC7B,oBAAI4hG,QAAQ,GAAG9hG,CAAC,GAAG2hG,MAAJ3hG,GAAa4hG,MAAb5hG,GAAsBC,CAAC,GAAG2hG,MAA1B5hG,GAAmCE,CAAlD;AAEA,oBAAIu+F,KAAK,GAAGX,MAAM,CAACgE,QAAD,CAANhE,GAAmB,IAAIuD,YAAJ,EAA/B;AACA5C,gBAAAA,KAAK,CAACqD,QAANrD,GAAiBqD,QAAjBrD;AACAA,gBAAAA,KAAK,CAAC3oD,MAAN2oD,CACKjsE,GADLisE,CACSgD,QADThD,EAEKhxF,KAFLgxF,CAEWz+F,CAAC,GAAG6gG,SAFfpC,EAE0Bx+F,CAAC,GAAG4gG,SAF9BpC,EAEyCv+F,CAAC,GAAG2gG,SAF7CpC,EAGKhxF,KAHLgxF,CAGW+C,aAHX/C,EAG0B+C,aAH1B/C,EAGyC+C,aAHzC/C,EAIKsD,UAJLtD,CAIgBvd,UAAU,CAAClhF,CAAXkhF,GAAe,CAJ/Bud,EAIkCvd,UAAU,CAACjhF,CAAXihF,GAAe,CAJjDud,EAIoDvd,UAAU,CAAChhF,CAAXghF,GAAe,CAJnEud;AAKAA,gBAAAA,KAAK,CAAC1oD,WAAN0oD,CAAkBjsE,GAAlBisE,CAAsB+C,aAAtB/C,EAAqC+C,aAArC/C,EAAoD+C,aAApD/C;;;;AAIf,SArE4C;;AAqE5Cp9E,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KA7DD,YAAA,GACkB;AACd,mBAAO,KAAKsqG,MAAL,CAAYnqG,MAAnB;;;AACHe,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GACY;AACR,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAUjK,CAAV,EAAa;AACT,gBAAI,KAAK0L,OAAT,EAAkB;AACd,kBAAI9xB,KAAK,GAAG,KAAK8xB,OAAL,CAAa+tE,KAAb,CAAmB5vC,OAAnB,CAA2B,IAA3B,CAAZ;;AACA,kBAAIjwD,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,qBAAK8xB,OAAL,CAAaguE,UAAb,CAAwB9/F,KAAxB,EAA+BA,KAAK,GAAG,CAAvC;;;;WAgDX;;AA7CA,kCAAA;QAzBoC5D,uFAGpC9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,IAAIxO,IAAJ,EADJ;;;AACcqO,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGE,EAHF;;sEAKtBpf,uJAKAA,qKAaAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,CADH;;2FAERpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACU,KADV;;yFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACQ,KADR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa4uG,YAAY,mCADxB9uG,OAAO,CAAC,mBAAD,WAOHE,QAAQ,CAAC;AAAEyvG,QAAAA,OAAO,EAAE;AAAX,OAAD;AAAoB,6BAAA;AAAA1xF,UAAAA,6DAAA;;AAAAA,UAAAA,mEAAA;;AAAAA,UAAAA,oEAAA;;AAAA,eAG7B+sF,SAH6B,GAGD,EAHC;AAGC,eAa9B4E,cAb8B,GAab,KAba;AAaR,eACtBC,SADsB,GACY,IAAIC,GAAJ,EADZ;;AACmB7xF,UAAAA,gEAAA;;AAAA,eAqDzC8xF,gBArDyC,GAqDtB,CArDsB;AAqDrB,eACpBC,gBADoB,GACO,EADP;;;AACS,2CAAA;;AAAAvvG,QAAAA,OArD7BwvG,aAqD6B,GArD7B,sBAAA,GAAiB;AACb,cAAI,KAAKL,cAAT,EAAyB;AACrB;;;AAGJ,cAAIC,SAAS,GAAG,KAAKA,SAArB;AACAA,UAAAA,SAAS,CAAChpE,KAAVgpE;AAEA,cAAI7E,SAAS,GAAG,KAAKA,SAArB;;AACA,eAAK,IAAI7pG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,gBAAI4pC,QAAQ,GAAGigE,SAAS,CAAC7pG,CAAD,CAAxB;AACA,gBAAI,CAAC4pC,QAAL,EAAe;AAEf,gBAAImlE,WAAW,GAAGnlE,QAAQ,CAAC9W,OAA3B;AACA8W,YAAAA,QAAQ,CAAC9W,OAAT8W,GAAmB,IAAnBA;AAEAA,YAAAA,QAAQ,CAACphC,IAATohC,CAAco0B,oBAAdp0B;AACCA,YAAAA,QAAQ,CAACyD,KAATzD,CAAuB2D,iBAAvB3D,GAA2C,IAA3CA;AACDA,YAAAA,QAAQ,CAACyD,KAATzD,CAAe0D,UAAf1D,CAA0B,CAA1BA;AAEA,gBAAIolE,IAAI,GAAGplE,QAAQ,CAACyD,KAATzD,CAAes0B,SAA1B;;AACA,iBAAK,IAAItpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGo6E,IAAI,CAAC/uG,MAAzB,EAAiC20B,CAAC,EAAlC,EAAsC;AAClC,kBAAI2lB,MAAM,GAAGy0D,IAAI,CAACp6E,CAAD,CAAJo6E,CAAQz0D,MAArB;;AACA,mBAAK,IAAI4xD,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG5xD,MAAM,CAACt6C,MAA7B,EAAqCksG,EAAE,EAAvC,EAA2C;AACvC,oBAAIj5B,MAAM,GAAG34B,MAAM,CAAC4xD,EAAD,CAAN5xD,CAAW6jB,kBAAX7jB,CAA8B,OAAO,KAAK6zD,QAA1C7zD,CAAb;AACA24B,gBAAAA,MAAM,CAAC7U,KAAP6U,CAAa87B,IAAI,CAACp6E,CAAD,CAAjBs+C,EAAsBi5B,EAAtBj5B;AACAw7B,gBAAAA,SAAS,CAACl4F,GAAVk4F,CAAcx7B,MAAdw7B;;;;AAIR9kE,YAAAA,QAAQ,CAAC9W,OAAT8W,GAAmBmlE,WAAnBnlE;AACA,iBAAK6kE,cAAL,GAAsB,IAAtB;;;AACH,uCAEwB;AAAA,gBAAhBzuG,CAAC,cAAe;AACrBA,YAAAA,CAAC,CAACivG,WAAFjvG,GAAgBA,CAAC,CAAC0lC,KAAlB1lC;;AACAA,YAAAA,CAAC,CAAC0lC,KAAF1lC,GAAU,YAAY,CAAG,CAAzBA;;AAEA,gBAAIkvG,YAAY,GAAGlvG,CAAC,CAACmvG,aAArB;;AACAnvG,YAAAA,CAAC,CAACmvG,aAAFnvG,GAAkB,UAAUovG,SAAV,EAAqB;AACnC,kBAAI,KAAKC,QAAT,EAAmB;AACf;;;AAEJ,mBAAKA,QAAL,GAAgB,IAAhB;AACAH,cAAAA,YAAY,CAAC/lF,IAAb+lF,CAAkB,IAAlBA,EAAwBE,SAAxBF;AACH,aANDlvG;AAOH,WAdA;;AAED,+DAAc0uG,iBAAd,6BAAA;AAAuB7yD,YAAAA;;AAa1B,SAM4B;;AAN5BluB,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KA7DD,YAAA,GACqB;AACjB,mBAAO,KAAKwvG,YAAL,CAAkBrvG,MAAzB;;;AACHe,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GAAqB;AACjB,gBAAI,KAAK8uG,gBAAL,KAA0B,CAA9B,EAAiC;AAC7B,qBAAO,KAAKU,YAAL,CAAkBrvG,MAAlB,GAA2B,CAA3B,GAA+B,CAAtC;;;AAEJ,mBAAO,CAAC,KAAK2uG,gBAAL,GAAwB,KAAKC,gBAAL,CAAsB5uG,MAA/C,IAAyD,KAAK2uG,gBAArE;;WAoDH;;AAnDA,2BAAA;kFAnBA7vG;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACA,IAAIxO,IAAJ,EADA;;sFAER5Q;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,IAAIxO,IAAJ,EADL;;;AACaqO,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGG,EAHH;;yEAMrBpf,6KA+DAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACE,CADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEb,UAAQtf,OAAO,GAAwCC,UAAU,CAAzDD,OAAR;AAAA,UAAiBE,QAAQ,GAA8BD,UAAU,CAAhDC,QAAjB;AAAA,UAA2B2d,IAAI,GAAwB5d,UAAU,CAAtC4d,IAA3B;AAAA,UAAiCqjB,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAAjC;;AAEA,UAAIwvE,QAAQ,GAAG,IAAInjG,QAAQ,CAACojG,GAAb,EAAf;;AACA,UAAIC,QAAQ,GAAG,IAAIrjG,QAAQ,CAACC,GAAb,EAAf;;AAEA,UAAIqjG,cAAmD,GAAG,IAAIv2E,GAAJ,EAA1D;;AAAiE,UAE5Dw2E,UAF4D;;AAElD,iBAAVA;AAAAA,QAAAA,UAAU,CAAVA,UAAU,SAAA,CAAVA,IAAU,CAAVA,WAAAA;AAAAA,QAAAA,UAAU,CAAVA,UAAU,iBAAA,CAAVA,IAAU,CAAVA,mBAAAA;AAAAA,QAAAA,UAAU,CAAVA,UAAU,yBAAA,CAAVA,IAAU,CAAVA,2BAAAA;OAAU,EAAVA,UAAU,KAAVA,UAAU,KAAA,CAAA;;AAKfC,MAAAA,MAAM,CAACD,UAAD,CAANC;UAIanvE,sBAAsB,6CAFlC5hC,OAAO,CAAC,6BAAD,WAKH6d,IAAI,CAACD,IAAD,WAGJC,IAAI,CAACgkB,MAAD,WAiBJ3hC,QAAQ,CAAC;AAAEyvG,QAAAA,OAAO,EAAE;AAAX,OAAD,WAyDR9xF,IAAI,CAACizF,UAAD,iBAjFR5vE,iBAAiB;AAAA9gC,QAAAA,kDAAA;;AAAA,uCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,qFAAA;;AAAAA,UAAAA,wFAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,kGAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,+FAAA;;AAAAA,UAAAA,gGAAA;;AAAAA,UAAAA,iGAAA;;AAAAA,UAAAA,8FAAA;;AAAAA,UAAAA,gGAAA;;AAAAA,UAAAA,sGAAA;;AAAAA,UAAAA,kGAAA;;AAAAA,UAAAA,yFAAA;;AAAA3d,UAAAA,MAgFd0wG,WAhFc,GAgFAF,UAAU,CAACG,cAhFX;;AAgFyBhzF,UAAAA,gGAAA;;AAAA3d,UAAAA,MAavC0qG,SAbuC,GAaX,EAbW;AAaT1qG,UAAAA,MAC9Bw9E,MAD8B,GACG,EADH;AACKx9E,UAAAA,MAEnC4wG,eAFmC,GAEjB,KAFiB;AAEZ5wG,UAAAA,MACvB6wG,oBADuB,GACqB,IADrB;AACyB7wG,UAAAA,MAChD8wG,iBADgD,GACP,IADO;AACH9wG,UAAAA,MAE7CmvG,KAF6C,GAEd,EAFc;AAEZnvG,UAAAA,MAkFjCuvG,SAlFiC,SAAA;AAkFxBvvG,UAAAA,MAsHT+wG,SAtHS,GAsHG,KAtHH;AAsHQ/wG,UAAAA,MACjBgxG,gBADiB,GACE,CADF;AACGhxG,UAAAA,MACpBixG,mBADoB,GACE,CADF;AACGjxG,UAAAA,MACvBkxG,iBADuB,GACH,IAAI1gG,IAAJ,EADG;AACKxQ,UAAAA,MAC5BmxG,iBAD4B,GACA,EADA;;AACExzF,UAAAA,yGAAA;;AAAAA,UAAAA,iGAAA;;AAAAA,UAAAA,8FAAA;;AAAA3d,UAAAA,MAmC9BoxG,eAnC8B,GAmCZ,IAnCY;AAmCRpxG,UAAAA,MAEtBqxG,UAFsB,GAET,CAFS;AAER,sBAAA;;;AAAA,qDAAA;;AAAAlxG,QAAAA,OAhPdmxG,YAgPc,GAhPd,qBAAA,GAAgB;AACZ,eAAKnC,KAAL,GAAa,KAAK3jG,uBAAL,CAA6B+iG,mBAA7B,CAAb;;AACA,eAAK,IAAI1tG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsuG,KAAL,CAAWruG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,iBAAKsuG,KAAL,CAAWtuG,CAAX,EAAcugC,OAAd,GAAwB,IAAxB;;AAEP,SA2Oa;;AA3ObjhC,QAAAA,OAED0gC,QAFC,GAED,iBAAA,GAAY;AACRS,UAAAA,sBAAsB,CAAC3zB,QAAvB2zB,GAAkC,IAAlCA;AACH,SAJA;;AAIAnhC,QAAAA,OAED2gC,SAFC,GAED,kBAAA,GAAa;AACT,cAAI4pE,SAAS,GAAG,KAAKA,SAArB;;AACA,eAAK,IAAI7pG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,gBAAI6pG,SAAS,CAAC7pG,CAAD,CAAT6pG,CAAax8D,KAAjB,EAAwB;AACpBw8D,cAAAA,SAAS,CAAC7pG,CAAD,CAAT6pG,CAAax8D,KAAbw8D,CAAmB/2E,OAAnB+2E,GAA6B,IAA7BA;;;;AAGR,eAAKoG,iBAAL,GAAyB,IAAzB;;AAEA,cAAIxvE,sBAAsB,CAAC3zB,QAAvB2zB,KAAoC,IAAxC,EAA8C;AAC1CA,YAAAA,sBAAsB,CAAC3zB,QAAvB2zB,GAAkCpgC,SAAlCogC;;AAEP,SAdA;;AAcAnhC,QAAAA,OAEDyL,KAFC,GAED,cAAA,GAAS;AACL,eAAK2lG,KAAL;AACH,SAJA;;AAIApxG,QAAAA,OACDoxG,KADC,GACD,cAAA,GAAS;AACL,eAAKD,YAAL;;AAEA,cAAI,KAAK94E,IAAT,EAAe;AACX,iBAAKkyE,SAAL,GAAiB,KAAKlyE,IAAL,CAAWhtB,uBAAX,CAAmCwiC,YAAnC,CAAjB;AACA,iBAAK08D,SAAL,GAAiB,KAAKA,SAAL,CAAepgE,MAAf,CAAsB,UAAAqU,CAAA;AAAC,qBAAIA,CAAC,CAACpU,kBAAN;aAAvB,CAAjB;AACA,iBAAKizC,MAAL,GAAc,KAAKktB,SAAL,CAAe71E,GAAf,CAAmB,UAAA8pB,CAAA;AAAC,qBAAIA,CAAC,CAACzQ,KAAN;AAAY,aAAhC,CAAd;AAEA,gBAAIrZ,GAA8B,GAAG,IAAImF,GAAJ,EAArC;AACA,iBAAK0wE,SAAL,CAAen4E,OAAf,CAAuB,UAAAosB,CAAA,EAAK;AACxB9pB,cAAAA,GAAG,CAAC8K,GAAJ9K,CAAQ8pB,CAAC,CAACt1C,IAAFs1C,CAAO19C,IAAf4zB,EAAqB8pB,CAArB9pB;AACH,aAFD;AAIA,gBAAI28E,UAAU,GAAG,KAAKA,UAAtB;AACA,iBAAKrC,KAAL,CAAW58E,OAAX,CAAmB,UAAA+G,IAAA,EAAQ;AACvBA,cAAAA,IAAI,CAAC2xE,MAAL3xE,CAAY/G,OAAZ+G,CAAoB,UAAAsyE,KAAA,EAAS;AACzBA,gBAAAA,KAAK,CAAClB,SAANkB,GAAkBA,KAAK,CAACuE,YAANvE,CAAmB/2E,GAAnB+2E,CAAuB,UAAAt8F,KAAA;AAAK,yBAAIulB,GAAG,CAACl0B,GAAJk0B,CAAQ28E,UAAU,CAACliG,KAAD,CAAlBulB,CAAJ;AAA+B,iBAA3D+2E,CAAlBA;AACH,eAFDtyE;AAGH,aAJD;;;AAQJ,cAAIoxE,SAAS,GAAG,KAAKA,SAArB;;AACA,cAAI,KAAK+G,eAAL,IAAwB,KAAK9B,aAAjC,EAAgD;AAC5C,iBAAK,IAAI9uG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,kBAAIqtC,KAAK,GAAGw8D,SAAS,CAAC7pG,CAAD,CAAT6pG,CAAax8D,KAAzB;;AACA,kBAAIA,KAAJ,EAAW;AACPA,gBAAAA,KAAK,CAACva,OAANua,GAAgB,KAAhBA;;;;;AAKZw8D,UAAAA,SAAS,CAACn4E,OAAVm4E,CAAkB,UAAA/rD,CAAA,EAAK;AACnB,gBAAIA,CAAC,CAACzQ,KAAFyQ,IAAW,CAACA,CAAC,CAACzQ,KAAFyQ,CAAQ+yD,iBAAxB,EAA2C;AACvC/yD,cAAAA,CAAC,CAACzQ,KAAFyQ,CAAQ+yD,iBAAR/yD,GAA4BA,CAAC,CAACzQ,KAAFyQ,CAAQxQ,UAApCwQ;AACAA,cAAAA,CAAC,CAACzQ,KAAFyQ,CAAQgzD,SAARhzD,GAAoB,IAApBA;;AACAA,cAAAA,CAAC,CAACzQ,KAAFyQ,CAAQxQ,UAARwQ,GAAqB,UAAUizD,KAAV,EAAyB;AAC1C,oBAAIjzD,CAAC,CAACzQ,KAAFyQ,IAAW,CAACA,CAAC,CAACzQ,KAAFyQ,CAAQgzD,SAAxB,EAAmC;AAC/B;;;AAEJ,qBAAKD,iBAAL,CAAuBE,KAAvB;;AAEA,oBAAIjzD,CAAC,CAACzQ,KAAN,EAAa;AACTyQ,kBAAAA,CAAC,CAACzQ,KAAFyQ,CAAQgzD,SAARhzD,GAAoB,KAApBA;;AAEP,eATDA;;AAYP,WAhBD+rD;AAkBA,eAAKkG,eAAL,GAAuB,IAAvB;AACH,SApDA;;AAoDAzwG,QAAAA,OAID0xG,WAJC,GAID,oBAAA,GAAe;AACX,cAAI,CAAC,KAAK35E,MAAN,IAAgB,CAAC,KAAK04E,eAAtB,IAAyC,KAAKG,SAA9C,IAA2D,CAAC,KAAK74E,MAAL,CAAY7uB,IAA5E,EAAkF;AAC9E;;;AAGJ,eAAKwnG,oBAAL,GAA4B,IAA5B;AAEA,cAAInG,SAAS,GAAG,KAAKA,SAArB;AACA,cAAIz9B,QAAQ,GAAG,KAAK/0C,MAAL,CAAY7uB,IAAZ,CAAiBwD,aAAhC;AACA,cAAIsiG,KAAK,GAAG,KAAKA,KAAjB;;AACA,eAAK,IAAItuG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsuG,KAAK,CAACruG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,gBAAIy4B,IAAI,GAAG61E,KAAK,CAACtuG,CAAD,CAAhB;;AACAuvG,YAAAA,QAAQ,CAACntD,MAATmtD,CAAgBzwE,GAAhBywE,CAAoB92E,IAAI,CAACjwB,IAALiwB,CAAUzsB,aAA9BujG;;AACA,gBAAI/hB,UAAU,GAAG/0D,IAAI,CAACjwB,IAALiwB,CAAUiU,aAAVjU,EAAjB;;AACA82E,YAAAA,QAAQ,CAACltD,WAATktD,CAAqBzwE,GAArBywE,CAAyB/hB,UAAU,CAAClhF,CAAXkhF,GAAe,CAAxC+hB,EAA2C/hB,UAAU,CAACjhF,CAAXihF,GAAe,CAA1D+hB,EAA6D/hB,UAAU,CAAChhF,CAAXghF,GAAe,CAA5E+hB;;AAEA,gBAAI,CAACnjG,QAAQ,CAACuyD,SAATvyD,CAAmB6kG,QAAnB7kG,CAA4BmjG,QAA5BnjG,EAAsCggE,QAAtChgE,CAAL,EAA8D;AAC1D;;;AAGJ,gBAAIqsB,IAAI,CAACy4E,cAAT,EAAyB;AACrB,mBAAKlB,oBAAL,GAA4B,IAA5B;;AACA,mBAAK,IAAIhwG,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,EAAC,EAAvC,EAA2C;AACvC,oBAAIqtC,KAAK,GAAGw8D,SAAS,CAAC7pG,EAAD,CAAT6pG,CAAax8D,KAAzB;;AACA,oBAAIA,KAAJ,EAAW;AACPA,kBAAAA,KAAK,CAACva,OAANua,GAAgB,IAAhBA;;;;AAGR;;;AAGJ,gBAAI8/D,SAAS,GAAG,KAAKA,SAArB;;AACA,gBAAI10E,IAAI,CAACo1E,gBAAT,EAA2B;AACvBV,cAAAA,SAAS,GAAG10E,IAAI,CAAC00E,SAAjBA;;;AAEJ,gBAAI7gG,CAAC,GAAGuK,IAAI,CAAC+hB,KAAL/hB,CAAW,CAACu1D,QAAQ,CAAC9/D,CAAT8/D,IAAcmjC,QAAQ,CAACntD,MAATmtD,CAAgBjjG,CAAhBijG,GAAoBA,QAAQ,CAACltD,WAATktD,CAAqBjjG,CAAvD8/D,CAAD,IAA8D+gC,SAAzEt2F,CAAR;AACA,gBAAItK,CAAC,GAAGsK,IAAI,CAAC+hB,KAAL/hB,CAAW,CAACu1D,QAAQ,CAAC7/D,CAAT6/D,IAAcmjC,QAAQ,CAACntD,MAATmtD,CAAgBhjG,CAAhBgjG,GAAoBA,QAAQ,CAACltD,WAATktD,CAAqBhjG,CAAvD6/D,CAAD,IAA8D+gC,SAAzEt2F,CAAR;AACA,gBAAIrK,CAAC,GAAGqK,IAAI,CAAC+hB,KAAL/hB,CAAW,CAACu1D,QAAQ,CAAC5/D,CAAT4/D,IAAcmjC,QAAQ,CAACntD,MAATmtD,CAAgB/iG,CAAhB+iG,GAAoBA,QAAQ,CAACltD,WAATktD,CAAqB/iG,CAAvD4/D,CAAD,IAA8D+gC,SAAzEt2F,CAAR;AAEA,gBAAIm3F,MAAM,GAAGn3F,IAAI,CAAC+hB,KAAL/hB,CAAW22E,UAAU,CAAClhF,CAAXkhF,GAAe2f,SAA1Bt2F,CAAb;AACA,gBAAIo3F,MAAM,GAAGp3F,IAAI,CAAC+hB,KAAL/hB,CAAW22E,UAAU,CAACjhF,CAAXihF,GAAe2f,SAA1Bt2F,CAAb;AACA,gBAAIq3F,MAAM,GAAGr3F,IAAI,CAAC+hB,KAAL/hB,CAAW22E,UAAU,CAAChhF,CAAXghF,GAAe2f,SAA1Bt2F,CAAb;AAEA,gBAAIuzF,MAAM,GAAG3xE,IAAI,CAAC2xE,MAAlB;AACA,gBAAI37F,KAAK,GAAGnC,CAAC,GAAG2hG,MAAJ3hG,GAAa4hG,MAAb5hG,GAAsBC,CAAC,GAAG2hG,MAA1B5hG,GAAmCE,CAA/C;AACA,gBAAIu+F,KAAK,GAAGX,MAAM,CAAC37F,KAAD,CAAlB;;AACA,gBAAI,CAACs8F,KAAL,EAAY;AACR;;;AAGJ,iBAAKiF,oBAAL,GAA4BjF,KAA5B;AAEA;;;AAGJ,cAAI,KAAKkF,iBAAL,KAA2B,KAAKD,oBAApC,EAA0D;AACtD;;;AAGJ,cAAI,CAAC,KAAKA,oBAAV,EAAgC;AAC5B,iBAAK,IAAIhwG,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,GAAC,EAAvC,EAA2C;AACvC,kBAAIqtC,MAAK,GAAGw8D,SAAS,CAAC7pG,GAAD,CAAT6pG,IAAgBA,SAAS,CAAC7pG,GAAD,CAAT6pG,CAAax8D,KAAzC;;AACA,kBAAIA,MAAJ,EAAW;AACPA,gBAAAA,MAAK,CAACva,OAANua,GAAgB,IAAhBA;;;AAGX,WAPD,MAQK;AACD,gBAAI09D,MAAK,GAAG,KAAKiF,oBAAjB;;AAEA,gBAAI,KAAKlB,aAAT,EAAwB;AACpB/D,cAAAA,MAAK,CAAC+D,aAAN/D;;AACA,mBAAK2D,SAAL,GAAiB3D,MAAK,CAAC2D,SAAvB;AAEC,mBAAKr3E,MAAL,CAAYA,MAAZ,CAA2Bq3E,SAA3B,GAAuC,KAAKA,SAA5C;AACJ,aALD,MAMK;AACD,mBAAK,IAAI1uG,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,GAAC,EAAvC,EAA2C;AACvC,oBAAIqtC,OAAK,GAAGw8D,SAAS,CAAC7pG,GAAD,CAAT6pG,CAAax8D,KAAzB;;AACA,oBAAIA,OAAJ,EAAW;AACPA,kBAAAA,OAAK,CAACva,OAANua,GAAgB,KAAhBA;;;;AAGR,mBAAK,IAAIrtC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG+qG,MAAK,CAAClB,SAANkB,CAAgB9qG,MAApC,EAA4CD,GAAC,EAA7C,EAAiD;AAC7C,oBAAIqtC,OAAK,GAAG09D,MAAK,CAAClB,SAANkB,CAAgB/qG,GAAhB+qG,KAAsBA,MAAK,CAAClB,SAANkB,CAAgB/qG,GAAhB+qG,EAAmB19D,KAArD;;AACA,oBAAIA,OAAJ,EAAW;AACP,sBAAI,CAACA,OAAK,CAACva,OAAX,EAAoB;AAChBua,oBAAAA,OAAK,CAACyjE,SAANzjE,GAAkB,IAAlBA;;;AAEJA,kBAAAA,OAAK,CAACva,OAANua,GAAgB,IAAhBA;;;;;;AAOhB,eAAK4iE,iBAAL,GAAyB,KAAKD,oBAA9B;AACH,SArGA;;AAqGA1wG,QAAAA,OAED0D,MAFC,GAED,eAAA,GAAU;AACN,eAAKytG,YAAL;;AAEA,cAAI,KAAKG,eAAT,EAA0B;AACtB,iBAAKI,WAAL;;AAWP,SAjBA;;AAiBA1xG,QAAAA,OA6CDivG,UA7CC,GA6CD,mBAAA,CAAY4C,cAAZ,EAAgCC,YAAhC,EAAyD;AAAA,cAA7CD,cAAc,WAA+B;AAA7CA,YAAAA,cAAc,GAAG,CAAjBA;;;AAAkB,cAAEC,YAAY,WAAd;AAAEA,YAAAA,YAAY,GAAGphB,QAAfohB;;;AAC5B,cAAI,KAAKlB,SAAT,EAAoB;AAChB;;;AAGJ,eAAKM,UAAL,GAAkBxtB,IAAI,CAACC,GAALD,EAAlB;;AAEA0sB,UAAAA,cAAc,CAAChqE,KAAfgqE;;AAEA,eAAKQ,SAAL,GAAiB,IAAjB;AACA,eAAKC,gBAAL,GAAwBgB,cAAxB;AACA,eAAKf,mBAAL,GAA2Bv5F,IAAI,CAACmnC,GAALnnC,CAASu6F,YAATv6F,EAAuB,KAAKy3F,KAAL,CAAWruG,MAAlC4W,CAA3B;AACA,eAAKw5F,iBAAL,GAAyB,IAAI1gG,IAAJ,EAAzB;AAEA,eAAKk6F,SAAL,GAAiB,KAAKlyE,IAAL,CAAWhtB,uBAAX,CAAmCwiC,YAAnC,CAAjB;AACA,eAAK08D,SAAL,GAAiB,KAAKA,SAAL,CAAepgE,MAAf,CAAsB,UAAAqU,CAAA,EAAK;AAAE,mBAAOA,CAAC,CAACpU,kBAAT;AAA8B,WAA3D,CAAjB;AACA,eAAKmgE,SAAL,CAAe/vB,IAAf,CAAoB,UAACrmC,CAAD,EAAIoJ,CAAJ,EAAU;AAC1B,mBAAOpJ,CAAC,CAACrzC,IAAFqzC,CAAO49D,aAAP59D,CAAqBoJ,CAAC,CAACz8C,IAAvBqzC,CAAP;AACH,WAFD;AAIA,eAAKkpC,MAAL,GAAc,KAAKktB,SAAL,CAAe71E,GAAf,CAAmB,UAAA8pB,CAAA;AAAC,mBAAIA,CAAC,CAACzQ,KAAN;AAAY,WAAhC,CAAd;AAEA,cAAIsjE,UAAU,GAAG,KAAK9G,SAAL,CAAe71E,GAAf,CAAmB,UAAA8pB,CAAA;AAAC,mBAAIA,CAAC,CAACt1C,IAAFs1C,CAAO19C,IAAX;WAApB,CAAjB;;AACA,cAAI,CAAC,KAAKuwG,UAAN,IAAoB,CAAC,KAAKA,UAAL,CAAgB1wG,MAAzC,EAAiD;AAC7C,iBAAK0wG,UAAL,GAAkBA,UAAlB;AACH,WAFD,MAGK;AACD,gBAAIW,aAAa,GAAG,KAAKX,UAAzB;AACA,gBAAIY,aAAa,GAAG,KAApB;;AACA,iBAAK,IAAIvxG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2wG,UAAU,CAAC1wG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,kBAAI2wG,UAAU,CAAC3wG,CAAD,CAAV2wG,KAAkBW,aAAa,CAACtxG,CAAD,CAAnC,EAAwC;AACpCuxG,gBAAAA,aAAa,GAAG,IAAhBA;;;;AAIR,gBAAIA,aAAJ,EAAmB;AACf,mBAAKjD,KAAL,CAAW58E,OAAX,CAAmB,UAAA+hB,CAAA,EAAK;AACpBA,gBAAAA,CAAC,CAAC22D,MAAF32D,CAAS/hB,OAAT+hB,CAAiB,UAAAoJ,CAAA,EAAK;AAClB,sBAAI20D,UAAU,GAAG,EAAjB;AACA30D,kBAAAA,CAAC,CAACyyD,YAAFzyD,CAAenrB,OAAfmrB,CAAuB,UAAA78C,CAAA,EAAK;AACxB,wBAAIyxG,IAAI,GAAGd,UAAU,CAACjyC,OAAXiyC,CAAmBW,aAAa,CAACtxG,CAAD,CAAhC2wG,CAAX;;AACA,wBAAIc,IAAI,KAAK,CAAC,CAAd,EAAiB;AACbD,sBAAAA,UAAU,CAACpvG,IAAXovG,CAAgBC,IAAhBD;;AAGP,mBAND30D;AAOAA,kBAAAA,CAAC,CAACyyD,YAAFzyD,GAAiB20D,UAAjB30D;AACH,iBAVDpJ;AAWH,eAZD;AAaA,mBAAKk9D,UAAL,GAAkBA,UAAlB;;;;AAKR,cAAIe,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAI1xG,GAAC,GAAG6W,IAAI,CAACwF,GAALxF,CAAS,CAATA,EAAY,KAAK86F,WAAL,CAAiBrlG,CAA7BuK,CAAR,EAAyCw7B,CAAC,GAAGx7B,IAAI,CAACmnC,GAALnnC,CAAS,KAAK86F,WAAL,CAAiBplG,CAA1BsK,EAA6B,KAAK8lE,MAAL,CAAY18E,MAAzC4W,CAAlD,EAAoG7W,GAAC,GAAGqyC,CAAxG,EAA2GryC,GAAC,EAA5G,EAAgH;AAC5G0xG,YAAAA,QAAQ,CAACtvG,IAATsvG,CAAc,KAAK/0B,MAAL,CAAY38E,GAAZ,CAAd0xG;;;AAEJ,eAAK/0B,MAAL,GAAc+0B,QAAd;AACA,eAAK/0B,MAAL,CAAY18E,MAAZ,GAAqB4W,IAAI,CAACmnC,GAALnnC,CAAS,KAAK8lE,MAAL,CAAY18E,MAArB4W,EAA6B,KAAK+6F,aAAlC/6F,CAArB;AACA,eAAKg7F,aAAL,GAAqB,KAAKhI,SAAL,CAAe5pG,MAApC;;AAEA,eAAK,IAAID,GAAC,GAAG,KAAKmwG,gBAAlB,EAAoCnwG,GAAC,GAAG,KAAKowG,mBAA7C,EAAkEpwG,GAAC,EAAnE,EAAuE;AACnE,iBAAKsuG,KAAL,CAAWtuG,GAAX,EAAc4tG,UAAd;;;AAGJlrG,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,kCAAZA;AAGAA,UAAAA,OAAO,CAAChC,IAARgC,CAAa,yBAAbA;;AAEA,cAAI,KAAKovG,cAAT,EAAyB;AACrB,iBAAKxB,iBAAL,GAAyByB,gBAAgB,CAAC,KAAKC,eAAN,CAAzC;AACH,WAFD,MAGK;AACD,iBAAK1B,iBAAL,GAAyB2B,WAAW,CAAC,KAAKt1B,MAAN,CAApC;;;AAGJj6E,UAAAA,OAAO,CAACoyD,OAARpyD,CAAgB,yBAAhBA;;AAEA,cAAI,KAAKwvG,MAAT,EAAiB;AACbxvG,YAAAA,OAAO,CAAChC,IAARgC,CAAa,yBAAbA;AAEA,gBAAIopF,YAAY,GAAG,CAAnB;;AACA,gBAAI,KAAK+jB,WAAL,KAAqBF,UAAU,CAACG,cAApC,EAAoD;AAChDhkB,cAAAA,YAAY,GAAG,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAA3BA;;;AAGJ,gBAAI,KAAKykB,eAAT,EAA0B;AACtB,kBAAI4B,qBAAqB,GAAGt7F,IAAI,CAACmnC,GAALnnC,CAAS,KAAKs7F,qBAAdt7F,EAAqC,KAAKy5F,iBAAL,CAAuBrwG,MAA5D4W,CAA5B;AACAu7F,cAAAA,UAAU,CAACxmB,YAAXwmB,CAAwB,KAAKz1B,MAA7By1B,EAAqCD,qBAArCC,EAA4DtmB,YAA5DsmB;AACA,mBAAK7B,eAAL,GAAuB,KAAvB;;;AAGJ7tG,YAAAA,OAAO,CAACoyD,OAARpyD,CAAgB,yBAAhBA;;AAEP,SA7IA;;AA6IApD,QAAAA,OAEDsuG,UAFC,GAED,mBAAA,GAAc;AACV,eAAK,IAAI5tG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsuG,KAAL,CAAWruG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIy4B,IAAI,GAAG,KAAK61E,KAAL,CAAWtuG,CAAX,CAAX;AACAy4B,YAAAA,IAAI,CAACm1E,UAALn1E;;AAEP,SAPA;;AAOAn5B,QAAAA,OAED+yG,KAFC,GAED,cAAA,GAAS;AACL,cAAI,CAAC,KAAK16E,IAAV,EAAgB;AACZ;;;AAUJ,cAAM26E,yBAAyB,GAAG,CAAlC;AACA,cAAIC,eAAe,GAAG,CAAtB;;AAEA,eAAK,IAAIvyG,CAAC,GAAG,KAAKmwG,gBAAlB,EAAoCnwG,CAAC,GAAG,KAAKowG,mBAA7C,GAAmE;AAC/D,gBAAI33E,IAAI,GAAG,KAAK61E,KAAL,CAAWtuG,CAAX,CAAX;AACA,gBAAIoqG,MAAM,GAAG3xE,IAAI,CAAC2xE,MAAlB;AAEA,gBAAI4D,MAAM,GAAGv1E,IAAI,CAAC01E,UAAL11E,CAAgBnsB,CAA7B;AACA,gBAAI2hG,MAAM,GAAGx1E,IAAI,CAAC01E,UAAL11E,CAAgBlsB,CAA7B;AACA,gBAAI2hG,MAAM,GAAGz1E,IAAI,CAAC01E,UAAL11E,CAAgBjsB,CAA7B;AAEA,gBAAIgmG,UAAU,GAAG/5E,IAAI,CAACg6E,UAAtB;;AAEA,iBAAK,IAAInmG,CAAC,GAAG,KAAK+jG,iBAAL,CAAuB/jG,CAApC,EAAuCA,CAAC,GAAG0hG,MAA3C,GAAoD;AAChD,mBAAK,IAAIzhG,CAAC,GAAG,KAAK8jG,iBAAL,CAAuB9jG,CAApC,EAAuCA,CAAC,GAAG0hG,MAA3C,GAAoD;AAChD,qBAAK,IAAIzhG,CAAC,GAAG,KAAK6jG,iBAAL,CAAuB7jG,CAApC,EAAuCA,CAAC,GAAG0hG,MAA3C,GAAoD;AAChD,sBAAIqE,eAAe,IAAID,yBAAvB,EAAkD;AAC9C;;;AAGJ,sBAAI7jG,KAAK,GAAGnC,CAAC,GAAG2hG,MAAJ3hG,GAAa4hG,MAAb5hG,GAAsBC,CAAC,GAAG2hG,MAA1B5hG,GAAmCE,CAA/C;AAEA,sBAAIu+F,KAAK,GAAGX,MAAM,CAAC37F,KAAD,CAAlB;;AAEA,sBAAI,CAACs8F,KAAK,CAAC2H,aAAX,EAA0B;AACtB3H,oBAAAA,KAAK,CAAC8D,gBAAN9D,GAAyB,KAAKuF,iBAAL,CAAuBzpF,MAAvB,EAAzBkkF;AACAA,oBAAAA,KAAK,CAAC6D,gBAAN7D,GAAyBA,KAAK,CAAC8D,gBAAN9D,CAAuB9qG,MAAhD8qG;;;AAGJroG,kBAAAA,OAAO,CAAChC,IAARgC,CAAa,eAAbA;AAEA,sBAAIiwG,UAAU,GAAG5H,KAAK,CAAC8D,gBAAN9D,CAAuB9mG,MAAvB8mG,CAA8B,CAA9BA,EAAiC,KAAKoH,qBAAtCpH,CAAjB;;AACA,sBAAI,KAAK+G,cAAT,EAAyB;AACrB,yBAAKc,kBAAL,CAAwB7H,KAAxB,EAA+B4H,UAA/B;AACH,mBAFD,MAGK;AACD,yBAAKE,cAAL,CAAoB9H,KAApB,EAA2B4H,UAA3B;;;AAGJjwG,kBAAAA,OAAO,CAACoyD,OAARpyD,CAAgB,eAAhBA;AAEA,sBAAIoqG,YAAY,GAAG,CAACr+F,KAAK,GAAGs8F,KAAK,CAAC2H,aAAf,IAAgCF,UAAnD;AACA9vG,kBAAAA,OAAO,CAAC6G,GAAR7G,8BAAuC1C,kBAAayO,gBAAWs8F,KAAK,CAAC2H,+BAA0B5F,YAA/FpqG;AAEA,sBAAIqqG,QAAQ,GAAG,CAAC/pB,IAAI,CAACC,GAALD,KAAa,KAAKwtB,UAAnB,IAAiC,IAAhD;AACA,sBAAIxD,QAAQ,GAAID,QAAQ,GAAGD,YAAXC,IAA4B,IAAID,YAAhCC,CAAhB;AACArqG,kBAAAA,OAAO,CAAC6G,GAAR7G,kBAA2BsqG,eAA3BtqG,EA/BgD;;AAkChD,uBAAK,IAAI1C,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG2yG,UAAU,CAAC1yG,MAA/B,EAAuCD,GAAC,EAAxC,EAA4C;AACxC4jF,oBAAAA,IAAI,CAACj0E,IAALi0E,CAAUD,GAAVC,CAAc+uB,UAAU,CAAC3yG,GAAD,CAAxB4jF;;;AAGJ,sBAAImnB,KAAK,CAAC8D,gBAAN9D,CAAuB9qG,MAA3B,EAAmC;AAC/B;;;AAGJ,uBAAKowG,iBAAL,CAAuB7jG,CAAvB,GAA2B,EAAEA,CAA7B;AACA+lG,kBAAAA,eAAe;;;AAEnB,qBAAKlC,iBAAL,CAAuB7jG,CAAvB,GAA2B,CAA3B;AACA,qBAAK6jG,iBAAL,CAAuB9jG,CAAvB,GAA2B,EAAEA,CAA7B;;;AAEJ,mBAAK8jG,iBAAL,CAAuB9jG,CAAvB,GAA2B,CAA3B;AACA,mBAAK8jG,iBAAL,CAAuB7jG,CAAvB,GAA2B,CAA3B;AACA,mBAAK6jG,iBAAL,CAAuB/jG,CAAvB,GAA2B,EAAEA,CAA7B;;;AAGJ,iBAAK6jG,gBAAL,GAAwB,EAAEnwG,CAA1B;;AACA,iBAAKqwG,iBAAL,CAAuBvxE,GAAvB,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC;;;AAGJ,eAAKoxE,SAAL,GAAiB,KAAjB;AAEAxtG,UAAAA,OAAO,CAAC6G,GAAR7G,4BAAqC,CAACsgF,IAAI,CAACC,GAALD,KAAa,KAAKwtB,UAAnB,IAAiC,WAAtE9tG;AACH,SAzFA;;AAyFApD,QAAAA,OAEDszG,kBAFC,GAED,2BAAA,CAAoB7H,KAApB,EAAyC4H,UAAzC,EAA6D;AAAA,2BAAA;;AACzD,cAAIh2B,MAAM,GAAG,KAAKA,MAAlB;;AAEA8yB,UAAAA,QAAQ,CAACp3F,CAATo3F,CAAW3wE,GAAX2wE,CAAe1E,KAAK,CAAC3oD,MAArBqtD;;AACA,eAAK,IAAIzvG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2yG,UAAU,CAAC1yG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCyvG,YAAAA,QAAQ,CAACn3F,CAATm3F,CAAW3wE,GAAX2wE,CAAekD,UAAU,CAAC3yG,CAAD,CAAzByvG;;AACA,gBAAI1hD,OAAO,GAAG+kD,OAAO,CAACzjB,aAARyjB,CAAsBn2B,MAAtBm2B,EAA8BrD,QAA9BqD,EAAwCzyG,SAAxCyyG,EAAmDzyG,SAAnDyyG,EAA8D,IAA9DA,CAAd;;AACA,gBAAI/kD,OAAO,CAAC9tD,MAAR8tD,GAAiB,CAArB,EAAwB;AACpB,kBAAIjQ,CAAC,GAAGiQ,OAAO,CAAC,CAAD,CAAPA,CAAWvlD,IAAXulD,CAAgB/iD,YAAhB+iD,CAA6B5gB,YAA7B4gB,CAAR;;AACA,kBAAIjQ,CAAC,IAAIitD,KAAK,CAAClB,SAANkB,CAAgBrsC,OAAhBqsC,CAAwBjtD,CAAxBitD,MAA+B,CAAC,CAAzC,EAA4C;AACxCA,gBAAAA,KAAK,CAAClB,SAANkB,CAAgB3oG,IAAhB2oG,CAAqBjtD,CAArBitD;;;;;AAKZA,UAAAA,KAAK,CAACuE,YAANvE,GAAqBA,KAAK,CAAClB,SAANkB,CAAgB/2E,GAAhB+2E,CAAoB,UAAAjtD,CAAA,EAAK;AAC1C,mBAAOt5C,MAAI,CAACm4E,MAAL,CAAYje,OAAZ,CAAoB5gB,CAAC,CAACzQ,KAAtB,CAAP;AACH,WAFoB09D,CAArBA;AAGH,SApBA;;AAoBAzrG,QAAAA,OAEDyzG,cAFC,GAED,uBAAA,CAAgBhI,KAAhB,EAAqCxhD,IAArC,EAAqD;AACjD,cAAIypD,OAAe,GAAG,CAACjI,KAAK,CAAC3oD,MAAP,CAAtB;;AACA,eAAK,IAAI91C,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7B,iBAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7B,mBAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7BwmG,gBAAAA,OAAO,CAAC5wG,IAAR4wG,CAAa,IAAIrjG,IAAJ,CAASo7F,KAAK,CAAC3oD,MAAf,EAAuBroC,KAAvB,CAA6BgxF,KAAK,CAAC1oD,WAAN0oD,CAAkBz+F,CAAlBy+F,GAAsBz+F,CAAnD,EAAsDy+F,KAAK,CAAC1oD,WAAN0oD,CAAkBx+F,CAAlBw+F,GAAsBx+F,CAA5E,EAA+Ew+F,KAAK,CAAC1oD,WAAN0oD,CAAkBv+F,CAAlBu+F,GAAsBv+F,CAArG,CAAbwmG;;;;;AAKZ,eAAK,IAAIhzG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgzG,OAAO,CAAC/yG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCupD,YAAAA,IAAI,CAACypD,OAAO,CAAChzG,CAAD,CAAR,CAAJupD;;AAEP,SAfA;;AAeAjqD,QAAAA,OAEDuzG,cAFC,GAED,uBAAA,CAAgB9H,KAAhB,EAAqC3mC,MAArC,EAAqD;AAAA,2BAAA;;AACjD,cAAIuY,MAAM,GAAG,KAAKA,MAAlB;AAEA,cAAIq2B,OAAe,GAAG,CAACjI,KAAK,CAAC3oD,MAAP,CAAtB;;AACA,cAAI,KAAKytD,WAAL,KAAqBF,UAAU,CAACG,cAAhC,IAAkD,KAAKD,WAAL,KAAqBF,UAAU,CAACsD,sBAAtF,EAA8G;AAC1G,iBAAK,IAAI3mG,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7B,mBAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7B,qBAAK,IAAIC,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7BwmG,kBAAAA,OAAO,CAAC5wG,IAAR4wG,CAAa,IAAIrjG,IAAJ,CAASo7F,KAAK,CAAC3oD,MAAf,EAAuBroC,KAAvB,CAA6BgxF,KAAK,CAAC1oD,WAAN0oD,CAAkBz+F,CAAlBy+F,GAAsBz+F,CAAnD,EAAsDy+F,KAAK,CAAC1oD,WAAN0oD,CAAkBx+F,CAAlBw+F,GAAsBx+F,CAA5E,EAA+Ew+F,KAAK,CAAC1oD,WAAN0oD,CAAkBv+F,CAAlBu+F,GAAsBv+F,CAArG,CAAbwmG;;;;;;AAMhB,cAAI,CAAC,KAAKd,MAAV,EAAkB;AACd,iBAAK,IAAIlyG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgzG,OAAO,CAAC/yG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,mBAAK,IAAI40B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwvC,MAAM,CAACnkE,MAA3B,EAAmC20B,CAAC,EAApC,EAAwC;AACpC66E,gBAAAA,QAAQ,CAACp3F,CAATo3F,CAAW3wE,GAAX2wE,CAAeuD,OAAO,CAAChzG,CAAD,CAAtByvG;;AACCA,gBAAAA,QAAQ,CAACn3F,CAATm3F,CAAW3wE,GAAX2wE,CAAerrC,MAAM,CAACxvC,CAAD,CAArB66E,EAAmCr5F,QAAnCq5F,CAA4CA,QAAQ,CAACp3F,CAArDo3F,EAAwDh5F,SAAxDg5F;;AAED,oBAAI1hD,OAAO,GAAG+kD,OAAO,CAACzjB,aAARyjB,CAAsBn2B,MAAtBm2B,EAA8BrD,QAA9BqD,EAAwCzyG,SAAxCyyG,EAAmDzyG,SAAnDyyG,EAA8D,IAA9DA,CAAd;;AAEA,oBAAI/kD,OAAO,CAAC9tD,MAAR8tD,GAAiB,CAArB,EAAwB;AACpB,sBAAIjQ,CAAC,GAAGiQ,OAAO,CAAC,CAAD,CAAPA,CAAWvlD,IAAXulD,CAAgB/iD,YAAhB+iD,CAA6B5gB,YAA7B4gB,CAAR;;AACA,sBAAIjQ,CAAC,IAAIitD,KAAK,CAAClB,SAANkB,CAAgBrsC,OAAhBqsC,CAAwBjtD,CAAxBitD,MAA+B,CAAC,CAAzC,EAA4C;AACxCA,oBAAAA,KAAK,CAAClB,SAANkB,CAAgB3oG,IAAhB2oG,CAAqBjtD,CAArBitD;;;;;AAKnB,WAhBD,MAiBK;AACD,gBAAI,KAAK8E,WAAL,KAAqBF,UAAU,CAACsD,sBAApC,EAA4D;AACxD,mBAAK,IAAIjzG,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGgzG,OAAO,CAAC/yG,MAA5B,EAAoCD,GAAC,EAArC,EAAyC;AACrC,oBAAIkzG,MAAM,GAAGF,OAAO,CAAChzG,GAAD,CAApB;AACA,oBAAIgB,GAAG,GAAMkyG,MAAM,CAAC5mG,CAAP4mG,MAAAA,GAAYA,MAAM,CAAC3mG,CAAnB2mG,MAAAA,GAAwBA,MAAM,CAAC1mG,CAA5C;;AACA,oBAAI2mG,YAAY,GAAGzD,cAAc,CAAC5vG,GAAf4vG,CAAmB1uG,GAAnB0uG,CAAnB;;AAEA,oBAAI0D,YAAoC,SAAxC;;AACA,oBAAI,CAACD,YAAD,IAAiB,CAAEA,YAAY,CAASE,MAA5C,EAAoD;AAChD,sBAAI,CAACF,YAAL,EAAmB;AACfA,oBAAAA,YAAY,GAAG,EAAfA;;AACAzD,oBAAAA,cAAc,CAAC5wE,GAAf4wE,CAAmB1uG,GAAnB0uG,EAAwByD,YAAxBzD;;;AAEJ,sBAAI3E,KAAK,CAAC2H,aAAN3H,IAAuB,CAA3B,EAA8B;AACzBoI,oBAAAA,YAAY,CAASE,MAArBF,GAA8B,IAA9BA;;;AAELC,kBAAAA,YAAY,GAAGhB,UAAU,CAAC/iB,aAAX+iB,CAAyBz1B,MAAzBy1B,EAAiC,CAACc,MAAD,CAAjCd,EAA2ChuC,MAA3CguC,CAAfgB;;AACA,uBAAK,IAAIpzG,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGozG,YAAY,CAACnzG,MAAjC,EAAyCD,GAAC,EAA1C,EAA8C;AAC1C,wBAAImzG,YAAY,CAAEz0C,OAAdy0C,CAAsBC,YAAY,CAACpzG,GAAD,CAAlCmzG,MAA2C,CAAC,CAAhD,EAAmD;AAC/CA,sBAAAA,YAAY,CAAE/wG,IAAd+wG,CAAmBC,YAAY,CAACpzG,GAAD,CAA/BmzG;;;AAGX,iBAdD,MAeK;AACDC,kBAAAA,YAAY,GAAGD,YAAfC;;;AAEJA,gBAAAA,YAAY,CAAC1hF,OAAb0hF,CAAqB,UAAAz+E,CAAA,EAAK;AACtB,sBAAImpB,CAAC,GAAGnpB,CAAC,CAACnsB,IAAFmsB,CAAO3pB,YAAP2pB,CAAoBwY,YAApBxY,CAAR;;AACA,sBAAImpB,CAAC,IAAIitD,KAAK,CAAClB,SAANkB,CAAgBrsC,OAAhBqsC,CAAwBjtD,CAAxBitD,MAA+B,CAAC,CAAzC,EAA4C;AACxCA,oBAAAA,KAAK,CAAClB,SAANkB,CAAgB3oG,IAAhB2oG,CAAqBjtD,CAArBitD;;AAEP,iBALDqI;;AAOP,aAhCD,MAiCK;AACD,kBAAIA,aAAY,GAAGhB,UAAU,CAAC/iB,aAAX+iB,CAAyBz1B,MAAzBy1B,EAAiCY,OAAjCZ,EAA0ChuC,MAA1CguC,CAAnB;;AACAgB,cAAAA,aAAY,CAAC1hF,OAAb0hF,CAAqB,UAAAz+E,CAAA,EAAK;AACtB,oBAAImpB,CAAC,GAAGnpB,CAAC,CAACnsB,IAAFmsB,CAAO3pB,YAAP2pB,CAAoBwY,YAApBxY,CAAR;;AACA,oBAAImpB,CAAC,IAAIitD,KAAK,CAAClB,SAANkB,CAAgBrsC,OAAhBqsC,CAAwBjtD,CAAxBitD,MAA+B,CAAC,CAAzC,EAA4C;AACxCA,kBAAAA,KAAK,CAAClB,SAANkB,CAAgB3oG,IAAhB2oG,CAAqBjtD,CAArBitD;;AAEP,eALDqI;;;;AASRrI,UAAAA,KAAK,CAACuE,YAANvE,GAAqBA,KAAK,CAAClB,SAANkB,CAAgB/2E,GAAhB+2E,CAAoB,UAAAjtD,CAAA,EAAK;AAC1C,mBAAO/4C,MAAI,CAAC43E,MAAL,CAAYje,OAAZ,CAAoB5gB,CAAC,CAACzQ,KAAtB,CAAP;AACH,WAFoB09D,CAArBA;AAGH,SAjFA;;AAiFAzrG,QAAAA,OAEDg0G,SAFC,GAED,kBAAA,GAAa;AACT,cAAIhtE,gBAAgB,GAAGH,mBAAmB,EAA1C;;AACA,cAAI,CAACG,gBAAL,EAAuB;AACnB;;;AAGJ,cAAIitE,SAAS,GAAG,IAAIx8E,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,CAAhB;AACA,cAAIy8E,UAAU,GAAG,IAAIz8E,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,CAAjB;AACA,cAAI08E,gBAAgB,GAAG,IAAI18E,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,EAArB,CAAvB;AACA,cAAI28E,UAAU,GAAG,IAAIplC,IAAJ,EAAjB;AACA,cAAIqlC,YAAY,GAAG,IAAIvnG,QAAQ,CAACoxD,IAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,CAAnB;;AAEA,eAAK,IAAIx9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsuG,KAAL,CAAWruG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIy4B,IAAI,GAAG,KAAK61E,KAAL,CAAWtuG,CAAX,CAAX;AACA,gBAAI,CAACy4B,IAAI,CAACiR,kBAAV,EAA8B;AAC9BpD,YAAAA,gBAAgB,CAACstE,cAAjBttE,CAAgCqtE,YAAhCrtE,EAA8CitE,SAA9CjtE,EAAyD,KAAzDA,EAAgE,KAAhEA,EAAuEjmC,SAAvEimC,EAAkF,IAAlFA,EAAwF7N,IAAI,CAACjwB,IAALiwB,CAAUw2D,WAAlG3oD;WAfK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EZ,SAjFA;;AAiFA3Y,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KAhtBD,YAAA,GACiB;AACb,mBAAO,KAAK+zG,UAAZ;AACH;AAAA/0E,UAAAA,KACD,YAAA,CAAejK,CAAf,EAAkB;AACd,iBAAKg/E,UAAL,GAAkBh/E,CAAlB;AACA,iBAAK+4E,UAAL;;;AACH5sG,UAAAA;AAAAlB,UAAAA,KAWD,YAAA,GACY;AACR,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAUjK,CAAV,EAAa;AACT,iBAAK05E,UAAL;;;AACHvtG,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GACY;AACR,mBAAO,KAAP;AACH;AAAAg/B,UAAAA,KACD,YAAA,CAAUjK,CAAV,EAAa;AACT,iBAAKq7E,SAAL,GAAiB,KAAjB;;;AACHlvG,UAAAA;AAAAlB,UAAAA,KAiBD,YAAA,GACsB;AAClB,mBAAO,KAAK8wG,eAAZ;AACH;AAAA9xE,UAAAA,KACD,YAAA,CAAoBjK,CAApB,EAAuB;AACnB,iBAAK+7E,eAAL,GAAuB/7E,CAAvB;;AAEA,gBAAI,CAACA,CAAL,EAAQ;AACJ,kBAAIg1E,SAAS,GAAG,KAAKA,SAArB;;AACA,mBAAK,IAAI7pG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6pG,SAAS,CAAC5pG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC6pG,gBAAAA,SAAS,CAAC7pG,CAAD,CAAT6pG,CAAax8D,KAAbw8D,CAAoB/2E,OAApB+2E,GAA8B,IAA9BA;;;;AAIR,iBAAKoG,iBAAL,GAAyB,IAAzB;;;AACHjvG,UAAAA;AAAAlB,UAAAA,KAKD,YAAA,GACkB;AACd,mBAAO,KAAK+vG,WAAZ;AACH;AAAA/wE,UAAAA,KACD,YAAA,CAAgBjK,CAAhB,EAAmB;AACf,iBAAKg7E,WAAL,GAAmBh7E,CAAnB;AACA,iBAAK07E,eAAL,GAAuB,IAAvB;;;AACHvvG,UAAAA;AAAAlB,UAAAA,KA4ND,YAAA,GAC6B;AACzB,mBAAO,KAAKg0G,sBAAZ;AACH;AAAAh1E,UAAAA,KACD,YAAA,CAA2BjK,CAA3B,EAA8B;AAC1B,iBAAKi/E,sBAAL,GAA8Bj/E,CAA9B;AACA,iBAAK07E,eAAL,GAAuB,IAAvB;;;AACHvvG,UAAAA;AAAAlB,UAAAA,KAID,YAAA,GACqB;AACjB,mBAAO,KAAKi0G,cAAZ;AACH;AAAAj1E,UAAAA,KACD,YAAA,CAAmBjK,CAAnB,EAAsB;AAClB,iBAAKk/E,cAAL,GAAsBl/E,CAAtB;AACA,iBAAK07E,eAAL,GAAuB,IAAvB;;;AACHvvG,UAAAA;AAAAlB,UAAAA,KAID,YAAA,GACkB;AACd,mBAAO,KAAK6xG,WAAZ;AACH;AAAA7yE,UAAAA,KACD,YAAA,CAAgBjK,CAAhB,EAAmB;AACf,iBAAK88E,WAAL,GAAmB98E,CAAnB;AACA,iBAAK07E,eAAL,GAAuB,IAAvB;;WA4YH;;AA3YA,qCAAA;QAhVuC1lG,oBACjCiC;AAAQkR,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGK,IAHL;;;AAGSH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGA,IAHA;;qFAKvBpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,CADJ;;qEAERpf,iLASAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACU,IADV;;;AACcH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGA,EAHA;;wFAKtBpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACO,CADP;;gEAGRpf,iJAQAA,0KAQAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACQ,KADR;;0FAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACS,IADT;;uFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACM,KADN;;yFAERpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACO,KADP;;+FAERpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACa,CADb;;2FAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACS,IADT;;0EAERpf,6KAgBAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACA,IADA;;mPAaRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACO,KADP;;kGAwNRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACgB,KADhB;;iFAERpf,4LASAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACQ,KADR;;yEAERpf,iLASAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,IAAImb,IAAJ,CAAS,CAAT,EAAY,MAAZ,CADL;;sEAERv6B,0GA1Ua,CAAjBghC;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGai1G,aAAa,oCADzBn1G,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGrB80G,YAHqB,GAGNjiG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHI;AAGK7S,UAAAA,MAC1B+0G,eAD0B,GACRliG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADM;AACG7S,UAAAA,MAE7B2W,MAF6B,SAAA;AAEvB,sBAAA;;;AAAA,4BAAA;QALyBjL;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHnC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGao1G,iBAAiB,wCAD7Bt1G,OAAO,CAAC,mBAAD;AAAqBI,QAAAA,6CAAA;;AAAA,kCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGzB80G,YAHyB,GAGVjiG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHQ;AAGC7S,UAAAA,MAC1B+0G,eAD0B,GACRliG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADM;AACG,sBAAA;;;AAAA,gDAAA;;AAAA1S,QAAAA,OAE7ByL,KAF6B,GAE7B,cAAA,GAAQ,CAEP,CAJ4B;;AAI5BzL,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA3D,QAAAA,OAED80G,IAFC,GAED,aAAA,CAAKC,SAAL,EAAqB;AACjBjjG,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK8iG,eAAnB9iG,EAAoCijG,SAApCjjG;AACA,eAAK8iG,eAAL,CAAqB99F,QAArB,CAA8B,KAAK5N,IAAL,CAAUwD,aAAxC;AACA,iBAAO,KAAKkoG,eAAL,CAAqB99F,QAArB,CAA8B,KAAK69F,YAAnC,CAAP;AAEH,SAPA;;AAOA,gCAAA;QAlBkCppG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFvC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGau1G,YAAY,mCADxBz1G,OAAO,CAAC,cAAD;AAAgBI,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGpB80G,YAHoB,GAGLjiG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHG;AAGM7S,UAAAA,MAC1B+0G,eAD0B,GACRliG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADM;AACG7S,UAAAA,MAE7Bo1G,aAF6B,SAAA;AAEhB,sBAAA;;;AAAA,2CAAA;;AAAAj1G,QAAAA,OAEbyL,KAFa,GAEb,cAAA,GAAQ;AAEJ,eAAKwpG,aAAL,GAAqB,KAAKvpG,YAAL,CAAkBgpG,aAAlB,CAArB;AAEH,SANY;;AAMZ10G,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA3D,QAAAA,OAEDk1G,UAFC,GAED,mBAAA,GAAa,CAEZ,CAJA;;AAIAl1G,QAAAA,OAED80G,IAFC,GAED,aAAA,CAAKC,SAAL,EAAqB;AAAA,iCAAA;;AAEjB,cAAMv+F,MAAM,0BAAG,KAAKy+F,kCAALE,oBAAoB3+F,MAAnC;AACA1E,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK8iG,eAAnB9iG,EAAoC0E,MAAM,CAACsH,QAA3ChM;AAEA,eAAK8iG,eAAL,CAAqB99F,QAArB,CAA8B,KAAK5N,IAAL,CAAUwD,aAAxC;AACA,iBAAO,KAAKkoG,eAAL,CAAqB99F,QAArB,CAA8B,KAAK69F,YAAnC,CAAP;AACH,SATA;;AASA,2BAAA;QA5B6BppG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHlC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa21G,kBAAkB,yCAD9B71G,OAAO,CAAC,oBAAD;AAAsBI,QAAAA,8CAAA;;AAAA,mCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAG1B2W,MAH0B,SAAA;AAGpB,sBAAA;;;AAAA,iDAAA;;AAAAxW,QAAAA,OAEN0D,MAFM,GAEN,eAAA,CAAOC,SAAP,EAA0B;AAEtB,cAAG,KAAK6S,MAAL,KAAgBzV,SAAnB,EAA8B;AAAA,mCAAA,uBAAA;;AAC1B,iBAAKyV,MAAL,0BAAcgtB,aAAa,CAACG,kDAAd0xE,oBAAoBt9E,2BAApBu9E,sBAA4BpsG,IAA1C;;;AAGJ,cAAG,KAAKsN,MAAL,KAAgBzV,SAAnB,EAA8B;AAC1B,gBAAMw0G,cAAc,GAAGl3D,KAAK,CAACmB,uBAANnB,CAA8B,KAAKn1C,IAAL,CAAWssG,EAAzCn3D,EAA6C,KAAKn1C,IAAL,CAAWwD,aAAxD2xC,EAAuE,KAAK7nC,MAAL,CAAa9J,aAApF2xC,EAAmG,KAAKn1C,IAAL,CAAW0D,OAA9GyxC,CAAvB;;AAEA,gBAAGk3D,cAAH,EAAmB;AACf,kBAAM//F,KAAK,GAAG,KAAKtM,IAAL,CAAU2U,WAAxB;AACA,mBAAK3U,IAAL,CAAWkV,oBAAX,CAAgC5I,KAAK,CAACxI,CAAtC,EAAyCwI,KAAK,CAACvI,CAA/C,EAAkDsoG,cAAlD;;;AAGX,SAhBK;;AAgBL,iCAAA;QAlBmChqG;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJxC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGag2G,aAAa,oCADzBl2G,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,0DAAA;;;AAAA,4CAAA;;AAAAK,QAAAA,OAGd01G,aAHc,GAGrB,sBAAA,CAAqBxsG,IAArB,EAAuC;AACnC,eAAK,IAAIysG,aAAT,IAA0BC,aAA1B,EAAyC;AACrC,gBAAG1sG,IAAI,CAACpI,IAALoI,CAAUy0C,QAAVz0C,CAAmBysG,aAAnBzsG,CAAH,EAAsC;AAClC,qBAAOysG,aAAP;;;;AAGR,iBAAOC,aAAa,CAACC,MAArB;AAEH,SAXoB;;AAWpB,4BAAA;QAV8B5zG;UAevB2zG;;AAQX,iBARWA;AAAAA,QAAAA,aAAa,OAAA,CAAbA,SAAAA;AAAAA,QAAAA,aAAa,SAAA,CAAbA,WAAAA;AAAAA,QAAAA,aAAa,QAAA,CAAbA,UAAAA;AAAAA,QAAAA,aAAa,OAAA,CAAbA,SAAAA;AAAAA,QAAAA,aAAa,QAAA,CAAbA,UAAAA;OAQX,EARWA,aAAa,KAAbA,aAAa,+BAAA,CAQxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BD,UAAQr2G,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBkhC,iBAAiB,GAAejhC,UAAU,CAA1CihC,iBAAjB;AAAA,UAAoChhC,QAAQ,GAAKD,UAAU,CAAvBC,QAApC;UAIaq2G,WAAW,kCAFvBv2G,OAAO,CAAC,aAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,uCAAA;;AAAA,4BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,0FAAA;;AAAA,sBAAA;;;AAAA6Q,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KAId,YAAA,GACgB;AACZ,mBAAO,KAAKu1G,SAAZ;AACH;AAAAv2E,UAAAA,KACD,YAAA,CAAcjK,CAAd,EAAiB;AACb,iBAAKwgF,SAAL,GAAiBxgF,CAAjB;AAEA,gBAAI9T,QAAQ,GAAG,KAAKvY,IAAL,CAAUuY,QAAzB;;AACA,iBAAK,IAAI/gB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC+gB,cAAAA,QAAQ,CAAC/gB,CAAD,CAAR+gB,CAAYu0F,aAAZv0F;;;AAGJ,gBAAImsB,GAAG,GAAG,KAAK1kC,IAAL,CAAUmC,uBAAV,CAAkCwiC,YAAlC,CAAV;AACAD,YAAAA,GAAG,CAACxb,OAAJwb,CAAY,UAAAE,EAAA,EAAM;AACd,kBAAIvY,CAAJ,EAAO;AACHuY,gBAAAA,EAAE,CAACmoE,eAAHnoE,GAAqBooE,mBAAmB,CAACC,aAAzCroE;AACH,eAFD,MAGK;AACDA,gBAAAA,EAAE,CAACmoE,eAAHnoE,GAAqBooE,mBAAmB,CAACr4E,IAAzCiQ;;AAEP,aAPDF;;WAjBU;;AAyBb,0BAAA;QAxB4BriC,sFAC5B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,IADH;;oEAERpf,wGAJa,CAAjBghC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;AAEA,UAAIg/B,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACA,UAAM03E,SAAS,GAAG,CAAC,WAAD,EAAc,YAAd,CAAlB;UAGa3zB,QAAQ,+BADpBljF,OAAO,CAAC,UAAD,WAMHE,QAAQ,CAAC;AAAE08B,QAAAA,QAAQ,EAAE;AAAZ,OAAD;AAAoBx8B,QAAAA,oCAAA;;AAAA,yBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAJ7Bm3B,aAI6B,GAJb,cAIa;AAJCn3B,UAAAA,MAC9B0oC,WAD8B,GACsB,IAAI1O,GAAJ,EADtB;AAC6Bh6B,UAAAA,MAC3Dw2G,eAD2D,GACzC,IAAIrnC,IAAJ,EADyC;;AACjCxxD,UAAAA,qFAAA;;AAAA3d,UAAAA,MA8B1By2G,WA9B0B,GA8BZ,IA9BY;AA8BR,sBAAA;;;AAAA,uCAAA;;AAAAt2G,QAAAA,OAzBlBw4B,WAyBkB,GAzBlB,oBAAA,GAAwB;AACpB,iBAAO,KAAKC,MAAL,IACHgB,UAAU,CAACopD,UADR,IACsBppD,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAD5C,IACwDisB,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAAtBisB,CAA+BhB,MADvF,IAEH,CAAC,CAACE,WAAW,CAACy1B,GAFlB;AAGH,SAqBiB;;AArBjBpuD,QAAAA,OAED83B,QAFC,GAED,iBAAA,CAAUC,MAAV,EAAyC5oB,KAAzC,EAAoD;AAAA,cAAXA,KAAK,WAAM;AAAXA,YAAAA,KAAK,GAAG,CAARA;;;AACrC,cAAI,CAAC,KAAKqpB,WAAL,EAAL,EAAyB;AACrB,mBAAO,KAAKb,SAAL,CAAeG,QAAf,CAAwBC,MAAxB,EAAgC5oB,KAAhC,CAAP;;;AAGJ,cAAIi/C,GAAG,GAAG30B,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAAhC;;AAEA,cAAI4gD,GAAG,CAACmoD,eAAJnoD,GAAsB,CAA1B,EAA6B;AACzB,mBAAOgoD,SAAS,CAAC,CAAD,CAAhB;;;AAGJ,iBAAOA,SAAS,CAAC,CAAChoD,GAAG,CAACmoD,eAAJnoD,GAAsB,CAAvB,IAA4B,CAA7B,CAAhB;SAbH;;;;AAAA;;AAmBDpuD,QAAAA,OAGOu5B,MAHP,GAGA,eAAA,CAAexB,MAAf,EAA8CyB,GAA9C,EAA6E;AACzE,cAAI,CAAC,KAAKhB,WAAL,EAAL,EAAyB;AACrB;;;AAEJ,cAAI41B,GAAG,GAAG30B,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAAhC;AAEA,cAAMmyB,QAAQ,GAAG1H,iBAAiB,CAACF,MAAD,CAAlC;AACA,cAAMoB,IAAI,GAAG,KAAKD,aAAL,CAAmBnB,MAAnB,CAAb;AACA,cAAMsB,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACA,cAAM5a,MAAM,GAAG0a,IAAI,CAAC1a,MAApB;AAEAsa,UAAAA,SAAS,CAACsE,SAAVtE,GAAsBzB,GAAG,CAAC0E,YAAJ1E,CAAiBiI,KAAvCxG;AACA2F,UAAAA,IAAI,CAACc,GAALd,CAAS3F,SAAS,CAACwE,UAAnBmB,EAA+B,CAA/BA,EAAkC,CAAlCA,EAAqC,CAArCA,EAAwC,CAAxCA,EAZyE;;AAezE,cAAItC,QAAQ,GAAG,KAAKmM,WAAL,CAAiB/nC,GAAjB,CAAqBu3B,MAArB,CAAf;;AACA,cAAI,CAACqE,QAAD,IAAaA,QAAQ,CAAC3zB,MAAT2zB,KAAoB,KAAKA,QAA1C,EAAoD;AAChDA,YAAAA,QAAQ,GAAG,IAAIkO,QAAQ,CAACC,gBAAb,CAA8B;AACrC9hC,cAAAA,MAAM,EAAE,KAAK2zB;AADwB,aAA9B,CAAXA;AAGA,iBAAKmM,WAAL,CAAiB/I,GAAjB,CAAqBzH,MAArB,EAA6BqE,QAA7B;;;AAGJrD,UAAAA,SAAS,CAACqD,QAAVrD,GAAqBqD,QAArBrD,CAvByE;;;;;;;AAgCzE,cAAIu9E,WAAW,GAAG,KAAKA,WAAvB;;AACA,cAAIA,WAAJ,EAAiB;AACb,iBAAKD,eAAL,CAAqB72E,GAArB,CAAyBzH,MAAM,CAACkrD,WAAhC;AACA,iBAAKqzB,WAAL,GAAmB,KAAnB;;;AAEJl6E,UAAAA,QAAQ,CAAC0D,WAAT1D,CAAqB,YAArBA,EAAmCqC,QAAQ,CAACe,GAATf,CAAa2vB,GAAG,CAAC00B,YAAJ10B,CAAiBphD,CAA9ByxB,EAAiC2vB,GAAG,CAAC00B,YAAJ10B,CAAiBnhD,CAAlDwxB,EAAqD2vB,GAAG,CAACooD,QAAzD/3E,EAAmE,CAAnEA,CAAnCrC;AACAA,UAAAA,QAAQ,CAAC0D,WAAT1D,CAAqB,gBAArBA,EAAuCqC,QAAQ,CAACe,GAATf,CAAa,IAAIpF,KAAjBoF,EAAwB,IAAIhgB,MAA5BggB,EAAoC,IAAIpF,KAAxCoF,EAA+C,IAAIhgB,MAAnDggB,CAAvCrC;AACAA,UAAAA,QAAQ,CAAC0D,WAAT1D,CAAqB,iBAArBA,EAAwC,KAAKi6E,eAA7Cj6E;AACA,eAAKi6E,eAAL,CAAqB72E,GAArB,CAAyBzH,MAAM,CAACkrD,WAAhC,EAxCyE;;AA2CzE,cAAIljD,MAAM,GAAG,KAAKpI,SAAL,CAAeG,QAAf,CAAwBC,MAAxB,EAAgC,CAAhC,CAAb;AACA,cAAI0+E,cAAc,GAAGL,SAAS,CAAChoD,GAAG,CAACmoD,eAAJnoD,GAAsB,CAAvB,CAA9B;;AAEA,cAAIkoD,WAAJ,EAAiB;AACbG,YAAAA,cAAc,GAAG12E,MAAjB02E;;;AAGJ,cAAIn6E,KAAK,GAAG,KAAKxE,QAAL,CAAcC,MAAd,EAAsB,CAAtB,CAAZ;AAEA,cAAI2+E,MAAM,GAAG,iBAAb;;AACA,cAAI79E,QAAQ,CAACqO,YAAb,EAA2B;AACvBwvE,YAAAA,MAAM,GAAG79E,QAAQ,CAACqO,YAATrO,CAAsBf,QAAtBe,CAA+Bd,MAA/Bc,EAAuC,CAAvCA,CAAT69E;;;AAGJ39E,UAAAA,SAAS,CAAC6D,aAAV7D,CAAwBM,KAAxBN,EAA+Bta,MAA/Bsa,EAAuC,iBAAiBq1B,GAAG,CAACmoD,eAAJnoD,GAAsB,CAAtBA,GAA0B,CAAC,CAA3BA,GAAgCA,GAAG,CAACmoD,eAAJnoD,GAAsB,CAAvE,CAAvCr1B,oBAAmI4G,QAAnI5G,EACKiH,WADLjH,CACiBI,IAAI,CAACnsB,CADtB+rB,EACyBI,IAAI,CAAClsB,CAD9B8rB,EACiCM,KADjCN,EACwCta,MADxCsa,EAEKkH,YAFLlH,CAEkBgH,MAFlBhH,EAE0B,cAF1BA,EAGKkH,YAHLlH,CAGkB29E,MAHlB39E,EAG0B,QAH1BA,EAIKkH,YAJLlH,CAIkB09E,cAJlB19E,EAIkC,gBAJlCA,EAKK0E,aALL1E,CAKmBuD,KALnBvD,EAK0BzB,GAAG,CAACuE,MAAJvE,CAAWoI,OALrC3G,EAK8C,IAL9CA,EAKoDsC,SAAS,CAACG,iBAAVH,CAA4Bs7E,UALhF59E,EAMKmH,UANLnH,CAMgB,CANhBA,EAOKoH,OAPLpH;AAQH,SApED;;AAoEC,uBAAA;QAnGyBlC;AAASnY,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAM5B,UAN4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfvC,UAAQtf,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;AAGA,UAAIm2E,OAAO,GAAG,CACV,IAAI58E,IAAJ,CAAS,GAAT,EAAc,MAAM,CAApB,CADU,EAEV,IAAIA,IAAJ,CAAS,IAAT,EAAe,MAAM,CAArB,CAFU,EAGV,IAAIA,IAAJ,CAAS,IAAT,EAAe,MAAM,CAArB,CAHU,EAIV,IAAIA,IAAJ,CAAS,KAAT,EAAgB,MAAM,CAAtB,CAJU,EAKV,IAAIA,IAAJ,CAAS,KAAT,EAAgB,MAAM,CAAtB,CALU,EAMV,IAAIA,IAAJ,CAAS,KAAT,EAAgB,MAAM,CAAtB,CANU,EAOV,IAAIA,IAAJ,CAAS,KAAT,EAAgB,MAAM,CAAtB,CAPU,EAQV,IAAIA,IAAJ,CAAS,MAAT,EAAiB,MAAM,CAAvB,CARU,CAAd;AAUA48E,MAAAA,OAAO,CAACxkF,OAARwkF,CAAgB,UAAArhF,CAAA,EAAK;AACjBA,QAAAA,CAAC,CAACvoB,CAAFuoB,IAAO,GAAPA;AACAA,QAAAA,CAAC,CAACtoB,CAAFsoB,IAAO,GAAPA;AACH,OAHDqhF;AAKA,UAAIC,aAAa,GAAG;;;;;AAKhBC,QAAAA,EAAE,EAAE,CACA,IAAI98E,IAAJ,CAAS,CAAC,GAAD,GAAO,IAAhB,EAAsB,CAAC,GAAD,GAAO,IAA7B,CADA,EAEA,IAAIA,IAAJ,CAAS,MAAM,IAAf,EAAqB,MAAM,IAA3B,CAFA,CALY;;;;;;AAehB+8E,QAAAA,EAAE,EAAE,CACA,IAAI/8E,IAAJ,CAAS,CAAC,GAAD,GAAO,GAAhB,EAAqB,CAAC,GAAD,GAAO,GAA5B,CADA,EAEA,IAAIA,IAAJ,CAAS,IAAI,CAAb,EAAgB,IAAI,CAApB,CAFA,EAGA,IAAIA,IAAJ,CAAS,IAAI,CAAb,EAAgB,IAAI,CAApB,CAHA,CAfY;;;;;;;;AA4BhBg9E,QAAAA,EAAE,EAAE,CACA,IAAIh9E,IAAJ,CAAS,CAAC,CAAD,GAAK,EAAd,EAAkB,CAAC,CAAD,GAAK,EAAvB,CADA,EAEA,IAAIA,IAAJ,CAAS,IAAI,EAAb,EAAiB,CAAC,CAAD,GAAK,EAAtB,CAFA,EAGA,IAAIA,IAAJ,CAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,CAHA,EAIA,IAAIA,IAAJ,CAAS,CAAC,CAAD,GAAK,EAAd,EAAkB,IAAI,EAAtB,CAJA,CA5BY;AAmChBi9E,QAAAA,EAAE,EAAE;;;;;;AAOA,YAAIj9E,IAAJ,CAAS,CAAT,EAAY,CAAC,CAAD,GAAK,CAAjB,CAPA,EAQA,IAAIA,IAAJ,CAAS,IAAI,CAAb,EAAgB,CAAhB,CARA,EASA,IAAIA,IAAJ,CAAS,CAAT,EAAY,IAAI,CAAhB,CATA,EAUA,IAAIA,IAAJ,CAAS,CAAC,CAAD,GAAK,CAAd,EAAiB,CAAjB,CAVA,CAnCY;AAgDhB48E,QAAAA,OAAO,EAAPA;AAhDgB,OAApB;UAsDa/zB,UAAU,iCAFtBtjF,OAAO,CAAC,YAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,uFAAA;;AAAAA,UAAAA,6FAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,qGAAA;;AAAAA,UAAAA,qGAAA;;AAAAA,UAAAA,6FAAA;;AAAAA,UAAAA,uFAAA;;AAAA3d,UAAAA,MAsBdijF,YAtBc,GAsBC,IAAI9oD,IAAJ,EAtBD;AAsBSn6B,UAAAA,MAEvB02G,eAFuB,GAEL,CAAC,CAFI;AAEH12G,UAAAA,MACpBq3G,OADoB,GACVL,aAAa,CAACD,OADJ;AACW/2G,UAAAA,MAC/BqrD,WAD+B,GACjB,CAAC,CADgB;AACf,sBAAA;;;AAAA,yCAAA;;AAAAlrD,QAAAA,OAEhB0gC,QAFgB,GAEhB,iBAAA,GAAY;AACRjH,UAAAA,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAAtBisB,GAAiC,IAAjCA;AACH,SAJe;;AAIfz5B,QAAAA,OACD2gC,SADC,GACD,kBAAA,GAAa;AACT,cAAIlH,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAAtBisB,KAAmC,IAAvC,EAA6C;AACzCA,YAAAA,UAAU,CAACopD,UAAXppD,CAAsBjsB,QAAtBisB,GAAiC14B,SAAjC04B;;AAEP,SALA;;AAKAz5B,QAAAA,OAEDm3G,YAFC,GAED,qBAAA,CAAc99E,KAAd,EAAqB5a,MAArB,EAA6B;AACzB,cAAI,KAAKmtD,KAAL,IAAc,KAAKwrC,WAAvB,EAAoC;AAChC,iBAAKlsD,WAAL;AACA,iBAAKqrD,eAAL;AACA,iBAAK3qC,KAAL,GAAa,KAAb;;;AAGJ,cAAI77C,MAAM,GAAG,KAAKmnF,OAAL,CAAa,KAAKhsD,WAAL,GAAmB,KAAKgsD,OAAL,CAAav2G,MAA7C,CAAb;;AAEA,cAAI,KAAKuqD,WAAL,KAAqB,CAAC,CAA1B,EAA6B;AACzBn7B,YAAAA,MAAM,GAAGiK,IAAI,CAACjX,IAAdgN;;;AAGJ,eAAK+yD,YAAL,CAAkB91E,CAAlB,GAAsB+iB,MAAM,CAAC/iB,CAAP+iB,GAAW,KAAKsnF,WAAhBtnF,GAA8BsJ,KAApD;AACA,eAAKypD,YAAL,CAAkB71E,CAAlB,GAAsB8iB,MAAM,CAAC9iB,CAAP8iB,GAAW,KAAKsnF,WAAhBtnF,GAA8BtR,MAApD;AACH,SAjBA;;AAiBAze,QAAAA,OAEDsiB,UAFC,GAED,mBAAA,CAAYoR,EAAZ,EAAgB;AACZ,eAAKyjF,YAAL,CAAkBnnG,IAAI,CAACi8B,MAALj8B,CAAYqpB,KAA9B,EAAqCrpB,IAAI,CAACi8B,MAALj8B,CAAYyO,MAAjD;AAEH,SALA;;AAKA,yBAAA;QAxD2BlT,oBACrBiC,oGAEN/N;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACA,IADA;;sFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,CADL;;mFAERpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACE,IADF;;8FAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACa,KADb;;8FAERpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACa,IADb;;sFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,KADL;;gFAERpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACD,KADC;;mBAnBK,CAAjB4hB;AA2DDhH,MAAAA,UAAU,CAACopD,UAAXppD,GAAwBopD,UAAxBppD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA,UAAQl6B,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa63G,OAAO,8BADnB/3G,OAAO,CAAC,SAAD;AAAWI,QAAAA,mCAAA;;AAAA,wBAAA;AAAA,0DAAA;;;AAAA,sCAAA;;AAAAK,QAAAA,OAGfyL,KAHe,GAGf,cAAA,GAAQ;AAEJuE,UAAAA,IAAI,CAAC84D,KAAL94D;AAEA+C,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBuZ,MAAzBv5B,EAAiC,UAACkoB,KAAD,EAAuB;AAEpD,gBAAIA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACC,KAA9B,EAAqC;AACjCz8B,cAAAA,IAAI,CAAC+4D,MAAL/4D;;;AAGJ,gBAAIirB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC0vB,KAA9B,EAAqC;AAIxC,WAVDnpD,EAUG,IAVHA;AAYH,SAnBc;;AAmBd,sBAAA;QAlBwBxH;;;;;;;;;;;;;;;;;;UCGhBgsG,SAAS;AAAA,aAEVl1G,MAFU,GAEY,EAFZ;AAEc,aACxBm1G,OADwB,GACN,CADM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPpC,UAAQj4G,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGag4G,aAAa,oCADzBl4G,OAAO,CAAC,eAAD,WAGHE,QAAQ,CAAE;AAAC2d,QAAAA,IAAI,EAACC,SAAN;AAAiBC,QAAAA,OAAO,EAAC;AAAzB,OAAF;AAA4D3d,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,0FAAA;;AAAA3d,UAAAA,MAGrEuQ,IAHqE,GAGzDsC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHuD;AAG9C7S,UAAAA,MAEvB46D,YAFuB,GAER,CAFQ;AAEP56D,UAAAA,MAChB66D,cADgB,GACC,CADD;AACE76D,UAAAA,MAClB86D,cADkB,GACD,CADC;AACA96D,UAAAA,MAClB+6D,eADkB,GACA,CADA;AACC,sBAAA;;;AAAA,4CAAA;;AAAA56D,QAAAA,OAEnByL,KAFmB,GAEnB,cAAA,GAAQ;AACJsH,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB8nC,QAAzB9nD,EAAmC,KAAK+nD,SAAxC/nD,EAAmD,IAAnDA;AACAA,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBuZ,MAAzBv5B,EAAiC,KAAKgoD,OAAtChoD,EAA+C,IAA/CA;AAEAA,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBioC,UAAzBjoD,EAAqC,KAAKkoD,WAA1CloD,EAAuD,IAAvDA;AACAA,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBojC,UAAzBpjD,EAAqC,KAAKqjD,WAA1CrjD,EAAuD,IAAvDA;AACH,SARkB;;AAQlB/S,QAAAA,OAGD86D,SAHC,GAGD,kBAAA,CAAU7/B,KAAV,EAAgC;AAAA,6BAAA;;AAC5B,cAAIA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACivB,KAA1BxgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC2vB,QAAjE,EAA2E,KAAK1B,YAAL,GAAoB,CAAC,CAArB;AAC3E,cAAIx/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACkvB,KAA1BzgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC8vB,UAAjE,EAA6E,KAAK5B,cAAL,GAAsB,CAAtB;AAC7E,cAAIz/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACmvB,KAA1B1gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC4vB,UAAjE,EAA6E,KAAKzB,cAAL,GAAsB,CAAC,CAAvB;AAC7E,cAAI1/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACovB,KAA1B3gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC6vB,WAAjE,EAA8E,KAAKzB,eAAL,GAAuB,CAAvB;AAC9E,cAAI3/B,KAAK,CAACsR,OAANtR,IAAiBuR,OAAO,CAACC,KAA7B,EAAoC,wBAAKzuB,SAAL,SAAA,SAAA,GAAA05F,gBAAgBzyF,IAAhB,EAAA;AACpC,eAAKhR,MAAL;AACH,SAVA;;AAUAjU,QAAAA,OAED+6D,OAFC,GAED,gBAAA,CAAQ9/B,KAAR,EAA8B;AAC1B,cAAIA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACivB,KAA1BxgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC2vB,QAAjE,EAA4E,KAAK1B,YAAL,GAAoB,CAApB;AAC5E,cAAIx/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACkvB,KAA1BzgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC8vB,UAAjE,EAA8E,KAAK5B,cAAL,GAAsB,CAAtB;AAC9E,cAAIz/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACmvB,KAA1B1gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC4vB,UAAjE,EAA6E,KAAKzB,cAAL,GAAsB,CAAtB;AAC7E,cAAI1/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACovB,KAA1B3gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC6vB,WAAjE,EAA8E,KAAKzB,eAAL,GAAuB,CAAvB;AAC9E,eAAK3mD,MAAL;AACH,SARA;;AAQAjU,QAAAA,OAEDi7D,WAFC,GAED,oBAAA,CAAYhgC,KAAZ,EAA+B,CAE9B,CAJA;;AAIAj7B,QAAAA,OAEDo2D,WAFC,GAED,oBAAA,CAAYn7B,KAAZ,EAA+B;AAAA,8BAAA;;AAC3B,mCAAKjd,SAAL,SAAA,SAAA,GAAA25F,iBAAgBzjG,UAAhB,CAA2B+mB,KAAK,CAAC0hC,SAAN1hC,GAAkB,CAA7C,EAAgDA,KAAK,CAAC2hC,SAAN3hC,GAAkB,EAAlE,CAAA;AACH,SAJA;;AAIAj7B,QAAAA,OAGDiU,MAHC,GAGD,eAAA,GAAS;AAAA,8BAAA;;AACL,eAAK7D,IAAL,CAAUpD,CAAV,GAAc,KAAK2tD,cAAL,GAAsB,KAAKC,eAAzC;AACA,eAAKxqD,IAAL,CAAUlD,CAAV,GAAc,KAAKutD,YAAL,GAAoB,KAAKC,cAAvC;AACA,eAAKtqD,IAAL,CAAUnD,CAAV,GAAc,CAAd,CAHK;;AAKL,mCAAK+Q,SAAL,SAAA,SAAA,GAAA45F,iBAAgB30F,aAAhB,CAA8B,KAAK7S,IAAL,CAAU+G,SAAV,EAA9B,CAAA;AACH,SATA;;AASA,4BAAA;QArD8B5L;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF5C,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGao4G,iBAAiB,wCAD7Bt4G,OAAO,CAAC,mBAAD,WA2BHE,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAACukB,SAAD;AAAWrkB,QAAAA,6CAAA;;AAAA,kCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MA3BpBsK,eA2BoB,SAAA;AA3BLtK,UAAAA,MAEfi4G,WAFe,GAED,KAFC;AAEIj4G,UAAAA,MAEnBk4G,gBAFmB,GAEA,KAFA;AAEKl4G,UAAAA,MAExB46D,YAFwB,GAET,CAFS;AAER56D,UAAAA,MAChB66D,cADgB,GACC,CADD;AACE76D,UAAAA,MAClB86D,cADkB,GACD,CADC;AACA96D,UAAAA,MAClB+6D,eADkB,GACA,CADA;AACC/6D,UAAAA,MAEnBm4G,iBAFmB,GAEC,CAFD;;AAEEx6F,UAAAA,8FAAA;;AAAAA,UAAAA,gGAAA;;AAAA3d,UAAAA,MAQrBo4G,aARqB,GAQLvlG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARG;AAQM7S,UAAAA,MAE3Bq4G,cAF2B,GAEVxlG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFQ;AAEC7S,UAAAA,MAC5BiuB,SAD4B,GAChB,CADgB;;AACftQ,UAAAA,sFAAA;;AAAAA,UAAAA,6FAAA;;AAAA,sBAAA;;;AAAA,gDAAA;;AAAAxd,QAAAA,OAQbyL,KARa,GAQb,cAAA,GAAQ;AAAA,wBAAA;;AACJ,eAAKtB,eAAL,iBAAuB,KAAKy1E,yBAALu4B,WAAWzsG,YAAX,CAAwBJ,mBAAxB,CAAvB;AACAyH,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB8nC,QAAzB9nD,EAAmC,KAAKqlG,OAAxCrlG,EAAiD,IAAjDA;AACAA,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBuZ,MAAzBv5B,EAAiC,KAAKslG,KAAtCtlG,EAA6C,IAA7CA;AAEAA,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBioC,UAAzBjoD,EAAqC,KAAKkoD,WAA1CloD,EAAuD,IAAvDA;AACH,SAdY;;AAcZ/S,QAAAA,OAEDsiB,UAFC,GAED,mBAAA,CAAW3e,SAAX,EAA8B;AAC1B,eAAK20G,UAAL;AACH,SAJA;;AAIAt4G,QAAAA,OAEDo4G,OAFC,GAED,gBAAA,CAAQn9E,KAAR,EAA8B;AAE1B,cAAIA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACivB,KAA1BxgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC2vB,QAAjE,EAA2E,KAAK1B,YAAL,GAAoB,CAAC,CAArB;AAC3E,cAAIx/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACkvB,KAA1BzgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC8vB,UAAjE,EAA6E,KAAK5B,cAAL,GAAsB,CAAtB;AAC7E,cAAIz/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACmvB,KAA1B1gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC4vB,UAAjE,EAA6E,KAAKzB,cAAL,GAAsB,CAAC,CAAvB;AAC7E,cAAI1/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACovB,KAA1B3gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC6vB,WAAjE,EAA8E,KAAKzB,eAAL,GAAuB,CAAvB;;AAE9E,cAAG3/B,KAAK,CAACsR,OAANtR,IAAiBuR,OAAO,CAAC+rE,KAA5B,EAAmC;AAAA,qCAAA;;AAC/B,iBAAKR,gBAAL,GAAwB,KAAKA,gBAAL,GAAwB,KAAxB,GAAgC,IAAxD;AACA30G,YAAAA,OAAO,CAAC6G,GAAR7G,CAAY,KAAK20G,gBAAjB30G;AACA,0CAAK+G,eAAL,SAAA,SAAA,GAAAmiB,sBAAsBtiB,IAAtB,CAA2B,kBAA3B,EAA+C,KAAK+tG,gBAApD,CAAA;AACA,iBAAKC,iBAAL,GAAyB,KAAKD,gBAAL,GAAuB,CAAvB,GAA2B,CAApD;AACAh1G,YAAAA,GAAG,CAACC,IAAJD,CAAS,8BAATA,EAAyC,KAAKi1G,iBAA9Cj1G;;;AAGJ,cAAGk4B,KAAK,CAACsR,OAANtR,IAAiBuR,OAAO,CAACwvB,KAA5B,EAAmC;AAAA,sCAAA;;AAC/B,iBAAK87C,WAAL,GAAmB,KAAKA,WAAL,GAAmB,KAAnB,GAA2B,IAA9C;AACA,2CAAK3tG,eAAL,SAAA,SAAA,GAAA+jB,uBAAsBlkB,IAAtB,CAA2B,aAA3B,EAA0C,KAAK8tG,WAA/C,CAAA;AACA/0G,YAAAA,GAAG,CAACC,IAAJD,CAAS,8BAATA,EAAyC,KAAK+0G,WAAL,GAAmB,CAAnB,GAAuB,KAAhE/0G;;;AAGJ,cAAGk4B,KAAK,CAACsR,OAANtR,IAAiBuR,OAAO,CAACC,KAA5B,EAAmC;AAAA,sCAAA,wBAAA;;AAC/B,2CAAKtiC,eAAL,SAAA,SAAA,GAAAgkB,uBAAsBnkB,IAAtB,CAA2B,cAA3B,EAA2C,IAA3C,CAAA;AACA,2CAAKG,eAAL,SAAA,SAAA,GAAAikB,uBAAsBtiB,QAAtB,CAA+B,gBAA/B,EAAiD,GAAjD,CAAA;;;AAGJ,cAAGmvB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACovB,KAA7B,EAAoC;AAAA,sCAAA;;AAChC,2CAAKzxD,eAAL,SAAA,SAAA,GAAAquG,uBAAsBxuG,IAAtB,CAA2B,cAA3B,EAA2C,IAA3C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC0vB,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAK/xD,eAAL,SAAA,SAAA,GAAAsuG,uBAAsBzuG,IAAtB,CAA2B,gBAA3B,EAA6C,IAA7C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACqvB,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAK1xD,eAAL,SAAA,SAAA,GAAAuuG,uBAAsB1uG,IAAtB,CAA2B,sBAA3B,EAAmD,IAAnD,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACk6D,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAKv8F,eAAL,SAAA,SAAA,GAAAwuG,uBAAsB3uG,IAAtB,CAA2B,aAA3B,EAA0C,IAA1C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,IAAiBuR,OAAO,CAACosE,KAA7B,EAAoC;AAEhC,gBAAG,KAAKZ,iBAAL,KAA2B,CAA9B,EAAiC;AAEjC,iBAAKA,iBAAL,GAAyB,KAAKA,iBAAL,KAA2B,CAA3B,GAA+B,CAA/B,GAAmC,CAA5D;AAEAj1G,YAAAA,GAAG,CAACC,IAAJD,CAAS,8BAATA,EAAyC,KAAKi1G,iBAA9Cj1G;WAhDsB;;AAqD7B,SAvDA;;AAuDA/C,QAAAA,OAEDi7D,WAFC,GAED,oBAAA,CAAYhgC,KAAZ,EAA+B;AAAA,oCAAA;;AAC3B,yCAAK9wB,eAAL,SAAA,SAAA,GAAA0uG,uBAAsB7uG,IAAtB,CAA2B,cAA3B,EAA2C,IAA3C,CAAA;AACH,SAJA;;AAIAhK,QAAAA,OAEDq4G,KAFC,GAED,cAAA,CAAMp9E,KAAN,EAA4B;AACxB,cAAIA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACivB,KAA1BxgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC2vB,QAAjE,EAA4E,KAAK1B,YAAL,GAAoB,CAApB;AAC5E,cAAIx/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACkvB,KAA1BzgC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC8vB,UAAjE,EAA8E,KAAK5B,cAAL,GAAsB,CAAtB;AAC9E,cAAIz/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACmvB,KAA1B1gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC4vB,UAAjE,EAA6E,KAAKzB,cAAL,GAAsB,CAAtB;AAC7E,cAAI1/B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACovB,KAA1B3gC,IAAmCA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC6vB,WAAjE,EAA8E,KAAKzB,eAAL,GAAuB,CAAvB,CAJtD;AAM3B,SARA;;AAQA56D,QAAAA,OAEDs4G,UAFC,GAED,mBAAA,GAAa;AAAA,qCAAA,yBAAA,yBAAA;;AAET,eAAKQ,WAAL,CAAkBr0F,iBAAlB,CAAoC,KAAKyzF,cAAzC;AACA,eAAKY,WAAL,CAAkBC,kBAAlB,CAAqC,KAAKd,aAA1C;AAEA,eAAKC,cAAL,CAAoBjrG,CAApB,GAAwB,CAAxB;AACA,cAAMygB,oBAAoB,GAAG,KAAKwqF,cAAL,CAAoBv3G,MAApB,EAA7B;AAEA,cAAMgtB,YAAY,GAAG,KAAKmrF,WAAL,CAAkB5vG,IAAlB,CAAuB2U,WAAvB,CAAmC5Q,CAAxD,CARS;;AAWToD,UAAAA,IAAI,CAACiU,OAALjU,CAAa,KAAK6nG,cAAlB7nG,EAAkC,KAAK6nG,cAAvC7nG,EAAuDA,IAAI,CAAC0S,IAA5D1S,EAAkE6H,IAAI,CAACqM,QAALrM,CAAc,CAACyV,YAAfzV,CAAlE7H;AAEA,cAAIud,cAAc,GAAG,KAAKsqF,cAAL,CAAoBlrG,CAAzC;AACA,cAAI6gB,cAAc,GAAG,KAAKqqF,cAAL,CAAoBhrG,CAAzC;AAEA,eAAK4gB,SAAL,GAAiBJ,oBAAoB,GAAG,KAAKsrF,aAA7C,CAhBS;;AAmBT,cAAI,KAAKv+C,YAAL,GAAoB,KAAKE,cAAzB,GAA0C,KAAKC,eAA/C,GAAiE,KAAKF,cAAtE,IAAyF,CAAzF,IAA8FnjD,IAAI,CAACC,GAALD,CAAS,KAAK0gG,aAAL,CAAmBhrG,CAA5BsK,IAAiC,CAAnI,EAAsI;AAClI,iBAAKuW,SAAL,GAAiB,KAAKmqF,aAAL,CAAmBhrG,CAAnB,GAAuB,KAAKgsG,cAA7C;AACArrF,YAAAA,cAAc,GAAG,KAAKqqF,aAAL,CAAmBhrG,CAAnB,GAAuB,EAAxC2gB;;;AAGJ,0CAAKzjB,eAAL,SAAA,SAAA,GAAA+uG,wBAAsBptG,QAAtB,CAA+B,gBAA/B,EAAiD8hB,cAAjD,CAAA;AACA,0CAAKzjB,eAAL,SAAA,SAAA,GAAAgvG,wBAAsBrtG,QAAtB,CAA+B,gBAA/B,EAAiD,CAAC+hB,cAAlD,CAAA;AACA,0CAAK1jB,eAAL,SAAA,SAAA,GAAAivG,wBAAsBttG,QAAtB,CAA+B,gBAA/B,EAAiD,KAAKgiB,SAAtD,CAAA;AACH,SA7BA;;AA6BA,gCAAA;QA1IkCviB,0FAelC9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACO,GADP;;yFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACQ,GADR;;;AACWH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBxB,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa45G,kBAAkB,yCAD9B95G,OAAO,CAAC,oBAAD;AAAsBI,QAAAA,8CAAA;;AAAA,mCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAG1BsK,eAH0B,SAAA;AAGX,sBAAA;;;AAAA,iDAAA;;AAAAnK,QAAAA,OAEfyL,KAFe,GAEf,cAAA,GAAQ;AAEJ,cAAMm0E,IAAI,GAAG,KAAK12E,IAAL,CAAUC,cAAV,CAAyB,MAAzB,CAAb;AACA,eAAKgB,eAAL,GAAuBy1E,IAAI,CAACl1E,YAALk1E,CAAkB10E,wBAAlB00E,CAAvB;AACA7sE,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB8nC,QAAzB9nD,EAAmC,KAAKqlG,OAAxCrlG,EAAiD,IAAjDA;AAEH,SARc;;AAQd/S,QAAAA,OAEDo4G,OAFC,GAED,gBAAA,CAAQn9E,KAAR,EAA8B;AAE1B,cAAGA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACovB,KAA7B,EAAoC;AAAA,qCAAA;;AAChC,0CAAKzxD,eAAL,SAAA,SAAA,GAAAmiB,sBAAsBtiB,IAAtB,CAA2B,cAA3B,EAA2C,IAA3C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC8sE,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAKnvG,eAAL,SAAA,SAAA,GAAA+jB,uBAAsBlkB,IAAtB,CAA2B,cAA3B,EAA2C,IAA3C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC0vB,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAK/xD,eAAL,SAAA,SAAA,GAAAgkB,uBAAsBnkB,IAAtB,CAA2B,gBAA3B,EAA6C,IAA7C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACqvB,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAK1xD,eAAL,SAAA,SAAA,GAAAikB,uBAAsBpkB,IAAtB,CAA2B,sBAA3B,EAAmD,IAAnD,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACk6D,KAA9B,EAAqC;AAAA,sCAAA;;AACjC,2CAAKv8F,eAAL,SAAA,SAAA,GAAAquG,uBAAsBxuG,IAAtB,CAA2B,iBAA3B,EAA8C,IAA9C,CAAA;;AAGP,SAxBA;;AAwBAhK,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,iCAAA;QAtCmC4H;;;;;;;;;;;;;;;;;;;;;;;;;ACJxC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa85G,iBAAiB,wCAD7Bh6G,OAAO,CAAC,mBAAD;AAAqBI,QAAAA,6CAAA;;AAAA,kCAAA;AAAA,0DAAA;;;AAAA,gDAAA;;AAAAK,QAAAA,OAEzByL,KAFyB,GAEzB,cAAA,GAAQ,CAEP,CAJwB;;AAIxBzL,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B;AACtBP,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,KAAK8F,IAAL,CAAUwD,aAAtBtJ;AACH,SAJA;;AAIA,gCAAA;QAPkCmI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFvC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa+5G,sBAAsB,6CADlCj6G,OAAO,CAAC,wBAAD;AAA0BI,QAAAA,kDAAA;;AAAA,uCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,gGAAA;;AAAA,sBAAA;;;AAAA,qDAAA;;AAAAxd,QAAAA,OAM9ByL,KAN8B,GAM9B,cAAA,GAAQ;AACJ,eAAKguG,eAAL,GAAuBt5G,YAAY,CAACC,KAAbD,CAAmBu5G,aAA1C;AACAt2G,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,kBAAZA,EAAgC,KAAKq2G,eAArCr2G;AACA,cAAMk4C,WAAW,GAAG,KAAKjwC,uBAAL,CAA6BwiC,YAA7B,CAApB;;AACA,eAAK,IAAIntC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG46C,WAAW,CAAC36C,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC46C,YAAAA,WAAW,CAAC56C,CAAD,CAAX46C,CAAe9nB,OAAf8nB,GAAyB,KAAKm+D,eAA9Bn+D;;AAEP,SAb6B;;AAa7B,qCAAA;QAZuC/vC,2FAEvC9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACiB,KADjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,UAAQuc,UAAU,GAAmGC,SAAS,CAAtHD,UAAR;AAAA,UAAoBE,cAAc,GAAmFD,SAAS,CAA1GC,cAApB;AAAA,UAAoCC,UAAU,GAAuEF,SAAS,CAA1FE,UAApC;AAAA,UAAgDC,iBAAiB,GAAoDH,SAAS,CAA9EG,iBAAhD;AAAA,UAAmEC,SAAS,GAAyCJ,SAAS,CAA3DI,SAAnE;AAAA,UAA8EC,UAAU,GAA6BL,SAAS,CAAhDK,UAA9E;AAAA,UAA0FC,SAAS,GAAkBN,SAAS,CAApCM,SAA1F;AAAA,UAAqGC,WAAW,GAAKP,SAAS,CAAzBO,WAArG;AACA,UAAQC,MAAM,GAAqDvE,GAAG,CAA9DuE,MAAR;AAAA,UAAgBC,MAAM,GAA6CxE,GAAG,CAAtDwE,MAAhB;AAAA,UAAwBC,OAAO,GAAoCzE,GAAG,CAA9CyE,OAAxB;AAAA,UAAiCC,YAAY,GAAsB1E,GAAG,CAArC0E,YAAjC;AAAA,UAA+CvE,KAAK,GAAeH,GAAG,CAAvBG,KAA/C;AAAA,UAAsDwE,QAAQ,GAAK3E,GAAG,CAAhB2E,QAAtD;UAGa09E,WAAW,sDAMxB;;AACO,eAASC,gBAAT,CAA2B7hF,MAA3B,EACHyB,GADG,EACsB;AACzB,YAAMmG,QAAQ,GAAG1H,iBAAiB,CAACF,MAAD,CAAlC;AACA,YAAMoB,IAAI,GAAGD,aAAa,CAACnB,MAAD,EAASA,MAAM,CAACqB,MAAPrB,CAAcsB,KAAvB,EAA8BtB,MAAM,CAACqB,MAAPrB,CAActZ,MAA5C,CAA1B;AACA,YAAM4a,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACA,YAAM5a,MAAM,GAAG0a,IAAI,CAAC1a,MAApB;AACA,YAAMo7F,iBAAiB,2BAAvB;AACA,YAAMC,iBAAiB,sBAAvB;AACA,YAAMC,mBAAmB,wBAAzB;AACA,YAAMC,iBAAiB,wBAAvB;;AACA,YAAI,CAACxgF,GAAG,CAAC+C,gBAAJ/C,CAAqBqgF,iBAArBrgF,CAAL,EAA8C;AAC1C,cAAMiO,SAAS,GAAG5L,MAAM,CAAC6D,OAAzB;AACAlG,UAAAA,GAAG,CAACkD,eAAJlD,CAAoBqgF,iBAApBrgF,EAAuCiO,SAAvCjO,EAAkDH,KAAlDG,EAAyD/a,MAAzD+a,EAAiEgC,iBAAiB,CAACmB,OAAnFnD;AACAA,UAAAA,GAAG,CAACkD,eAAJlD,CAAoBsgF,iBAApBtgF,EAAuCiO,SAAvCjO,EAAkDH,KAAlDG,EAAyD/a,MAAzD+a,EAAiEgC,iBAAiB,CAACmB,OAAnFnD;AACAA,UAAAA,GAAG,CAACkD,eAAJlD,CAAoBugF,mBAApBvgF,EAAyCiO,SAAzCjO,EAAoDH,KAApDG,EAA2D/a,MAA3D+a,EAAmEgC,iBAAiB,CAACmB,OAArFnD;AACAA,UAAAA,GAAG,CAAC6b,eAAJ7b,CAAoBwgF,iBAApBxgF,EAAuCqC,MAAM,CAACwL,aAA9C7N,EAA6DH,KAA7DG,EAAoE/a,MAApE+a,EAA4EgC,iBAAiB,CAACmB,OAA9FnD;SAdqB;;;AAiBzB,YAAMygF,WAAW,GAAGzgF,GAAG,CAACoD,aAAJpD,CAAkBH,KAAlBG,EAAyB/a,MAAzB+a,EAAiC,UAAjCA,CAApB;AACAygF,QAAAA,WAAW,CAACn5G,IAAZm5G,yBAAuCt6E,QAAvCs6E;AACAA,QAAAA,WAAW,CAACj6E,WAAZi6E,CAAwB,IAAIh+E,QAAJ,CAAa9C,IAAI,CAACnsB,CAAlB,EAAqBmsB,IAAI,CAAClsB,CAA1B,EAA6BksB,IAAI,CAACE,KAAlC,EAAyCF,IAAI,CAAC1a,MAA9C,CAAxBw7F;AACA,YAAMC,OAAO,GAAG,IAAIziF,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAhB;;AACA,YAAIM,MAAM,CAACsF,SAAPtF,GAAmBiE,YAAY,CAACuD,KAApC,EAA2C;AACvC,cAAI/F,GAAG,CAACjB,iBAAJiB,CAAsB2gF,KAA1B,EAAiC;AAC7BC,YAAAA,YAAY,CAACF,OAAD,EAAUniF,MAAM,CAACwF,UAAjB,CAAZ68E;AACH,WAFD,MAEO;AACHF,YAAAA,OAAO,CAACltG,CAARktG,GAAYniF,MAAM,CAACwF,UAAPxF,CAAkB/qB,CAA9BktG;AACAA,YAAAA,OAAO,CAACjtG,CAARitG,GAAYniF,MAAM,CAACwF,UAAPxF,CAAkB9qB,CAA9BitG;AACAA,YAAAA,OAAO,CAAChtG,CAARgtG,GAAYniF,MAAM,CAACwF,UAAPxF,CAAkB7qB,CAA9BgtG;;;;AAGR,YAAMG,aAAa,GAAG,IAAIj/E,UAAJ,CAAe,GAAf,EAClBG,UAAU,CAAC0B,KADO,EACA3B,cAAc,CAAC4B,aADf,EAElBpB,MAAM,CAACqB,KAFW,EAEJpB,OAAO,CAACuB,KAFJ,EAGlBvF,MAAM,CAACsF,SAHW,EAIlB68E,OAJkB,CAAtB;AAKA,YAAMI,cAAc,GAAG,IAAIl/E,UAAJ,CAAe,GAAf,EACnBG,UAAU,CAAC0B,KADQ,EACD3B,cAAc,CAAC4B,aADd,EAEnBpB,MAAM,CAACqB,KAFY,EAELpB,OAAO,CAACuB,KAFH,EAGnBvF,MAAM,CAACsF,SAHY,EAInB,IAAI5F,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAJmB,CAAvB;AAKA,YAAM8iF,gBAAgB,GAAG,IAAIn/E,UAAJ,CAAe,GAAf,EACrBG,UAAU,CAAC0B,KADU,EACH3B,cAAc,CAAC4B,aADZ,EAErBpB,MAAM,CAACqB,KAFc,EAEPpB,OAAO,CAACuB,KAFD,EAGrBvF,MAAM,CAACsF,SAHc,EAIrB,IAAI5F,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAJqB,CAAzB;AAKA,YAAM0f,UAAU,GAAG,IAAI/b,UAAJ,CAAe,GAAf,EACfG,UAAU,CAAC0B,KADI,EACG3B,cAAc,CAAC+L,aADlB,EAEfvL,MAAM,CAACqB,KAFQ,EAEDpB,OAAO,CAACuB,KAFP,EAGfvF,MAAM,CAACsF,SAHQ,EAIf,IAAI5F,KAAJ,CAAUM,MAAM,CAACwP,UAAjB,EAA6BxP,MAAM,CAACyP,YAApC,EAAkD,CAAlD,EAAqD,CAArD,CAJe,CAAnB;AAKAyyE,QAAAA,WAAW,CAACx8E,aAAZw8E,CAA0BJ,iBAA1BI,EAA6CI,aAA7CJ;AACAA,QAAAA,WAAW,CAACx8E,aAAZw8E,CAA0BH,iBAA1BG,EAA6CK,cAA7CL;AACAA,QAAAA,WAAW,CAACx8E,aAAZw8E,CAA0BF,mBAA1BE,EAA+CM,gBAA/CN;AACAA,QAAAA,WAAW,CAACx8E,aAAZw8E,CAA0BD,iBAA1BC,EAA6C9iE,UAA7C8iE;AACAA,QAAAA,WAAW,CACNv8E,QADLu8E,CACct+E,SAAS,CAACsM,aADxBgyE,EAEK/xE,gBAFL+xE,CAEsBliF,MAFtBkiF,EAE8B,IAAIx+E,SAAJ,EAF9Bw+E,EAE+Cv+E,UAAU,CAACyM,aAAXzM,GAA2BA,UAAU,CAAC0M,aAAtC1M,GAAsDA,UAAU,CAAC2M,eAFhH4xE;AAGA,YAAMO,WAAW,GAAG,IAAIb,WAAJ,EAApB;AACAa,QAAAA,WAAW,CAAC/4C,KAAZ+4C,GAAoBX,iBAApBW;AACAA,QAAAA,WAAW,CAACvjG,MAAZujG,GAAqBV,iBAArBU;AACAA,QAAAA,WAAW,CAACC,QAAZD,GAAuBT,mBAAvBS;AACAA,QAAAA,WAAW,CAACE,EAAZF,GAAiBR,iBAAjBQ;AACA,eAAOA,WAAP;;;AACH,UAGKG,YAAY;AAAA,2CAAA;;AAAA36G,QAAAA,OAENoxG,KAFM,GAEd,cAAA,GAAiB;AACb,eAAKwJ,wBAAL,GAAgC,IAAI56B,QAAJ,EAAhC;AACA,eAAK46B,wBAAL,CAA8B95G,IAA9B,GAAqC,2BAArC;AACA,eAAK85G,wBAAL,CAA8BvlB,UAA9B,CAAyC;AACrClV,YAAAA,UAAU,EAAE,4BADyB;AAErC06B,YAAAA,OAAO,EAAE;AAAEpwE,cAAAA,iBAAiB,EAAE;AAArB;AAF4B,WAAzC;;AAIA,eAAK,IAAI/pC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKk6G,wBAAL,CAA8B3/D,MAA9B,CAAqCt6C,MAAzD,EAAiE,EAAED,CAAnE,EAAsE;AAClE,iBAAKk6G,wBAAL,CAA8B3/D,MAA9B,CAAqCv6C,CAArC,EAAwCo6G,UAAxC;;AAEP,SAZa;;AAad,6BAAA,GAAe;AACX,eAAK1J,KAAL;;;AACH,2BAAA;SAlBJ;;AAqBD,UAAI2J,YAAiC,GAAG,IAAxC,EASA;;AACO,eAASC,iBAAT,CAA4BjjF,MAA5B,EAA2DyB,GAA3D,EAAoFyhF,OAApF,EAA0G;AAC7G,YAAI,CAACF,YAAL,EAAmB;AACfA,UAAAA,YAAY,GAAG,IAAIJ,YAAJ,EAAfI;;;AAEJ,YAAMp7E,QAAQ,GAAG1H,iBAAiB,CAACF,MAAD,CAAlC,CAJ6G;;AAO7G,YAAMoB,IAAI,GAAGD,aAAa,CAACnB,MAAD,EAASA,MAAM,CAACqB,MAAPrB,CAAcsB,KAAvB,EAA8BtB,MAAM,CAACqB,MAAPrB,CAActZ,MAA5C,CAA1B;AACA,YAAM4a,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACA,YAAM5a,MAAM,GAAG0a,IAAI,CAAC1a,MAApB;AAEA,YAAMy8F,0BAA0B,+BAAhC;AACA,YAAMC,sBAAsB,2BAA5B;;AACA,YAAI,CAAC3hF,GAAG,CAAC+C,gBAAJ/C,CAAqB0hF,0BAArB1hF,CAAL,EAAuD;AACnDA,UAAAA,GAAG,CAACkD,eAAJlD,CAAoB0hF,0BAApB1hF,EAAgDqC,MAAM,CAACiC,KAAvDtE,EAA8DH,KAA9DG,EAAqE/a,MAArE+a,EAA6EgC,iBAAiB,CAACmB,OAA/FnD;AACAA,UAAAA,GAAG,CAAC6b,eAAJ7b,CAAoB2hF,sBAApB3hF,EAA4CqC,MAAM,CAACwL,aAAnD7N,EAAkEH,KAAlEG,EAAyE/a,MAAzE+a,EAAiFgC,iBAAiB,CAACmB,OAAnGnD;SAfyG;;;AAkB7G,YAAM4hF,YAAY,GAAG5hF,GAAG,CAACoD,aAAJpD,CAAkBH,KAAlBG,EAAyB/a,MAAzB+a,EAAiC,UAAjCA,CAArB;AACA4hF,QAAAA,YAAY,CAACt6G,IAAbs6G,0BAAyCz7E,QAAzCy7E;AACAA,QAAAA,YAAY,CAACp7E,WAAbo7E,CAAyB,IAAIn/E,QAAJ,CAAa9C,IAAI,CAACnsB,CAAlB,EAAqBmsB,IAAI,CAAClsB,CAA1B,EAA6BosB,KAA7B,EAAoC5a,MAApC,CAAzB28F,EApB6G;;;;;;;;;;;;;AAiC7G,YAAI5hF,GAAG,CAAC+C,gBAAJ/C,CAAqByhF,OAAO,CAACx5C,KAA7BjoC,CAAJ,EAAyC;AACrC,cAAMsmD,WAAW,GAAG,IAAIlkD,WAAJ,EAApB;AACAkkD,UAAAA,WAAW,CAACh/E,IAAZg/E,GAAmB,mBAAnBA;AACAs7B,UAAAA,YAAY,CAACr+E,cAAbq+E,CAA4BH,OAAO,CAACx5C,KAApC25C,EAA2Ct7B,WAA3Cs7B;AAEA,cAAMC,iBAAiB,GAAG,IAAIz/E,WAAJ,EAA1B;AACAy/E,UAAAA,iBAAiB,CAACv6G,IAAlBu6G,GAAyB,mBAAzBA;AACAD,UAAAA,YAAY,CAACr+E,cAAbq+E,CAA4BH,OAAO,CAAChkG,MAApCmkG,EAA4CC,iBAA5CD;AAEA,cAAME,mBAAmB,GAAG,IAAI1/E,WAAJ,EAA5B;AACA0/E,UAAAA,mBAAmB,CAACx6G,IAApBw6G,GAA2B,qBAA3BA;AACAF,UAAAA,YAAY,CAACr+E,cAAbq+E,CAA4BH,OAAO,CAACR,QAApCW,EAA8CE,mBAA9CF;AAEA,cAAMG,gBAAgB,GAAG,IAAI3/E,WAAJ,EAAzB;AACA2/E,UAAAA,gBAAgB,CAACz6G,IAAjBy6G,GAAwB,eAAxBA;AACAH,UAAAA,YAAY,CAACr+E,cAAbq+E,CAA4BH,OAAO,CAACP,EAApCU,EAAwCG,gBAAxCH;;;AAEJ,YAAMI,kBAAkB,GAAG,IAAI/jF,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA3B;;AACA,YAAIM,MAAM,CAACsF,SAAPtF,GAAmBiE,YAAY,CAACuD,KAApC,EAA2C;AACvCi8E,UAAAA,kBAAkB,CAACxuG,CAAnBwuG,GAAuBzjF,MAAM,CAACwF,UAAPxF,CAAkB/qB,CAAzCwuG;AACAA,UAAAA,kBAAkB,CAACvuG,CAAnBuuG,GAAuBzjF,MAAM,CAACwF,UAAPxF,CAAkB9qB,CAAzCuuG;AACAA,UAAAA,kBAAkB,CAACtuG,CAAnBsuG,GAAuBzjF,MAAM,CAACwF,UAAPxF,CAAkB7qB,CAAzCsuG;;;AAEJA,QAAAA,kBAAkB,CAACh+E,CAAnBg+E,GAAuB,CAAvBA;AACA,YAAMC,gBAAgB,GAAG,IAAIrgF,UAAJ,CAAe,GAAf,EACrBG,UAAU,CAAC0B,KADU,EACH3B,cAAc,CAAC4B,aADZ,EAErBpB,MAAM,CAACqB,KAFc,EAEPpB,OAAO,CAACuB,KAFD,EAGrBvF,MAAM,CAACsF,SAHc,EAIrBm+E,kBAJqB,CAAzB;AAKAJ,QAAAA,YAAY,CAAC39E,aAAb29E,CAA2BF,0BAA3BE,EAAuDK,gBAAvDL;AAEA,YAAIh/E,QAAQ,GAAG3C,UAAU,CAACC,cAAXD,CAA0BE,WAA1BF,CAAsC,mBAAtCA,KAA8DshF,YAAY,CAACH,wBAA1F;AAWAQ,QAAAA,YAAY,CAAC19E,QAAb09E,CAAsBz/E,SAAS,CAACgC,kBAAhCy9E,EAAoDx9E,aAApDw9E,CACIrjF,MADJqjF,EACYh/E,QADZg/E,EACsB,CADtBA,EAEI1/E,UAAU,CAAC8P,mBAFf4vE;AAIAA,QAAAA,YAAY,CAAC19E,QAAb09E,CAAsBz/E,SAAS,CAACgC,kBAAhCy9E,EAAoDlzE,gBAApDkzE,CAAqErjF,MAArEqjF,EAA6E,IAAI3/E,SAAJ,EAA7E2/E,EACI1/E,UAAU,CAACiQ,kBAAXjQ,GAAgCA,UAAU,CAACkQ,aAA3ClQ,GAA2DA,UAAU,CAACmQ,QAD1EuvE;AAEA,eAAO;AAAEM,UAAAA,MAAM,EAAER,0BAAV;AAAsCS,UAAAA,MAAM,EAAER;AAA9C,SAAP;;;AACH,UAEKS,QAAQ;AAAA,wCAAA;;AAAAp3G,QAAAA,QAEF4sG,KAFE,GAEV,cAAA,GAAiB;AACb,eAAKyK,YAAL,GAAoB,IAAI77B,QAAJ,EAApB;AACA,eAAK67B,YAAL,CAAkB/6G,IAAlB,GAAyB,+BAAzB;AAEA,eAAK+6G,YAAL,CAAkBxmB,UAAlB,CAA6B;AACzBlV,YAAAA,UAAU,EAAE,uBADa;AAEzB06B,YAAAA,OAAO,EAAE;;AAELiB,cAAAA,cAAc,EAAE;AAFX;AAFgB,WAA7B;;AAOA,eAAK,IAAIp7G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKm7G,YAAL,CAAkB5gE,MAAlB,CAAyBt6C,MAA7C,EAAqD,EAAED,CAAvD,EAA0D;AACtD,iBAAKm7G,YAAL,CAAkB5gE,MAAlB,CAAyBv6C,CAAzB,EAA4Bo6G,UAA5B;;AAEP,SAhBS;;AAiBV,yBAAA,GAAe;AACX,eAAK1J,KAAL;;;AACH,uBAAA;SArBJ;;AAwBD,UAAI2K,QAAyB,GAAG,IAAhC;;AAEO,eAASC,oBAAT,CAA+BjkF,MAA/B,EACHyB,GADG,EAEHyiF,QAFG,EAEe;AAClB,YAAI,CAACF,QAAL,EAAe;AACXA,UAAAA,QAAQ,GAAG,IAAIH,QAAJ,EAAXG;;;AAEJ,YAAMp8E,QAAQ,GAAG1H,iBAAiB,CAACF,MAAD,CAAlC;AACA,YAAMoB,IAAI,GAAGD,aAAa,CAACnB,MAAD,EAASA,MAAM,CAACqB,MAAPrB,CAAcsB,KAAvB,EAA8BtB,MAAM,CAACqB,MAAPrB,CAActZ,MAA5C,CAA1B;AACA,YAAM4a,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACA,YAAM5a,MAAM,GAAG0a,IAAI,CAAC1a,MAApB;AACA,YAAMy9F,qBAAqB,6BAA2Bv8E,QAAtD;AACA,YAAMw8E,iBAAiB,yBAAuBx8E,QAA9C;;AACA,YAAI,CAACnG,GAAG,CAAC+C,gBAAJ/C,CAAqB0iF,qBAArB1iF,CAAL,EAAkD;AAC9CA,UAAAA,GAAG,CAACgD,gBAAJhD,CAAqB0iF,qBAArB1iF,EAA4CqC,MAAM,CAACiC,KAAnDtE,EAA0DH,KAA1DG,EAAiE/a,MAAjE+a,EAAyEzB,MAAM,CAACqB,MAAhFI;AACAA,UAAAA,GAAG,CAAC6b,eAAJ7b,CAAoB2iF,iBAApB3iF,EAAuCqC,MAAM,CAACwL,aAA9C7N,EAA6DH,KAA7DG,EAAoE/a,MAApE+a,EAA4EgC,iBAAiB,CAACmB,OAA9FnD;;;AAEJA,QAAAA,GAAG,CAACimD,kBAAJjmD,CAAuB0iF,qBAAvB1iF,EAA8CzB,MAAM,CAACqB,MAArDI;AACA,YAAM4iF,eAAe,GAAG5iF,GAAG,CAACoD,aAAJpD,CAAkBH,KAAlBG,EAAyB/a,MAAzB+a,EAAiC,aAAjCA,CAAxB;AACA4iF,QAAAA,eAAe,CAACt7G,IAAhBs7G,6BAA+Cz8E,QAA/Cy8E;AACAA,QAAAA,eAAe,CAACp8E,WAAhBo8E,CAA4B,IAAIngF,QAAJ,CAAa9C,IAAI,CAACnsB,CAAlB,EAAqBmsB,IAAI,CAAClsB,CAA1B,EAA6BksB,IAAI,CAACE,KAAlC,EAAyCF,IAAI,CAAC1a,MAA9C,CAA5B29F;;AACA,YAAI5iF,GAAG,CAAC+C,gBAAJ/C,CAAqByiF,QAArBziF,CAAJ,EAAoC;AAChC,cAAMsmD,WAAW,GAAG,IAAIlkD,WAAJ,EAApB;AACAkkD,UAAAA,WAAW,CAACh/E,IAAZg/E,GAAmB,iBAAnBA;AACAs8B,UAAAA,eAAe,CAACr/E,cAAhBq/E,CAA+BH,QAA/BG,EAAyCt8B,WAAzCs8B;;;AAEJ,YAAMC,cAAc,GAAG,IAAI5kF,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBM,MAAM,CAACwF,UAAPxF,CAAkByF,CAArC,CAAvB;;AACA,YAAIzF,MAAM,CAACsF,SAAPtF,GAAmBiE,YAAY,CAACuD,KAApC,EAA2C;AACvC88E,UAAAA,cAAc,CAACrvG,CAAfqvG,GAAmBtkF,MAAM,CAACwF,UAAPxF,CAAkB/qB,CAArCqvG;AACAA,UAAAA,cAAc,CAACpvG,CAAfovG,GAAmBtkF,MAAM,CAACwF,UAAPxF,CAAkB9qB,CAArCovG;AACAA,UAAAA,cAAc,CAACnvG,CAAfmvG,GAAmBtkF,MAAM,CAACwF,UAAPxF,CAAkB7qB,CAArCmvG;;;AAEJ,YAAMC,mBAAmB,GAAG,IAAIlhF,UAAJ,CAAe,GAAf,EACxBG,UAAU,CAAC0B,KADa,EACN3B,cAAc,CAAC4B,aADT,EAExBE,oBAAoB,CAACrF,MAAM,CAACsF,SAAR,EAAmB/B,cAAc,CAAC4B,aAAlC,CAFI,EAGxBnB,OAAO,CAACuB,KAHgB,EAIxBvF,MAAM,CAACsF,SAJiB,EAKxBg/E,cALwB,CAA5B;AAMA,YAAME,qBAAqB,GAAG,IAAInhF,UAAJ,CAAe,GAAf,EAC1BG,UAAU,CAAC0B,KADe,EACR3B,cAAc,CAAC+L,aADP,EAE1BjK,oBAAoB,CAACrF,MAAM,CAACsF,SAAR,EAAmB/B,cAAc,CAAC+L,aAAlC,CAFM,EAG1BtL,OAAO,CAACuB,KAHkB,EAI1BvF,MAAM,CAACsF,SAJmB,EAK1B,IAAI5F,KAAJ,CAAUM,MAAM,CAACwP,UAAjB,EAA6BxP,MAAM,CAACyP,YAApC,EAAkD,CAAlD,EAAqD,CAArD,CAL0B,CAA9B;AAMA40E,QAAAA,eAAe,CAAC3+E,aAAhB2+E,CAA8BF,qBAA9BE,EAAqDE,mBAArDF;AACAA,QAAAA,eAAe,CAAC3+E,aAAhB2+E,CAA8BD,iBAA9BC,EAAiDG,qBAAjDH;AACAA,QAAAA,eAAe,CAAC1+E,QAAhB0+E,CAAyBzgF,SAAS,CAACkC,IAAnCu+E,EAAyCI,iBAAzCJ,CACIL,QAAQ,CAACF,YADbO,EAC2B,CAD3BA,EAC8B1gF,UAAU,CAACmC,IADzCu+E;AAGAA,QAAAA,eAAe,CAAC1+E,QAAhB0+E,CAAyBzgF,SAAS,CAACgC,kBAAnCy+E,EAAuDl0E,gBAAvDk0E,CAAwErkF,MAAxEqkF,EAAgF,IAAI3gF,SAAJ,EAAhF2gF,EACI1gF,UAAU,CAACj1B,EAAXi1B,GAAgBA,UAAU,CAAC+gF,QAD/BL;AAEA,eAAO;AAAEV,UAAAA,MAAM,EAAEQ,qBAAV;AAAiCP,UAAAA,MAAM,EAAEQ;AAAzC,SAAP;;;AAGG,eAASO,aAAT,CAAwB3kF,MAAxB,EAAuDyB,GAAvD,EAAgF;AACnF,YAAI,CAACzB,MAAM,CAACyc,KAAZ,EAAmB;AACf;SAF+E;;;AAKnF,YAAMgmE,WAAW,GAAGZ,gBAAgB,CAAC7hF,MAAD,EAASyB,GAAT,CAApC,CALmF;;AAOnF,YAAMmjF,SAAS,GAAG3B,iBAAiB,CAACjjF,MAAD,EAASyB,GAAT,EAAcghF,WAAd,CAAnC,CAPmF;;AASnFwB,QAAAA,oBAAoB,CAACjkF,MAAD,EAASyB,GAAT,EAAcmjF,SAAS,CAACjB,MAAxB,CAApBM;;;;;;;;;;;;;;;;;;;;;;;;;;ACrRJ,UAAQz8G,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIam8E,YAAY,mCAFxBr9G,OAAO,CAAC,cAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,0DAAA;;;AAAA,2CAAA;;AAAAK,QAAAA,OAGd0gC,QAHc,GAGd,iBAAA,GAAW,CAEV,CALa;;AAKb1gC,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CASzB,CAXA;;AAWA,2BAAA;QAf6B4H,UADhB,CAAjBk1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD,UAAQlhC,OAAO,GAAwBC,UAAU,CAAzCD,OAAR;AAAA,UAAiBkhC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAAjB;UAGao8E,gBAAgB,uCAD5Bt9G,OAAO,CAAC,kBAAD;AAAoBI,QAAAA,4CAAA;;AAAA,iCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAEhB06C,SAFgB,GAEa,EAFb;AAEe16C,UAAAA,MAE/B26C,gBAF+B,GAEZC,EAAE,EAFU;AAER56C,UAAAA,MACvBijB,SADuB,GACLpQ,EAAE,EADG;AACD7S,UAAAA,MAEtB8d,eAFsB,GAEJjL,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFE;AAEO7S,UAAAA,MAC7B66C,YAD6B,GACdhoC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY;AACH7S,UAAAA,MAE1BktC,CAF0B,GAEtB,CAFsB;AAErBltC,UAAAA,MACL03D,KADK,GACG,CADH;AACI13D,UAAAA,MACTi9G,KADS,GACD,CADC;AACAj9G,UAAAA,MACTmlB,KADS,GACD,EADC;AACC,sBAAA;;;AAAA,+CAAA;;AAAAhlB,QAAAA,OAElByL,KAFkB,GAElB,cAAA,GAAS;AAAA,2BAAA;;AACL,eAAKkS,eAAL,GAAuB,KAAKzU,IAAL,CAAU4U,QAAV,CAAmBjH,KAAnB,EAAvB;AACA,eAAK6jC,YAAL,GAAoB,KAAK/8B,eAAL,CAAqB9G,KAArB,EAApB;AAEA,cAAI8jC,UAAU,GAAG,KAAKzxC,IAAL,CAAUmC,uBAAV,CAAkCuvC,mBAAlC,CAAjB;AACAD,UAAAA,UAAU,CAACvoB,OAAXuoB,CACI,UAACE,IAAD,EAAU;AACN31C,YAAAA,MAAI,CAACq1C,SAAL,CAAez3C,IAAf,CAAoB+3C,IAAI,CAACze,QAAzB;AACH,WAHLue;AAMA5nC,UAAAA,KAAK,CAAClQ,EAANkQ,CACIggB,KAAK,CAACC,SAAND,CAAgB8nC,QADpB9nD,EAEI,KAAK+nD,SAFT/nD,EAGI,IAHJA;AAMAA,UAAAA,KAAK,CAAClQ,EAANkQ,CACIggB,KAAK,CAACC,SAAND,CAAgBuZ,MADpBv5B,EAEI,KAAKgoD,OAFThoD,EAGI,IAHJA;AAKH,SAxBiB;;AAwBjB/S,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQgwB,EAAR,EAAoB;AAAA,2BAAA;;AAChB,eAAK/V,eAAL,CAAqB3Q,CAArB,IAA0B,KAAKgY,KAAL,GAAa0O,EAAb,GAAkB,KAAK6jC,KAAjD;AACA,eAAK55C,eAAL,CAAqBzQ,CAArB,IAA0B,KAAK8X,KAAL,GAAa0O,EAAb,GAAkB,KAAKopF,KAAjD;AACA,eAAK5zG,IAAL,CAAUZ,WAAV,CAAsB,KAAKqV,eAA3B;;AAEA,cAAI,KAAKA,eAAL,CAAqBm9B,MAArB,CAA4B,KAAKJ,YAAjC,CAAJ,EAAoD;AAChD,iBAAK3N,CAAL,GAAS,CAAT;;;AAGJ,eAAKA,CAAL,IAAUrZ,EAAV;AACA,eAAKqZ,CAAL,GAASgO,OAAO,CAAC,KAAKhO,CAAN,CAAhB;AACA18B,UAAAA,IAAI,CAAC2M,IAAL3M,CAAU,KAAKqqC,YAAfrqC,EAA6B,KAAKqqC,YAAlCrqC,EAAgD,KAAKsN,eAArDtN,EAAsE,KAAK08B,CAA3E18B;AACAA,UAAAA,IAAI,CAACyG,QAALzG,CAAc,KAAKyS,SAAnBzS,EAA8B,KAAKqqC,YAAnCrqC,EAAiD,KAAKsN,eAAtDtN;AAEA,eAAKkqC,SAAL,CAAenoB,OAAf,CACI,UAACgK,QAAD,EAAwB;AACpB,gBAAI4e,MAAM,GAAG5e,QAAQ,CAAC6e,MAAT7e,CAAgB,CAAhBA,EAAmB8e,SAAnB9e,CAA6B,WAA7BA,CAAb;AACAA,YAAAA,QAAQ,CAAC6e,MAAT7e,CAAgB,CAAhBA,EAAmB+e,UAAnB/e,CAA8B4e,MAA9B5e,EAAsC32B,MAAI,CAAC+0C,gBAA3Cpe;;AACA32B,YAAAA,MAAI,CAAC+0C,gBAAL,CAAsBhb,GAAtB,CACI/5B,MAAI,CAACqd,SAAL,CAAe9V,CADnB,EAEIvH,MAAI,CAACqd,SAAL,CAAe7V,CAFnB,EAGIxH,MAAI,CAACqd,SAAL,CAAe5V,CAHnB,EAIIzH,MAAI,CAAC+0C,gBAAL,CAAsBhd,CAJ1B;;AAMApB,YAAAA,QAAQ,CAAC6e,MAAT7e,CAAgB,CAAhBA,EAAmBgf,UAAnBhf,CAA8B4e,MAA9B5e,EAAsC32B,MAAI,CAAC+0C,gBAA3Cpe;AACH,WAXL;AAaH,SA7BA;;AA6BAp8B,QAAAA,OAEO86D,SAFP,GAED,kBAAA,CAAmB7/B,KAAnB,EAAyC;AACrC,cAAI8hF,IAAI,GAAG9hF,KAAK,CAACsR,OAAjB;;AACA,kBAAQwwE,IAAR;AACI,iBAAKvwE,OAAO,CAACmvB,KAAb;AACI,mBAAKpE,KAAL,GAAa,CAAC,CAAd;AACA;;AACJ,iBAAK/qB,OAAO,CAACovB,KAAb;AACI,mBAAKrE,KAAL,GAAa,CAAb;AACA;;AACJ,iBAAK/qB,OAAO,CAACivB,KAAb;AACI,mBAAKqhD,KAAL,GAAa,CAAC,CAAd;AACA;;AACJ,iBAAKtwE,OAAO,CAACkvB,KAAb;AACI,mBAAKohD,KAAL,GAAa,CAAb;AACA;AAZR;AAcH,SAlBA;;AAkBA98G,QAAAA,OAEO+6D,OAFP,GAED,gBAAA,CAAiB9/B,KAAjB,EAAuC;AACnC,cAAI8hF,IAAI,GAAG9hF,KAAK,CAACsR,OAAjB;;AACA,kBAAQwwE,IAAR;AACI,iBAAKvwE,OAAO,CAACmvB,KAAb;AACI,mBAAKpE,KAAL,GAAa,CAAb;AACA;;AACJ,iBAAK/qB,OAAO,CAACovB,KAAb;AACI,mBAAKrE,KAAL,GAAa,CAAb;AACA;;AACJ,iBAAK/qB,OAAO,CAACivB,KAAb;AACI,mBAAKqhD,KAAL,GAAa,CAAb;AACA;;AACJ,iBAAKtwE,OAAO,CAACkvB,KAAb;AACI,mBAAKohD,KAAL,GAAa,CAAb;AACA;AAZR;AAcH,SAlBA;;AAkBA,+BAAA;QArGiCvxG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDtC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGau9G,aAAa,oCADzBz9G,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,0DAAA;;;AAAA,4CAAA;;AAAAK,QAAAA,OAErByL,KAFqB,GAErB,cAAA,GAAQ;AAEJ,eAAI,IAAI/K,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKwI,IAAL,CAAUuY,QAAV,CAAmB9gB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,gBAAMm2E,KAAK,GAAG,KAAK3tE,IAAL,CAAUuY,QAAV,CAAmB/gB,CAAnB,CAAd,CAD+C;;AAG/Cm2E,YAAAA,KAAK,CAACnsE,YAANmsE,CAAmBwiC,kBAAnBxiC;;AAGP,SAVoB;;AAUpB72E,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,4BAAA;QAb8B4H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJnC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaw9G,aAAa,oCADzB19G,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,0DAAA;;;AAAA,4CAAA;;AAAAK,QAAAA,OAGrByL,KAHqB,GAGrB,cAAA,GAAQ;AACJsH,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB8nC,QAAzB9nD,EAAmC,KAAKqlG,OAAxCrlG,EAAiD,IAAjDA;AACH,SALoB;;AAKpB/S,QAAAA,OAGDo4G,OAHC,GAGD,gBAAA,CAAQn9E,KAAR,EAA8B;AAC1B,cAAIA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC0vB,KAA9B,EAAqC;AACjC,gBAAMzwD,KAAK,GAAG4E,IAAI,CAAC0S,IAAnB;AACA,gBAAMrI,GAAG,GAAGhI,EAAE,CAAC0F,WAAW,CAAC,CAAD,EAAI,EAAJ,CAAZ,EAAqB,CAArB,EAAwBA,WAAW,CAAC,CAAD,EAAI,EAAJ,CAAnC,CAAd;AACArV,YAAAA,GAAG,CAACC,IAAJD,CAAS,gBAATA,EAA2B;AAAC0I,cAAAA,KAAK,EAALA,KAAD;AAAQiP,cAAAA,GAAG,EAAHA;AAAR,aAA3B3X;;AAEP,SATA;;AASA/C,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,4BAAA;QAjB8B4H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDnC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGay9G,MAAM,6BADlB39G,OAAO,CAAC,QAAD,WAGHE,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAAC0d,IAAD;AAAMxd,QAAAA,kCAAA;;AAAA,uBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,qFAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,wFAAA;;AAAAA,UAAAA,wFAAA;;AAAA3d,UAAAA,MAGfs9G,UAHe,SAAA;AAGLt9G,UAAAA,MAEVu9G,cAFU,SAAA;AAEIv9G,UAAAA,MAEdw9G,WAFc,GAEA,CAFA;AAECx9G,UAAAA,MAEfk4G,gBAFe,GAEI,KAFJ;AAES,sBAAA;;;AAAA,qCAAA;;AAAA/3G,QAAAA,OAGxByL,KAHwB,GAGxB,cAAA,GAAQ;AAAA,0BAAA,YAAA;;AAEJ,eAAK0xG,UAAL,mBAAkB,KAAKG,2BAALC,aAAa7xG,YAAb,CAA0BmjB,UAA1B,CAAlB;AAEA,eAAKuuF,cAAL,iBAAsB,KAAKvwE,yBAAL2wE,WAAW9xG,YAAX,CAAwBJ,mBAAxB,CAAtB;AAEAyH,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB8nC,QAAzB9nD,EAAmC,KAAKqlG,OAAxCrlG,EAAiD,IAAjDA;AACH,SAVuB;;AAUvB/S,QAAAA,OAEDo4G,OAFC,GAED,gBAAA,CAAQn9E,KAAR,EAA8B;AAE1B,cAAGA,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC+rE,KAA7B,EAAoC;AAAA,oCAAA;;AAChC,iBAAKR,gBAAL,GAAwB,KAAKA,gBAAL,GAAwB,KAAxB,GAAgC,IAAxD;AACA,yCAAKqF,cAAL,SAAA,SAAA,GAAAK,qBAAqBzzG,IAArB,CAA0B,kBAA1B,EAA8C,KAAK+tG,gBAAnD,CAAA;AACA30G,YAAAA,OAAO,CAAC6G,GAAR7G,CAAY,mBAAZA,EAAiC,KAAK20G,gBAAtC30G;;;AAGJ,cAAI63B,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC8sE,KAA9B,EAAqC;AAAA,qCAAA;;AACjC,0CAAK8D,cAAL,SAAA,SAAA,GAAAM,sBAAqB1zG,IAArB,CAA0B,cAA1B,EAA0C,IAA1C,CAAA;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACyvB,KAA9B,EAAqC;AACjC,iBAAK0hD,UAAL;;;AAGJ,cAAI1iF,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAAC0vB,KAA9B,EAAqC;AACjC,iBAAKkhD,cAAL,CAAqBpzG,IAArB,CAA0B,gBAA1B,EAA4C,IAA5C;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACqvB,KAA9B,EAAqC;AACjC,iBAAKuhD,cAAL,CAAqBpzG,IAArB,CAA0B,sBAA1B,EAAkD,IAAlD;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACk6D,KAA9B,EAAqC;AACjC,iBAAK0W,cAAL,CAAqBpzG,IAArB,CAA0B,iBAA1B,EAA6C,IAA7C;;;AAGJ,cAAIixB,KAAK,CAACsR,OAANtR,KAAkBuR,OAAO,CAACC,KAA9B,EAAqC;AACjC,iBAAK2wE,cAAL,CAAqBpzG,IAArB,CAA0B,cAA1B,EAA0C,IAA1C;;AAGP,SAlCA;;AAkCAhK,QAAAA,OAED29G,UAFC,GAED,mBAAA,GAAa;AAAA,qBAAA,cAAA;;AACT,cAAMjxG,aAAa,GAAG,KAAKg2C,UAAL,CAAiBjhC,QAAjB,CAA0B,KAAK47F,WAA/B,EAA4CvtF,gBAA5C,EAAtB;AACA,0BAAKqtF,WAAY3mG,MAAjB,SAAA,SAAA,GAAAirB,QAAyBG,gBAAzB,CAA0Cl1B,aAA1C,CAAA;AACA,+BAAK8J,MAAL,SAAA,SAAA,GAAAonG,aAAah8E,gBAAb,CAA8Bl1B,aAA9B,CAAA;AACAtJ,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,uBAAZA,EAAqC,KAAKi6G,WAA1Cj6G;AACA,eAAKi6G,WAAL;AACA,cAAG,KAAKA,WAAL,IAAoB,KAAK36D,UAAL,CAAiBjhC,QAAjB,CAA0B9gB,MAAjD,EAAyD,KAAK08G,WAAL,GAAmB,CAAnB;AAC5D,SATA;;AASA,qBAAA;QAzEuB9xG;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLrC,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGao+G,gBAAgB,uCAD5Bt+G,OAAO,CAAC,kBAAD,WAGHE,QAAQ,CAAE;AAAE2d,QAAAA,IAAI,EAACzK;AAAP,OAAF;AAAuBhT,QAAAA,4CAAA;;AAAA,iCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAA,sBAAA;;;AAAA,+CAAA;;AAAAxd,QAAAA,OAGhCyL,KAHgC,GAGhC,cAAA,GAAQ,CAEP,CAL+B;;AAK/BzL,QAAAA,OAEDsiB,UAFC,GAED,mBAAA,CAAW3e,SAAX,EAA8B;AAE1B,eAAKuF,IAAL,CAAU04B,gBAAV,CAA2B,KAAKzb,KAAL,CAAY9S,cAAvC;AAEH,SANA;;AAMA,+BAAA;QAbiC9H;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF/C,UAAQtf,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIaq9E,UAAU,iCAFtBv+G,OAAO,CAAC,YAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGdijB,SAHc,GAGFpQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHA;AAGS7S,UAAAA,MACvBoX,MADuB,GACdvE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY;AACH7S,UAAAA,MACpBk+G,QADoB,GACTrrG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO;;AACE8K,UAAAA,8FAAA;;AAAA3d,UAAAA,MAKtBgN,GALsB,GAKhB,IAAIC,QAAQ,CAACC,GAAb,EALgB;AAKElN,UAAAA,MAExB+iB,EAFwB,GAEnBlQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFiB;AAER,sBAAA;;;AAAA,yCAAA;;AAAA1S,QAAAA,OAEhByL,KAFgB,GAEhB,cAAA,GAAQ,CAEP,CAJe;;AAIfzL,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAMzB,CARA;;AAQA3D,QAAAA,OAEDg+G,uBAFC,GAED,gCAAA,GAA0B;AACtB,cAAMnxG,GAAG,GAAG,KAAKA,GAAjB;AAEA,cAAMO,QAAQ,GAAG,GAAjB;AAEA,cAAMwV,EAAE,GAAGlQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AACA,cAAMmQ,EAAE,GAAGnQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AAEA,cAAI/F,GAAG,GAAG+F,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAZ;AAEA,cAAMoL,QAAQ,GAAG,KAAK5U,IAAL,CAAU4U,QAAV,CAAmBjH,KAAnB,EAAjB;AAEAiH,UAAAA,QAAQ,CAAC5G,GAAT4G,CAAanR,GAAbmR;AAEAhM,UAAAA,QAAQ,CAACC,IAATD,CAAcjF,GAAG,CAACkM,CAAlBjH,EAAqB,KAAK5I,IAAL,CAAU4U,QAA/BhM;AACAjF,UAAAA,GAAG,CAACmM,CAAJnM,GAAQ6F,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAV7F;AAEAmzC,UAAAA,KAAK,CAACC,QAAND,CAAenzC,GAAG,CAACkM,CAAnBinC,EAAsBliC,QAAtBkiC;;AAEA,cAAIzyC,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsCV,GAAtCU,EAA2CxM,SAA3CwM,EAAsDH,QAAtDG,CAAJ,EAAqE;AACjE,gBAAM4V,IAAI,GAAG5V,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;AACA,gBAAMgC,GAAG,GAAGyT,IAAI,CAAC3I,QAAL2I,CAActM,KAAdsM,EAAZ;;AACA,gBAAMP,EAAE,GAAGO,IAAI,CAAC3I,QAAL2I,CAActM,KAAdsM,EAAX;;AACA/f,YAAAA,OAAO,CAAC6G,GAAR7G,CAAY+f,IAAI,CAAC86F,SAAjB76G;AACA48C,YAAAA,KAAK,CAACC,QAAND,CAAe78B,IAAI,CAAC3I,QAApBwlC,EAA8BtwC,GAAG,CAACwH,GAAJxH,CAAQyT,IAAI,CAAC86F,SAAbvuG,EAAwBqI,cAAxBrI,CAAuC,CAAvCA,CAA9BswC,EAAyEvoB,KAAK,CAACyoB,GAA/EF;AAEAA,YAAAA,KAAK,CAACC,QAAND,CAAe,KAAK92C,IAAL,CAAUwD,aAAzBszC,EAAwCp9B,EAAxCo9B,EAA4CvoB,KAAK,CAAC6oB,KAAlDN;AACAnzC,YAAAA,GAAG,CAACkM,CAAJlM,CAAMK,CAANL,GAAU,IAAVA;AACAA,YAAAA,GAAG,CAACkM,CAAJlM,CAAMG,CAANH,GAAU,IAAVA;AACA,gBAAMqxG,EAAE,GAAGrxG,GAAG,CAACkM,CAAJlM,CAAMgK,KAANhK,EAAX;AACAmzC,YAAAA,KAAK,CAACC,QAAND,CAAenzC,GAAG,CAACkM,CAAnBinC,EAAsBk+D,EAAE,CAAChnG,GAAHgnG,CAAOvxG,GAAPuxG,CAAtBl+D;;AACA,gBAAGzyC,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsCV,GAAtCU,EAA2CxM,SAA3CwM,EAAsDH,QAAtDG,CAAH,EAAoE;AAChE,kBAAM6V,IAAI,GAAG7V,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;AACA,kBAAMywG,IAAI,GAAG/6F,IAAI,CAAC5I,QAAL4I,CAAcvM,KAAduM,EAAb;;AACA,kBAAMP,GAAE,GAAGO,IAAI,CAAC5I,QAAL4I,CAAcvM,KAAduM,EAAX;;AACA48B,cAAAA,KAAK,CAACC,QAAND,CAAe,KAAK92C,IAAL,CAAUwD,aAAzBszC,EAAwCn9B,GAAxCm9B,EAA4CvoB,KAAK,CAAC0oB,MAAlDH;AACAluC,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgR,SAAnBhR,EAA8B+Q,GAA9B/Q;AACA,mBAAKgR,SAAL,CAAehM,QAAf,CAAwB8L,EAAxB,EAA4BzL,SAA5B;AAEA9G,cAAAA,IAAI,CAAC2G,KAAL3G,CAAW,KAAK4G,MAAhB5G,EAAwBuS,EAAE,CAAC9L,QAAH8L,CAAY,KAAK1Z,IAAL,CAAUwD,aAAtBkW,CAAxBvS,EAA8DwS,GAAE,CAAC/L,QAAH+L,CAAY,KAAK3Z,IAAL,CAAUwD,aAAtBmW,CAA9DxS;AAEA,kBAAM+lC,CAAC,GAAG1jC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ;AACAZ,cAAAA,QAAQ,CAACC,IAATD,CAAcskC,CAAdtkC,EAAiB,KAAK5I,IAAL,CAAUwD,aAA3BoF;AACAskC,cAAAA,CAAC,CAACl/B,GAAFk/B,CAAM,KAAKn/B,MAAXm/B;AACA4J,cAAAA,KAAK,CAACC,QAAND,CAAe,KAAK92C,IAAL,CAAUwD,aAAzBszC,EAAwC5J,CAAxC4J,EAA2CvoB,KAAK,CAAC2mF,IAAjDp+D;;;AAIX,SAlDA;;AAkDAhgD,QAAAA,OAEDq+G,mBAFC,GAED,4BAAA,GAAsB;AAClB,cAAMxxG,GAAG,GAAG,KAAKA,GAAjB;AAEA,cAAMO,QAAQ,GAAG,GAAjB;AAEA,cAAMwV,EAAE,GAAGlQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AACA,cAAMmQ,EAAE,GAAGnQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AACA,cAAM4rG,EAAE,GAAG5rG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AAEA,cAAI/F,GAAG,GAAG+F,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAZ;AAEA,cAAMoL,QAAQ,GAAG,KAAK5U,IAAL,CAAU4U,QAAV,CAAmBjH,KAAnB,EAAjB;AAEAiH,UAAAA,QAAQ,CAAC5G,GAAT4G,CAAanR,GAAbmR;AAEAhM,UAAAA,QAAQ,CAACC,IAATD,CAAcjF,GAAG,CAACkM,CAAlBjH,EAAqB,KAAK5I,IAAL,CAAU4U,QAA/BhM;AACAjF,UAAAA,GAAG,CAACmM,CAAJnM,GAAQ6F,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAV7F;AAEAmzC,UAAAA,KAAK,CAACC,QAAND,CAAenzC,GAAG,CAACkM,CAAnBinC,EAAsBliC,QAAtBkiC;;AAEA,cAAIzyC,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsCV,GAAtCU,EAA2CxM,SAA3CwM,EAAsDH,QAAtDG,CAAJ,EAAqE;AACjE,gBAAM4V,IAAI,GAAG5V,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;;AACA,gBAAMkV,GAAE,GAAGO,IAAI,CAAC3I,QAAL2I,CAActM,KAAdsM,EAAX;;AACA68B,YAAAA,KAAK,CAACC,QAAND,CAAe,KAAK92C,IAAL,CAAUwD,aAAzBszC,EAAwCp9B,GAAxCo9B,EAA4CvoB,KAAK,CAAC6oB,KAAlDN;AACAnzC,YAAAA,GAAG,CAACkM,CAAJlM,CAAMK,CAANL,GAAU,IAAVA;AACAA,YAAAA,GAAG,CAACkM,CAAJlM,CAAMG,CAANH,GAAU,IAAVA;AACA,gBAAMqxG,EAAE,GAAGrxG,GAAG,CAACkM,CAAJlM,CAAMgK,KAANhK,EAAX;;AAEA,gBAAGU,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsCV,GAAtCU,EAA2CxM,SAA3CwM,EAAsDH,QAAtDG,CAAH,EAAoE;AAChE,kBAAM6V,IAAI,GAAG7V,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;AACAsyC,cAAAA,KAAK,CAACC,QAAND,CAAenzC,GAAG,CAACkM,CAAnBinC,EAAsB58B,IAAI,CAAC5I,QAA3BwlC;AACAluC,cAAAA,QAAQ,CAACC,IAATD,CAAc+Q,EAAd/Q,EAAkBsR,IAAI,CAAC5I,QAAvB1I;AACAkuC,cAAAA,KAAK,CAACC,QAAND,CAAe,KAAK92C,IAAL,CAAUwD,aAAzBszC,EAAwCnzC,GAAG,CAACkM,CAA5CinC,EAA+CvoB,KAAK,CAAC0oB,MAArDH,EAJgE;;;;AAUpEnzC,YAAAA,GAAG,CAACkM,CAAJlM,CAAMK,CAANL,GAAU,CAAC,IAAXA;AACAA,YAAAA,GAAG,CAACkM,CAAJlM,CAAMG,CAANH,GAAU,CAAC,IAAXA;;AACA,gBAAGU,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsCV,GAAtCU,EAA2CxM,SAA3CwM,EAAsDH,QAAtDG,CAAH,EAAoE;AAChE,kBAAMgxG,IAAI,GAAGhxG,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;AACAoE,cAAAA,QAAQ,CAACC,IAATD,CAAcwsG,EAAdxsG,EAAkBysG,IAAI,CAAC/jG,QAAvB1I;AACAkuC,cAAAA,KAAK,CAACC,QAAND,CAAenzC,GAAG,CAACkM,CAAnBinC,EAAsBu+D,IAAI,CAAC/jG,QAA3BwlC;AACAA,cAAAA,KAAK,CAACC,QAAND,CAAe,KAAK92C,IAAL,CAAUwD,aAAzBszC,EAAwCnzC,GAAG,CAACkM,CAA5CinC,EAA+CvoB,KAAK,CAAC0oB,MAArDH;AAEAA,cAAAA,KAAK,CAACC,QAAND,CAAep9B,GAAfo9B,EAAmBn9B,EAAnBm9B,EAAuBvoB,KAAK,CAACyoB,GAA7BF;AACAA,cAAAA,KAAK,CAACC,QAAND,CAAep9B,GAAfo9B,EAAmBs+D,EAAnBt+D,EAAuBvoB,KAAK,CAACyoB,GAA7BF;AAGA3vC,cAAAA,IAAI,CAAC2G,KAAL3G,CAAW,KAAK4G,MAAhB5G,EAAwBwS,EAAE,CAAC/L,QAAH+L,CAAYD,GAAZC,CAAxBxS,EAAyCiuG,EAAE,CAACxnG,QAAHwnG,CAAY17F,GAAZ07F,CAAzCjuG;AAEA,kBAAM+lC,CAAC,GAAG1jC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ;AACAZ,cAAAA,QAAQ,CAACC,IAATD,CAAcskC,CAAdtkC,EAAiB8Q,GAAjB9Q;AACAskC,cAAAA,CAAC,CAACl/B,GAAFk/B,CAAM,KAAKn/B,MAAXm/B;AACA4J,cAAAA,KAAK,CAACC,QAAND,CAAep9B,GAAfo9B,EAAmB5J,CAAnB4J,EAAsBvoB,KAAK,CAACyoB,GAA5BF;AAEAluC,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKisG,QAAnBjsG,EAA6B8Q,GAA7B9Q;;;AAMX,SAjEA;;AAiEA9R,QAAAA,OAEDw+G,sBAFC,GAED,+BAAA,GAAyB;AAErB,cAAMt7F,UAAU,GAAG,KAAKD,aAAL,CAAmBtiB,MAAnB,EAAnB;AAEAyC,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY8f,UAAZ9f;AAEA,cAAG,KAAKyJ,GAAL,KAAa9L,SAAhB,EAA2B,KAAK8L,GAAL,GAAW,IAAIC,QAAQ,CAACC,GAAb,EAAX;AAE3B+E,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKjF,GAAL,CAASkM,CAAvBjH,EAA0B,KAAK5I,IAAL,CAAUwD,aAApCoF;AACAA,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgR,SAAnBhR,EAA8B,KAAKmR,aAAnCnR;AAEA,eAAKjF,GAAL,CAASmM,CAAT,GAAatG,EAAE,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,CAAf;;AAEA,cAAInF,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKV,GAA3CU,EAAgDxM,SAAhDwM,EAA2D,CAA3DA,CAAJ,EAAmE;AAC/D,gBAAM4V,IAAI,GAAG5V,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;AACAoE,YAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK8Q,EAAnB9Q,EAAuBqR,IAAI,CAAC3I,QAA5B1I;AACAkuC,YAAAA,KAAK,CAACC,QAAND,CAAe,KAAKnzC,GAAL,CAASkM,CAAxBinC,EAA2B,KAAKp9B,EAAhCo9B,EAAoCvoB,KAAK,CAAC0oB,MAA1CH;AACA,iBAAKnzC,GAAL,CAASkM,CAAT,CAAW7B,GAAX,CAAe,KAAK+L,aAApB;AACA+8B,YAAAA,KAAK,CAACC,QAAND,CAAe,KAAKp9B,EAApBo9B,EAAwB,KAAKp9B,EAAL,CAAQ/L,KAAR,GAAgBK,GAAhB,CAAoB,KAAK+L,aAAzB,CAAxB+8B,EAAiEvoB,KAAK,CAAC0oB,MAAvEH;;AACA,gBAAIzyC,aAAa,CAACC,QAAdD,CAAuBE,cAAvBF,CAAsC,KAAKV,GAA3CU,EAAgDxM,SAAhDwM,EAA2D,CAA3DA,CAAJ,EAAmE;AAC/D,kBAAM6V,IAAI,GAAG7V,aAAa,CAACC,QAAdD,CAAuBG,oBAApC;AACAsyC,cAAAA,KAAK,CAACC,QAAND,CAAe,KAAKnzC,GAAL,CAASkM,CAAxBinC,EAA2B58B,IAAI,CAAC5I,QAAhCwlC,EAA0CvoB,KAAK,CAAC6oB,KAAhDN;AACAluC,cAAAA,QAAQ,CAACC,IAATD,CAAc,KAAKgR,SAAnBhR,EAA8BsR,IAAI,CAAC5I,QAAnC1I;AACA,mBAAKgR,SAAL,CAAehM,QAAf,CAAwB,KAAK8L,EAA7B,EAAiCzL,SAAjC,GAA6CY,cAA7C,CAA4DmL,UAA5D;AACA88B,cAAAA,KAAK,CAACC,QAAND,CAAe,KAAKp9B,EAApBo9B,EAAwB,KAAKp9B,EAAL,CAAQ/L,KAAR,GAAgBK,GAAhB,CAAoB,KAAK4L,SAAzB,CAAxBk9B,EAA6DvoB,KAAK,CAAC6oB,KAAnEN;;;AAIX,SA9BA;;AA8BA,yBAAA;QAxK2Bz0C,yFAM3B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACOnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADT;;kBAPK,CAAjB+tB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD,UAAQlhC,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIag+E,YAAY,mCAFxBl/G,OAAO,CAAC,cAAD,WAGHE,QAAQ,CAACyiF,eAAD,WAERziF,QAAQ,CAACyiF,eAAD,WASRziF,QAAQ,CAACugF,QAAD,WAERvgF,QAAQ,CAACugF,QAAD,iBAfZv/C,iBAAiB;AAAA9gC,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,uFAAA;;AAAAA,UAAAA,2FAAA;;AAAA,sBAAA;;;AAAA,2CAAA;;AAAAxd,QAAAA,OAwBdoiD,OAxBc,GAwBd,gBAAA,GAAW;AACP,cAAI,CAAC,KAAKhmB,QAAN,IAAkB,CAAC,KAAK8O,KAA5B,EAAmC;AAC/B;;;AAEJ,cAAI4C,EAAE,GAAG,KAAKpiC,YAAL,CAAkBmiC,YAAlB,CAAT;AAEA,cAAIogD,GAAG,GAAG,IAAI3jD,QAAQ,CAACC,gBAAb,CAA8B;AAAE9hC,YAAAA,MAAM,EAAE,KAAK2zB;AAAf,WAA9B,CAAV;AACA6xD,UAAAA,GAAG,CAACnuD,WAAJmuD,CAAgB,aAAhBA,EAA+BngD,EAAE,CAACq+D,YAAHr+D,CAAgB4wE,aAA/CzwB;AAEAngD,UAAAA,EAAE,CAAC6wE,mBAAH7wE,CAAuBmgD,GAAvBngD,EAA4B,CAA5BA;AACH,SAlCa;;AAkCb9tC,QAAAA,OAEDyL,KAFC,GAED,cAAA,GAAS;AACL,eAAK22C,OAAL;AACH,SAJA;;AAIApiD,QAAAA,OAEDuC,MAFC,GAED,eAAA,GAAU;;;;;;;;;;;;AAgBT,SAlBA;;AAkBAvC,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B,CAE1B,CAJA;;AAIA0qB,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KAxDD,YAAA,GACa;AACT,mBAAO,KAAKo+G,MAAZ;AACH;AAAAp/E,UAAAA,KACD,YAAA,CAAWjK,CAAX,EAAc;AACV,iBAAKqpF,MAAL,GAAcrpF,CAAd;AACA,iBAAK6sB,OAAL;;;AACH1gD,UAAAA;AAAAlB,UAAAA,KAID,YAAA,GACgB;AACZ,mBAAO,KAAKq+G,SAAZ;AACH;AAAAr/E,UAAAA,KACD,YAAA,CAAcjK,CAAd,EAAiB;AACb,iBAAKspF,SAAL,GAAiBtpF,CAAjB;AACA,iBAAK6sB,OAAL;;WAuCH;;AAtCA,2BAAA;QArB6B72C;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;yKADzB,CAAjB4hB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaq/G,mBAAmB,0CAD/Bv/G,OAAO,CAAC,qBAAD,WAGHE,QAAQ,CAACukB,SAAD,WAGRvkB,QAAQ,CAAC4Q,IAAD;AAAM1Q,QAAAA,+CAAA;;AAAA,oCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAAA,UAAAA,0FAAA;;AAAA,sBAAA;;;AAAA,kDAAA;;AAAAxd,QAAAA,OAGfyL,KAHe,GAGf,cAAA,GAAQ,CAEP,CALc;;AAKdzL,QAAAA,OAEDsiB,UAFC,GAED,mBAAA,CAAW3e,SAAX,EAA8B;AAE1B,eAAKuF,IAAL,CAAU04B,gBAAV,CAA2B,KAAK/d,KAAL,CAAY3a,IAAZ,CAAiBwD,aAA5C;AACA,eAAKmX,KAAL,CAAYY,iBAAZ,CAA8B,KAAKlB,QAAnC;;AACA,cAAG,KAAKA,QAAL,CAAc5iB,MAAd,KAAyB,GAA5B,EAAiC;AAC7B,iBAAK4iB,QAAL,CAAcrM,GAAd,CAAkB,KAAKhO,IAAL,CAAUwD,aAA5B;AACA,iBAAKxD,IAAL,CAAUswC,MAAV,CAAiB,KAAKj2B,QAAtB;;AAEP,SAVA;;AAUA,kCAAA;QApBoChY;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAM9BnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAN4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACClD,UAAQnT,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIas+E,kBAAkB,yCAF9Bx/G,OAAO,CAAC,oBAAD,WAIHE,QAAQ,CAACq+G,UAAD,WAGRr+G,QAAQ,CAAC4Q,IAAD,WAGR5Q,QAAQ,CAACu/G,eAAD,iBATZv+E,iBAAiB;AAAA9gC,QAAAA,8CAAA;;AAAA,mCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,2FAAA;;AAAAA,UAAAA,+FAAA;;AAAAA,UAAAA,gGAAA;;AAAA3d,UAAAA,MAYdq5C,WAZc,GAYAxmC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAZF;AAYW,sBAAA;;;AAAA,iDAAA;;AAAA1S,QAAAA,OAEzB0D,MAFyB,GAEzB,eAAA,CAAOC,SAAP,EAA0B,CAyBzB,CA3BwB;;AA2BxB,iCAAA;QAtCmC4H;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAMxBnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANsB;;;AAMbgM,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;mBAPlB,CAAjB4hB;;;;;;;;;;;;;;;;;;;;;;;;;ACPD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaw/G,aAAa,oCADzB1/G,OAAO,CAAC,eAAD;AAAiBI,QAAAA,yCAAA;;AAAA,8BAAA;AAAA,0DAAA;;;AAAA,4CAAA;;AAAAK,QAAAA,OAErByL,KAFqB,GAErB,cAAA,GAAQ,CAEP,CAJoB;;AAIpBzL,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,4BAAA;QAP8B4H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDnC,UAAQhM,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIau+E,eAAe,sCAF3Bz/G,OAAO,CAAC,iBAAD,WAIHE,QAAQ,CAAC,CAAC8d,OAAD,CAAD,WAGR9d,QAAQ,CAAC8d,OAAD,WAGR9d,QAAQ,CAAC4Q,IAAD,WAOR5Q,QAAQ,CAAC4Q,IAAD,iBAhBZowB,iBAAiB;AAAA9gC,QAAAA,2CAAA;;AAAA,gCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,2FAAA;;AAAA3d,UAAAA,MAYd+/F,KAZc,GAYE,CAZF;AAYG//F,UAAAA,MACjBi4C,IADiB,GACI,IAAIhrC,QAAQ,CAACC,GAAb,EADJ;AACsBlN,UAAAA,MACvC2a,QADuC,GAC5B9H,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,GAAT,CAD0B;;AACb8K,UAAAA,4FAAA;;AAAA,sBAAA;;;AAAA,8CAAA;;AAAAxd,QAAAA,OAM1ByL,KAN0B,GAM1B,cAAA,GAAS;AACL,eAAK,IAAI/K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKy0D,KAAL,CAAWx0D,MAA/B,EAAuCD,CAAC,EAAxC,EACI,KAAKk/F,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAK,KAAKzqC,KAAL,CAAWz0D,CAAX,CAA/B;AACP,SATyB;;AASzBV,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B,CA6B1B,CA/BA;;AA+BA,8BAAA;QArDgC4H;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGlC,EAHkC;;;AAGhCH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGC,GAHD;;;AAGIH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGFnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHA;;;AAGSgM,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAOVnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPQ;;mBAVT,CAAjB+tB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFD,UAAQlhC,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIay+E,UAAU,iCAFtB3/G,OAAO,CAAC,YAAD,WAaHE,QAAQ,CAAC4Q,IAAD,iBAZZowB,iBAAiB;AAAA9gC,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAAA,UAAAA,wFAAA;;AAAAA,UAAAA,uFAAA;;AAAAA,UAAAA,wFAAA;;AAAA,sBAAA;;;AAAA,yCAAA;;AAAAxd,QAAAA,OAed0gC,QAfc,GAed,iBAAA,GAAW,CAoBV,CAnCa;;AAmCb,yBAAA;QAlC2Bn1B,kFAE3B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACD,EADC;;iFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACA,EADA;;gFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACD,EADC;;;AACCH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGDnM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHD;;mBAVI,CAAjB+tB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2BD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa0/G,gBAAgB,uCAD5B5/G,OAAO,CAAC,kBAAD,WAGHE,QAAQ,CAAC+kF,SAAD,WAGR/kF,QAAQ,CAAC0d,IAAD,WAMR1d,QAAQ,CAAE;AAAC2d,QAAAA,IAAI,EAAGxJ;AAAR,OAAF;AAAmBjU,QAAAA,4CAAA;;AAAA,iCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,0FAAA;;AAAAA,UAAAA,6FAAA;;AAAAA,UAAAA,wFAAA;;AAAA,sBAAA;;;AAAA,+CAAA;;AAAAxd,QAAAA,OAG5ByL,KAH4B,GAG5B,cAAA,GAAQ;AAAA,6BAAA;AAAA,cAAAvG,aAAA;;AAEJwS,UAAAA,SAAS,CAACkuB,IAAVluB,oBAAe,KAAK0nG,8BAALC,gBAAgB18G,IAA/B+U;AAEAjV,UAAAA,QAAQ,CAAClC,QAATkC,CAAkB6yD,IAAlB7yD,CAAuB,YAAI;AAAA,6BAAA,oBAAA;;AAEvB,gBAAM68G,UAAU,GAAGp6G,MAAI,CAACgE,IAAL,CAAUC,cAAV,CAAyB,YAAzB,CAAnB;;AAEAjE,YAAAA,MAAI,CAAC8P,MAAL,GAAcsqG,UAAU,QAAVA,SAAAA,GAAAA,UAAU,CAAE5zG,YAAZ4zG,CAAyB1rG,KAAzB0rG,CAAd;AAEAl+D,YAAAA,IAAa;AAEb9gD,YAAAA,IAAI,CAACC,QAALD,CAAcL,IAAdK,GARuB;;AAavB,mCAAI,CAAC0U,MAAL,SAAA,SAAA,GAAAuqG,cAAat/G,IAAb,CAAkB,aAAlB,CAAA,CAbuB;;AAgBvBmI,YAAAA,KAAK,CAAC7H,QAAN6H,CAAe6M,OAAf7M,GAAyBlD,MAAI,CAAC8P,MAA9B5M,CAhBuB;;AAmBvBxB,YAAAA,KAAK,CAAC3G,IAAN2G,GAnBuB;;AAsBvB,gBAAM4gE,OAAO,yBAAGtiE,MAAI,CAACs6G,gCAALC,mBAAkBp0G,uBAAlB,CAA0CuI,KAA1C,CAAhB;;AACA,iBAAI,IAAIlT,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG8mE,OAAO,CAAC7mE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC8mE,cAAAA,OAAO,CAAC9mE,CAAD,CAAP8mE,CAAWvnE,IAAXunE,CAAgB,cAAhBA;AACAA,cAAAA,OAAO,CAAC9mE,CAAD,CAAP8mE,CAAW3yD,OAAX2yD,GAAqB,IAArBA;;;AAGJp/D,YAAAA,KAAK,CAAC7H,QAAN6H,CAAewM,IAAfxM,GAAsB,KAAtBA;AACH,WA7BD3F;AA+BH,SAtC2B;;AAsC3BzC,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,+BAAA;QArDiC4H;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC/C,UAAQtf,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;UAIai/E,sBAAsB,6CAFlCngH,OAAO,CAAC,wBAAD,WAIHE,QAAQ,CAAC0d,IAAD,WAGR1d,QAAQ,CAAC0d,IAAD,iBANZsjB,iBAAiB;AAAA9gC,QAAAA,kDAAA;;AAAA,uCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,uFAAA;;AAAAA,UAAAA,yFAAA;;AAAAA,UAAAA,4FAAA;;AAAA,sBAAA;;;AAAA,qDAAA;;AAAAxd,QAAAA,OAYdyL,KAZc,GAYd,cAAA,GAAQ,CAEP,CAda;;AAcbzL,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAazB,CAfA;;AAeA,qCAAA;QA5BuC4H;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;qFAQhDpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACW,CADX;;mBATK,CAAjB4hB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD,UAAQlhC,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGakgH,QAAQ,+BADpBpgH,OAAO,CAAC,UAAD,WAEHE,QAAQ,CAAC0d,IAAD;AAAMxd,QAAAA,oCAAA;;AAAA,yBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,qFAAA;;AAAA,sBAAA;;;AAAA,uCAAA;;AAAAxd,QAAAA,OAGfyL,KAHe,GAGf,cAAA,GAAS;AACL,cAAI,CAAC,KAAKy6B,IAAV,EAAgB;AAChBzM,UAAAA,UAAU,CAACkmF,QAAXlmF,GAAsB,IAAtBA;AAEH,SAPc;;AAOdz5B,QAAAA,OAEDuC,MAFC,GAED,eAAA,GAAU;AACN,cAAI2jC,IAAI,GAAGrQ,WAAW,CAAC,KAAKqQ,IAAN,CAAtB;AACAA,UAAAA,IAAI,CAACz9B,MAALy9B,GAAc,KAAKh9B,IAAL,CAAUT,MAAxBy9B;AACA,eAAKh9B,IAAL,CAAUoI,MAAV,GAAmB,KAAnB;AACH,SANA;;AAMA,uBAAA;QAdyB/F;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACHvC,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGamgH,OAAO,8BADnBrgH,OAAO,CAAC,SAAD;AAAWI,QAAAA,mCAAA;;AAAA,wBAAA;AAAA,0DAAA;;;AAAA,sCAAA;;AAAAK,QAAAA,OAGfyL,KAHe,GAGf,cAAA,GAAQ;AAEJrI,UAAAA,OAAO,CAAC6G,GAAR7G,CAAY,KAAK8F,IAAL,CAAUpI,IAAtBsC,EAA4B,KAAK8F,IAAL,CAAU4U,QAAtC1a,EAAgD,KAAK8F,IAAL,CAAUwD,aAA1DtJ;AAEH,SAPc;;AAOdpD,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B,CAEzB,CAJA;;AAIA,sBAAA;QAVwB4H;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH7B,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaogH,WAAW,kCADvBtgH,OAAO,CAAC,aAAD;AAAeI,QAAAA,uCAAA;;AAAA,4BAAA;AAAA,0DAAA;;;AAAA,0CAAA;;AAAAK,QAAAA,OAGnB2gC,SAHmB,GAGnB,kBAAA,GAAa;AAET,cAAMo9C,KAAK,GAAG,IAAI+hC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAd;AAEA,cAAMC,WAAW,GAAG,IAAIC,UAAJ,CAAe,CAACjiC,KAAD,CAAf,EAAwB,IAAxB,EAA8BhrD,KAAK,CAACC,SAAND,CAAgBsqC,YAA9C,CAApB;AAEA0iD,UAAAA,WAAW,CAAChiC,KAAZgiC,GAAoBhiC,KAApBgiC;AAEA,eAAK72G,IAAL,CAAU+2G,aAAV,CAAwBF,WAAxB;AAEH,SAbkB;;AAalB,0BAAA;QAZ4Bx0G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFjC,UAAQhM,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBkhC,iBAAiB,GAAejhC,UAAU,CAA1CihC,iBAAjB;AAAA,UAAoChhC,QAAQ,GAAKD,UAAU,CAAvBC,QAApC;UAEWygH,gBAAgB,+BAAG;AAC1BC,QAAAA,OAAO,EAAE;AADiB;UAMjBC,sBAAsB,6CAFlC7gH,OAAO,CAAC,wBAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,kDAAA;;AAAA,uCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,yFAAA;;AAAA3d,UAAAA,MAKdkuC,KALc,SAAA;AAKT,sBAAA;;;AAAA,qDAAA;;AAAA/tC,QAAAA,OAEL0gC,QAFK,GAEL,iBAAA,GAAY;AACR,cAAIoN,EAAE,GAAG,KAAKpiC,YAAL,CAAkBmiC,YAAlB,CAAT;AAEA,cAAIE,KAAJ;;AACA,cAAID,EAAJ,EAAQ;AACJC,YAAAA,KAAK,GAAGD,EAAE,CAACC,KAAXA;;;AAGJ,cAAI2K,QAAQ,GAAG,KAAKhtC,YAAL,CAAkBgG,cAAlB,CAAf;;AACA,cAAIgnC,QAAJ,EAAc;AACV3K,YAAAA,KAAK,GAAG2K,QAAQ,CAAC2nE,SAAT3nE,CAAmB4nE,QAAnB5nE,EAAR3K;;;AAGJ,eAAKA,KAAL,GAAaA,KAAb;;AAEA,cAAIA,KAAJ,EAAW;AACPmyE,YAAAA,gBAAgB,CAACC,OAAjBD,CAAyBp9G,IAAzBo9G,CAA8B,IAA9BA;AACA,iBAAKK,MAAL;;AAEP,SArBI;;AAqBJvgH,QAAAA,OACD2gC,SADC,GACD,kBAAA,GAAa;AACT,cAAIxxB,KAAK,GAAG+wG,gBAAgB,CAACC,OAAjBD,CAAyB9gD,OAAzB8gD,CAAiC,IAAjCA,CAAZ;;AACA,cAAI/wG,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd+wG,YAAAA,gBAAgB,CAACC,OAAjBD,CAAyBv7G,MAAzBu7G,CAAgC/wG,KAAhC+wG,EAAuC,CAAvCA;AACA,iBAAKK,MAAL;;AAEP,SAPA;;AAOAvgH,QAAAA,OAEDugH,MAFC,GAED,eAAA,GAAU;AACNL,UAAAA,gBAAgB,CAACC,OAAjBD,CAAyB1lC,IAAzB0lC,CAA8B,UAAC/rE,CAAD,EAAIoJ,CAAJ,EAAU;AACpC,mBAAOpJ,CAAC,CAACqsE,QAAFrsE,GAAaoJ,CAAC,CAACijE,QAAtB;AACH,WAFDN;AAGH,SANA;;AAMA,qCAAA;QAtCuC30G,oFACvC9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACE,CADF;;kBAFK,CAAjB4hB;;;;;;;;;;;;;;;;;;;;;UCRYggF,OAAO;AAAA,wBAAA;;AAAAA,QAAAA,QAOTC,aAPS,GAOhB,sBAAA,CAAqB9+G,KAArB,EAAoC;AAChC,cAAIgjD,GAAG,GAAG,KAAK+7D,SAAf;AACA,eAAKA,SAAL,IAAkB/+G,KAAlB;AACA,iBAAOgjD,GAAP;AACH,SAXe;;AAWfv2B,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KAED,YAAA,GAAmB;AACf,mBAAO,KAAKmgH,SAAZ;;;AACHj/G,UAAAA;AAAAlB,UAAAA,KACD,YAAA,GAAkB;AACd,mBAAO,KAAKogH,KAAL,GAAa,CAApB;;WANH;;AAOA,slMaH,MAAAA,OAAO,CACTI,IADEJ,GACK,EADLA;AAAAA,MAAAA,OAAO,CAETK,OAFEL,GAEQ,CAFRA;AAAAA,MAAAA,OAAO,CAGTM,MAHEN,SAAAA;AAAAA,MAAAA,OAAO,CAITO,UAJEP,SAAAA;AAAAA,MAAAA,OAAO,CAMTE,SANEF,GAMU,CANVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,UAAQlhH,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGawhH,UAAU,iCADtB1hH,OAAO,CAAC,YAAD;AAAcI,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGlBqhH,MAHkB,SAAA;AAGZrhH,UAAAA,MAENshH,IAFM,GAEC,CAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAH,CAAP,EAAa,CAAC,CAAC,CAAF,EAAI,CAAJ,CAAb,EAAoB,CAAC,CAAD,EAAG,CAAC,CAAJ,CAApB,CAFD;AAE4BthH,UAAAA,MAElCuhH,QAFkC,GAEvB,EAFuB;AAErB,sBAAA;;;AAAA,yCAAA;;AAAAphH,QAAAA,OAEbyL,KAFa,GAEb,cAAA,GAAQ;AACJ,eAAKy1G,MAAL,GAAc,KAAKx1G,YAAL,CAAkB21D,eAAlB,CAAd;;AAEA,cAAI,KAAK6/C,MAAL,KAAgBngH,SAApB,EAA+B;AAC3B,kBAAM,IAAImD,KAAJ,CAAa,KAAKgF,IAAL,CAAUpI,IAAV,oDAAb,CAAN;;;AAGJiC,UAAAA,GAAG,CAAC8d,IAAJ9d,CAAS,gBAATA,EAA2B,KAAKyZ,SAAhCzZ,EAA2C,IAA3CA;AACA,eAAKyZ,SAAL,CAAe,CAAf;AACH,SAXY;;AAWZxc,QAAAA,OAEDwc,SAFC,GAED,kBAAA,CAAUuZ,IAAV,EAAuB;AACnB,cAAMsrF,WAAW,GAAGtrF,IAAI,GAAG,KAAKqrF,QAAhC;;AACA,eAAI,IAAI1gH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKwI,IAAL,CAAUuY,QAAV,CAAmB9gB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,gBAAMm2E,KAAK,GAAG,KAAK3tE,IAAL,CAAUuY,QAAV,CAAmB/gB,CAAnB,CAAd;AACA,gBAAMiM,GAAG,GAAG,KAAKw0G,IAAL,CAAUzgH,CAAV,CAAZ;AACAm2E,YAAAA,KAAK,CAACvuE,WAANuuE,CAAkBlqE,GAAG,CAAC,CAAD,CAAHA,GAAS00G,WAA3BxqC,EAAwClqE,GAAG,CAAC,CAAD,CAAHA,GAAS00G,WAAjDxqC,EAA8D,CAA9DA;;AAGP,SAVA;;AAUA,yBAAA;QA3B2BtrE;;;;;;;;;;;;;;;;;;;;;;;;;;ACJhC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa6hH,YAAY,mCADxB/hH,OAAO,CAAC,aAAD;AAAeI,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGnB2L,MAHmB,SAAA;AAGb,sBAAA;;;AAAA,2CAAA;;AAAAxL,QAAAA,OAEN0gC,QAFM,GAEN,iBAAA,GAAY;AACR,eAAKl1B,MAAL,GAAc,KAAKE,YAAL,CAAkBC,SAAS,CAACC,mBAA5B,CAAd;;AAEA,cAAI,KAAKJ,MAAL,KAAgB,IAApB,EAA0B;AACtB,kBAAM,IAAItH,KAAJ,CAAa,KAAKgF,IAAL,CAAUpI,IAAV,4CAAb,CAAN;;;AAGJ,eAAKoI,IAAL,CAAUrG,EAAV,CAAa,UAAb,EAAyB,KAAKmH,IAA9B,EAAoC,IAApC;AACH,SAVK;;AAULhK,QAAAA,OAEDgK,IAFC,GAED,aAAA,CAAMtI,GAAN,EAAmBT,KAAnB,EAA4C;AACxC,eAAKuK,MAAL,CAAaM,QAAb,CAAsBpK,GAAtB,EAA2BT,KAA3B;AACH,SAJA;;AAIA,2BAAA;QAhB6BsK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHlC,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa8hH,YAAY,mCADxBhiH,OAAO,CAAC,cAAD,WAMHE,QAAQ,CAAC8d,OAAD,WAGR9d,QAAQ,CAAC8d,OAAD;AAAS5d,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAPlB2hH,QAOkB,GAPP,CAOO;AAPN3hH,UAAAA,MAEZkhE,MAFY,GAEI,IAAItpC,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAFJ;;AAE+Bja,UAAAA,uFAAA;;AAAAA,UAAAA,sFAAA;;AAAA3d,UAAAA,MAQ3CohE,OAR2C,SAAA;AAQpCphE,UAAAA,MACP4hH,KADO,GACS,CADT;AACU,sBAAA;;;AAAA,2CAAA;;AAAAzhH,QAAAA,OAEjBoL,SAFiB,GAEjB,kBAAA,GAAa;AAET,eAAK61D,OAAL,GAAe,KAAKv1D,YAAL,CAAkB21D,eAAlB,CAAf;AACA,eAAKJ,OAAL,CAAaQ,KAAb,GAAqB,KAAKV,MAA1B;AAEH,SAPgB;;AAOhB/gE,QAAAA,OAED0gC,QAFC,GAED,iBAAA,GAAY;AACR,eAAKghF,UAAL,CAAgB,GAAhB;AACH,SAJA;;AAIA1hH,QAAAA,OAED0hH,UAFC,GAED,mBAAA,CAAYzgH,KAAZ,EAA2B;AAEvB,cAAIA,KAAK,KAAK,GAAd,EAAmB;AACf,iBAAK8/D,MAAL,CAAY5sB,CAAZ,GAAgBlzC,KAAhB;AACA,iBAAKggE,OAAL,CAAaQ,KAAb,GAAqB,KAAKV,MAA1B;AACA,iBAAKygD,QAAL,GAAgB,CAAhB;;;AAGJ,eAAKC,KAAL,GAAa,KAAK/d,IAAlB;AACH,SAXA;;AAWA1jG,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AAEvB,eAAK89G,KAAL,IAAc99G,SAAd;AACA,cAAI,KAAK89G,KAAL,GAAa,CAAjB,EAAoB;AAEpB,eAAK1gD,MAAL,CAAY5sB,CAAZ,GAAgBj8B,IAAI,CAAC8E,IAAL9E,CAAU,KAAK6oD,MAAL,CAAY5sB,CAAtBj8B,EAAyB,KAAKspG,QAA9BtpG,EAAwCvU,SAAS,GAAG,KAAKw+B,MAAzDjqB,CAAhB;AACA,eAAK+oD,OAAL,CAAaQ,KAAb,GAAqB,KAAKV,MAA1B;;AAEA,cAAI,KAAKA,MAAL,CAAY5sB,CAAZ,IAAiB,IAArB,EAA2B;AACvB,iBAAKjrC,IAAL,CAAUoI,MAAV,GAAmB,KAAnB;;AAGP,SAdA;;AAcA,2BAAA;QAhD6B/F;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAMtB,CANsB;;;AAMrBH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGH,CAHG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkCT8iG,MAAM;AAQf,uBAAA,CAAaz4G,IAAb,EAAyB;AAAA,eANlBA,IAMkB,SAAA;AANd,eAEJ04G,IAFI,GAEG,KAFH;AAEQ,eAEZxsF,IAFY,GAEI9yB,MAAM,CAACC,MAAPD,CAAc,IAAdA,CAFJ;AAKf,eAAK4G,IAAL,GAAYA,IAAZ;AACA,eAAKksB,IAAL,GAAYksB,MAAM,CAAC9gD,GAAP8gD,CAAW,KAAKp4C,IAAhBo4C,CAAZ;;;AACH,qCAAA;;AAAAthD,QAAAA,OAEMoiD,OAFN,GAED,gBAAA,GAAwB;AACpB,cAAI,CAAC,KAAKw/D,IAAV,EAAgB;;AAChB,eAAK,IAAIlhH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK00B,IAAL,CAAUz0B,MAA9B,EAAsCD,CAAC,EAAvC,EACI,KAAK00B,IAAL,CAAU10B,CAAV,EAAa0hD,OAAb;AACP,SANA;;AAMApiD,QAAAA,OAEM6C,EAFN,GAED,WAAA,GAAmB;AACf,eAAK++G,IAAL,GAAY,IAAZ;;AACA,eAAK,IAAIlhH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK00B,IAAL,CAAUz0B,MAA9B,EAAsCD,CAAC,EAAvC,EACI,KAAK00B,IAAL,CAAU10B,CAAV,EAAamC,EAAb;;AACJ,eAAKqG,IAAL,CAAUoI,MAAV,GAAmB,IAAnB;AACH,SAPA;;AAOAtR,QAAAA,OAEMiD,GAFN,GAED,YAAA,GAAoB;AAChB,eAAK2+G,IAAL,GAAY,KAAZ;;AACA,eAAK,IAAIlhH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK00B,IAAL,CAAUz0B,MAA9B,EAAsCD,CAAC,EAAvC,EACI,KAAK00B,IAAL,CAAU10B,CAAV,EAAauC,GAAb;;AACJ,eAAKiG,IAAL,CAAUoI,MAAV,GAAmB,KAAnB;AACH,SAPA;;AAOAtR,QAAAA,OAEMwS,OAFN,GAED,gBAAA,GAAwB,CAAG,CAF1B;;AAE0B,qBAAA;;UAGlBqvG,KAAK;AAId,sBAAA,CAAa34G,IAAb,EAAyB;AAAA,eAFf44G,KAEe,SAAA;AACrB,eAAKA,KAAL,GAAa54G,IAAb;;;AACH,qCAAA;;AAAA1E,QAAAA,QAEM3B,EAFN,GAED,WAAA,GAAmB,CAAG,CAFrB;;AAEqB2B,QAAAA,QAEfvB,GAFe,GAEtB,YAAA,GAAoB,CAAG,CAFD;;AAECuB,QAAAA,QAEhB49C,OAFgB,GAEvB,gBAAA,GAAwB,CAAG,CAFJ;;AAEI,oBAAA;;UAKlBd,MAAM;AAAA,uBAAA;;;;;;;AAKfA,QAAAA,OAGcrhD,IAHd,GAGA,aAAA,GAAsB;;AAGlB,eAAKm1B,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAI64G,OAAJ,CAAY74G,IAAZ,CAAL;WAA9B,CAHkB;;;AAMlB,eAAKksB,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAI84G,OAAJ,CAAY94G,IAAZ,CAAL;WAA9B,CANkB;;;AASlB,eAAKksB,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAI+4G,OAAJ,CAAY/4G,IAAZ,CAAL;WAA9B,CATkB;;;AAYlB,eAAKksB,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAIg5G,OAAJ,CAAYh5G,IAAZ,CAAL;WAA9B,CAZkB;;;AAelB,eAAKksB,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAIi5G,OAAJ,CAAYj5G,IAAZ,CAAL;WAA9B,CAfkB;;;AAkBlB,eAAKksB,IAAL,CAAU,QAAV,IAAsB,UAAClsB,IAAD;AAAW,mBAAK,IAAIk5G,KAAJ,CAAUl5G,IAAV,CAAL;WAAjC,CAlBkB;;;AAqBlB,eAAKksB,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAIm5G,OAAJ,CAAYn5G,IAAZ,CAAL;WAA9B,CArBkB;;;AAwBlB,eAAKksB,IAAL,CAAU,KAAV,IAAmB,UAAClsB,IAAD;AAAW,mBAAK,IAAIo5G,OAAJ,CAAYp5G,IAAZ,CAAL;WAA9B,CAxBkB;;;AA2BlB,eAAKksB,IAAL,CAAU,iBAAV,IAA+B,UAAClsB,IAAD;AAAW,mBAAK,IAAIq5G,aAAJ,CAAkBr5G,IAAlB,CAAL;WAA1C,CA3BkB;;;AA8BlB,eAAKksB,IAAL,CAAU,mBAAV,IAAiC,UAAClsB,IAAD;AAAW,mBAAK,IAAIs5G,eAAJ,CAAoBt5G,IAApB,CAAL;WAA5C,CA9BkB;;;AAiClB,eAAKksB,IAAL,CAAU,gBAAV,IAA8B,UAAClsB,IAAD;AAAW,mBAAK,IAAIu5G,YAAJ,CAAiBv5G,IAAjB,CAAL;WAAzC,CAjCkB;;;AAoClB,eAAKksB,IAAL,CAAU,SAAV,IAAuB,UAAClsB,IAAD;AAAW,mBAAK,IAAIw5G,MAAJ,CAAWx5G,IAAX,CAAL;WAAlC,CApCkB;;;AAuClB,eAAKksB,IAAL,CAAU,SAAV,IAAuB,UAAClsB,IAAD;AAAW,mBAAK,IAAIy5G,MAAJ,CAAWz5G,IAAX,CAAL;WAAlC;;;;;;;AA1CJ;;AA8CAo4C,QAAAA,OAKc9gD,GALd,GAKA,YAAA,CAAmB0I,IAAnB,EAAwC;AAEpC,cAAIuY,QAAQ,GAAG7Q,QAAQ,CAACgyG,WAAThyG,CAAqB1H,IAArB0H,CAAf;AACA,cAAIiyG,OAAgB,GAAG,EAAvB;;AAEA,eAAK,IAAIniH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+gB,QAAQ,CAAC9gB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,gBAAMoiH,KAAK,GAAGrhG,QAAQ,CAAC/gB,CAAD,CAAtB,CADsC;;AAItC,gBAAIoiH,KAAK,CAAChiH,IAANgiH,CAAWnlE,QAAXmlE,CAAoB,QAApBA,CAAJ,EAAmC;AAC/BA,cAAAA,KAAK,CAACp4G,YAANo4G,CAAmB30C,UAAnB20C;;;AAGJ,gBAAI,KAAK1tF,IAAL,CAAU0tF,KAAK,CAAChiH,IAAhB,CAAJ,EAA2B;;AAEvB,kBAAMY,GAAG,GAAGohH,KAAK,CAAChiH,IAAlB;AACA,kBAAMiiH,IAAG,GAAG,KAAK3tF,IAAL,CAAU1zB,GAAV,CAAZ;;AACA,kBAAIqhH,IAAG,KAAKhiH,SAAZ,EAAuB;AACnB8hH,gBAAAA,OAAO,CAAC//G,IAAR+/G,CAAa,KAAKztF,IAAL,CAAU1zB,GAAV,EAAeohH,KAAf,CAAbD;AACA;;;;AAGR,gBAAI5oF,IAAI,CAAC15B,QAAL05B,CAAciB,OAAdjB,CAAsB6oF,KAAK,CAAChiH,IAA5Bm5B,CAAJ,EAAuC;;AAEnC,kBAAM7c,IAAI,GAAG0lG,KAAK,CAAChiH,IAANgiH,CAAW10C,KAAX00C,CAAiB,CAAjBA,EAAoB,CAApBA,CAAb;AACA,kBAAME,OAAO,GAAG,KAAK5tF,IAAL,CAAUhY,IAAV,CAAhB;;AACA,kBAAI4lG,OAAJ,EAAa;AACTH,gBAAAA,OAAO,CAAC//G,IAAR+/G,CAAaG,OAAO,CAACF,KAAD,CAApBD;;;;;AAKZ,iBAAOA,OAAP;AACH,SAtCD;;AAsCC,qBAAA;;AAzFQvhE,MAAAA,MAAM,CAGAlsB,IAHNksB,GAGuD,EAHvDA;UA6FAygE,OAAO;AAAApiH,QAAAA,+BAAA;;AAGhB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,yBAAA,aAAA;;AAAA,mBAAA;;AACrBrJ,UAAAA,0BAAMqJ,aAAN;AAAYrJ,UAAAA,MAHRolC,KAGQ,GAHQ,EAGR;AAHUplC,UAAAA,MAClBojH,IADkB,SAAA;;AAItB,cAAI9mG,IAAI,gCAAR;;AACAtc,UAAAA,MAAKolC,KAAL,GAAa/7B,IAAI,CAACpI,IAAlB;AACAjB,UAAAA,MAAKojH,IAAL,kBAAY9mG,IAAI,CAAC2lG,0BAALoB,YAAYx3G,YAAZ,CAAyBy3G,MAAzB,CAAZ;AACA,+BAAKrB,KAAL,SAAA,SAAA,GAAAsB,YAAYvgH,EAAZ,CAAesgH,MAAM,CAACnwF,SAAPmwF,CAAiBE,KAAhC,EAAuC,YAAM;AACzCppF,YAAAA,IAAI,CAAC15B,QAAL05B,CAAcp3B,EAAdo3B,CAAiB9d,IAAI,CAAC8oB,KAAtBhL;AACArzB,YAAAA,KAAK,CAAC/D,EAAN+D,CAAS,WAATA;AACH,WAHD,+BAAA,CAAA;AAGS,sBAAA;;;AACZ,sBAAA;QAZwBi7G;UAehBG,OAAO;AAAAriH,QAAAA,gCAAA;;AAEhB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,0BAAA;;AAAA,oBAAA;;AACrBhE,UAAAA,4BAAMgE,aAAN;AAAYhE,UAAAA,OAFhBo+G,IAEgB,SAAA;AACZp+G,UAAAA,OAAKo+G,IAAL,GAAY1yG,QAAQ,CAAClF,YAATkF,CAAsB1L,OAAK48G,KAA3BlxG,EAAkCi0D,KAAlCj0D,CAAZ;AACA1L,UAAAA,OAAKo+G,IAAL,CAAUj1C,MAAV,GAAmBp0C,IAAI,CAAC15B,QAAL05B,CAAcz5B,GAAdy5B,iBAAkB/0B,OAAK48G,0BAALyB,aAAYziH,IAA9Bm5B,CAAnB;AAAuD,uBAAA;;;AAC1D,uCAAA;;AAAAl1B,QAAAA,QAEMlC,EAFN,GAED,WAAA,GAAmB;AACf2gH,UAAAA,iBAAA,CAAM3gH,EAAN,KAAA,KAAA;;AACA,eAAKu/C,OAAL;AACH,SALA;;AAKAr9C,QAAAA,QAEMq9C,OAFN,GAED,gBAAA,GAAwB;AACpBohE,UAAAA,iBAAA,CAAMphE,OAAN,KAAA,KAAA;;AACA,eAAKkhE,IAAL,CAAWj1C,MAAX,GAAoBp0C,IAAI,CAAC15B,QAAL05B,CAAcz5B,GAAdy5B,CAAkB,KAAK6nF,KAAL,CAAYhhH,IAA9Bm5B,CAApB;AACH,SALA;;AAKA,sBAAA;QAhBwB4nF;UAmBhBQ,OAAO;AAAA1iH,QAAAA,gCAAA;;AAGhB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,2BAAA;;AAAA,oBAAA;;AACrBzD,UAAAA,4BAAMyD,aAAN;AAAYzD,UAAAA,OAHhBg+G,MAGgB,SAAA;AAHVh+G,UAAAA,OACNsmD,IADM,SAAA;AAIFtmD,UAAAA,OAAKg+G,MAAL,GAAc7yG,QAAQ,CAAClF,YAATkF,CAAsBnL,OAAKq8G,KAA3BlxG,EAAkC8yG,MAAlC9yG,CAAd;AACAnL,UAAAA,OAAKsmD,IAAL,GAAYn7C,QAAQ,CAACmV,iBAATnV,CAA2BnL,OAAKq8G,KAAhClxG,EAAuC,MAAvCA,EAA+CwiC,MAA/CxiC,CAAZ;AACA,cAAInL,OAAKsmD,IAAL,CAAU3uC,IAAV,KAAmBg2B,MAAM,CAACuwE,IAAPvwE,CAAYwwE,MAAnC,EAA2C,MAAM,IAAI1/G,KAAJ,CAAauB,OAAKq8G,KAAL,CAAWhhH,IAAX,4CAAb,CAAN;AAC3C,cAAI+iH,YAAY,GAAG5pF,IAAI,CAAC15B,QAAL05B,CAAcz5B,GAAdy5B,CAAkBx0B,OAAKq8G,KAAL,CAAWhhH,IAA7Bm5B,CAAnB;AACAx0B,UAAAA,OAAKg+G,MAAL,CAAYrvF,QAAZ,GAAuByvF,YAAvB;AACAp+G,UAAAA,OAAKsmD,IAAL,CAAWzY,SAAX,GAAuBuwE,YAAvB;AACA,kCAAKJ,MAAL,SAAA,SAAA,GAAAK,cAAa56G,IAAb,CAAkBrG,EAAlB,CAAqB,OAArB,EAA8B,YAAM;AAAA,8BAAA;;AAChC4C,YAAAA,OAAKsmD,IAAL,CAAWzY,SAAX,GAAuB+K,KAAK,CAACxzC,KAANwzC,CAAY,CAAZA,EAAe,CAAfA,EAAkB54C,OAAKg+G,MAAL,CAAarvF,QAA/BiqB,CAAvB;AACAt7C,YAAAA,GAAG,CAACC,IAAJD,CAAS0C,OAAKq8G,KAAL,CAAWhhH,IAApBiC,oBAA0B0C,OAAKg+G,2BAALM,eAAa3vF,QAAvCrxB;AACH,WAHD,gCAAA,CAAA;AAGS,uBAAA;;;AACZ,uCAAA;;AAAA2C,QAAAA,QAEM7C,EAFN,GAED,WAAA,GAAmB;AACfmhH,UAAAA,iBAAA,CAAMnhH,EAAN,KAAA,KAAA;;AACA,cAAIghH,YAAY,GAAG5pF,IAAI,CAAC15B,QAAL05B,CAAcz5B,GAAdy5B,CAAkB,KAAK6nF,KAAL,CAAWhhH,IAA7Bm5B,CAAnB;AACA,eAAKwpF,MAAL,CAAarvF,QAAb,GAAwByvF,YAAxB;AACA,eAAK93D,IAAL,CAAWzY,SAAX,GAAuBuwE,YAAvB;AACH,SAPA;;AAOA,sBAAA;QAtBwBhC;UAyBhBS,OAAO;AAAA3iH,QAAAA,gCAAA;;AAGhB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,oBAAA;;AACrBrD,UAAAA,4BAAMqD,aAAN;AAAYrD,UAAAA,OAHhBstC,SAGgB,SAAA;AAHPttC,UAAAA,OACTo+G,UADS,SAAA;AAILp+G,UAAAA,OAAKstC,SAAL,GAAiBviC,QAAQ,CAAClF,YAATkF,CAAsB/K,OAAKi8G,KAA3BlxG,EAAkCwiC,MAAlCxiC,CAAjB;AACA/K,UAAAA,OAAKstC,SAAL,CAAeG,SAAf,GAA2B,CAA3B;AACAztC,UAAAA,OAAKo+G,UAAL,GAAkBp+G,OAAKi8G,KAAL,CAAWp3G,YAAX,CAAwBwoC,SAAxB,CAAlB;AACAnwC,UAAAA,GAAG,CAACF,EAAJE,CAAO8C,OAAKi8G,KAAL,CAAWhhH,IAAlBiC,EAAwB,UAAC9B,KAAD,EAAmB;AACvC4E,YAAAA,OAAKo+G,UAAL,CAAgBn4G,QAAhB,CAAyB7K,KAAzB;AACH,WAFD8B;AAEG,uBAAA;;;AACN,uCAAA;;AAAAmD,QAAAA,QAEMrD,EAFN,GAED,WAAA,GAAmB;AACf,eAAKswC,SAAL,CAAgBG,SAAhB,GAA4B,CAA5B;AACH,SAJA;;AAIA,sBAAA;QAfwBuuE;UAkBhBK,OAAO;AAAAviH,QAAAA,gCAAA;;AAEhB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,oBAAA;;AACrBwtF,UAAAA,4BAAMxtF,aAAN;AAAYwtF,UAAAA,OAFhBwqB,MAEgB,SAAA;AACZxqB,UAAAA,OAAKwqB,MAAL,GAActwG,QAAQ,CAAClF,YAATkF,CAAsB8lF,OAAKorB,KAA3BlxG,EAAkCwiC,MAAlCxiC,CAAd;AACA7N,UAAAA,GAAG,CAACF,EAAJE,CAAO2zF,OAAKorB,KAAL,CAAWhhH,IAAlBiC,EAAwB,UAAC9B,KAAD,EAAwB;AAC5Cy1F,YAAAA,OAAKwqB,MAAL,CAAagD,WAAb,GAA2BjjH,KAA3B;AACH,WAFD8B;AAEE,uBAAA;;;AACL,uCAAA;;AAAAohH,QAAAA,QAEMthH,EAFN,GAED,WAAA,GAAmB;AACfuhH,UAAAA,iBAAA,CAAMvhH,EAAN,KAAA,KAAA;;AACA,cAAMkvE,GAAG,GAAG93C,IAAI,CAAC15B,QAAL05B,CAAcz5B,GAAdy5B,CAAkB,KAAK6nF,KAAL,CAAWhhH,IAA7Bm5B,CAAZ;AACA,eAAKinF,MAAL,CAAYgD,WAAZ,GAA0BnyC,GAA1B;AACH,SANA;;AAMA,sBAAA;QAdwB8vC;UAiBhBI,OAAO;AAAAtiH,QAAAA,gCAAA;;AAChB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,iBACrBm7G,YAAA,KAAA,EAAMn7G,IAAN,SADqB;;;AAExB,sBAAA;QAHwB24G;UAMhBO,KAAK;AAAAziH,QAAAA,+BAAA;;AAGd,sBAAA,CAAauJ,IAAb,EAAyB;AAAA,oBAAA;;AACrB0tF,UAAAA,6BAAM1tF,aAAN;AAAY0tF,UAAAA,OAHhB0tB,MAGgB,SAAA;AAHV1tB,UAAAA,OACN2tB,MADM,SAAA;AAIF3tB,UAAAA,OAAK0tB,MAAL,GAAc1zG,QAAQ,CAACzH,cAATyH,CAAwBgmF,OAAKkrB,KAA7BlxG,EAAoC,QAApCA,CAAd;AACAgmF,UAAAA,OAAK2tB,MAAL,GAAc3zG,QAAQ,CAACmV,iBAATnV,CAA2BgmF,OAAKkrB,KAAhClxG,EAAuC,QAAvCA,EAAiD4zG,OAAjD5zG,CAAd;;AACAgmF,UAAAA,OAAK0tB,MAAL,CAAazhH,EAAb,CAAgBsgH,MAAM,CAACnwF,SAAPmwF,CAAiBE,KAAjC,EAAwC,YAAM;AAC1CrgE,YAAAA,EAAE,CAACM,GAAHN,CAAO4zC,OAAK2tB,MAAL,CAAal2C,MAApBrrB;AACH,WAFD;;AAEE,uBAAA;;;AACL,oBAAA;QAVsBi/D;UAadE,OAAO;AAAAxiH,QAAAA,gCAAA;;AAEhB,wBAAA,CAAauJ,IAAb,EAAyB;AAAA,oBAAA;;AACrB4tF,UAAAA,4BAAM5tF,aAAN;AAAY4tF,UAAAA,OAFR2tB,OAEQ,SAAA;AACZ3tB,UAAAA,OAAK2tB,OAAL,GAAe7zG,QAAQ,CAAClF,YAATkF,CAAsBkmF,OAAKgrB,KAA3BlxG,EAAkC8zG,MAAlC9zG,CAAf;;AACAkmF,UAAAA,OAAKgrB,KAAL,CAAWj/G,EAAX,CAAc6hH,MAAM,CAAC1xF,SAAP0xF,CAAiBC,MAA/B,EAAuC,YAAM;AAEzC1qF,YAAAA,IAAI,CAAC15B,QAAL05B,CAAcp3B,EAAdo3B,CAAiB68D,OAAKgrB,KAAL,CAAWhhH,IAA5Bm5B;AACH,WAHD;;AAGE,uBAAA;;;AACL,sBAAA;QATwB4nF;UAYhBW,eAAe;AAAA7iH,QAAAA,wCAAA;;AAMxB,gCAAA,CAAauJ,IAAb,EAAyB;AAAA,oBAAA;;AACrB6tF,UAAAA,4BAAM7tF,aAAN,CADqB;;AAErB6tF,UAAAA,OANJ6tB,IAMI,SAAA;AANA7tB,UAAAA,OACJ8tB,oBADI,SAAA;AACgB9tB,UAAAA,OACpB+tB,SADoB,GACR,CAAC,CADO;AAMhB,cAAMljH,KAAK,GAAGzB,YAAY,CAACC,KAAbD,CAAmB4kH,eAAjC;AACAhuB,UAAAA,OAAK6tB,IAAL,GAAY,IAAI12G,KAAJ,CAAyBtM,KAAzB,CAAZ;AACA,cAAM4T,KAAK,GAAG,MAAM5T,KAApB;AACAm1F,UAAAA,OAAK8tB,oBAAL,GAA4Bj0G,QAAQ,CAACzH,cAATyH,CAAwBmmF,OAAK+qB,KAA7BlxG,EAAoC,sBAApCA,CAA5B;;AACAmmF,UAAAA,OAAK8tB,oBAAL,CAA0Bv8G,WAA1B,CAAsC,MAAtC,EAA8C,CAA9C,EAAiD,CAAjD;;AACA,cAAM2Z,IAAI,GAAGrR,QAAQ,CAACzH,cAATyH,CAAwBmmF,OAAK+qB,KAA7BlxG,EAAoC,WAApCA,CAAb;AACA,cAAMgyD,MAAM,GAAG3gD,IAAI,CAACnE,QAALmE,CAAcjV,CAA7B;AACA,cAAM+iB,MAAM,GAAGva,KAAK,GAAG,CAAvB;AACA,cAAMwvG,SAAS,GAAGjvD,EAAE,CAAC,CAAD,EAAI,CAAJ,CAApB;;AAEA,cAAMkvD,eAAe,GAAG,SAAlBA,eAAkB,CAACzvG,KAAD,EAAmB;AACvC,gBAAMxI,CAAC,GAAGuK,IAAI,CAAC6N,GAAL7N,CAAS/B,KAAT+B,IAAkBqrD,MAA5B;AACA,gBAAM31D,CAAC,GAAGsK,IAAI,CAAC+N,GAAL/N,CAAS/B,KAAT+B,IAAkBqrD,MAA5B;AACA,mBAAO;AAAE51D,cAAAA,CAAC,EAAEA,CAAL;AAAQC,cAAAA,CAAC,EAAEA;AAAX,aAAP;AACH,WAJD;;AAMA,eAAK,IAAIvM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,gBAAMgd,YAAY,GAAGlI,KAAK,GAAG9U,CAAR8U,GAAYua,MAAjC;AACA,gBAAMm1F,MAAM,GAAGhtG,IAAI,CAACqM,QAALrM,CAAcwF,YAAdxF,CAAf;AACA,gBAAMxI,GAAG,GAAGu1G,eAAe,CAACC,MAAD,CAA3B;AACA,gBAAMC,OAAO,GAAGj9G,GAAG,CAACgX,QAAJhX,CAAa+Z,IAAb/Z,EAAmB6uF,OAAK+qB,KAAxB55G,EAA+BwK,EAAE,CAAChD,GAAG,CAAC1C,CAAL,EAAQ0C,GAAG,CAACzC,CAAZ,EAAe,CAAf,CAAjC/E,CAAhB;AACA6uF,YAAAA,OAAK6tB,IAAL,CAAUlkH,CAAV,IAAe,IAAI0kH,aAAJ,CAAkBD,OAAlB,EAA2BznG,YAAY,GAAG,EAA1C,CAAf;;;AAGJuE,UAAAA,IAAI,CAAC3Q,MAAL2Q,GAAc,KAAdA;AAEAlf,UAAAA,GAAG,CAACF,EAAJE,CAAO,kBAAPA,EAA2B,UAAC4J,GAAD,EAAe;;AAItC,gBAAIy0F,QAAQ,GAAGlpF,IAAI,CAACC,QAALD,CAAc8hB,IAAI,CAACxkB,KAALwkB,CAAWrtB,GAAXqtB,EAAgBgrF,SAAhBhrF,CAAd9hB,CAAf;AACA,gBAAMmtG,UAAU,GAAGtvD,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArB;AACA,gBAAMlW,GAAG,GAAG7lB,IAAI,CAAC6lB,GAAL7lB,CAASqrF,UAATrrF,EAAqBrtB,GAArBqtB,CAAZ;AAEA,gBAAI6lB,GAAG,GAAG,CAAV,EAAauhD,QAAQ,GAAG,MAAMA,QAAjBA;AACbrK,YAAAA,OAAK+tB,SAAL,GAAiBvtG,IAAI,CAACoiC,KAALpiC,CAAW6pF,QAAQ,GAAG5rF,KAAtB+B,CAAjB;;AAEA,gBAAIw/E,OAAK+tB,SAAL,IAAkB3kH,YAAY,CAACC,KAAbD,CAAmB4kH,eAAzC,EAA0D;;AAEtDhuB,cAAAA,OAAK+tB,SAAL,GAAiB3kH,YAAY,CAACC,KAAbD,CAAmB4kH,eAAnB5kH,GAAqC,CAAtD;;;AAGJ,gBAAMmlH,WAAW,GAAGptG,IAAI,CAACqM,QAALrM,CAAc6+E,OAAK+tB,SAAL,GAAiBtvG,KAAjB,GAAyBua,MAAvC7X,CAApB;AACA,gBAAMxI,GAAG,GAAGu1G,eAAe,CAACK,WAAD,CAA3B;;AACAvuB,YAAAA,OAAK8tB,oBAAL,CAA2Bv8G,WAA3B,CAAuCoH,GAAG,CAAC1C,CAA3C,EAA8C0C,GAAG,CAACzC,CAAlD,EAAqD,CAArD;;AACA8pF,YAAAA,OAAK8tB,oBAAL,CAA0BzmG,oBAA1B,CAA+C,CAA/C,EAAkD,CAAlD,EAAqD24E,OAAK6tB,IAAL,CAAU7tB,OAAK+tB,SAAf,EAA0B3iG,MAA/E;AAEH,WArBDpf;AAqBE,uBAAA;;;AACL,+CAAA;;AAAAwiH,QAAAA,QAEM1iH,EAFN,GAED,WAAA,GAAmB;AACf,cAAMoS,OAAO,GAAG7M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAA/B;AACA,cAAI,CAACA,OAAL,EAAc,OAFC;;AAIf,cAAMjR,IAAI,GAAGiR,OAAO,CAAC7U,KAAR6U,CAAczG,KAA3B;AACA,cAAMg3G,SAAS,GAAGvwG,OAAO,CAAC7U,KAAR6U,CAAchH,mBAAhC;;AACA,eAAK,IAAIvN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkkH,IAAL,CAAUjkH,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,gBAAMytC,QAAQ,GAAGq3E,SAAS,CAAC9kH,CAAD,CAA1B;AACA,gBAAM+kH,OAAO,GAAG,KAAKb,IAAL,CAAUlkH,CAAV,CAAhB;AACA,gBAAMglH,OAAO,GAAGv3E,QAAQ,CAACxtC,MAATwtC,GAAkB,CAAlC;AACAs3E,YAAAA,OAAO,CAAC/D,UAAR+D,CAAmBC,OAAnBD;;AACA,gBAAIC,OAAJ,EAAa;AACT,kBAAMzjG,IAAI,GAAGje,IAAI,CAACmqC,QAAD,CAAjB;AACAs3E,cAAAA,OAAO,CAACE,OAARF,CAAgBxjG,IAAhBwjG;;;AAGX,SAlBA;;AAkBAF,QAAAA,QAEMtiH,GAFN,GAED,YAAA,GAAoB;;AAEhB,cAAImF,KAAK,CAAC7H,QAAN6H,CAAe6M,OAAnB,EACI7M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAAf7M,CAAuB+X,OAAvB/X,CAA+B,KAAK08G,SAApC18G;AACP,SANA;;AAMA,8BAAA;QAjFgCy5G;;AAmFpC,UAEKuD,aAAa;AAKf,8BAAA,CAAal8G,IAAb,EAAyBsM,KAAzB,EAAwC;AAAA,eAJxCowG,OAIwC,SAAA;AAJjC,eACPC,QADO,SAAA;AACC,eACR/D,KADQ,SAAA;AACH,eACL3/F,MADK,SAAA;AAGD,eAAKA,MAAL,GAAc3M,KAAd;AACA,eAAKssG,KAAL,GAAa54G,IAAb;AACA,cAAM48G,MAAM,GAAGl1G,QAAQ,CAACzH,cAATyH,CAAwB,KAAKkxG,KAA7BlxG,EAAoC,QAApCA,CAAf;AACAk1G,UAAAA,MAAM,CAAC1nG,oBAAP0nG,CAA4B,CAA5BA,EAA+B,CAA/BA,EAAkCtwG,KAAlCswG;AACA,eAAKF,OAAL,GAAeh1G,QAAQ,CAACmV,iBAATnV,CAA2B,KAAKkxG,KAAhClxG,EAAuC,SAAvCA,EAAkDi0D,KAAlDj0D,CAAf;AACA,eAAKi1G,QAAL,GAAgBj1G,QAAQ,CAACmV,iBAATnV,CAA2B,KAAKkxG,KAAhClxG,EAAuC,UAAvCA,EAAmDwiC,MAAnDxiC,CAAhB;;;AACH,6CAAA;;AAAAm1G,QAAAA,QAEDrE,UAFC,GAED,mBAAA,CAAYngG,MAAZ,EAA6B;AACzB,eAAKqkG,OAAL,CAAc18G,IAAd,CAAmBoI,MAAnB,GAA4BiQ,MAA5B;AACA,eAAKskG,QAAL,CAAe38G,IAAf,CAAoBoI,MAApB,GAA6BiQ,MAA7B;AACH,SALA;;AAKAwkG,QAAAA,QAEDJ,OAFC,GAED,gBAAA,CAAS1jG,IAAT,EAAwB;AACpB,eAAK2jG,OAAL,CAAcv3C,MAAd,GAAuBpsD,IAAI,CAACrgB,KAALqgB,CAAW80B,QAAX90B,EAAvB;AACA,eAAK4jG,QAAL,CAAe3B,WAAf,GAA6BzhH,QAAQ,CAAClC,QAATkC,CAAkBm4B,SAAlBn4B,eAAwCwf,IAAI,CAACnhB,IAA7C2B,CAA7B;AACH,SALA;;AAKA,4BAAA;SAxBJ;;UA2BYggH,YAAY;AAAA9iH,QAAAA,qCAAA;;AAIrB,6BAAA,CAAauJ,IAAb,EAAyB;AAAA,oBAAA;;AACrB+tF,UAAAA,4BAAM/tF,aAAN;AAAY+tF,UAAAA,OAHhB+uB,cAGgB,SAAA;AACZ/uB,UAAAA,OAAK+uB,cAAL,GAAsBp1G,QAAQ,CAACmV,iBAATnV,CAA2BqmF,OAAK6qB,KAAhClxG,EAAuC,gBAAvCA,EAAyDi0D,KAAzDj0D,CAAtB;AACA7N,UAAAA,GAAG,CAACF,EAAJE,CAAO,uBAAPA,EAAgC,YAAM;AAClC,gBAAMkS,OAAO,GAAG7M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAA/B;AACA,gBAAI,CAACA,OAAL,EAAc;AACd,gBAAMzG,KAAK,GAAGyG,OAAO,CAAC7U,KAAR6U,CAAczG,KAA5B;AACA,gBAAMP,mBAAmB,GAAGgH,OAAO,CAAC7U,KAAR6U,CAAchH,mBAA1C;AACA,gBAAMsB,uBAAuB,GAAG0F,OAAO,CAAC7U,KAAR6U,CAAc1F,uBAA9C;AACA,gBAAM02G,YAAY,GAAG12G,uBAAuB,KAAK,CAAC,CAAlD;;AACA,gBAAI02G,YAAJ,EAAkB;;AAEd,kBAAM93E,QAAQ,GAAGlgC,mBAAmB,CAACsB,uBAAD,CAApC;AACA,kBAAM22G,QAAQ,GAAG13G,KAAK,CAAC2/B,QAAD,CAAtB;;AACA,kBAAIA,QAAQ,KAAK,EAAjB,EAAqB;AACjB,oBAAM5sB,MAAM,GAAG2kG,QAAQ,CAACliH,IAATkiH,CAAch3G,YAAdg3G,GAA6B,CAA5C;AACAnjH,gBAAAA,GAAG,CAACC,IAAJD,CAAS,oBAATA,EAA+Bwe,MAAM,GAAG,GAAH,GAAS,CAA9Cxe;;AACA,oBAAIwe,MAAJ,EAAY;AACR,sBAAI4kG,OAAO,GAAGD,QAAQ,CAAC55G,WAAvB;AACA,sBAAI65G,OAAO,GAAG,CAAd,EAAiBA,OAAO,GAAG,CAAVA;AACjBlvB,kBAAAA,OAAK+uB,cAAL,CAAqB33C,MAArB,GAAiCxmE,KAAK,CAACtH,QAANsH,CAAerH,GAAfqH,CAAmB,QAAnBA,SAAAA,GAAkCs+G,OAAlCt+G,MAAAA,GAA6CoN,OAAO,CAACxG,SAArD5G,MAAjC;;;;AAIf,WArBD9E;AAqBE,uBAAA;;;AACL,2BAAA;QA7B6B8+G;UAgCrBa,MAAM;AAAA/iH,QAAAA,gCAAA;;AAGf,uBAAA,CAAauJ,IAAb,EAAyB;AAAA,qBAAA;;AACrBkuF,UAAAA,8BAAMluF,aAAN;AAAYkuF,UAAAA,QAHhBwtB,IAGgB,SAAA;AAHZxtB,UAAAA,QACJgvB,aADI,SAAA;AAIAhvB,UAAAA,QAAKgvB,aAAL,GAAqBx1G,QAAQ,CAACzH,cAATyH,CAAwBwmF,QAAK0qB,KAA7BlxG,EAAoC,eAApCA,CAArB;AACA,cAAIwmF,QAAKgvB,aAAL,IAAsBrlH,SAAtB,IAAmCq2F,QAAKgvB,aAAL,KAAuB,IAA9D,EAAoE,MAAM,IAAIliH,KAAJ,MAAakzF,QAAK0qB,KAAL,CAAWhhH,IAAxB,CAAN;AACpE,cAAMc,KAAK,GAAGzB,YAAY,CAACC,KAAbD,CAAmB4kH,eAAjC;AACA3tB,UAAAA,QAAKwtB,IAAL,GAAY,IAAI12G,KAAJ,CAAsBtM,KAAtB,CAAZ;AACA,cAAMykH,QAAQ,GAAGz1G,QAAQ,CAACzH,cAATyH,CAAwBwmF,QAAK0qB,KAA7BlxG,EAAoC,YAApCA,CAAjB;AACAwmF,UAAAA,QAAKgvB,aAAL,CAAmB90G,MAAnB,GAA4B,KAA5B;;AACA,eAAK,IAAI5Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2lH,QAAQ,CAAC5kG,QAAT4kG,CAAkB1lH,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C02F,YAAAA,QAAKwtB,IAAL,CAAUlkH,CAAV,IAAe,IAAI4lH,UAAJ,CAAeD,QAAQ,CAAC5kG,QAAT4kG,CAAkB3lH,CAAlB2lH,CAAf,EAAqC3lH,CAAC,GAAG,CAAzC,CAAf;;;AAEJqC,UAAAA,GAAG,CAACF,EAAJE,CAAO,gBAAPA,EAAyB,YAAM;AAC3B,gBAAMkS,OAAO,GAAG7M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAA/B;AACA,gBAAI,CAACA,OAAL,EAAc,OAFa;;AAI3B,gBAAMjR,IAAI,GAAGiR,OAAO,CAAC7U,KAAR6U,CAAczG,KAA3B;AACA,gBAAMg3G,SAAS,GAAGvwG,OAAO,CAAC7U,KAAR6U,CAAchH,mBAAhC;;AACA,iBAAK,IAAIvN,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG02F,QAAKwtB,IAAL,CAAUjkH,MAA9B,EAAsCD,EAAC,EAAvC,EAA2C;AACvC,kBAAMytC,QAAQ,GAAGq3E,SAAS,CAAC9kH,EAAD,CAA1B;AACA,kBAAM+kH,OAAO,GAAGruB,QAAKwtB,IAAL,CAAUlkH,EAAV,CAAhB;AACA,kBAAMglH,OAAO,GAAGv3E,QAAQ,CAACxtC,MAATwtC,GAAkB,CAAlC;AACAs3E,cAAAA,OAAO,CAAC/D,UAAR+D,CAAmBC,OAAnBD;;AACA,kBAAIC,OAAJ,EAAa;AACT,oBAAMzjG,IAAI,GAAGje,IAAI,CAACmqC,QAAD,CAAjB;AACAs3E,gBAAAA,OAAO,CAACE,OAARF,CAAgBxjG,IAAhBwjG;;;;AAGR1iH,YAAAA,GAAG,CAACC,IAAJD,CAAS,aAATA,EAAwB,GAAxBA;AACH,WAjBDA;AAmBAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,kBAAPA,EAA2B,YAAM;AAC7B,gBAAMkS,OAAO,GAAG7M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAA/B;AACA,gBAAI,CAACA,OAAL,EAAc;AACd,gBAAM1F,uBAAuB,GAAG0F,OAAO,CAAC7U,KAAR6U,CAAc1F,uBAA9C;AACA,gBAAM02G,YAAY,GAAG12G,uBAAuB,KAAK,CAAC,CAAlD;AACA6nF,YAAAA,QAAKgvB,aAAL,CAAmB90G,MAAnB,GAA4B20G,YAA5B;;AACA,gBAAIA,YAAJ,EAAkB;AACd,kBAAMM,OAAO,GAAGnvB,QAAKwtB,IAAL,CAAUr1G,uBAAV,EAAmCuyG,KAAnC,CAAyChkG,QAAzD;;AACAs5E,cAAAA,QAAKgvB,aAAL,CAAmB99G,WAAnB,CAA+Bi+G,OAAO,CAACv5G,CAAvC,EAA0Cu5G,OAAO,CAACt5G,CAAlD,EAAqDs5G,OAAO,CAACr5G,CAA7D;;;AAEJnK,YAAAA,GAAG,CAACC,IAAJD,CAAS,aAATA,EAAwB,GAAxBA;AACH,WAXDA;AAWE,wBAAA;;;AAEL,qBAAA;QA9CuB8+G;;AA+C3B,UAEKyE,UAAU;AAKZ,2BAAA,CAAap9G,IAAb,EAAyBiG,KAAzB,EAAwC;AAAA,eAJxCy2G,OAIwC,SAAA;AAJjC,eACPC,QADO,SAAA;AACC,eACR/D,KADQ,SAAA;AACH,eACL3yG,KADK,SAAA;AAGD,eAAK2yG,KAAL,GAAa54G,IAAb;AACA,eAAKiG,KAAL,GAAaA,KAAb;AACA,eAAKy2G,OAAL,GAAeh1G,QAAQ,CAACmV,iBAATnV,CAA2B,KAAKkxG,KAAhClxG,EAAuC,SAAvCA,EAAkDi0D,KAAlDj0D,CAAf;AACA,eAAKg1G,OAAL,CAAav3C,MAAb,QAAyB,KAAKl/D,KAA9B;AACA,eAAK02G,QAAL,GAAgBj1G,QAAQ,CAACmV,iBAATnV,CAA2B,KAAKkxG,KAAhClxG,EAAuC,UAAvCA,EAAmDwiC,MAAnDxiC,CAAhB;AACA,eAAK8wG,UAAL,CAAgB,KAAhB;;;AACH,0CAAA;;AAAA8E,QAAAA,QAED9E,UAFC,GAED,mBAAA,CAAYngG,MAAZ,EAA6B;AACzB,eAAKskG,QAAL,CAAc38G,IAAd,CAAmBoI,MAAnB,GAA4BiQ,MAA5B;AACH,SAJA;;AAIAilG,QAAAA,QAEDb,OAFC,GAED,gBAAA,CAAS1jG,IAAT,EAAwB;AACpB,eAAK4jG,QAAL,CAAc3B,WAAd,GAA4BzhH,QAAQ,CAAClC,QAATkC,CAAkBm4B,SAAlBn4B,eAAwCwf,IAAI,CAACnhB,IAA7C2B,CAA5B;AACH,SAJA;;AAIA,yBAAA;SAtBJ;;UAyBY8/G,aAAa;AAAA5iH,QAAAA,uCAAA;;AAOtB,8BAAA,CAAauJ,IAAb,EAAyB;AAAA,qBAAA;;AACrBouF,UAAAA,8BAAMpuF,aAAN,CADqB;;AAErBouF,UAAAA,QAPJstB,IAOI,SAAA;AAPAttB,UAAAA,QACJmvB,IADI,SAAA;AACAnvB,UAAAA,QAEJnoF,KAFI,GAEI,CAFJ;AAOA,cAAMvN,KAAK,GAAGzB,YAAY,CAACC,KAAbD,CAAmBumH,iBAAjC;AACApvB,UAAAA,QAAKstB,IAAL,GAAY,IAAI12G,KAAJ,CAA6BtM,KAA7B,CAAZ;AACA01F,UAAAA,QAAKmvB,IAAL,GAAY,IAAI7jH,KAAJ,CAAUhB,KAAV,CAAZ;AACA,cAAMqgB,IAAI,GAAGq1E,QAAKwqB,KAAL,CAAWrgG,QAAX,CAAoB,CAApB,CAAb;;AAEA,eAAK,IAAI/gB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,gBAAMykH,OAAO,GAAGj9G,GAAG,CAACgX,QAAJhX,CAAa+Z,IAAb/Z,EAAmBovF,QAAKwqB,KAAxB55G,CAAhB;AACAovF,YAAAA,QAAKstB,IAAL,CAAUlkH,CAAV,IAAe,IAAIimH,iBAAJ,CAAsBxB,OAAtB,CAAf;;;AAGJljG,UAAAA,IAAI,CAAC3Q,MAAL2Q,GAAc,KAAdA;AACAlf,UAAAA,GAAG,CAACF,EAAJE,CAAO,UAAPA,EAAmB,UAACsxB,GAAD,EAAiB;AAChCijE,YAAAA,QAAKwqB,KAAL,CAAWrgG,QAAX,CAAoB,CAApB,EAAuBmlG,eAAvB,CAAuChlH,KAAvC;;AACA01F,YAAAA,QAAKstB,IAAL,CAAUttB,QAAKnoF,KAAf,EAAsBizC,OAAtB,CAA8B/tB,GAA9B;;AACAijE,YAAAA,QAAKnoF,KAAL;AACA,gBAAImoF,QAAKnoF,KAAL,IAAcvN,KAAlB,EAAyB01F,QAAKnoF,KAAL,GAAa,CAAb;AAC5B,WALDpM;AAKE,wBAAA;;;AACL,4BAAA;QA3B8B8+G;UA+BtBc,MAAM;AAAAhjH,QAAAA,gCAAA;;AAMf,uBAAA,CAAauJ,IAAb,EAAyB;AAAA,qBAAA;;AACrBsuF,UAAAA,8BAAMtuF,aAAN;AAAYsuF,UAAAA,QALhBotB,IAKgB,SAAA;AALZptB,UAAAA,QAEJ9iE,GAFI,SAAA;AAOA8iE,UAAAA,QAAK9iE,GAAL,GAAW9jB,QAAQ,CAACC,IAATD,CAAc4mF,QAAKsqB,KAAnBlxG,EAA0B,KAA1BA,CAAX;AACA,cAAMi2G,eAAe,GAAGj2G,QAAQ,CAACC,IAATD,CAAc4mF,QAAKsqB,KAAnBlxG,EAA0B,iBAA1BA,CAAxB;AACA,cAAMhP,KAAK,GAAG,EAAd;AACA41F,UAAAA,QAAKotB,IAAL,GAAY,IAAI12G,KAAJ,CAAUtM,KAAV,CAAZ;AACA41F,UAAAA,QAAKotB,IAAL,CAAU,CAAV,IAAeiC,eAAf;;AAEA,eAAK,IAAInmH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,gBAAIomH,QAAQ,GAAG5+G,GAAG,CAACgX,QAAJhX,CAAa2+G,eAAb3+G,EAA8B2+G,eAAe,CAACp+G,MAA9CP,EAAuDwK,EAAE,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAzDxK,CAAf;AACAsvF,YAAAA,QAAKotB,IAAL,CAAUlkH,CAAV,IAAeomH,QAAf;;;AAGJ,cAAIhpG,QAAQ,GAAGpL,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB;AAEA,cAAMq0G,SAAS,GAAG,IAAlB;AACA,cAAMC,UAAU,GAAG,IAAnB;AAEA,cAAMC,eAAe,GAAG,GAAxB;AACA,cAAMC,gBAAgB,GAAG,GAAzB;AAKA,cAAMC,OAAO,GAAGJ,SAAS,GAAGE,eAA5B;AACA,cAAMG,OAAO,GAAGJ,UAAU,GAAGE,gBAA7B;AAEAnkH,UAAAA,GAAG,CAACF,EAAJE,CAAO,gBAAPA,EAAyB,YAAM;AAE3B,gBAAMiS,MAAM,GAAG5M,KAAK,CAAC7H,QAAN6H,CAAe6M,OAA9B;;AACA,gBAAID,MAAM,KAAKjU,SAAXiU,IAAwBA,MAAM,CAAC9L,IAAnC,EAAyC;AACrC4I,cAAAA,QAAQ,CAACC,IAATD,CAAcgM,QAAdhM,EAAwBkD,MAAM,CAAC9L,IAAP8L,CAAY8I,QAApChM;AACA,kBAAM7E,CAAC,GAAG6Q,QAAQ,CAAC9Q,CAAT8Q,GAAaqpG,OAAvB;AACA,kBAAMn6G,CAAC,GAAG8Q,QAAQ,CAAC5Q,CAAT4Q,GAAaspG,OAAvB;AACAtpG,cAAAA,QAAQ,CAAC5Q,CAAT4Q,GAAa,CAAbA;AACAA,cAAAA,QAAQ,CAAC9Q,CAAT8Q,GAAa,CAAC9Q,CAAd8Q;AACAA,cAAAA,QAAQ,CAAC7Q,CAAT6Q,GAAa,CAAC7Q,CAAd6Q;;AACA05E,cAAAA,QAAK9iE,GAAL,CAASpsB,WAAT,CAAqBwV,QAArB;;;AAGJ,gBAAM0pD,OAAO,GAAGp/D,KAAK,CAAC7H,QAAN6H,CAAeqgE,QAA/B;AACA,gBAAM4+C,UAAU,GAAG7/C,OAAO,CAAC7mE,MAA3B;;AACA,iBAAK,IAAID,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGkB,KAApB,EAA2BlB,GAAC,EAA5B,EAAgC;AAC5B,kBAAM4mH,QAAQ,GAAG5mH,GAAC,GAAG2mH,UAArB;AACA,kBAAM9tE,WAAW,GAAGi+C,QAAKotB,IAAL,CAAUlkH,GAAV,CAApB;;AACA,kBAAI,CAAC4mH,QAAL,EAAe;AACX/tE,gBAAAA,WAAW,CAACjxC,WAAZixC,CAAwB,KAAxBA,EAA+B,CAA/BA,EAAkC,CAAlCA;AACA;;;AAEJznC,cAAAA,QAAQ,CAACC,IAATD,CAAcgM,QAAdhM,EAAwB01D,OAAO,CAAC9mE,GAAD,CAAP8mE,CAAW1pD,QAAnChM;;AACA,kBAAM7E,EAAC,GAAG6Q,QAAQ,CAAC9Q,CAAT8Q,GAAaqpG,OAAvB;;AACA,kBAAMn6G,EAAC,GAAG8Q,QAAQ,CAAC5Q,CAAT4Q,GAAaspG,OAAvB;;AACAtpG,cAAAA,QAAQ,CAAC5Q,CAAT4Q,GAAa,CAAbA;AACAA,cAAAA,QAAQ,CAAC9Q,CAAT8Q,GAAa9Q,EAAb8Q;AACAA,cAAAA,QAAQ,CAAC7Q,CAAT6Q,GAAa7Q,EAAb6Q;;AACA05E,cAAAA,QAAKotB,IAAL,CAAUlkH,GAAV,EAAa4H,WAAb,CAAyBwV,QAAQ,CAAC9Q,CAAlC,EAAqC8Q,QAAQ,CAAC7Q,CAA9C,EAAiD6Q,QAAQ,CAAC5Q,CAA1D;;AAGP,WA/BDnK;AA+BG,wBAAA;;;AACN,qBAAA;QAlEuB8+G;;AAoE3B,UAQK8E,iBAAiB;AAKnB,kCAAA,CAAaz9G,IAAb,EAAyB;AAAA,eAHzBq+G,QAGyB,SAAA;AAHjB,eACRzF,KADQ,SAAA;AAIJ,eAAKA,KAAL,GAAa54G,IAAb;AACA,eAAKq+G,QAAL,GAAgB32G,QAAQ,CAACmV,iBAATnV,CAA2B,KAAKkxG,KAAhClxG,EAAuC,UAAvCA,EAAmDi0D,KAAnDj0D,CAAhB;AACA,eAAK8wG,UAAL,CAAgB,KAAhB;;;AACH,kDAAA;;AAAA8F,QAAAA,SAEDplE,OAFC,GAED,gBAAA,CAAS/tB,GAAT,EAAsB;AAClB,eAAKkzF,QAAL,CAAcl5C,MAAd,GAAuBh6C,GAAvB;AACA,eAAKqtF,UAAL,CAAgB,IAAhB;AACH,SALA;;AAKA8F,QAAAA,SAED9F,UAFC,GAED,mBAAA,CAAYngG,MAAZ,EAA6B;AACzB,eAAKugG,KAAL,CAAWxwG,MAAX,GAAoBiQ,MAApB;AACH,SAJA;;AAIA,gCAAA;SA1BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClnBD,UAAQhiB,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGagoH,0BAA0B,iDADtCloH,OAAO,CAAC,4BAAD;AAA8BI,QAAAA,6DAAA;;AAAA,2CAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,oFAAA;;AAAA2d,UAAAA,2FAAA;;AAAA3d,UAAAA,MAMlC6nH,WANkC,GAMpB,CANoB;AAMnB,sBAAA;;;AAAA,yDAAA;;AAAA1nH,QAAAA,OAEf2nH,aAFe,GAEf,sBAAA,CAAc1mH,KAAd,EAA4B;AACxB2mH,UAAAA,2BAAA,CAAMD,aAAN,KAAA,KAAA,EAAoB1mH,KAApB;;AACA,eAAKymH,WAAL,GAAmB,KAAKhuE,UAAxB;AACH,SALc;;AAKd15C,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B;AAEtBikH,UAAAA,2BAAA,CAAMlkH,MAAN,KAAA,KAAA,EAAaC,SAAb;;AAEA,cAAI,KAAK+jH,WAAL,GAAmB,CAAvB,EAA0B;AAE1B,eAAKA,WAAL,IAAoB/jH,SAApB;;AAEA,cAAI,KAAK+jH,WAAL,GAAmB,CAAvB,EAA0B;AACtB,iBAAKlG,QAAL,GAAgB,CAAhB;;AAGP,SAdA;;AAcA,yCAAA;QAxB2CqG,6FAE3CpoH;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,CADJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaooH,gBAAgB,uCAD5BtoH,OAAO,CAAC,kBAAD,WAMHE,QAAQ,CAAC8d,OAAD;AAAS5d,QAAAA,4CAAA;;AAAA,iCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAHlB2hH,QAGkB,GAHP,CAGO;AAHN3hH,UAAAA,MACZkhE,MADY,GACI,IAAItpC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADJ;;AACyBja,UAAAA,uFAAA;;AAAA3d,UAAAA,MAKrCohE,OALqC,SAAA;AAK9B,sBAAA;;;AAAA,+CAAA;;AAAAjhE,QAAAA,OAEPyL,KAFO,GAEP,cAAA,GAAS;AAEL,eAAKw1D,OAAL,GAAe,KAAKv1D,YAAL,CAAkB21D,eAAlB,CAAf;AACAt+D,UAAAA,GAAG,CAAC8d,IAAJ9d,UAAgB,KAAKmG,IAAL,CAAUpI,IAA1BiC,EAAkC,KAAK4kH,aAAvC5kH,EAAsD,IAAtDA;AAEH,SAPM;;AAON/C,QAAAA,OAEDoR,SAFC,GAED,kBAAA,GAAa;AACTrO,UAAAA,GAAG,CAACE,GAAJF,UAAe,KAAKmG,IAAL,CAAUpI,IAAzBiC,EAAiC,KAAK4kH,aAAtC5kH;AACH,SAJA;;AAIA/C,QAAAA,OAED2nH,aAFC,GAED,sBAAA,CAAe1mH,KAAf,EAA8B;AAC1B,eAAKugH,QAAL,GAAgBvgH,KAAhB;AACH,SAJA;;AAIAjB,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AAEvB,eAAKo9D,MAAL,CAAY5sB,CAAZ,GAAgBj8B,IAAI,CAAC8E,IAAL9E,CAAU,KAAK6oD,MAAL,CAAY5sB,CAAtBj8B,EAAyB,KAAKspG,QAA9BtpG,EAAwCvU,SAAS,GAAG,KAAKw+B,MAAzDjqB,CAAhB;AAEA,eAAK+oD,OAAL,CAAcQ,KAAd,GAAsB,KAAKV,MAA3B;AAEH,SARA;;AAQA,+BAAA;QA/BiCx1D;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAM1B,GAN0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ/C,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaqoH,qBAAqB,4CADjCvoH,OAAO,CAAC,uBAAD;AAAyBI,QAAAA,iDAAA;;AAAA,sCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAG7BsK,eAH6B,SAAA;AAGd,sBAAA;;;AAAA,oDAAA;;AAAAnK,QAAAA,OAEf0gC,QAFe,GAEf,iBAAA,GAAY;AAAA,mCAAA;;AAER,cAAI,CAAC,KAAKv2B,eAAV,EAA2B;AACvB,iBAAKA,eAAL,GAAuB,KAAKuB,YAAL,CAAkBC,SAAS,CAACC,mBAA5B,CAAvB;;;AAGJ,wCAAKzB,eAAL,SAAA,SAAA,GAAAmiB,sBAAsBxgB,QAAtB,CAA+B,gBAA/B,EAAiD,IAAjD,CAAA;AAEH,SAVc;;AAUd,oCAAA;QAZsCP;;;;;;;;;;;;;;;;;;;;;;;;;;ACH3C,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaqoH,qBAAqB,4CADjCvoH,OAAO,CAAC,uBAAD;AAAyBI,QAAAA,iDAAA;;AAAA,sCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAG7BkK,KAH6B,SAAA;AAGxB,sBAAA;;;AAAA,oDAAA;;AAAA/J,QAAAA,OAEL0gC,QAFK,GAEL,iBAAA,GAAY;AAAA,yBAAA,cAAA;;AAER,cAAI,CAAC,KAAK32B,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,KAAK2B,YAAL,CAAkBinB,SAAlB,CAAb;;;AAGJ,8BAAK5oB,KAAL,SAAA,SAAA,GAAAg+G,YAAYnzG,IAAZ,EAAA;AACA,+BAAK7K,KAAL,SAAA,SAAA,GAAAi+G,aAAYh+G,IAAZ,EAAA;AACH,SAVI;;AAUJ,oCAAA;QAZsCuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF3C,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGawoH,YAAY,mCADxB1oH,OAAO,CAAC,cAAD;AAAgBI,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,gGAAA;;AAAA3d,UAAAA,MAYpB8L,SAZoB,SAAA;AAYX9L,UAAAA,MAETqqG,GAFS,SAAA;AAEN,sBAAA;;;AAAA,2CAAA;;AAAAlqG,QAAAA,OAEH0gC,QAFG,GAEH,iBAAA,GAAY;AAAA,2BAAA;;AAER,cAAI,KAAK/0B,SAAL,KAAmB5K,SAAvB,EACI,KAAK4K,SAAL,GAAiB,KAAKD,YAAL,CAAkBinB,SAAlB,CAAjB;AAEJ,eAAKhnB,SAAL,CAAeiJ,IAAf;AAEA,cAAI,KAAKszG,cAAT,EACI,KAAKh/G,IAAL,CAAUwC,YAAV,CAAuB21D,eAAvB,EAAyCI,KAAzC,GAAiD,IAAIhqC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAjD;AAEJ,cAAI,KAAKyyE,GAAL,KAAanpG,SAAjB,EACI,KAAKmpG,GAAL,GAAW,KAAKx+F,YAAL,CAAkBy3G,MAAlB,CAAX;AAEJ,cAAI,KAAKjZ,GAAT,EAAc,KAAKA,GAAL,CAAS12E,OAAT,GAAmB,KAAnB;AAEdluB,UAAAA,GAAG,CAACD,KAAJC,CAAU,YAAM;AAAA,gCAAA;;AACZ,gBAAGJ,MAAI,CAACyG,SAAL,wBAAkBzG,MAAI,CAACyG,kBAAvB,IAAkBwoE,iBAAgB95B,WAArC,EAAkD;AAC9Cn1C,cAAAA,MAAI,CAACyG,SAAL,CAAe0uC,WAAf,CAA2Br1B,KAA3B,GAAmC9f,MAAI,CAAC8f,KAAxC;;AACA9f,cAAAA,MAAI,CAACyG,SAAL,CAAeiJ,IAAf;;AACA1P,cAAAA,MAAI,CAACyG,SAAL,CAAe3B,IAAf;;AAEP,WAND1E,EAMG,KAAKgoC,UANRhoC;AAQAA,UAAAA,GAAG,CAACD,KAAJC,CAAU,YAAM;AACZ,gBAAIJ,MAAI,CAACglG,GAAT,EAAchlG,MAAI,CAACglG,GAAL,CAAS12E,OAAT,GAAmB,IAAnB;AACjB,WAFDluB,EAEG,CAFHA;AAIH,SA7BE;;AA6BF,2BAAA;QA1C6BiG,kFAE7B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACD,CADC;;qFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACI,CADJ;;yFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACQ,IADR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGa0oH,QAAQ,+BADpB5oH,OAAO,CAAC,UAAD,WASHE,QAAQ,CAACg4B,KAAD;AAAO93B,QAAAA,oCAAA;;AAAA,yBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,qFAAA;;AAAAA,UAAAA,4FAAA;;AAAAA,UAAAA,0FAAA;;AAAA3d,UAAAA,MAGhBohE,OAHgB,GAGW3+D,MAAM,CAACC,MAAPD,CAAc,IAAdA,CAHX;AAG8B,sBAAA;;;AAAA,uCAAA;;AAAAtC,QAAAA,OAE9C0gC,QAF8C,GAE9C,iBAAA,GAAY;AACR,eAAK0nF,gBAAL;AACH,SAJ6C;;AAI7CpoH,QAAAA,OAEDooH,gBAFC,GAED,yBAAA,GAAoB;AAChB,cAAI,KAAKnnD,OAAL,KAAiB,IAArB,EACI,KAAKA,OAAL,GAAe,KAAKv1D,YAAL,CAAkB21D,eAAlB,CAAf;AAEJ,cAAIgnD,UAAU,GAAG,IAAIC,UAAJ,EAAjB;AAEA,eAAKrnD,OAAL,CAAaQ,KAAb,GAAqB,KAAK8mD,UAA1B;AAEAC,UAAAA,KAAK,CAACH,UAAD,CAALG,CAAkB3hC,EAAlB2hC,CAAqB,KAAKpnH,IAA1BonH,EAAgC;AAAE/mD,YAAAA,KAAK,EAAE,KAAKgnD;AAAd,WAAhCD,EAA0D;AACtDv3G,YAAAA,QAAQ,oBAAEuF,QAAe;AACrB,mBAAKyqD,OAAL,CAAaQ,KAAb,GAAqBjrD,MAArB;;AAFkD,WAA1DgyG,EAIG/8G,KAJH+8G;AAKH,SAfA;;AAeAxoH,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B,CAE1B,CAJA;;AAIA,uBAAA;QAlCyB4H,iFAEzB9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACF,CADE;;qFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACW,IAAI4Y,KAAJ,EADX;;;AACsB/Y,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGb,IAAI4Y,KAAJ,EAHa;;;;AA6BlC,UAEK6wF,UAAU;AAAA,aACZ7mD,KADY,SAAA;OAFf;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCD,UAAQliE,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaipH,IAAI,2BADhBnpH,OAAO,CAAC,MAAD;AAAQI,QAAAA,gCAAA;;AAAA,qBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGZ60B,GAHY,GAGe,EAHf;AAGiB,sBAAA;;;AAAA,mCAAA;;AAAA10B,QAAAA,OAE7ByL,KAF6B,GAE7B,cAAA,GAAQ;AAEJ,eAAI,IAAI/K,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKwI,IAAL,CAAUuY,QAAV,CAAmB9gB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,gBAAMm2E,KAAK,GAAG,KAAK3tE,IAAL,CAAUuY,QAAV,CAAmB/gB,CAAnB,CAAd;AACA,iBAAKg0B,GAAL,CAASmiD,KAAK,CAAC/1E,IAAf,IAAuB+1E,KAAvB;;;AAGJ9zE,UAAAA,GAAG,CAACF,EAAJE,CAAO,gBAAPA,EAAyB,KAAKojD,IAAL,CAAUtlC,IAAV,CAAe,IAAf,CAAzB9d;AACAA,UAAAA,GAAG,CAACF,EAAJE,CAAO,iBAAPA,EAA0B,KAAKskD,KAAL,CAAWxmC,IAAX,CAAgB,IAAhB,CAA1B9d;AAEH,SAZ4B;;AAY5B/C,QAAAA,OAEDmmD,IAFC,GAED,aAAA,CAAKrlD,IAAL,EAAkB;AACd,cAAMq0F,MAAM,GAAG,KAAKzgE,GAAL,CAAS5zB,IAAT,CAAf;AACA,cAAGq0F,MAAM,KAAKp0F,SAAd,EAAyBo0F,MAAM,CAAC7jF,MAAP6jF,GAAgB,IAAhBA;AAC5B,SALA;;AAKAn1F,QAAAA,OAEDqnD,KAFC,GAED,cAAA,CAAMvmD,IAAN,EAAmB;AACf,cAAMq0F,MAAM,GAAG,KAAKzgE,GAAL,CAAS5zB,IAAT,CAAf;AACA,cAAGq0F,MAAM,KAAKp0F,SAAd,EAAyBo0F,MAAM,CAAC7jF,MAAP6jF,GAAgB,KAAhBA;AAC5B,SALA;;AAKA,mBAAA;QAxBqB5pF;;;;;;;;;;;;;;;;ACL1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA,UAAQhM,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGakpH,eAAe,sCAD3BppH,OAAO,CAAC,iBAAD,WAGHE,QAAQ,CAAE;AAAE2d,QAAAA,IAAI,EAAC,CAAC08E,WAAD;AAAP,OAAF,WAGRr6F,QAAQ,CAAE;AAAE2d,QAAAA,IAAI,EAAGg2B;AAAT,OAAF;AAAqBzzC,QAAAA,2CAAA;;AAAA,gCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,6FAAA;;AAAAA,UAAAA,wFAAA;;AAAA,sBAAA;;;AAAA,8CAAA;;AAAAxd,QAAAA,OAG9ByL,KAH8B,GAG9B,cAAA,GAAQ;AAEJ,cAAGwV,GAAG,CAACC,QAAJD,KAAiBA,GAAG,CAACE,QAAJF,CAAaG,cAA9BH,IACCA,GAAG,CAACC,QAAJD,KAAiBA,GAAG,CAACE,QAAJF,CAAaI,OAD/BJ,IAECA,GAAG,CAACC,QAAJD,KAAiBA,GAAG,CAACE,QAAJF,CAAaK,GAFlC,EAEwC;AACpC,iBAAK4/F,MAAL,CAAagD,WAAb,GAA2B,KAAK0E,YAAL,CAAkB,CAAlB,CAA3B;AACH,WAJD,MAIM;AACF,iBAAK1H,MAAL,CAAagD,WAAb,GAA2B,KAAK0E,YAAL,CAAkB,CAAlB,CAA3B;;AAGP,SAb6B;;AAa7B,8BAAA;QAlBgCr9G;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGb,EAHa;;;AAGXH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBnC,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaopH,SAAS,gCADrBtpH,OAAO,CAAC,WAAD,WAGHE,QAAQ,CAAColE,KAAD,WAGRplE,QAAQ,CAAC2zC,MAAD;AAAQzzC,QAAAA,qCAAA;;AAAA,0BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,2FAAA;;AAAAA,UAAAA,iGAAA;;AAAA3d,UAAAA,MAGjBipH,QAHiB,GAGN,CAHM;AAGLjpH,UAAAA,MACZkpH,YADY,GACG,CADH;AACIlpH,UAAAA,MAChBmpH,QADgB,GACqB,EADrB;AACuBnpH,UAAAA,MACvCopH,QADuC,SAAA;AAC/BppH,UAAAA,MAER+B,KAFQ,GAEA,CAFA;AAEC/B,UAAAA,MACT+gD,UADS,GACI,CADJ;AACK/gD,UAAAA,MACdqpH,WADc,GACA,EADA;AACErpH,UAAAA,MAEhBspH,SAFgB,GAEJ,KAFI;AAEC,sBAAA;;;AAAA,wCAAA;;AAAAnpH,QAAAA,OAEjByL,KAFiB,GAEjB,cAAA,GAAS;AACL1I,UAAAA,GAAG,CAACF,EAAJE,CAAO,aAAPA,EAAsB,KAAKqmH,UAAL,CAAgBvoG,IAAhB,CAAqB,IAArB,CAAtB9d;AACA,eAAKkmH,QAAL,GAAgB,KAAK//G,IAAL,CAAUuY,QAAV,CAAmB,CAAnB,CAAhB;AACH,SALgB;;AAKhBzhB,QAAAA,OAEDopH,UAFC,GAED,mBAAA,CAAYplH,IAAZ,EAA4B;AACxB,eAAKglH,QAAL,CAAchlH,IAAI,CAACyS,EAAnB,IAAyBzS,IAAzB;AACA,eAAKmlH,SAAL,GAAiB,IAAjB;AACA,eAAKF,QAAL,CAAe33G,MAAf,GAAwB,IAAxB;AACA,eAAKw3G,QAAL,GAAgB,CAAhB;AACH,SAPA;;AAOA9oH,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQC,SAAR,EAA2B;AAEvB,cAAI,CAAC,KAAKwlH,SAAV,EAAqB;AAErB,eAAKE,gBAAL;AACA,eAAKP,QAAL,GAAgB5wG,IAAI,CAAC8E,IAAL9E,CAAU,KAAK4wG,QAAf5wG,EAAyB,KAAK6wG,YAA9B7wG,EAA4CvU,SAA5CuU,CAAhB;AACA,eAAKoxG,UAAL,CAAiBj7C,MAAjB,GAA0B,KAAK66C,WAA/B;AACA,eAAKK,eAAL,CAAsBj2E,SAAtB,GAAkC,KAAKw1E,QAAvC;;AAEA,cAAI,KAAKA,QAAL,IAAiB,MAArB,EAA6B;AACzB,iBAAKU,cAAL;;AAGP,SAfA;;AAeAxpH,QAAAA,OAEDwpH,cAFC,GAED,uBAAA,GAAkB;AACd,eAAKL,SAAL,GAAiB,KAAjB;AACA,eAAKF,QAAL,CAAe33G,MAAf,GAAwB,KAAxB,CAFc;;AAKd,cAAI3I,IAAI,CAACpI,QAALoI,CAAckrC,oBAAdlrC,KAAuC,MAA3C,EACI5F,GAAG,CAACC,IAAJD,CAAS,oBAATA;AAEP,SAVA;;AAUA/C,QAAAA,OAEDqpH,gBAFC,GAED,yBAAA,GAAoB;AAChB,eAAKznH,KAAL,GAAa,CAAb;AACA,eAAKg/C,UAAL,GAAkB,CAAlB,CAFgB;;AAIhB,eAAK,IAAIr2C,CAAT,IAAc,KAAKy+G,QAAnB,EAA6B;AACzB,gBAAMS,OAAO,GAAG,KAAKT,QAAL,CAAcz+G,CAAd,CAAhB;AACA,iBAAK3I,KAAL,IAAc6nH,OAAO,CAAC7nH,KAAtB;AACA,iBAAKg/C,UAAL,IAAmB6oE,OAAO,CAAC7oE,UAA3B;;;;;;;;AAOJ,eAAKmoE,YAAL,GAAoB,CAAC,KAAKnnH,KAAL,GAAa,KAAKg/C,UAAnB,IAAiC,KAAKh/C,KAA1D;AACH,SAjBA;;AAiBA,wBAAA;QAvE0B2J;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;AAAAH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BxC,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaiqH,UAAU,iCADtBnqH,OAAO,CAAC,YAAD;AAAcI,QAAAA,sCAAA;;AAAA,2BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,2FAAA;;AAAAA,UAAAA,2FAAA;;AAAAA,UAAAA,6FAAA;;AAAA3d,UAAAA,MAYlBqgG,QAZkB,GAYP,CAZO;AAYNrgG,UAAAA,MAEZohE,OAFY,SAAA;AAELphE,UAAAA,MAEPkhE,MAFO,GAEQ,IAAItpC,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,CAAzB,CAFR;AAEmC53B,UAAAA,MAE1C8pH,EAF0C,GAE9B,CAF8B;AAE7B9pH,UAAAA,MAEbojH,IAFa,SAAA;AAET,sBAAA;;;AAAA,yCAAA;;AAAAjjH,QAAAA,OAEJyL,KAFI,GAEJ,cAAA,GAAQ;AAEJsH,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBojC,UAAzBpjD,EAAqC,KAAKqjD,WAA1CrjD,EAAuD,IAAvDA;AACAA,UAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBkjC,UAAzBljD,EAAqC,KAAKmjD,WAA1CnjD,EAAuD,IAAvDA;AAEA,eAAKkuD,OAAL,GAAe,KAAKv1D,YAAL,CAAkB21D,eAAlB,CAAf;AACA,eAAKJ,OAAL,CAAcQ,KAAd,GAAsB,KAAKV,MAA3B;AACA,eAAKm/B,QAAL,GAAgB,KAAKxmD,UAArB;AACA,eAAKupE,IAAL,GAAY,KAAKv3G,YAAL,CAAkBy3G,MAAlB,CAAZ;AAEH,SAZG;;AAYHnjH,QAAAA,OAEDoR,SAFC,GAED,kBAAA,GAAY;AACR2B,UAAAA,KAAK,CAAC9P,GAAN8P,CAAUggB,KAAK,CAACC,SAAND,CAAgBojC,UAA1BpjD,EAAsC,KAAKqjD,WAA3CrjD,EAAwD,IAAxDA;AACAA,UAAAA,KAAK,CAAC9P,GAAN8P,CAAUggB,KAAK,CAACC,SAAND,CAAgBkjC,UAA1BljD,EAAsC,KAAKmjD,WAA3CnjD,EAAwD,IAAxDA;AACH,SALA;;AAKA/S,QAAAA,OAEDo2D,WAFC,GAED,oBAAA,CAAYn7B,KAAZ,EAA+B;AAC3B,eAAKilE,QAAL,GAAgB,CAAhB;AACH,SAJA;;AAIAlgG,QAAAA,OAEDk2D,WAFC,GAED,oBAAA,CAAYj7B,KAAZ,EAA+B;AAC3B,eAAKilE,QAAL,GAAgB,CAAhB;AACH,SAJA;;AAIAlgG,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B;AAEtB,eAAKu8F,QAAL,IAAiBv8F,SAAjB;;AAEA,cAAI,KAAKu8F,QAAL,GAAgB,KAAKxmD,UAAzB,EAAqC;AACjC,gBAAI,KAAKqnB,MAAL,CAAY5sB,CAAZ,GAAgB,CAApB,EAAuB;AACnB,kBAAId,KAAK,GAAG1vC,SAAS,GAAG,KAAKimH,WAA7B;AACA,mBAAK7oD,MAAL,CAAY5sB,CAAZ,IAAiBd,KAAjB;AACA,mBAAK4tB,OAAL,CAAcQ,KAAd,GAAsB,KAAKV,MAAL,CAAYlqD,KAAZ,EAAtB;AACA,mBAAKosG,IAAL,CAAWzvF,OAAX,GAAqB,KAArB;;AAEP,WAPD,MAOK;AACD,gBAAI,KAAKutC,MAAL,CAAY5sB,CAAZ,GAAgB,GAApB,EAAyB;AACrB,kBAAId,KAAK,GAAG1vC,SAAS,GAAG,KAAKkmH,SAA7B;AACA,mBAAK9oD,MAAL,CAAY5sB,CAAZ,IAAiBd,KAAjB;AACA,mBAAK4tB,OAAL,CAAcQ,KAAd,GAAsB,KAAKV,MAAL,CAAYlqD,KAAZ,EAAtB;AACA,mBAAKosG,IAAL,CAAWzvF,OAAX,GAAqB,IAArB;;;AAKX,SAvBA;;AAuBA,yBAAA;QAnE2BjoB,uFAE3B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACW,CADX;;oFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACU,GADV;;sFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACY,GADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaqqH,SAAS,gCADrBvqH,OAAO,CAAC,WAAD;AAAaI,QAAAA,qCAAA;;AAAA,0BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAGjBkqH,QAHiB,SAAA;;AAGTvsG,UAAAA,sFAAA;;AAAAA,UAAAA,uFAAA;;AAAA3d,UAAAA,MAQR6hC,IARQ,GAQIhvB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARN;AAQe,sBAAA;;;AAAA,wCAAA;;AAAA1S,QAAAA,OAEvByL,KAFuB,GAEvB,cAAA,GAAQ,CAEP,CAJsB;;AAItBzL,QAAAA,OAED0gC,QAFC,GAED,iBAAA,GAAW;AACP,cAAI,KAAKqpF,QAAL,KAAkBhpH,SAAtB,EAAiC;AAC7B,iBAAKgpH,QAAL,GAAgB,KAAK7gH,IAAL,CAAU4U,QAAV,CAAmBjH,KAAnB,EAAhB;;;AAGJ,eAAK3N,IAAL,CAAUZ,WAAV,CAAsB,KAAKyhH,QAAL,CAAc/8G,CAApC,EAAuC,KAAK+8G,QAAL,CAAc98G,CAArD,EAAwD,KAAK88G,QAAL,CAAc78G,CAAtE;AACA4E,UAAAA,QAAQ,CAACC,IAATD,CAAc,KAAK4vB,IAAnB5vB,EAAyB,KAAKi4G,QAA9Bj4G;AACH,SATA;;AASA9R,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAOC,SAAP,EAA0B;AAEtB,cAAI,KAAK+9B,IAAL,CAAUz0B,CAAV,GAAc,YAAA,EAAWA,CAA7B,EAAgC;AAC5B,iBAAKy0B,IAAL,CAAUz0B,CAAV,IAAetJ,SAAS,GAAG,KAAKqhB,KAAhC;AACA,iBAAK9b,IAAL,CAAUZ,WAAV,CAAsB,KAAKo5B,IAAL,CAAU10B,CAAhC,EAAmC,KAAK00B,IAAL,CAAUz0B,CAA7C,EAAgD,KAAKy0B,IAAL,CAAUx0B,CAA1D;;AAGP,SATA;;AASA,wBAAA;QAhC0B3B,kFAI1B9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACInM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADN;;gFAGRjT;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACM,EADN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVb,UAAQtf,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGauqH,oBAAoB,2CADhCzqH,OAAO,CAAC,sBAAD;AAAwBI,QAAAA,gDAAA;;AAAA,qCAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,sFAAA;;AAAA,sBAAA;;;AAAA,mDAAA;;AAAAxd,QAAAA,OAM5B0gC,QAN4B,GAM5B,iBAAA,GAAW;AAAA,2BAAA;;AACPp7B,UAAAA,GAAG,CAACD,KAAJC,CAAU,YAAI;;;AAIV,gBAAI2kH,MAAM,GAAG/kH,MAAI,CAACgE,IAAL,CAAUwC,YAAV,CAAuBw+G,MAAvB,CAAb;;AACAD,YAAAA,MAAM,CAACz2F,OAAPy2F,GAAiB,KAAjBA;AACAA,YAAAA,MAAM,CAACz2F,OAAPy2F,GAAiB,IAAjBA;AACH,WAPD3kH,EAOE,KAAKD,KAPPC;AAQH,SAf2B;;AAe3B,mCAAA;QAdqCiG,iFAErC9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACD,GADC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC4BApY,EAAE;AAAA9G,QAAAA,8BAAA;;AAAA,mBAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MACHu1B,IADG,GACgC,EADhC;AACkCv1B,UAAAA,MACtCqJ,IADsC,SAAA;AAClCrJ,UAAAA,MACJsqH,SADI,SAAA;AACKtqH,UAAAA,MACTk4B,MADS,SAAA;AACH,sBAAA;;;AAAA,iCAAA;;AAAA/3B,QAAAA,OAENC,IAFM,GAEb,aAAA,GAAe;AAAA,wBAAA,uBAAA;;AACX,eAAKiJ,IAAL,GAAY2H,IAAI,CAAC,aAAD,CAAhB;AAEA,eAAKs5G,SAAL,GAAiBv5G,QAAQ,CAACzH,cAATyH,CAAwB,KAAK1H,IAA7B0H,EAAoC,QAApCA,CAAjB;;AACA,cAAI,KAAK1H,IAAL,KAAcnI,SAAd,IAA2B,KAAKmI,IAAL,IAAa,IAA5C,EAAkD;AAC9C,kBAAM,IAAIhF,KAAJ,+BAAA,CAAN;;;AAEJk0B,UAAAA,QAAQ,CAACsV,kBAATtV,CAA4B,KAAKlvB,IAAjCkvB;AACAr1B,UAAAA,GAAG,CAACF,EAAJE,CAAO,YAAPA,EAAqB,KAAKq/C,OAAL,CAAavhC,IAAb,CAAkB,IAAlB,CAArB9d;AAEA,cAAMqnH,SAAS,GAAG,CAAC,UAAD,EAAa,cAAb,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,kBAAnD,EAAuE,aAAvE,CAAlB;;AAEA,eAAK,IAAI1pH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0pH,SAAS,CAACzpH,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,iBAAK40D,IAAL,CAAU80D,SAAS,CAAC1pH,CAAD,CAAnB;;;AAGJ,eAAKq3B,MAAL,iBAAc,KAAK7uB,kDAALqI,WAAWpI,cAAX,CAA0B,QAA1B,sBAAAkhH,sBAAqC3+G,YAArC,CAAkD01B,MAAlD,CAAd;AACH,SAnBY;;AAmBZphC,QAAAA,OAEMoiD,OAFN,GAED,gBAAA,GAAkB;AACd,eAAK,IAAI1gD,GAAT,IAAgB,KAAK0zB,IAArB,EAA2B;AACvB,iBAAKA,IAAL,CAAU1zB,GAAV,EAAe0gD,OAAf;;AAEP,SANA;;AAMApiD,QAAAA,OAEMs1D,IAFN,GAED,aAAA,CAAax0D,IAAb,EAA2B;AACvB,cAAMiH,KAAK,GAAGtF,QAAQ,CAAClC,QAATkC,CAAkBuF,SAAlBvF,CAA4B3B,IAA5B2B,CAAd;;AACA,cAAIsF,KAAJ,EAAW;AACP,gBAAMuiH,KAAK,GAAGpiH,GAAG,CAACC,IAAJD,CAASH,KAATG,EAAgBzB,EAAE,CAAClG,QAAHkG,CAAY0jH,SAA5BjiH,CAAd;AACA,gBAAMqiH,KAAK,GAAGpqH,YAAY,CAACC,KAAbD,CAAmBqqH,QAAnBrqH,CAA4BW,IAA5BX,CAAd;AACAmqH,YAAAA,KAAK,CAAChiH,WAANgiH,CAAkB,CAAlBA,EAAqB,CAArBA,EAAwBC,KAAxBD;AACA,gBAAI9qF,GAAG,GAAG,KAAV;AACA,gBAAI59B,KAAK,GAAG6E,EAAE,CAAClG,QAAHkG,CAAY0jH,SAAZ1jH,CAAsBgb,QAAtBhb,CAA+B9F,MAA3C;;AACA,iBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,kBAAIm2E,KAAK,GAAG,KAAKszC,SAAL,CAAgB1oG,QAAhB,CAAyB/gB,CAAzB,CAAZ;;AACA,kBAAIm2E,KAAK,CAAC/4D,QAAN+4D,CAAe3pE,CAAf2pE,GAAmB0zC,KAAvB,EAA8B;AAC1B,oBAAIC,QAAQ,GAAG9pH,CAAf;AACA4pH,gBAAAA,KAAK,CAAC1D,eAAN0D,CAAsBE,QAAtBF;AACA9qF,gBAAAA,GAAG,GAAG,IAANA;AACA;;;;AAGR,gBAAI,CAACA,GAAL,EAAU8qF,KAAK,CAAC1D,eAAN0D,CAAsB1oH,KAAtB0oH;AACV,gBAAMG,MAAM,GAAG,IAAI9I,MAAJ,CAAW2I,KAAX,CAAf;AACAG,YAAAA,MAAM,CAAC5nH,EAAP4nH;AACA,iBAAKr1F,IAAL,CAAUt0B,IAAV,IAAkB2pH,MAAlB;AACAA,YAAAA,MAAM,CAACxnH,GAAPwnH,GAnBO;AAqBV,WArBD,MAqBO;AACH77C,YAAAA,GAAG,CAACvrE,IAAJurE,CAAS,wBAAwB9tE,IAAjC8tE;;AAEP,SA5BA;;AA4BA5uE,QAAAA,OAEM6C,EAFN,GAED,WAAA,CAAW/B,IAAX,EAAyB;AAAA,2BAAA;;AAErB,cAAIw0D,IAAI;AAAA,kFAAG,gBAAA;AAAA,uBAAA;AAAA;AAAA,wBAAA;AAAA,wBAAA;AACDg1D,oBAAAA,KAAK,GAAGplH,MAAI,CAACkwB,IAAL,CAAUt0B,IAAV,CAARwpH;;AACN,wBAAIA,KAAJ,EAAW;AACPA,sBAAAA,KAAK,CAACznH,EAANynH;AACH,qBAFD,MAEO;AACHpiH,sBAAAA,GAAG,CAAC6tF,UAAJ7tF,CAAe,QAAQpH,IAAvBoH,EAA6B,UAACyoC,GAAD,EAAM5oC,KAAN,EAAgB;AACzC,4BAAIA,KAAJ,EAAW;AACP,8BAAMuiH,MAAK,GAAGpiH,GAAG,CAACC,IAAJD,CAASH,KAATG,EAAgBzB,EAAE,CAAClG,QAAHkG,CAAY0jH,SAA5BjiH,CAAd;;AACA,8BAAMqiH,KAAK,GAAGpqH,YAAY,CAACC,KAAbD,CAAmBqqH,QAAnBrqH,CAA4BW,IAA5BX,CAAd;;AACAmqH,0BAAAA,MAAK,CAAChiH,WAANgiH,CAAkB,CAAlBA,EAAqB,CAArBA,EAAwBC,KAAxBD;;AACA,8BAAI9qF,GAAG,GAAG,KAAV;AACA,8BAAI59B,KAAK,GAAG6E,EAAE,CAAClG,QAAHkG,CAAY0jH,SAAZ1jH,CAAsBgb,QAAtBhb,CAA+B9F,MAA3C;;AACA,+BAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,gCAAIm2E,KAAK,GAAG3xE,MAAI,CAACilH,SAAL,CAAgB1oG,QAAhB,CAAyB/gB,CAAzB,CAAZ;;AACA,gCAAIm2E,KAAK,CAAC/4D,QAAN+4D,CAAe3pE,CAAf2pE,GAAmB0zC,KAAvB,EAA8B;AAC1B,kCAAIC,QAAQ,GAAG9pH,CAAf;;AACA4pH,8BAAAA,MAAK,CAAC1D,eAAN0D,CAAsBE,QAAtBF;;AACA9qF,8BAAAA,GAAG,GAAG,IAANA;AACA;;;;AAGR,8BAAI,CAACA,GAAL,EAAU8qF,MAAK,CAAC1D,eAAN0D,CAAsB1oH,KAAtB0oH;AACV,8BAAMG,MAAM,GAAG,IAAI9I,MAAJ,CAAW2I,MAAX,CAAf;AACAG,0BAAAA,MAAM,CAAC5nH,EAAP4nH;AACAvlH,0BAAAA,MAAI,CAACkwB,IAAL,CAAUt0B,IAAV,IAAkB2pH,MAAlB;AACH,yBAnBD,MAmBO;AACH77C,0BAAAA,GAAG,CAACvrE,IAAJurE,CAAS,wBAAwB9tE,IAAjC8tE;;AAEP,uBAvBD1mE;;;AAwBH,wBAAA;AAAA,4BAAA;AAAA,0CAAA;;yBA7BM;AA8BV,eA9BO;;AA8BP,4BA9BGotD;AAAI,gDAAA;aA8BP;aA9BD;;AA+BAA,UAAAA,IAAI;AACP,SApCA;;AAoCAt1D,QAAAA,OAEMiD,GAFN,GAED,YAAA,CAAYnC,IAAZ,EAA0B;AACtB,cAAMwpH,KAAK,GAAG,KAAKl1F,IAAL,CAAUt0B,IAAV,CAAd;;AACA,cAAIwpH,KAAJ,EAAW;AACPA,YAAAA,KAAK,CAACrnH,GAANqnH;AACH,WAFD,MAEO;AACH17C,YAAAA,GAAG,CAACvrE,IAAJurE,CAAS,oDAAoD9tE,IAA7D8tE;;AAEP,SATA;;AASA5uE,QAAAA,OAEMwS,OAFN,GAED,gBAAA,CAAgB1R,IAAhB,EAA8B;AAC1B,cAAMwpH,KAAK,GAAG,KAAKl1F,IAAL,CAAUt0B,IAAV,CAAd;;AACA,cAAIwpH,KAAJ,EAAW;AACPA,YAAAA,KAAK,CAAC93G,OAAN83G;AACA,iBAAKl1F,IAAL,CAAUt0B,IAAV,IAAkBC,SAAlB;AACH,WAHD,MAGO;AACH6tE,YAAAA,GAAG,CAACvrE,IAAJurE,CAAS,yDAAyD9tE,IAAlE8tE;;AAEP,SAVA;;AAUA,iBAAA;QAhHmB3sE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BxB,UAAQ1C,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAEaw1D,IAAI;AAAA,qBAAA;;AAAAA,QAAAA,KAECy1D,UAFD,GAEb,mBAAA,CAA0BzpH,KAA1B,EAAyCoyC,KAAzC,EAAwDruB,KAAxD,EAAuE05B,GAAvE,EAAoF3hC,GAApF,EAAyG;AAErG9b,UAAAA,KAAK,IAAIoyC,KAAK,GAAGruB,KAAjB/jB;AACA,cAAIA,KAAK,GAAGy9C,GAAZ,EAAiBz9C,KAAK,GAAGy9C,GAARz9C;AACjB,cAAIA,KAAK,GAAG8b,GAAZ,EAAiB9b,KAAK,GAAG8b,GAAR9b;AACjB,iBAAOA,KAAP;AAEH,SATY;;AASZg0D,QAAAA,KAGa01D,oBAHb,GAGD,6BAAA,CAAoCC,OAApC,EAA6D;AAEzD,cAAI71F,KAAK,GAAG,CAAZ;AACA,cAAI81F,KAAK,GAAG,CAAZ;AACA,cAAI9tG,GAAG,GAAG,CAAV;;AAEA,eAAK,IAAIrc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkqH,OAAO,CAACjqH,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,gBAAI,CAACkqH,OAAO,CAAClqH,CAAD,CAAPkqH,CAAW1hH,IAAX0hH,CAAgBt5G,MAArB,EAA6B;AAC7B,gBAAItE,CAAC,GAAG49G,OAAO,CAAClqH,CAAD,CAAPkqH,CAAW78E,KAAX68E,CAAkB/nE,WAAlB+nE,CAA8B7nE,WAA9B6nE,CAA0C59G,CAA1C49G,GAA8CA,OAAO,CAAClqH,CAAD,CAAPkqH,CAAW1hH,IAAX0hH,CAAgB3oF,KAAhB2oF,CAAsB59G,CAA5E;;AACA,gBAAIA,CAAC,GAAG+nB,KAAR,EAAe;AACXA,cAAAA,KAAK,GAAG/nB,CAAR+nB;;;AAGJ,gBAAI9nB,CAAC,GAAG29G,OAAO,CAAClqH,CAAD,CAAPkqH,CAAW78E,KAAX68E,CAAkB/nE,WAAlB+nE,CAA8B7nE,WAA9B6nE,CAA0C39G,CAA1C29G,GAA8CA,OAAO,CAAClqH,CAAD,CAAPkqH,CAAW1hH,IAAX0hH,CAAgB3oF,KAAhB2oF,CAAsB39G,CAA5E;;AACA,gBAAIA,CAAC,GAAG49G,KAAR,EAAe;AACXA,cAAAA,KAAK,GAAG59G,CAAR49G;;;;AAIR9tG,UAAAA,GAAG,GAAGgY,KAAK,GAAG81F,KAAR91F,GAAgBA,KAAhBA,GAAwB81F,KAA9B9tG;AAEA,iBAAO;AAAE/P,YAAAA,CAAC,EAAE+nB,KAAL;AAAY9nB,YAAAA,CAAC,EAAE49G,KAAf;AAAsB9tG,YAAAA,GAAG,EAAEA;AAA3B,WAAP;AACH,SAzBA;;AAyBAk4C,QAAAA,KAEaC,aAFb,GAED,sBAAA,CAA4BC,KAA5B,EAAmD;AAC/C,cAAIhoD,IAAI,GAAG,CAAX;;AACA,eAAI,IAAIzM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGy0D,KAAK,CAACx0D,MAAzB,EAAiCD,CAAC,EAAlC,EACIyM,IAAI,GAAGA,IAAI,GAAG,KAAKgoD,KAAK,CAACz0D,CAAD,CAAxByM;;AAEJ,iBAAOA,IAAP;AACH,SARA;;AAQA,mBAAA;;UAIQ29G,OAAO;AAAA,wBAAA;;AAAAA,QAAAA,QAEFC,KAFE,GAEhB,cAAA,CAAqBvmD,GAArB,EAAkCh2D,KAAlC,EAA4D;AACxD,cAAM5M,KAAK,GAAG4M,KAAK,CAAC7N,MAApB;;AACA,eAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,gBAAIqsC,CAAC,GAAGv+B,KAAK,CAAC9N,CAAD,CAAb;;AACA,gBAAI8jE,GAAG,KAAKz3B,CAAZ,EAAe;AACX,qBAAO,IAAP;;;;AAGR,iBAAO,KAAP;AACH,SAXe;;AAWf+9E,QAAAA,QAEaE,OAFb,GAED,gBAAA,CAAuBxmD,GAAvB,EAAoCh2D,KAApC,EAA8D;AAC1D,cAAM5M,KAAK,GAAG4M,KAAK,CAAC7N,MAApB;;AACA,eAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,gBAAMqsC,CAAC,GAAGv+B,KAAK,CAAC9N,CAAD,CAAf;;AACA,gBAAI8jE,GAAG,CAAC7mB,QAAJ6mB,CAAaz3B,CAAby3B,CAAJ,EAAqB;AACjB,qBAAO,IAAP;;;;AAGR,iBAAO,KAAP;AACH,SAXA;;AAWAsmD,QAAAA,QAEaG,eAFb,GAED,wBAAA,CAA+Bz8G,KAA/B,EAAgDy3B,GAAhD,EAA0E;AAAA,cAA1BA,GAAW,WAAe;AAA1BA,YAAAA,GAAW,GAAG,CAAC,CAAfA;;;AAC5C,cAAMrkC,KAAK,GAAGqkC,GAAG,KAAK,CAAC,CAATA,GAAaz3B,KAAK,CAAC7N,MAAnBslC,GAA4BA,GAA1C;AACA,cAAMhiC,GAAG,GAAG8G,cAAc,CAAC,CAAD,EAAInJ,KAAJ,CAA1B;AACA,iBAAO4M,KAAK,CAACvK,GAAD,CAAZ;AACH,SANA;;AAMA,sBAAA;;UAIQinH,YAAY;AAAA,6BAAA;;AAAAA,QAAAA,aAEPC,QAFO,GAErB,iBAAA,CAAwBjiH,IAAxB,EAAoCu4D,KAApC,EAAkD;AAAA,kCAAA;;AAC9C,cAAM5lB,UAAU,GAAG3yC,IAAI,CAACwC,YAALxC,CAAkB2kC,YAAlB3kC,CAAnB;AACA2yC,UAAAA,UAAU,QAAVA,SAAAA,2BAAAA,UAAU,CAAEzf,6BAAZgvF,qBAAsBtrF,WAAtB,CAAkC,WAAlC,EAA+C2hC,KAA/C,CAAA5lB;AACH,SALoB;;AAKpB,2BAAA;;UAIQ/pC,QAAQ;AAAA,yBAAA;;AAAAA,QAAAA,SAEH44G,UAFG,GAEjB,mBAAA,CAA0BW,GAA1B,EAAqCh4E,KAArC,EAAkDruB,KAAlD,EAAiE05B,GAAjE,EAA4E3hC,GAA5E,EAAuF;AAEnFsuG,UAAAA,GAAG,CAACr+G,CAAJq+G,GAAQp2D,IAAI,CAACy1D,UAALz1D,CAAgBo2D,GAAG,CAACr+G,CAApBioD,EAAuB5hB,KAAK,CAACrmC,CAA7BioD,EAAgCjwC,KAAhCiwC,EAAuCvW,GAAG,CAAC1xC,CAA3CioD,EAA8Cl4C,GAAG,CAAC9P,CAAlDgoD,CAARo2D;AACAA,UAAAA,GAAG,CAACp+G,CAAJo+G,GAAQp2D,IAAI,CAACy1D,UAALz1D,CAAgBo2D,GAAG,CAACp+G,CAApBgoD,EAAuB5hB,KAAK,CAACpmC,CAA7BgoD,EAAgCjwC,KAAhCiwC,EAAuCvW,GAAG,CAACzxC,CAA3CgoD,EAA8Cl4C,GAAG,CAAC9P,CAAlDgoD,CAARo2D;AACAA,UAAAA,GAAG,CAACn+G,CAAJm+G,GAAQp2D,IAAI,CAACy1D,UAALz1D,CAAgBo2D,GAAG,CAACn+G,CAApB+nD,EAAuB5hB,KAAK,CAACnmC,CAA7B+nD,EAAgCjwC,KAAhCiwC,EAAuCvW,GAAG,CAACxxC,CAA3C+nD,EAA8Cl4C,GAAG,CAAC7P,CAAlD+nD,CAARo2D;AAEH,SARgB;;AAQhBv5G,QAAAA,SAEaC,IAFb,GAED,aAAA,CAAoBoiC,CAApB,EAA6BoJ,CAA7B,EAAuC;AACnCpJ,UAAAA,CAAC,CAACnnC,CAAFmnC,GAAMoJ,CAAC,CAACvwC,CAARmnC;AACAA,UAAAA,CAAC,CAAClnC,CAAFknC,GAAMoJ,CAAC,CAACtwC,CAARknC;AACAA,UAAAA,CAAC,CAACjnC,CAAFinC,GAAMoJ,CAAC,CAACrwC,CAARinC;AACH,SANA;;AAMAriC,QAAAA,SAEasjD,cAFb,GAED,uBAAA,CAA6BjhB,CAA7B,EAAsCrxB,SAAtC,EAAuDmf,KAAvD,EAAqE;AACjEkS,UAAAA,CAAC,CAACnnC,CAAFmnC,IAAOrxB,SAAS,CAAC9V,CAAV8V,GAAcmf,KAArBkS;AACAA,UAAAA,CAAC,CAAClnC,CAAFknC,IAAOrxB,SAAS,CAAC7V,CAAV6V,GAAcmf,KAArBkS;AACAA,UAAAA,CAAC,CAACjnC,CAAFinC,IAAOrxB,SAAS,CAAC5V,CAAV4V,GAAcmf,KAArBkS;AACH,SANA;;AAMAriC,QAAAA,SAEaw5G,cAFb,GAED,uBAAA,CAA6B90G,MAA7B,EAA2C7V,MAA3C,EAA0D;AAEtD,cAAG6V,MAAM,CAAC7V,MAAP6V,KAAkB7V,MAArB,EAA6B;AACzB6V,YAAAA,MAAM,CAACW,SAAPX,GAAmBuB,cAAnBvB,CAAkC7V,MAAlC6V;;AAGP,SARA;;AAQA,uBAAA;;UAIQ6/C,QAAQ;AAAA,yBAAA;;AAAAA,QAAAA,SAEHq0D,UAFG,GAEjB,mBAAA,CAA0BW,GAA1B,EAAqCh4E,KAArC,EAAkDruB,KAAlD,EAAiE05B,GAAjE,EAA4E3hC,GAA5E,EAAuF;AAEnFsuG,UAAAA,GAAG,CAACr+G,CAAJq+G,GAAQp2D,IAAI,CAACy1D,UAALz1D,CAAgBo2D,GAAG,CAACr+G,CAApBioD,EAAuB5hB,KAAK,CAACrmC,CAA7BioD,EAAgCjwC,KAAhCiwC,EAAuCvW,GAAG,CAAC1xC,CAA3CioD,EAA8Cl4C,GAAG,CAAC9P,CAAlDgoD,CAARo2D;AACAA,UAAAA,GAAG,CAACp+G,CAAJo+G,GAAQp2D,IAAI,CAACy1D,UAALz1D,CAAgBo2D,GAAG,CAACp+G,CAApBgoD,EAAuB5hB,KAAK,CAACpmC,CAA7BgoD,EAAgCjwC,KAAhCiwC,EAAuCvW,GAAG,CAACzxC,CAA3CgoD,EAA8Cl4C,GAAG,CAAC9P,CAAlDgoD,CAARo2D;AAEH,SAPgB;;AAOhBh1D,QAAAA,SAEa9X,CAFb,GAED,UAAA,CAAiBpK,CAAjB,EAA0BoJ,CAA1B,EAAmC;AAC/BpJ,UAAAA,CAAC,CAACnnC,CAAFmnC,GAAMoJ,CAAC,CAACvwC,CAARmnC;AACAA,UAAAA,CAAC,CAAClnC,CAAFknC,GAAMoJ,CAAC,CAACtwC,CAARknC;AACH,SALA;;AAKA,uBAAA;;UAGQ2qD,SAAS;AAAA,0BAAA;;AAAAA,QAAAA,UAEJnmD,MAFI,GAElB,eAAA,CAAyB2nD,KAAzB,EAAqC5+F,GAArC,EAAmD;AAC/C,cAAMyN,KAAK,GAAGmxF,KAAK,CAAClhC,OAANkhC,CAAc5+F,GAAd4+F,EAAmB,CAAnBA,CAAd;;AACA,cAAInxF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdmxF,YAAAA,KAAK,CAAC37F,MAAN27F,CAAanxF,KAAbmxF,EAAoB,CAApBA;;AAEP,SAPiB;;AAOjBxB,QAAAA,UAEa7+F,IAFb,GAED,aAAA,CAAoBgmC,GAApB,EAAiChlC,KAAjC,EAAoD;AAAA,cAAnBA,KAAa,WAAM;AAAnBA,YAAAA,KAAa,GAAG,CAAhBA;;;AAC7B,cAAIkzC,CAAC,GAAG,EAAR;;AACA,eAAK,IAAIzzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGulC,GAApB,EAAyBvlC,CAAC,EAA1B,EACIyzC,CAAC,CAACrxC,IAAFqxC,CAAOlzC,KAAPkzC;;AACJ,iBAAOA,CAAP;AACH,SAPA;;AAOA2qD,QAAAA,UAEaysB,MAFb,GAED,eAAA,CAAsBC,EAAtB,EAAkCh5E,EAAlC,EAA8CC,EAA9C,EAAwE;AACpE,cAAI6tD,KAAK,GAAG,EAAZ;;AACA,eAAK,IAAI5/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8qH,EAApB,EAAwB9qH,CAAC,EAAzB,EAA6B;AACzB,gBAAI+qH,EAAE,GAAG,EAAT;;AACA,iBAAK,IAAIn2F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkd,EAApB,EAAwBld,CAAC,EAAzB,EAA6B;AACzB,kBAAIo2F,EAAE,GAAG,EAAT;;AACA,mBAAK,IAAInhH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkoC,EAApB,EAAwBloC,CAAC,EAAzB,EAA6B;AACzBmhH,gBAAAA,EAAE,CAAC5oH,IAAH4oH,CAAQ,CAARA;;;AAEJD,cAAAA,EAAE,CAAC3oH,IAAH2oH,CAAQC,EAARD;;;AAEJnrB,YAAAA,KAAK,CAACx9F,IAANw9F,CAAWmrB,EAAXnrB;;;AAEJ,iBAAOA,KAAP;AACH,SAhBA;;AAgBAxB,QAAAA,UAEa6sB,OAFb,GAED,gBAAA,CAAuBx3E,CAAvB,EAAwClzC,KAAxC,EAA2D;AAAA,cAAnBA,KAAa,WAAM;AAAnBA,YAAAA,KAAa,GAAG,CAAhBA;;;AACpC,cAAMuqH,EAAE,GAAGr3E,CAAC,CAACxzC,MAAb;AACA,cAAM6xC,EAAE,GAAG2B,CAAC,CAAC,CAAD,CAADA,CAAKxzC,MAAhB;AACA,cAAM8xC,EAAE,GAAG0B,CAAC,CAAC,CAAD,CAADA,CAAK,CAALA,EAAQxzC,MAAnB;;AACA,eAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8qH,EAApB,EAAwB9qH,CAAC,EAAzB,EAA6B;AACzB,iBAAK,IAAI40B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkd,EAApB,EAAwBld,CAAC,EAAzB,EAA6B;AACzB,mBAAK,IAAI/qB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkoC,EAApB,EAAwBloC,CAAC,EAAzB,EAA6B;AACzB4pC,gBAAAA,CAAC,CAACzzC,CAAD,CAADyzC,CAAK7e,CAAL6e,EAAQ5pC,CAAR4pC,IAAalzC,KAAbkzC;;;;AAIf,SAbA;;AAaA2qD,QAAAA,UAEa8sB,QAFb,GAED,iBAAA,CAAwBz3E,CAAxB,EAAqCoJ,CAArC,EAAkD;AAC9C,eAAK,IAAI78C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG68C,CAAC,CAAC58C,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/ByzC,YAAAA,CAAC,CAACrxC,IAAFqxC,CAAOoJ,CAAC,CAAC78C,CAAD,CAARyzC;;AAEP,SANA;;AAMA,wBAAA;;UAIQvjC,QAAQ;AAAA,yBAAA;;AAAAA,QAAAA,SAEHzH,cAFG,GAEjB,uBAAA,CAA6BD,IAA7B,EAAwCpI,IAAxC,EAA2D;AACvD,cAAM+1E,KAAK,GAAG3tE,IAAI,CAACC,cAALD,CAAoBpI,IAApBoI,CAAd;AACA,cAAI2tE,KAAK,KAAK,IAAd,EAAoB,MAAM,IAAI3yE,KAAJ,CAAagF,IAAI,CAACpI,IAALoI,8BAAAA,GAAqCpI,IAArCoI,MAAb,CAAN;AACpB,iBAAO2tE,KAAP;AACH,SANgB;;AAMhBjmE,QAAAA,SAEalF,YAFb,GAED,qBAAA,CAAgDxC,IAAhD,EAA2DkU,IAA3D,EAAkF;AAC9E,cAAMyuG,SAAS,GAAG3iH,IAAI,CAACwC,YAALxC,CAAkBkU,IAAlBlU,CAAlB;AACA,cAAG2iH,SAAS,KAAK,IAAjB,EAAuB,MAAM,IAAI3nH,KAAJ,CAAagF,IAAI,CAACpI,IAALoI,qBAAAA,GAA4BpI,IAA5BoI,MAAb,CAAN;AACvB,iBAAO2iH,SAAP;AACH,SANA;;AAMAj7G,QAAAA,SAEamV,iBAFb,GAED,0BAAA,CAAqD7c,IAArD,EAAgEpI,IAAhE,EAA6Esc,IAA7E,EAAsG;AAClG,cAAMy5D,KAAK,GAAG,KAAK1tE,cAAL,CAAoBD,IAApB,EAA0BpI,IAA1B,CAAd;AACA,iBAAO,KAAK4K,YAAL,CAAkBmrE,KAAlB,EAAyBz5D,IAAzB,CAAP;AACH,SALA;;AAKAxM,QAAAA,SAEagyG,WAFb,GAED,oBAAA,CAA2B15G,IAA3B,EAA+C;AAC3C,cAAI4iH,EAAU,GAAG,EAAjB;;AACA,cAAIj7G,IAAI,GAAG,SAAPA,IAAO,CAAC3H,IAAD,EAAgB;AACvB4iH,YAAAA,EAAE,CAAChpH,IAAHgpH,CAAQ5iH,IAAR4iH;AACA5iH,YAAAA,IAAI,CAACuY,QAALvY,CAAckpB,OAAdlpB,CAAsB,UAAAxE,OAAA,EAAW;AAC7B,kBAAIA,OAAO,CAAC+c,QAAZ,EAAsB;AAClB5Q,gBAAAA,IAAI,CAACnM,OAAD,CAAJmM;;AAEP,aAJD3H;AAKH,WAPD;;AAQA2H,UAAAA,IAAI,CAAC3H,IAAD,CAAJ2H;AACA,iBAAOi7G,EAAP;AACH,SAdA;;AAcAl7G,QAAAA,SAEaC,IAFb,GAED,aAAA,CAAoB3H,IAApB,EAAgCpI,IAAhC,EAAoD;AAEhD,cAAIs1C,CAAO,GAAG9zC,MAAM,CAACC,MAAPD,CAAc,IAAdA,CAAd;;AACA,cAAIuO,IAAI,GAAG,SAAPA,IAAO,CAAC3H,IAAD,EAAapI,IAAb,EAA8B;AACrC,gBAAIoI,IAAI,CAACpI,IAALoI,KAAcpI,IAAlB,EAAwB;AACpBs1C,cAAAA,CAAC,GAAGltC,IAAJktC;AACA;;;AAEJltC,YAAAA,IAAI,CAACuY,QAALvY,CAAckpB,OAAdlpB,CAAsB,UAAAxE,OAAA,EAAW;AAC7B,kBAAIA,OAAO,CAAC+c,QAAZ,EAAsB;AAClB5Q,gBAAAA,IAAI,CAACnM,OAAD,EAAU5D,IAAV,CAAJ+P;;AAEP,aAJD3H;AAKH,WAVD;;AAWA2H,UAAAA,IAAI,CAAC3H,IAAD,EAAOpI,IAAP,CAAJ+P;AACA,iBAAOulC,CAAP;AAEH,SAnBA;;AAmBAxlC,QAAAA,SAEa2K,qBAFb,GAED,8BAAA,CAAqCrS,IAArC,EAAiD6iH,QAAjD,EAAuF;AACnF,cAAIr3F,GAAwB,GAAG,EAA/B;;AACA,cAAI7jB,IAAI,GAAG,SAAPA,IAAO,CAAC3H,IAAD,EAAgB;AACvB,gBAAIA,IAAI,CAACpI,IAALoI,CAAUqe,MAAVre,CAAiB6iH,QAAjB7iH,CAAJ,EAAgC;AAC5BwrB,cAAAA,GAAG,CAACxrB,IAAI,CAACpI,IAAN,CAAH4zB,GAAiBxrB,IAAjBwrB;;;AAEJA,YAAAA,GAAG,CAACxrB,IAAI,CAACpI,IAAN,CAAH4zB,GAAiBxrB,IAAjBwrB;AACAxrB,YAAAA,IAAI,CAACuY,QAALvY,CAAckpB,OAAdlpB,CAAsB,UAAAxE,OAAA,EAAW;AAC7B,kBAAIA,OAAO,CAAC+c,QAAZ,EAAsB;AAClB5Q,gBAAAA,IAAI,CAACnM,OAAD,CAAJmM;;AAEP,aAJD3H;AAKH,WAVD;;AAWA2H,UAAAA,IAAI,CAAC3H,IAAD,CAAJ2H;AAEA,iBAAO6jB,GAAP;AACH,SAlBA;;AAkBA9jB,QAAAA,SAEao7G,kBAFb,GAED,2BAAA,CAAsD9iH,IAAtD,EAAwEkU,IAAxE,EAA6G;AACzG,cAAGlU,IAAI,KAAK,IAAZ,EAAkB;AACd,mBAAOnI,SAAP;;;AAEJ,cAAM8qH,SAAS,GAAG3iH,IAAI,QAAJA,SAAAA,GAAAA,IAAI,CAAEwC,YAANxC,CAAmBkU,IAAnBlU,CAAlB;AACA,cAAG2iH,SAAS,KAAK,IAAjB,EACI,OAAOA,SAAP;AAEJ,iBAAO,KAAKG,kBAAL,CAAwB9iH,IAAI,CAACT,MAA7B,EAAqC2U,IAArC,CAAP;AACH,SAXA;;AAWAxM,QAAAA,SAIa4wF,mBAJb,GAID,4BAAA,CAAkCt4F,IAAlC,EAA8C;AAC1CA,UAAAA,IAAI,CAAC6nB,gBAAL7nB,CAAsB,KAAK+iH,cAA3B/iH;;AACA,eAAK+iH,cAAL,CAAoBC,cAApB,CAAmC,KAAK/pG,MAAxC;;AACA,iBAAO,KAAKA,MAAZ;AACH,SARA;;AAQA,uBAAA;;AAvFQvR,MAAAA,QAAQ,CAiFVq7G,cAjFEr7G,GAiFoB,IAAI8d,IAAJ,EAjFpB9d;AAAAA,MAAAA,QAAQ,CAkFVuR,MAlFEvR,GAkFY8B,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAlFd9B;UA2FAu7G,OAAO;AAAA,wBAAA;;AAAAA,QAAAA,QACF1qG,QADE,GAChB,iBAAA,CAAwBvY,IAAxB,EAAoC;AAChC,cAAI5F,IAAI,GAAM4F,IAAI,CAACpI,IAALoI,MAAAA,GAAaA,IAAI,CAACuY,QAALvY,CAAcvI,MAA3BuI,MAAd;AACAA,UAAAA,IAAI,CAACuY,QAALvY,CAAckpB,OAAdlpB,CAAsB,UAAAktC,CAAA,EAAK;AACvB9yC,YAAAA,IAAI,IAAO8yC,CAAC,CAACt1C,IAAFs1C,MAAX9yC;AACH,WAFD4F;AAGA9F,UAAAA,OAAO,CAAC6G,GAAR7G,CAAYE,IAAZF;AACH,SAPe;;AAOf,sBAAA;;;AAIE,eAASgpH,OAAT,CAAkBC,QAAlB,EAAoC;AACvC,eAAO,IAAI97E,OAAJ,CAAkB,UAACC,OAAD,EAAa;AAClC/c,UAAAA,UAAU,CAAC,YAAM;AACb+c,YAAAA,OAAO;AACV,WAFS,EAEP67E,QAAQ,GAAG,MAFJ,CAAV54F;AAGH,SAJM,CAAP;;;UAQS64F,SAAS;AAAA,0BAAA;;AAAAA,QAAAA,UAEJC,MAFI,GAElB,eAAA,CAAsBznD,MAAtB,EAAwC/3B,CAAxC,EAAmD;AAE/C,cAAI9G,GAAG,GAAG6+B,MAAM,CAACnkE,MAAPmkE,GAAgB,CAA1B;AAEH,SANiB;;AAMjBwnD,QAAAA,UAEaE,SAFb,GAED,kBAAA,CAAyBx9D,CAAzB,EAAoChiD,CAApC,EAA+CC,CAA/C,EAA0DC,CAA1D,EAAqEu/G,EAArE,EAAiFC,EAAjF,EAA6FC,EAA7F,EAAyGrvE,CAAzG,EAAoH1D,OAApH,EAAqI;AAEjI,cAAIkrB,MAAgB,GAAG,EAAvB,CAFiI;;AAKjI,cAAI3jE,SAAS,GAAGoW,IAAI,CAACgvE,IAALhvE,CAAU,IAAIy3C,CAAJ,GAAQ1R,CAAlB/lC,CAAhB;AACA,cAAIq1G,SAAS,GAAGzrH,SAAS,GAAGy4C,OAA5B,CANiI;;;;;AAYjI,cAAIizE,QAAQ,GAAG,CAAf;;AACA,eAAK,IAAInsH,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIk5C,OAArB,EAA8Bl5C,CAAC,EAA/B,EAAmC;AAC/B,gBAAIosH,EAAE,GAAGL,EAAE,GAAGI,QAALJ,GAAgBz/G,CAAzB;AACA,gBAAI+/G,EAAE,GAAGJ,EAAE,GAAGE,QAALF,GAAgBz/G,CAAzB;AACA,gBAAI8/G,EAAE,GAAGN,EAAE,GAAGG,QAALH,GAAgB,IAAI,CAAJ,GAAQpvE,CAAR,GAAYuvE,QAAZ,GAAuBA,QAAvCH,GAAkDz/G,CAA3D;AACA63D,YAAAA,MAAM,CAAChiE,IAAPgiE,CAAYgoD,EAAZhoD;AACAA,YAAAA,MAAM,CAAChiE,IAAPgiE,CAAYkoD,EAAZloD;AACAA,YAAAA,MAAM,CAAChiE,IAAPgiE,CAAYioD,EAAZjoD;AACA+nD,YAAAA,QAAQ,IAAID,SAAZC;;;AAEJ,iBAAO/nD,MAAP;AACH,SAzBA;;AAyBAwnD,QAAAA,UAEaW,cAFb,GAED,uBAAA,CAA8Bj+D,CAA9B,EAAyChiD,CAAzC,EAAoDC,CAApD,EAA+DC,CAA/D,EAA0Eu/G,EAA1E,EAAsFC,EAAtF,EAAkGC,EAAlG,EAA8GrvE,CAA9G,EAAyH+lD,EAAzH,EAAqIC,EAArI,EAAiJ4pB,EAAjJ,EAA6JtzE,OAA7J,EAA8K;AAE1K,cAAIkrB,MAAgB,GAAG,EAAvB,CAF0K;;AAK1K,cAAI3jE,SAAS,GAAGoW,IAAI,CAACgvE,IAALhvE,CAAU,IAAIy3C,CAAJ,GAAQ1R,CAAlB/lC,CAAhB;AACA,cAAIq1G,SAAS,GAAGzrH,SAAS,GAAGy4C,OAA5B,CAN0K;;;;;AAY1K,cAAIizE,QAAQ,GAAG,CAAf;;AACA,eAAK,IAAInsH,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIk5C,OAArB,EAA8Bl5C,CAAC,EAA/B,EAAmC;AAC/B,gBAAIosH,EAAE,GAAGL,EAAE,GAAGI,QAALJ,GAAgBz/G,CAAzB;AACA,gBAAI+/G,EAAE,GAAGJ,EAAE,GAAGE,QAALF,GAAgBz/G,CAAzB;AACA,gBAAI8/G,EAAE,GAAGN,EAAE,GAAGG,QAALH,GAAgB,IAAI,CAAJ,GAAQpvE,CAAR,GAAYuvE,QAAZ,GAAuBA,QAAvCH,GAAkDz/G,CAA3D;AACA63D,YAAAA,MAAM,CAAChiE,IAAPgiE,CAAYgoD,EAAE,GAAGzpB,EAAjBv+B;AACAA,YAAAA,MAAM,CAAChiE,IAAPgiE,CAAYkoD,EAAE,GAAG1pB,EAAjBx+B;AACAA,YAAAA,MAAM,CAAChiE,IAAPgiE,CAAYioD,EAAE,GAAGG,EAAjBpoD;AACA+nD,YAAAA,QAAQ,IAAID,SAAZC;;;AAEJ,iBAAO/nD,MAAP;AACH,SAzBA;;AAyBA,wBAAA;;UAIQqoD,UAAU;AAAA,2BAAA;;AAAAA,QAAAA,WAELz9G,GAFK,GAEnB,YAAA,CAAmBoxB,IAAnB,EAAkC4d,GAAlC,EAA6C3hC,GAA7C,EAAwDoZ,CAAxD,EAAgF;AAAA,cAAxBA,CAAS,WAAe;AAAxBA,YAAAA,CAAS,GAAG,IAAZA;;;AACpD,cAAIzmB,GAAG,GAAGgD,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ;AACAhD,UAAAA,GAAG,CAAC1C,CAAJ0C,GAAQoxB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAAC1xC,CAAf8zB,EAAkB/jB,GAAG,CAAC/P,CAAtB8zB,IAA2B3K,CAAnCzmB;AACAA,UAAAA,GAAG,CAACzC,CAAJyC,GAAQoxB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAACzxC,CAAf6zB,EAAkB/jB,GAAG,CAAC9P,CAAtB6zB,IAA2B3K,CAAnCzmB;AACAA,UAAAA,GAAG,CAACxC,CAAJwC,GAAQoxB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAACxxC,CAAf4zB,EAAkB/jB,GAAG,CAAC7P,CAAtB4zB,IAA2B3K,CAAnCzmB;AACA,iBAAOA,GAAP;AACH,SARkB;;AAQlBy9G,QAAAA,WAEa33G,KAFb,GAED,cAAA,CAAqBsrB,IAArB,EAAoC4d,GAApC,EAA+C3hC,GAA/C,EAAgE;AAC5D,cAAIvH,KAAK,GAAG9C,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAd;AACA8C,UAAAA,KAAK,CAACxI,CAANwI,GAAUsrB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAAC1xC,CAAf8zB,EAAkB/jB,GAAG,CAAC/P,CAAtB8zB,CAAVtrB;AACAA,UAAAA,KAAK,CAACvI,CAANuI,GAAUsrB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAACzxC,CAAf6zB,EAAkB/jB,GAAG,CAAC9P,CAAtB6zB,CAAVtrB;AACAA,UAAAA,KAAK,CAACtI,CAANsI,GAAUsrB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAACxxC,CAAf4zB,EAAkB/jB,GAAG,CAAC7P,CAAtB4zB,CAAVtrB;AACA,iBAAOA,KAAP;AACH,SARA;;AAQA23G,QAAAA,WAEalrF,KAFb,GAED,cAAA,CAAqBnB,IAArB,EAAoC4d,GAApC,EAA+C3hC,GAA/C,EAA0DoZ,CAA1D,EAAkF;AAAA,cAAxBA,CAAS,WAAe;AAAxBA,YAAAA,CAAS,GAAG,IAAZA;;;AACtD,cAAI8L,KAAK,GAAGvvB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAd;AACAuvB,UAAAA,KAAK,CAACj1B,CAANi1B,GAAUnB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAAC1xC,CAAf8zB,EAAkB/jB,GAAG,CAAC/P,CAAtB8zB,IAA2B3K,CAArC8L;AACAA,UAAAA,KAAK,CAACh1B,CAANg1B,GAAUnB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAACzxC,CAAf6zB,EAAkB/jB,GAAG,CAAC9P,CAAtB6zB,IAA2B3K,CAArC8L;AACAA,UAAAA,KAAK,CAAC/0B,CAAN+0B,GAAUnB,IAAI,CAACj2B,KAALi2B,CAAW4d,GAAG,CAACxxC,CAAf4zB,EAAkB/jB,GAAG,CAAC7P,CAAtB4zB,IAA2B3K,CAArC8L;AACA,iBAAOA,KAAP;AACH,SARA;;AAQA,yBAAA;;;;AAsCJ;AAhCU,iBAASmrF,iBAAT,GAA6D;AAAA,4BAAA;;AAChE,cAAMr1F,MAAM,GAAGyL,aAAa,CAACsD,UAAdtD,IAA4BA,aAAa,CAACsD,UAAdtD,CAAyBzL,MAApE;;AACA,cAAIA,MAAJ,EAAY;AACRA,YAAAA,MAAM,CAACgP,oBAAPhP;;;AAEJ,cAAMiP,gBAAgB,GAAGjP,MAAM,IAAIA,MAAM,CAACiP,gBAAjBjP,uBAAqCK,QAAQ,CAACC,yBAATm9C,eAAel9C,QAAf,CAAwB0O,gBAA7DjP,CAAzB;AACA,iBAAOiP,gBAAP;;;AACHqmF,QAAAA,wBAAA,oBAAA;;AAEM,iBAASptE,QAAT,CAAmBr9B,EAAnB,EAA6BC,EAA7B,EAAuC4+C,KAAvC,EAAmE;AAAA,cAA5BA,KAAY,WAAgB;AAA5BA,YAAAA,KAAY,GAAGhqC,KAAK,CAAC6oB,KAArBmhB;;;AAE1C,cAAMz6B,gBAAgB,GAAGomF,iBAAiB,EAA1C;AACA,cAAI,CAACpmF,gBAAL,EAAuB,OAH+C;;AAKtEA,UAAAA,gBAAgB,QAAhBA,SAAAA,GAAAA,gBAAgB,CAAEyuC,OAAlBzuC,CAA0BpkB,EAA1BokB,EAA8BnkB,EAA9BmkB,EAAkCy6B,KAAlCz6B,EAAyCjmC,SAAzCimC,CAAAA;;;AACHqmF,QAAAA,eAAA,WAAA;;AAEM,iBAASj1C,UAAT,CAAoBt1B,MAApB,EAAiC8f,MAAjC,EAAgDnB,KAAhD,EAA4E;AAAA,cAA5BA,KAAW,WAAiB;AAA5BA,YAAAA,KAAW,GAAGhqC,KAAK,CAAC0oB,MAApBshB;;;AACnD,cAAMz6B,gBAAgB,GAAGomF,iBAAiB,EAA1C;AACA,cAAI,CAACpmF,gBAAL,EAAuB,OAFwD;;AAI/EA,UAAAA,gBAAgB,QAAhBA,SAAAA,GAAAA,gBAAgB,CAAEsmF,SAAlBtmF,CAA4B8b,MAA5B9b,EAAoC47B,MAApC57B,EAA4Cy6B,KAA5Cz6B,EAAmD,EAAnDA,EAAuD,IAAvDA,EAA6DjmC,SAA7DimC,EAAwEjmC,SAAxEimC,CAAAA;;;AACHqmF,QAAAA,iBAAA,aAAA;;AAEM,iBAASjtE,OAAT,CAAiB0C,MAAjB,EAAmC/sB,IAAnC,EAA8C0rC,KAA9C,EAAwE;AAAA,cAA1BA,KAAW,WAAe;AAA1BA,YAAAA,KAAW,GAAGhqC,KAAK,CAAC4oB,IAApBohB;;;AACjD,cAAMz6B,gBAAgB,GAAGomF,iBAAiB,EAA1C;AACA,cAAI,CAACpmF,gBAAL,EAAuB;AACvB,cAAIumF,MAAM,GAAG,IAAIzgH,QAAQ,CAACoxD,IAAb,CAAkBpb,MAAM,CAAC91C,CAAzB,EAA4B81C,MAAM,CAAC71C,CAAnC,EAAsC61C,MAAM,CAAC51C,CAA7C,EAAgD6oB,IAAI,CAAC/oB,CAArD,EAAwD+oB,IAAI,CAAC9oB,CAA7D,EAAgE8oB,IAAI,CAAC7oB,CAArE,CAAb,CAH2E;;AAK3E85B,UAAAA,gBAAgB,QAAhBA,SAAAA,GAAAA,gBAAgB,CAAEstE,cAAlBttE,CAAiCumF,MAAjCvmF,EAAyCy6B,KAAzCz6B,EAAgD,IAAhDA,EAAsD,KAAtDA,CAAAA;;;AACHqmF,QAAAA,cAAA,UAAA;OAEJ,EAlCgBrtE,KAAK,KAALA,KAAK,uBAAA,CAkCrB;;UAEY1+C,QAAQ;AAAA,yBAAA;;AAAAA,QAAAA,SAEHC,OAFG,GAEjB,gBAAA,CAAsBisH,OAAtB,EAA6C;AACzC,iBAAOj2G,IAAI,CAACytD,IAALztD,CAAUi2G,OAAO,GAAG,IAApBj2G,CAAP;AACH,SAJgB;;AAIhBjW,QAAAA,SAEaU,SAFb,GAED,kBAAA,GAAiC;AAE7B,cAAIyrH,IAAI,GAAG,IAAI/pC,IAAJ,EAAX;AAEA,cAAIz2E,CAAC,GAAGwgH,IAAI,CAACC,WAALD,GAAmB12E,QAAnB02E,EAAR;AAEA,cAAIp4F,CAAC,GAAGo4F,IAAI,CAACE,QAALF,GAAgB12E,QAAhB02E,EAAR;AACA,cAAIp4F,CAAC,CAAC10B,MAAF00B,GAAW,CAAf,EAAkBA,CAAC,SAAOA,CAARA;AAElB,cAAIrc,CAAC,GAAGy0G,IAAI,CAACG,OAALH,GAAe12E,QAAf02E,EAAR;AACA,cAAIz0G,CAAC,CAACrY,MAAFqY,GAAW,CAAf,EAAkBA,CAAC,SAAOA,CAARA;AAElB,cAAIogE,CAAC,GAAGq0C,IAAI,CAACI,QAALJ,GAAgB12E,QAAhB02E,EAAR;AAEA,iBAASxgH,CAAC,MAADA,GAAKooB,CAALpoB,MAAAA,GAAU+L,CAAV/L,MAAAA,GAAemsE,CAAxB;AAEH,SAlBA;;AAkBA93E,QAAAA,SAEawsH,SAFb,GAED,kBAAA,GAA0B;AAEtB,iBAAQpqC,IAAI,CAACpf,KAALof,CAAW,IAAIA,IAAJ,GAAW3sC,QAAX,EAAX2sC,CAAR;AAEH,SANA;;AAMA,uBAAA;;;;;;;;;;;;;;;;;;;;;;;ACxcwE,UASxEqqC,SATwE;;AAS/D,iBAATA;AAAAA,QAAAA,SAAS,CAATA,SAAS,QAAA,CAATA,IAAS,CAATA,UAAAA;AAAAA,QAAAA,SAAS,CAATA,SAAS,OAAA,CAATA,IAAS,CAATA,SAAAA;AAAAA,QAAAA,SAAS,CAATA,SAAS,MAAA,CAATA,IAAS,CAATA,QAAAA;AAAAA,QAAAA,SAAS,CAATA,SAAS,SAAA,CAATA,IAAS,CAATA,WAAAA;AAAAA,QAAAA,SAAS,CAATA,SAAS,QAAA,CAATA,IAAS,CAATA,UAAAA;AAAAA,QAAAA,SAAS,CAATA,SAAS,OAAA,CAATA,IAAS,CAATA,SAAAA;OAAS,EAATA,SAAS,KAATA,SAAS,KAAA,CAAA;;AAiBd,UAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,EAAyB,QAAzB,EAAmC,OAAnC,EAA4C,MAA5C,CAAd;;AACO,eAASt7B,gBAAT,CAA2BD,QAA3B,EAAyE;AAC5E,YAAMv9C,MAAM,GAAG9c,QAAQ,CAACC,IAATD,CAAe8c,MAA9B;AACA,YAAM+4E,OAAO,GAAG12G,IAAI,CAACmnC,GAALnnC,CAAS29B,MAAM,CAACg5E,YAAPh5E,CAAoBi5E,cAA7B52G,EAA6C,IAA7CA,CAAhB;AAEA,YAAI62G,UAAU,GAAG,CAAjB;AACA,YAAIC,WAAW,GAAG,CAAlB;AAEA,YAAIC,SAA2B,GAAG,EAAlC;AACA,YAAIC,OAAgC,GAAG,EAAvC;AAEA,YAAIC,cAAc,GAAG,CAArB;;AACA,aAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGh8B,QAAQ,CAAC9xF,MAA/B,EAAuC8tH,EAAE,EAAzC,EAA6C;AACzCD,UAAAA,cAAc,GAAGj3G,IAAI,CAACmnC,GAALnnC,CAASi3G,cAATj3G,EAAyBk7E,QAAQ,CAACg8B,EAAD,CAARh8B,CAAai8B,WAAbj8B,CAAyBw3B,MAAzBx3B,CAAgC9xF,MAAzD4W,CAAjBi3G;;;AAGJ,YAAIt6B,OAAmB,GAAG,EAA1B;;AAEA,aAAK,IAAIzH,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG+hC,cAAtB,EAAsC/hC,EAAE,EAAxC,EAA4C;AAExC,cAAIkiC,OAAO,GAAG,CAAd;AACA,cAAI10E,OAAO,GAAG,CAAd;AAEA,cAAI29B,SAAS,GAAG,CAAhB;;AAEA,eAAK,IAAI62C,GAAE,GAAG,CAAd,EAAiBA,GAAE,GAAGh8B,QAAQ,CAAC9xF,MAA/B,EAAuC8tH,GAAE,EAAzC,EAA6C;AACzC,gBAAMtjF,OAAO,GAAGsnD,QAAQ,CAACg8B,GAAD,CAAxB;AACAtjF,YAAAA,OAAO,CAACujF,WAARvjF,CAAoB8+E,MAApB9+E;AACA,gBAAIyjF,MAAM,GAAGzjF,OAAO,CAAC0jF,OAAR1jF,CAAgBshD,EAAhBthD,CAAb;AAEA,gBAAI9R,KAAK,GAAGu1F,MAAM,CAACE,KAAPF,CAAav1F,KAAbu1F,GAAqB,CAAjC;AACA,gBAAInwG,MAAM,GAAGmwG,MAAM,CAACE,KAAPF,CAAanwG,MAA1B;AACAm5D,YAAAA,SAAS,GAAGrgE,IAAI,CAACwF,GAALxF,CAASkH,MAATlH,EAAiBqgE,SAAjBrgE,CAAZqgE;;AAEA,gBAAK+2C,OAAO,GAAGt1F,KAAVs1F,GAAmBV,OAAxB,EAAiC;AAC7Bh0E,cAAAA,OAAO,IAAI29B,SAAX39B;AACA00E,cAAAA,OAAO,GAAG,CAAVA;AACA/2C,cAAAA,SAAS,GAAG,CAAZA;;;AAGJsc,YAAAA,OAAO,CAACpxF,IAARoxF,CAAa,CAACy6B,OAAD,EAAU10E,OAAV,EAAmB5gB,KAAnB,EAA0B5a,MAA1B,CAAby1E;;AAEA,iBAAK,IAAI66B,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGf,KAAK,CAACrtH,MAA5B,EAAoCouH,EAAE,EAAtC,EAA0C;AACtC,kBAAIC,GAAG,GAAIJ,MAAM,CAASZ,KAAK,CAACe,EAAD,CAAd,CAAjB;AACAT,cAAAA,SAAS,CAACxrH,IAAVwrH,CAAeU,GAAG,CAAChrH,IAAnBsqH;AAEAC,cAAAA,OAAO,CAACzrH,IAARyrH,CAAa,IAAIj3F,GAAG,CAAC23F,iBAAR,CAA0BluH,SAA1B,EAAqCA,SAArC,EACTiuH,GAAG,CAACvwG,MADK,EAET,IAAI6Y,GAAG,CAAC43F,MAAR,CAAeP,OAAf,EAAwB10E,OAAxB,CAFS,EAGT,IAAI3iB,GAAG,CAAC63F,MAAR,CAAeH,GAAG,CAAC31F,KAAnB,EAA0B21F,GAAG,CAACvwG,MAA9B,CAHS,EAIT,IAAI6Y,GAAG,CAAC83F,mBAAR,CAA4B3iC,EAA5B,CAJS,CAAb8hC;AAOAI,cAAAA,OAAO,IAAIK,GAAG,CAAC31F,KAAfs1F;;;;AAIR,cAAIliC,EAAE,KAAK,CAAX,EAAc;AACV2hC,YAAAA,UAAU,GAAGO,OAAbP;AACAC,YAAAA,WAAW,GAAGp0E,OAAO,GAAG29B,SAAxBy2C;;;;AAIRn6B,QAAAA,OAAO,CAAC9hE,OAAR8hE,CAAgB,UAAAnkE,MAAA,EAAU;AACtBA,UAAAA,MAAM,CAAC,CAAD,CAANA,GAAaA,MAAM,CAAC,CAAD,CAANA,GAAaq+F,UAA1Br+F;AACAA,UAAAA,MAAM,CAAC,CAAD,CAANA,GAAaA,MAAM,CAAC,CAAD,CAANA,GAAas+F,WAA1Bt+F;AACAA,UAAAA,MAAM,CAAC,CAAD,CAANA,GAAaA,MAAM,CAAC,CAAD,CAANA,GAAaq+F,UAA1Br+F;AACAA,UAAAA,MAAM,CAAC,CAAD,CAANA,GAAaA,MAAM,CAAC,CAAD,CAANA,GAAas+F,WAA1Bt+F;AACH,SALDmkE;AAOA,YAAIm7B,OAAO,GAAGn6E,MAAM,CAACo6E,aAAPp6E,CAAqB,IAAI5d,GAAG,CAACi4F,WAAR,CAC/Bj4F,GAAG,CAACk4F,WAAJl4F,CAAgBm4F,KADe,EAE/Bn4F,GAAG,CAACo4F,eAAJp4F,CAAoBq4F,OAApBr4F,GAA8BA,GAAG,CAACo4F,eAAJp4F,CAAoBs4F,YAFnB,EAG/Bt4F,GAAG,CAACuE,MAAJvE,CAAWwG,KAHoB,EAI/BswF,UAJ+B,EAK/BC,WAL+B,EAM/B/2F,GAAG,CAACu4F,cAAJv4F,CAAmBw4F,UANY,EAO/B/uH,SAP+B,EAQ/BytH,cAR+B,CAArBt5E,CAAd;AAUAA,QAAAA,MAAM,CAAC66E,sBAAP76E,CAA8Bo5E,SAA9Bp5E,EAAyCm6E,OAAzCn6E,EAAkDq5E,OAAlDr5E,EA/E4E;;AAmF5E,eAAO;AACHm6E,UAAAA,OAAO,EAAPA,OADG;AAEH58B,UAAAA,QAAQ,EAARA,QAFG;AAGHyB,UAAAA,OAAO,EAAPA;AAHG,SAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GJ,UAAQ1oB,MAAM,GAAgB1+D,QAAQ,CAA9B0+D,MAAR;AAAA,UAAgBnM,SAAS,GAAKvyD,QAAQ,CAAtBuyD,SAAhB;AACA,UAAQxjC,MAAM,GAAqDvE,GAAG,CAA9DuE,MAAR;AAAA,UAAgBC,MAAM,GAA6CxE,GAAG,CAAtDwE,MAAhB;AAAA,UAAwBC,OAAO,GAAoCzE,GAAG,CAA9CyE,OAAxB;AAAA,UAAiCC,YAAY,GAAsB1E,GAAG,CAArC0E,YAAjC;AAAA,UAA+CvE,KAAK,GAAeH,GAAG,CAAvBG,KAA/C;AAAA,UAAsDwE,QAAQ,GAAK3E,GAAG,CAAhB2E,QAAtD;AACA,UAAQb,UAAU,GAAmGC,SAAS,CAAtHD,UAAR;AAAA,UAAoBE,cAAc,GAAmFD,SAAS,CAA1GC,cAApB;AAAA,UAAoCC,UAAU,GAAuEF,SAAS,CAA1FE,UAApC;AAAA,UAAgDC,iBAAiB,GAAoDH,SAAS,CAA9EG,iBAAhD;AAAA,UAAmEC,SAAS,GAAyCJ,SAAS,CAA3DI,SAAnE;AAAA,UAA8EC,UAAU,GAA6BL,SAAS,CAAhDK,UAA9E;AAAA,UAA0FC,SAAS,GAAkBN,SAAS,CAApCM,SAA1F;AAAA,UAAqGC,WAAW,GAAKP,SAAS,CAAzBO,WAArG;AACA,4BAAyD0O,QAAQ,CAACkK,KAAlE;AAAA,UAAQC,UAAU,mBAAVA,UAAR;AAAA,UAAoBC,SAAS,mBAATA,SAApB;AAAA,UAA+BC,WAAW,mBAAXA,WAA/B;AAAA,UAA4CC,QAAQ,mBAARA,QAA5C;AAEA,UAAIo7E,SAAsB,GAAG,IAA7B;;AACO,eAASC,WAAT,GAAwB;AAC3B,YAAI,CAACD,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAGjoE,KAAK,CAACC,UAAND,CAAiB;AACzBF,YAAAA,SAAS,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAC,CAAnC,EAAsC,CAAtC,CADc;AAEzBD,YAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAFoB;AAGzBE,YAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAHgB;AAIzBooE,YAAAA,MAAM,EAAE,IAAI7/G,IAAJ,CAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,CAJiB;AAKzB8/G,YAAAA,MAAM,EAAE,IAAI9/G,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AALiB,WAAjB03C,CAAZioE;;AAOAA,UAAAA,SAAS,CAAC36B,UAAV26B;;;AAGJ,eAAOA,SAAP;;;AAGJ,UAAII,OAAkC,GAAG,IAAzC;;AACO,eAASC,SAAT,GAAsB;AACzB,YAAI,CAACD,OAAL,EAAc;AACV,cAAM93F,QAAQ,GAAGF,QAAQ,CAACC,IAATD,CAAeE,QAAhC;AACA,cAAM4c,MAAM,GAAG5c,QAAQ,CAAC4c,MAAxB;AAEA,cAAI+G,IAAI,GAAGg0E,WAAW,EAAtB;AACAG,UAAAA,OAAO,GAAGl7E,MAAM,CAACo7E,oBAAPp7E,CAA4B+G,IAAI,CAACs0E,kBAALt0E,CAAwB,CAAxBA,EAA4Bu0E,MAAxDt7E,CAAVk7E;;;AAEJ,eAAOA,OAAP;;;AAIG,eAAS7mB,UAAT,CAAqBknB,EAArB,EAAwC78C,MAAxC,EAAqDzkE,KAArD,EAAgE;AAAA,YAAXA,KAAK,WAAM;AAAXA,UAAAA,KAAK,GAAG,CAARA;;;AACxD,YAAMuhH,UAAU,GAAGD,EAAE,CAACr3F,MAAHq3F,CAAU1oB,WAAV0oB,CAAsBzoB,aAAtByoB,CAAoCthH,KAApCshH,CAAnB;AAEA,YAAMp0B,WAA8B,GAAG,EAAvC;AACA,YAAMkyB,OAAgC,GAAG,EAAzC;AAEA,YAAMoC,OAAO,GAAG,IAAIr5F,GAAG,CAAC23F,iBAAR,EAAhB;AACA0B,QAAAA,OAAO,CAACC,SAARD,CAAkB3jH,CAAlB2jH,GAAsB,CAAtBA;AACAA,QAAAA,OAAO,CAACC,SAARD,CAAkB1jH,CAAlB0jH,GAAsB,CAAtBA;AACAA,QAAAA,OAAO,CAACE,SAARF,CAAkBt3F,KAAlBs3F,GAA0BF,EAAE,CAACp3F,KAA7Bs3F;AACAA,QAAAA,OAAO,CAACE,SAARF,CAAkBlyG,MAAlBkyG,GAA2BF,EAAE,CAAChyG,MAA9BkyG;AACApC,QAAAA,OAAO,CAACzrH,IAARyrH,CAAaoC,OAAbpC;AAEAlyB,QAAAA,WAAW,CAACv5F,IAAZu5F,CAAiBzoB,MAAjByoB;AACAjkE,QAAAA,QAAQ,CAACC,IAATD,CAAc8c,MAAd9c,CAAqB04F,oBAArB14F,CAA0Cs4F,UAA1Ct4F,EAAsDikE,WAAtDjkE,EAAmEm2F,OAAnEn2F;;;UAKS4d,UAAU;AAAA,aACnBE,aADmB,GACH,KADG;AACE,aACrBS,oBADqB,GACE,IAAIzoC,KAAJ,EADF;AACqB,aAC1C8oC,oBAD0C,GACnB,IAAI9oC,KAAJ,EADmB;;AAI9C,UAAM6iH,QAAiC,GAAG,EAA1C;;AACO,eAAS94F,iBAAT,CAA4BF,MAA5B,EAA2D;AAC9D,YAAI,CAACg5F,QAAQ,CAACpzE,QAATozE,CAAkBh5F,MAAlBg5F,CAAL,EAAgC;AAC5BA,UAAAA,QAAQ,CAACjuH,IAATiuH,CAAch5F,MAAdg5F;;;AAEJ,eAAOh5F,MAAM,CAACj3B,IAAPi3B,GAAc,GAAdA,GAAoBg5F,QAAQ,CAAC3xD,OAAT2xD,CAAiBh5F,MAAjBg5F,CAA3B;;;AAGG,eAAS73F,aAAT,CAAwB22C,GAAxB,EAAuC93C,MAAvC,EAAsEsB,KAAtE,EAAqF5a,MAArF,EAAqGu2B,KAArG,EAAgJC,KAAhJ,EAA2J;AAAA,YAAtDD,KAAkC,WAAoB;AAAtDA,UAAAA,KAAkC,GAAG,IAArCA;;;AAAyC,YAAEC,KAAK,WAAP;AAAEA,UAAAA,KAAK,GAAG,CAARA;;;AACnJ,YAAM+7E,EAAE,GAAGj5F,MAAM,CAACk5F,QAAlB;AACA,YAAMzzF,CAAC,GAAGnE,KAAV;AACA,YAAM+/C,CAAC,GAAG36D,MAAV;AACAoxD,QAAAA,GAAG,CAAC7iE,CAAJ6iE,GAAQmhD,EAAE,CAAChkH,CAAHgkH,GAAOxzF,CAAfqyC;AACAA,QAAAA,GAAG,CAAC5iE,CAAJ4iE,GAAQmhD,EAAE,CAAC/jH,CAAH+jH,GAAO53C,CAAfvJ;AACAA,QAAAA,GAAG,CAACx2C,KAAJw2C,GAAYmhD,EAAE,CAAC33F,KAAH23F,GAAWxzF,CAAvBqyC;AACAA,QAAAA,GAAG,CAACpxD,MAAJoxD,GAAamhD,EAAE,CAACvyG,MAAHuyG,GAAY53C,CAAzBvJ;;AACA,YAAI76B,KAAJ,EAAW;AACP,kBAAQA,KAAK,CAAC53B,IAAd;AACI,iBAAKs3B,SAAS,CAACw8E,WAAf;AAA4B;AACxB,oBAAM16E,SAAS,GAAGxB,KAAlB;;AACA,oBAAIwB,SAAS,CAACI,eAAVJ,IAA6BA,SAAS,CAACK,QAAVL,KAAuB5B,QAAQ,CAACu8E,OAAjE,EAA0E;AACtEthD,kBAAAA,GAAG,CAAC7iE,CAAJ6iE,GAAQ,CAARA;AACAA,kBAAAA,GAAG,CAAC5iE,CAAJ4iE,GAAQ,CAARA;AACAA,kBAAAA,GAAG,CAACx2C,KAAJw2C,GAAYryC,CAAZqyC;AACAA,kBAAAA,GAAG,CAACpxD,MAAJoxD,GAAauJ,CAAbvJ;AACH,iBALD,MAKO;AACHA,kBAAAA,GAAG,CAAC7iE,CAAJ6iE,GAAQ56B,KAAK,GAAG,CAARA,GAAY,GAAZA,GAAkBzX,CAA1BqyC;AACAA,kBAAAA,GAAG,CAAC5iE,CAAJ4iE,GAAQ,CAAC,IAAIt4D,IAAI,CAAC+hB,KAAL/hB,CAAW09B,KAAK,GAAG,CAAnB19B,CAAL,IAA8B,GAA9B,GAAoC6hE,CAA5CvJ;AACAA,kBAAAA,GAAG,CAACx2C,KAAJw2C,GAAY,MAAMryC,CAAlBqyC;AACAA,kBAAAA,GAAG,CAACpxD,MAAJoxD,GAAa,MAAMuJ,CAAnBvJ;;;AAEJ;;;AAEJ,iBAAKn7B,SAAS,CAAC4B,IAAf;AAAqB;AACjBu5B,gBAAAA,GAAG,CAAC7iE,CAAJ6iE,GAAQ,CAARA;AACAA,gBAAAA,GAAG,CAAC5iE,CAAJ4iE,GAAQ,CAARA;AACAA,gBAAAA,GAAG,CAACx2C,KAAJw2C,GAAYryC,CAAZqyC;AACAA,gBAAAA,GAAG,CAACpxD,MAAJoxD,GAAauJ,CAAbvJ;AACA;;AArBR;;;AA2BJA,QAAAA,GAAG,CAACx2C,KAAJw2C,GAAYt4D,IAAI,CAAC+hB,KAAL/hB,CAAWs4D,GAAG,CAACx2C,KAAf9hB,CAAZs4D;AACAA,QAAAA,GAAG,CAACpxD,MAAJoxD,GAAat4D,IAAI,CAAC+hB,KAAL/hB,CAAWs4D,GAAG,CAACpxD,MAAflH,CAAbs4D;AAEA,eAAOA,GAAP;;;AAIG,eAASzyC,oBAAT,CAA+BC,SAA/B,EAA4D+zF,UAA5D,EAA8G;AACjH,YAAIC,MAAM,GAAGv1F,MAAM,CAACqB,KAApB;;AACA,YAAI,EAAEE,SAAS,GAAGrB,YAAY,CAACuD,KAA3B,KACG6xF,UAAU,KAAK91F,cAAc,CAAC4B,aADrC,EACoD;AAChD,cAAIG,SAAS,GAAGsX,WAAhB,EAA6B;AACzB08E,YAAAA,MAAM,GAAGv1F,MAAM,CAACqB,KAAhBk0F;AACH,WAFD,MAEO;AACHA,YAAAA,MAAM,GAAGv1F,MAAM,CAAC6jD,IAAhB0xC;;;;AAGR,YAAI,CAACh0F,SAAS,GAAGrB,YAAY,CAACqL,aAA1B,MAA6CrL,YAAY,CAACqL,aAA1D,IACG+pF,UAAU,KAAK91F,cAAc,CAAC+L,aADrC,EACoD;AAChD,cAAI,EAAEhK,SAAS,GAAGrB,YAAY,CAACs1F,KAA3B,CAAJ,EAAuCD,MAAM,GAAGv1F,MAAM,CAAC6jD,IAAhB0xC;AACvC,cAAI,EAAEh0F,SAAS,GAAGrB,YAAY,CAACu1F,OAA3B,CAAJ,EAAyCF,MAAM,GAAGv1F,MAAM,CAAC6jD,IAAhB0xC;;;AAE7C,eAAOA,MAAP;;;AAGG,eAAS17E,0BAAT,CAAqCrd,QAArC,EAAmEP,MAAnE,EAAkG;AACrG,YAAMy5F,SAAS,GAAGl5F,QAAQ,CAACC,iBAA3B;AACA,YAAMud,mBAAmB,GAAG07E,SAAS,CAAC17E,mBAAtC;AACAA,QAAAA,mBAAmB,CAACn1C,MAApBm1C,GAA6B,CAA7BA;;AACA,YAAMy1B,OAAO,GAAGC,MAAM,CAACjpE,MAAPipE,CAAc,CAAdA,EAAiB,CAAjBA,EAAoB,CAApBA,EAAuB,CAAvBA,CAAhB;;AACA,mBAAuBzzC,MAAM,CAACyc,KAA9B;AAAA,YAAQg5B,UAAU,QAAVA,UAAR;;AACA,aAAK,IAAI9sE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8sE,UAAU,CAAC7sE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,cAAMs0C,KAAK,GAAGw4B,UAAU,CAAC9sE,CAAD,CAAxB;;AACA,cAAIs0C,KAAK,CAACy8E,KAAV,EAAiB;AACb;;;AAGJjmD,UAAAA,MAAM,CAAChsC,GAAPgsC,CAAWD,OAAXC,EAAoBx2B,KAAK,CAACl3B,QAANk3B,CAAehoC,CAAnCw+D,EAAsCx2B,KAAK,CAACl3B,QAANk3B,CAAe/nC,CAArDu+D,EAAwDx2B,KAAK,CAACl3B,QAANk3B,CAAe9nC,CAAvEs+D,EAA0Ex2B,KAAK,CAACnqC,KAAhF2gE;;AACA,cAAInM,SAAS,CAACqyD,aAAVryD,CAAwBkM,OAAxBlM,EAAiCtnC,MAAM,CAACmnC,OAAxCG,CAAJ,EAAsD;AAClDvpB,YAAAA,mBAAmB,CAAChzC,IAApBgzC,CAAyBd,KAAzBc;;;;AAIR,oBAAyB/d,MAAM,CAACyc,KAAhC;AAAA,YAAQ04B,YAAY,SAAZA,YAAR;;AACA,aAAK,IAAIxsE,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGwsE,YAAY,CAACvsE,MAAjC,EAAyCD,EAAC,EAA1C,EAA8C;AAC1C,cAAMs0C,MAAK,GAAGk4B,YAAY,CAACxsE,EAAD,CAA1B;;AACA,cAAIs0C,MAAK,CAACy8E,KAAV,EAAiB;AACb;;;AAEJjmD,UAAAA,MAAM,CAAChsC,GAAPgsC,CAAWD,OAAXC,EAAoBx2B,MAAK,CAACl3B,QAANk3B,CAAehoC,CAAnCw+D,EAAsCx2B,MAAK,CAACl3B,QAANk3B,CAAe/nC,CAArDu+D,EAAwDx2B,MAAK,CAACl3B,QAANk3B,CAAe9nC,CAAvEs+D,EAA0Ex2B,MAAK,CAACnqC,KAAhF2gE;;AACA,cAAInM,SAAS,CAACqyD,aAAVryD,CAAwBkM,OAAxBlM,EAAiCtnC,MAAM,CAACmnC,OAAxCG,CAAJ,EAAsD;AAClDvpB,YAAAA,mBAAmB,CAAChzC,IAApBgzC,CAAyBd,MAAzBc;;;;;AAKL,eAASskE,YAAT,CAAuBvqC,GAAvB,EAAuC8hD,KAAvC,EAAyD;;;;AAI5D9hD,QAAAA,GAAG,CAAC7iE,CAAJ6iE,GAAQ8hD,KAAK,CAAC3kH,CAAN2kH,GAAUA,KAAK,CAAC3kH,CAAxB6iE;AACAA,QAAAA,GAAG,CAAC5iE,CAAJ4iE,GAAQ8hD,KAAK,CAAC1kH,CAAN0kH,GAAUA,KAAK,CAAC1kH,CAAxB4iE;AACAA,QAAAA,GAAG,CAAC3iE,CAAJ2iE,GAAQ8hD,KAAK,CAACzkH,CAANykH,GAAUA,KAAK,CAACzkH,CAAxB2iE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKG,eAAS4iC,gBAAT,CAA2B7wG,KAA3B,EAA0C;AAC7C,YAAIyxG,UAAU,GAAG,EAAjB;AAEA,YAAIue,WAAW,GAAG,CAAC,IAAIr6G,IAAI,CAACgvE,IAALhvE,CAAU,CAAVA,CAAL,IAAqB,CAAvC;AACA,YAAIs6G,cAAc,GAAGt6G,IAAI,CAAC8N,EAAL9N,GAAU,CAAVA,GAAcq6G,WAAnC;;AAEA,aAAK,IAAIlxH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAApB,EAA2BlB,CAAC,EAA5B,EAAgC;AAC5B,cAAIqsC,CAAC,GAAGrsC,CAAC,GAAGkB,KAAZ;AACA,cAAIkwH,WAAW,GAAGv6G,IAAI,CAACw6G,IAALx6G,CAAU,IAAI,IAAIw1B,CAAlBx1B,CAAlB;AACA,cAAIy6G,OAAO,GAAGH,cAAc,GAAGnxH,CAA/B;AAEA,cAAIsM,CAAC,GAAGuK,IAAI,CAAC+N,GAAL/N,CAASu6G,WAATv6G,IAAwBA,IAAI,CAAC6N,GAAL7N,CAASy6G,OAATz6G,CAAhC;AACA,cAAItK,CAAC,GAAGsK,IAAI,CAAC+N,GAAL/N,CAASu6G,WAATv6G,IAAwBA,IAAI,CAAC+N,GAAL/N,CAASy6G,OAATz6G,CAAhC;AACA,cAAIrK,CAAC,GAAGqK,IAAI,CAAC6N,GAAL7N,CAASu6G,WAATv6G,CAAR;AAEA,cAAIyB,CAAC,GAAGsrE,IAAI,CAACj0E,IAALi0E,CAAU9jF,GAAV8jF,MAAmB,IAAIj0E,IAAJ,EAA3B;AACA2I,UAAAA,CAAC,CAACwmB,GAAFxmB,CAAMhM,CAANgM,EAAS/L,CAAT+L,EAAY9L,CAAZ8L;AACAq6F,UAAAA,UAAU,CAACvwG,IAAXuwG,CAAgBr6F,CAAhBq6F;;;AAGJ,eAAOA,UAAP;;;AAGJ,UAAM4e,gBAAgB,GAAG,EAAzB;;AAEA,UAAIC,QAAQ,GAAG,IAAI7hH,IAAJ,EAAf;;AACA,UAAI8hH,QAAQ,GAAG,IAAI9hH,IAAJ,EAAf;;AACO,eAASsiG,WAAT,CAAsBt1B,MAAtB,EAAsD;AACzD,YAAIvY,MAAM,GAAG,EAAb;;AAEA,aAAK,IAAIpkE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG28E,MAAM,CAAC18E,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,cAAIoD,GAAG,GAAGu5E,MAAM,CAAC38E,CAAD,CAAhB;AACA,cAAIutF,GAAG,GAAGnqF,GAAG,CAACoF,IAAJpF,CAAS6rF,WAAnB;AAEA7rF,UAAAA,GAAG,CAAC++C,WAAJ/+C,CAAgBipE,WAAhBjpE,CAA4BouH,QAA5BpuH,EAAsCquH,QAAtCruH;AAEA,cAAIsuH,aAAa,GAAG,CAApB;AACA,cAAIxzD,SAAS,GAAG96D,GAAG,CAAC86D,SAApB;;AACA,eAAK,IAAItpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGspC,SAAS,CAACj+D,MAA9B,EAAsC20B,CAAC,EAAvC,EAA2C;AACvC,gBAAI45D,OAAO,GAAGtwB,SAAS,CAACtpC,CAAD,CAATspC,CAAaswB,OAA3B;AACA,gBAAQrnC,SAAS,GAAKqnC,OAAO,CAACK,aAARL,CAAdrnC,SAAR;AACAuqE,YAAAA,aAAa,IAAIvqE,SAAS,CAAClnD,MAAVknD,GAAmB,CAApCuqE;;;AAGJ,cAAIA,aAAa,GAAGH,gBAApB,EAAsC;AAClC,iBAAK,IAAIvxH,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGuxH,gBAApB,EAAsCvxH,EAAC,EAAvC,EAA2C;AACvC,kBAAIqvB,MAAM,GAAGk7B,WAAW,CAACz9C,QAAZy9C,CAAqBK,sBAArBL,CAA4CgnE,gBAA5ChnE,CAAb;AACA,kBAAIt5C,CAAC,GAAG,IAAItB,IAAJ,CAASvM,GAAG,CAAC++C,WAAJ/+C,CAAgBi/C,WAAzB,CAAR;AACApxC,cAAAA,CAAC,CAACoG,cAAFpG,CAAiB,CAAjBA,EAAoBmgB,QAApBngB,CAA6Boe,MAA7Bpe;AACAA,cAAAA,CAAC,CAACuF,GAAFvF,CAAMugH,QAANvgH;AACAtB,cAAAA,IAAI,CAAC0/D,aAAL1/D,CAAmBsB,CAAnBtB,EAAsBsB,CAAtBtB,EAAyB49E,GAAzB59E;AACAy0D,cAAAA,MAAM,CAAChiE,IAAPgiE,CAAYnzD,CAAZmzD;;AAEP,WATD,MAUK;AACD,gBAAIlG,UAAS,GAAG96D,GAAG,CAAC86D,SAApB;;AACA,iBAAK,IAAItpC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGspC,UAAS,CAACj+D,MAA9B,EAAsC20B,EAAC,EAAvC,EAA2C;AACvC,kBAAI45D,QAAO,GAAGtwB,UAAS,CAACtpC,EAAD,CAATspC,CAAaswB,OAA3B;AACA,0CAA2DA,QAAO,CAACK,aAAnE;AAAA,kBAAmBqB,EAAE,yBAAb/oC,SAAR;AAAA,kBAAgCgpC,EAAE,yBAAX/oC,OAAvB;AAAA,kBAAiDipC,KAAK,yBAAlBmB,WAApC;;AAEA,kBAAIhD,QAAO,CAACiD,aAARjD,KAA0B53D,GAAG,CAAC05D,aAAJ15D,CAAkB25D,aAA5C/B,IAA6D2B,EAA7D3B,IAAmE0B,EAAvE,EAA2E;AACvE,qBAAK,IAAIt7D,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGs7D,EAAE,CAACjwF,MAAvB,EAA+B20B,GAAC,IAAI,CAApC,EAAuC;AACnC,sBAAItc,CAAC,GAAGsrE,IAAI,CAACj0E,IAALi0E,CAAU9jF,GAAV8jF,GAAgB9kD,GAAhB8kD,CAAoBsM,EAAE,CAACt7D,GAAD,CAAtBgvD,EAA2BsM,EAAE,CAACt7D,GAAC,GAAG,CAAL,CAA7BgvD,EAAsCsM,EAAE,CAACt7D,GAAC,GAAG,CAAL,CAAxCgvD,CAAR;AACAj0E,kBAAAA,IAAI,CAAC0/D,aAAL1/D,CAAmB2I,CAAnB3I,EAAsB2I,CAAtB3I,EAAyB49E,GAAzB59E;AACAy0D,kBAAAA,MAAM,CAAChiE,IAAPgiE,CAAY9rD,CAAZ8rD;;;;;;;AAOpB,eAAOA,MAAP;;;;;;;;;;;;;;;;;;;;;;;ACxEG,eAAS9qC,IAAT,GAAiB;AACpB,YAAI7d,IAAI,GAAG,IAAX;AAEA,aAAK4nE,UAAL,GAAkB;AACd/2E,UAAAA,CAAC,EAAE,CADW;AAEdC,UAAAA,CAAC,EAAE;AAFW,SAAlB;AAKAkP,QAAAA,IAAI,CAACuiE,SAALviE,CAAe,QAAfA,EAAyB,GAAzBA,EAA8B,CAA9BA,EAAiC,GAAjCA;AACAA,QAAAA,IAAI,CAACuiE,SAALviE,CAAe,QAAfA,EAAyB,GAAzBA,EAA8B,CAA9BA,EAAiC,GAAjCA;AAEAA,QAAAA,IAAI,CAACsnE,SAALtnE,CAAe,QAAfA,EAAyB,MAAzBA;AAEA,YAAIkjC,MAAM,GAAG,EAAb;;AAEAljC,QAAAA,IAAI,CAAC2nE,SAAL3nE,GAAiB,YAAY;AACzBkjC,UAAAA,MAAM,CAAC,CAAD,CAANA,GAAY,KAAK0kC,UAAL,CAAgB/2E,CAA5BqyC;AACAA,UAAAA,MAAM,CAAC,CAAD,CAANA,GAAY,KAAK0kC,UAAL,CAAgB92E,CAA5BoyC;AACA,eAAKgzE,aAAL,CAAmB,CAAnB,EAAsBhzE,MAAtB;AACH,SAJDljC;;AAMAA,QAAAA,IAAI,CAAC4Z,IAAL5Z,GAAYA,IAAI,CAAC2iE,WAAL3iE,EAAZA;;;AAGJ,aAAO8oC,SAAS,CAAC85B,qBAAV95B,aAAAA,CAAP;AACAA,MAAAA,SAAS,CAAC+5B,gBAAV/5B,aAAAA,EAAyCjrB,IAAzCirB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iFC1BA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAQ1lD,OAAO,GAAqBC,UAAU,CAAtCD,OAAR;AAAA,UAAiBE,QAAQ,GAAWD,UAAU,CAA7BC,QAAjB;AAAA,UAA2B2d,IAAI,GAAK5d,UAAU,CAAnB4d,IAA3B,EAEA;;UACYk1G;;AAIX,iBAJWA;AAAAA,QAAAA,WAAW,CAAXA,WAAW,OAAA,CAAXA,IAAW,CAAXA,SAAAA;AAAAA,QAAAA,WAAW,CAAXA,WAAW,SAAA,CAAXA,IAAW,CAAXA,WAAAA;AAAAA,QAAAA,WAAW,CAAXA,WAAW,QAAA,CAAXA,IAAW,CAAXA,UAAAA;OAIX,EAJWA,WAAW,KAAXA,WAAW,6BAAA,CAItB;;AACDhiB,MAAAA,MAAM,CAACgiB,WAAD,CAANhiB;UAEYiiB;;AAIX,iBAJWA;AAAAA,QAAAA,aAAa,CAAbA,aAAa,SAAA,CAAbA,IAAa,CAAbA,WAAAA;AAAAA,QAAAA,aAAa,CAAbA,aAAa,cAAA,CAAbA,IAAa,CAAbA,gBAAAA;AAAAA,QAAAA,aAAa,CAAbA,aAAa,WAAA,CAAbA,IAAa,CAAbA,aAAAA;OAIX,EAJWA,aAAa,KAAbA,aAAa,+BAAA,CAIxB;;AACDjiB,MAAAA,MAAM,CAACiiB,aAAD,CAANjiB;;AAEA,UAAI7hF,SAAe,GAAG,IAAIC,IAAJ,EAAtB;;AACA,UAAIH,SAAe,GAAG,IAAIle,IAAJ,EAAtB;;UAEamiH,SAAS,gCADrBjzH,OAAO,CAAC,WAAD,WAEN6d,IAAI,CAACm1G,aAAD,WAGJn1G,IAAI,CAACm1G,aAAD;AAAe5yH,QAAAA,qCAAA;;AAAA,0BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;;AAAA2d,UAAAA,8FAAA;;AAAAA,UAAAA,iGAAA;;AAAA3d,UAAAA,MAIbs9G,UAJa,GAIamV,WAAW,CAACG,KAJzB;;AAI8Bj1G,UAAAA,2FAAA;;AAAAA,UAAAA,qGAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,0FAAA;;AAAAA,UAAAA,+FAAA;;AAAAA,UAAAA,0FAAA;;AAAA3d,UAAAA,MAuB3C6yH,UAvB2C,GAuB9B,CAvB8B;AAuB7B7yH,UAAAA,MACd8yH,YADc,GACC,CADD;AACE9yH,UAAAA,MAGV+yH,WAHU,GAGU,IAAIviH,IAAJ,EAHV;AAGkBxQ,UAAAA,MAC/BgzH,aAD+B,GACT,IAAInkG,IAAJ,EADS;AACD7uB,UAAAA,MAEjCizH,WAFiC,GAEnB,KAFmB;AAEdjzH,UAAAA,MAEhBkzH,cAFgB,GAEc,IAFd;AAEkB,sBAAA;;;AAAA,wCAAA;;AAAA/yH,QAAAA,OAS5CyL,KAT4C,GAS5C,cAAA,GAAS;AACL,eAAKunH,cAAL;AACH,SAX2C;;AAW3ChzH,QAAAA,OAEDgzH,cAFC,GAED,uBAAA,GAAkB;SAFjB;AAAA;;AAMDhzH,QAAAA,OACAizH,gBADA,GACA,yBAAA,GAAoB;;;;;;;;;;AAahB,kBAAQ,KAAK9V,UAAb;AACI,iBAAKmV,WAAW,CAACY,MAAjB;AACI,mBAAKC,eAAL;AACA;;AACJ,iBAAKb,WAAW,CAACG,KAAjB;AACI,mBAAKW,cAAL;AACA;;AACJ,iBAAKd,WAAW,CAACe,IAAjB;AACI,mBAAKC,aAAL;AACA;AATR;AAWH,SAzBD;;AAyBCtzH,QAAAA,OAEDszH,aAFC,GAED,sBAAA,GAAiB;AACb,cAAI,KAAKP,cAAT,EAAyB;AAC3B,iBAAKA,cAAL,CAAqBjjG,gBAArB,CAAsC,KAAK8iG,WAA3C,EAD2B;;;;AAK3B,iBAAKW,mBAAL;AACG,WAND,MAMO;AACH,iBAAKZ,YAAL,GAAoB,CAApB;AACA,iBAAKG,WAAL,GAAmB,KAAnB;;AAEP,SAbA;;AAaA9yH,QAAAA,OAEDmzH,eAFC,GAED,wBAAA,GAAmB;AACf,cAAIlC,QAAQ,GAAGrxC,IAAI,CAAC4zC,eAAL5zC,EAAf;AACA,cAAI5yE,CAAC,GAAGikH,QAAQ,CAAC53F,KAAT43F,GAAiB,CAAzB;AACA,cAAIhkH,CAAC,GAAGgkH,QAAQ,CAACxyG,MAATwyG,GAAkB,CAA1B,CAHe;;;;;;;;;;AAaf,eAAKsC,mBAAL;AACH,SAhBA;;AAgBAvzH,QAAAA,OAEDozH,cAFC,GAED,uBAAA,GAAkB;;;;;;;;;;;;;AAgBd,eAAKG,mBAAL;AACH,SAnBA;;AAmBAvzH,QAAAA,OAEDuzH,mBAFC,GAED,4BAAA,GAAuB;AACnB,cAAIE,OAAO,GAAG,KAAKvqH,IAAnB,CADmB;;;;AAKrB+mB,UAAAA,QAAQ,CAAC2/C,kBAAT3/C,CAA4B1B,SAA5B0B,EAAuC,KAAK2iG,WAA5C3iG,EAAyDwjG,OAAzDxjG;;AACE,cAAI1B,SAAS,CAAC5tB,MAAV4tB,KAAqB,KAAKmlG,QAA9B,EAAwC;AACpC;;;AAGJnlG,UAAAA,SAAS,CAACpX,SAAVoX,GAVmB;;;;;;;;;;;;AAoBnB,cAAIolG,MAAM,GAAG1jG,QAAQ,CAACyhC,gBAATzhC,CAA0B1Y,IAAI,CAACga,KAALha,CAAWgX,SAAS,CAACvhB,CAArBuK,EAAwBgX,SAAS,CAACrhB,CAAlCqK,CAA1B0Y,CAAb;AACA,cAAI2jG,QAAQ,GAAG,CAAC3jG,QAAQ,CAACyhC,gBAATzhC,CAA0B1Y,IAAI,CAACga,KAALha,CAAWgX,SAAS,CAACthB,CAArBsK,EAAwBgX,SAAS,CAACrhB,CAAlCqK,CAA1B0Y,CAAhB;AACA,cAAI1Y,IAAI,CAACC,GAALD,CAASo8G,MAATp8G,IAAmB,KAAKs8G,mBAA5B,EAAiDD,QAAQ,GAAG,CAAXA;AAEjD,eAAKlB,UAAL,GAAkBziG,QAAQ,CAACq/C,YAATr/C,CAAsB,KAAKyiG,UAAL,GAAkBiB,MAAxC1jG,CAAlB,CAxBmB;;;;AA4Bf,eAAK0iG,YAAL,GAAoB1iG,QAAQ,CAACwuB,KAATxuB,CAAeA,QAAQ,CAACq/C,YAATr/C,CAAsB,KAAK0iG,YAAL,GAAoBiB,QAA1C3jG,CAAfA,EAAoE,KAAK6jG,QAAzE7jG,EAAmF,KAAK8jG,QAAxF9jG,CAApB,CA5Be;;AA+BnB,cAAI+jG,QAAQ,GAAG,KAAKA,QAAL,CAAcL,MAAd,EAAsBC,QAAtB,CAAf;;AACA,cAAII,QAAJ,EAAc;AACV,iBAAKlB,WAAL,GAAmB,IAAnB;;AAEP,SArCA;;AAqCA9yH,QAAAA,OAEDg0H,QAFC,GAED,iBAAA,CAAUL,MAAV,EAAyBC,QAAzB,EAA0C;AACvC,iBAAOr8G,IAAI,CAACC,GAALD,CAASo8G,MAATp8G,IAAmB,KAAK08G,aAAxB18G,IAAyCA,IAAI,CAACC,GAALD,CAASq8G,QAATr8G,IAAqB,KAAK08G,aAA1E;AACF,SAJA;;AAIAj0H,QAAAA,OAEDk0H,YAFC,GAED,qBAAA,CAAcxgG,EAAd,EAAyB,CACxB,CAHA;;AAGA1zB,QAAAA,OAEDm0H,OAFC,GAED,gBAAA,CAASzgG,EAAT,EAAoB;AAChB,eAAKu/F,gBAAL;AACA,eAAKmB,uBAAL;AACH,SALA;;AAKAp0H,QAAAA,OAEDq0H,WAFC,GAED,oBAAA,CAAa3gG,EAAb,EAAyB,CACxB,CAHA;;AAGA1zB,QAAAA,OAEDo0H,uBAFC,GAED,gCAAA,GAA2B;AACvB,cAAI,KAAKE,aAAL,IAAsB/B,aAAa,CAACgC,QAApC,IAAgD,KAAKC,eAAL,IAAwBjC,aAAa,CAACgC,QAA1F,EAAoG;AAChG;;;AAGJ,cAAIE,GAAG,GAAG,CAAV;AAAa,cACTC,KAAK,GAAG,CADC;;AAEb,cAAI,KAAKJ,aAAL,IAAsB/B,aAAa,CAACgC,QAAxC,EAAkD;AAC9CE,YAAAA,GAAG,GAAG,KAAK/B,UAAX+B;;;AAGJ,cAAI,KAAKD,eAAL,IAAwBjC,aAAa,CAACgC,QAA1C,EAAoD;AAChDG,YAAAA,KAAK,GAAG,KAAK/B,YAAb+B;;;AAGJ,cAAIxrH,IAAI,GAAG,KAAKA,IAAhB,CAfuB;;AAgBvBA,UAAAA,IAAI,CAACinD,WAALjnD,CAAiBulB,SAAjBvlB;AACAwlB,UAAAA,IAAI,CAACuvD,SAALvvD,CAAe,KAAKmkG,aAApBnkG,EAAmCgmG,KAAnChmG,EAA0C+lG,GAA1C/lG,EAA+C,CAA/CA;AACAA,UAAAA,IAAI,CAACoD,QAALpD,CAAc,KAAKmkG,aAAnBnkG,EAAkCD,SAAlCC,EAA6C,KAAKmkG,aAAlDnkG;;;;;;AAMH,SA1BA;;AA0BAL,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA;AAnLD,sBAAA,GAAyB;AAAE,mBAAO,KAAKoyH,WAAZ;;;;AAC3BlxH,UAAAA;AAAA89B,UAAAA,KAWA,YAAA,CAA0Bv+B,KAA1B,EAA8C;AAC1C,gBAAIA,KAAK,IAAI,KAAK8xH,cAAlB,EAAkC;AAC9B;;;AAEJ,iBAAKD,WAAL,GAAmB,KAAnB;AACA,iBAAKC,cAAL,GAAsB9xH,KAAtB;;WAkKH;;AAjKA,wBAAA;QA/C6BsK;AAASmT,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAER0zG,aAAa,CAACoC,WAFN;;;AAEiBj2G,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGvB0zG,aAAa,CAACoC,WAHS;;oFAQvDl1H;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACG,KADH;;8FAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACoB,EADpB;;mFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACS,EADT;;mFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACS,CAAC,EADV;;wFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACc,CADd;;mFAGRpf;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACU,GADV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDV,UAAQtf,OAAO,GAAkCC,UAAU,CAAnDD,OAAR;AAAA,UAAiBE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAjB;AAAA,UAA2BghC,iBAAiB,GAAKjhC,UAAU,CAAhCihC,iBAA3B;AAEA,UAAM0tF,cAAc,GAAG,IAAvB;;AAEA,UAAM1iD,QAAQ,GAAG,IAAIp7D,IAAJ,EAAjB;AACA,UAAMukH,QAAQ,GAAG,IAAIvkH,IAAJ,EAAjB;AACA,UAAMwkH,QAAQ,GAAG,IAAIxkH,IAAJ,EAAjB;UAEaykH,aAAa;AAAA,aACtBlhC,MADsB,GACH,IADG;AACC,aACvBl1C,GADuB,GACjB,IAAIruC,IAAJ,EADiB;AACT,aACd0M,GADc,GACR,IAAI1M,IAAJ,EADQ;AACA,aACduyD,MADc,GACL,CADK;AACJ,aACV9f,MADU,GACD,IAAIzyC,IAAJ,EADC;AACO,aAEjB0kH,OAFiB,GAEP,IAAI1kH,IAAJ,EAFO;AAEC,aAClB2kH,OADkB,GACR,IAAI3kH,IAAJ,EADQ;;UAOTs9D,YAAY,mCAFxBpuE,OAAO,CAAC,cAAD,iBACPkhC,iBAAiB;AAAA9gC,QAAAA,wCAAA;;AAAA,6BAAA;AAAA,mBAAA;;AAAA,4EAAA,aAAA,QAAA;AAAAC,YAAAA,UAAA,kBAAA;;;AAAAC,UAAAA,sEAAA;AAAAA,UAAAA,MAEdo1H,WAFc,GAEA,IAAI5kH,IAAJ,EAFA;;AAEUmN,UAAAA,uFAAA;;AAAAA,UAAAA,qGAAA;;AAAA3d,UAAAA,MAmCxB8zF,YAnCwB,GAmCW,CAAC,IAAImhC,aAAJ,EAAD,CAnCX;AAmC8Bj1H,UAAAA,MAEtDksE,aAFsD,SAAA;AAEzClsE,UAAAA,MACb6pC,oBADa,SAAA;AACO7pC,UAAAA,MAEpB0pC,sBAFoB,GAEK,IAAI7K,IAAJ,EAFL;AAEa7+B,UAAAA,MAEjC8pC,cAFiC,SAAA;AAEnB9pC,UAAAA,MACdgzF,YADc,SAAA;AACFhzF,UAAAA,MACZ+yF,cADY,SAAA;AACE/yF,UAAAA,MACdizF,iBADc,SAAA;AACGjzF,UAAAA,MACjBwpC,mBADiB,GACK,IAAI3K,IAAJ,EADL;AACa7+B,UAAAA,MAC9BupC,mBAD8B,GACR,IAAI1K,IAAJ,EADQ;AACA7+B,UAAAA,MAC9BypC,sBAD8B,GACL,IAAI5K,IAAJ,EADK;AACG7+B,UAAAA,MACjC2pC,iCADiC,GACG,IAAI9K,IAAJ,EADH;AACW7+B,UAAAA,MAG5Cq1H,OAH4C,GAGlC,IAAIpoH,QAAQ,CAACoxD,IAAb,EAHkC;AAGfr+D,UAAAA,MAG7BqpC,SAH6B,GAGjB,IAAI74B,IAAJ,EAHiB;AAGPxQ,UAAAA,MACtBs1H,SADsB,GACV,IAAI9kH,IAAJ,EADU;AACAxQ,UAAAA,MACtBspC,WADsB,GACR,IAAI94B,IAAJ,EADQ;AACExQ,UAAAA,MAGxBu1H,QAHwB,GAGb,GAHa;AAGVv1H,UAAAA,MAGdw1H,WAHc,GAGA,CAHA;AAGCx1H,UAAAA,MAEfy1H,WAFe,GAED,IAFC;AAEGz1H,UAAAA,MAClB4zF,mBADkB,GACI,CADJ;AACK5zF,UAAAA,MAEvB6rE,oBAFuB,GAEA,CAFA;;AAECluD,UAAAA,6FAAA;;AAAA,sBAAA;;;AAAA,2CAAA;;;;;;AAMxBxd,QAAAA,OAEA4sE,cAFA,GAEA,uBAAA,CAAgB3kE,GAAhB,EAA0B4kE,eAA1B,EAA6D,CAAG,CAFhE;;AAEgE7sE,QAAAA,OAChE8rE,aADgE,GAChE,sBAAA,CAAe7jE,GAAf,EAAyBkH,KAAzB,EAAwC,CAAG,CADqB;;AACrBnP,QAAAA,OAE3CsvH,aAF2C,GAE3C,sBAAA,CAAej2F,KAAf,EAA8B5a,MAA9B,EAA8CghB,MAA9C,EAAkE;AAC9D,cAAI4vF,OAAO,GAAGj3F,QAAQ,CAACC,IAATD,CAAe8c,MAAf9c,CAAsBk3F,aAAtBl3F,CAAoC,IAAId,GAAG,CAACi4F,WAAR,CAC9Cj4F,GAAG,CAACk4F,WAAJl4F,CAAgBm4F,KAD8B,EAE9Cn4F,GAAG,CAACo4F,eAAJp4F,CAAoBq4F,OAApBr4F,GAA8BA,GAAG,CAACo4F,eAAJp4F,CAAoBs4F,YAFJ,EAG9CnwF,MAH8C,EAI9CpG,KAJ8C,EAK9C5a,MAL8C,CAApC2Z,CAAd;AAQA,iBAAOi3F,OAAP;AACH,SAZ0C;;AAY1CrvH,QAAAA,OAEDoL,SAFC,GAED,kBAAA,GAAa;AACT,eAAKmqH,kBAAL,GAA0B,KAAKA,kBAA/B;;AACA,eAAKN,WAAL,CAAiBz1F,GAAjB,CAAqB,KAAKwzD,MAA1B,EAAkCl8E,QAAlC,CAA2CzG,IAAI,CAAC4nE,GAAhD;;AAEA,eAAKu9C,WAAL;AACH,SAPA;;AAOAx1H,QAAAA,OAEDw1H,WAFC,GAED,oBAAA,GAAe;AACX,cAAI9pD,oBAAoB,GAAG,KAAKA,oBAAhC,CADW;;AAIX,eAAKK,aAAL,GAAqB,IAAI0H,YAAJ,CAAiB,IAAI/H,oBAAJ,GAA2B,KAAK0pD,QAAjD,CAArB;AACA,eAAK1rF,oBAAL,GAA4B,KAAK4lF,aAAL,CAAmB5jD,oBAAnB,EAAyC,KAAK0pD,QAA9C,EAAwD99F,GAAG,CAACuE,MAAJvE,CAAWsQ,OAAnE,CAA5B,CALW;;AAQX,eAAK2B,sBAAL,CAA4Bv8B,CAA5B,GAAgC,MAAM,KAAK08B,oBAAL,CAA2BrQ,KAAjE;AACA,eAAKkQ,sBAAL,CAA4Bt8B,CAA5B,GAAgC,MAAM,KAAKy8B,oBAAL,CAA2BjrB,MAAjE;AACH,SAZA;;AAYAze,QAAAA,OAEDy1H,WAFC,GAED,oBAAA,GAAe;AACX,cAAI,KAAKH,WAAT,EAAsB;AAClB,iBAAKA,WAAL,GAAmB,KAAnB;AAEA,gBAAMI,EAAE,GAAG,KAAK1iC,MAAL,CAAYhmF,CAAvB;AACA,gBAAM2oH,EAAE,GAAG,KAAK3iC,MAAL,CAAY/lF,CAAvB;AACA,gBAAM2oH,EAAE,GAAG,KAAK5iC,MAAL,CAAY9lF,CAAvB,CALkB;;AAQlB,gBAAM2oH,QAAQ,GAAGH,EAAE,GAAGC,EAALD,GAAUE,EAA3B;AACA,gBAAME,WAAW,GAAG,KAAKriC,mBAAL,GAA2BoiC,QAA/C,CATkB;;AAYlB,gBAAIx8F,KAAK,GAAG9hB,IAAI,CAACytD,IAALztD,CAAUA,IAAI,CAACgvE,IAALhvE,CAAUu+G,WAAVv+G,CAAVA,CAAZ;AACA8hB,YAAAA,KAAK,GAAG05C,OAAO,CAAC15C,KAAD,EAAQ,KAAKo6D,mBAAb,CAAfp6D;AACA,gBAAM5a,MAAM,GAAGlH,IAAI,CAACytD,IAALztD,CAAUu+G,WAAW,GAAGz8F,KAAxB9hB,CAAf,CAdkB;;AAiBlB,gBAAI8hB,KAAK,GAAG80F,cAAR90F,IAA0B5a,MAAM,GAAG0vG,cAAvC,EAAuD;;AAEnD/qH,cAAAA,OAAO,CAACqB,KAARrB,CAAc,sEAAdA,EAFmD;aAjBrC;;;AAwBlB,iBAAKimC,mBAAL,CAAyBr8B,CAAzB,GAA6B0oH,EAA7B;AACA,iBAAKrsF,mBAAL,CAAyBp8B,CAAzB,GAA6B0oH,EAA7B;AACA,iBAAKtsF,mBAAL,CAAyBn8B,CAAzB,GAA6B0oH,EAA7B,CA1BkB;;AA6BlB,iBAAKxsF,mBAAL,CAAyBp8B,CAAzB,GAA6B,KAAKymF,mBAAlC;AACA,iBAAKrqD,mBAAL,CAAyBn8B,CAAzB,GAA6ByoH,EAAE,GAAGE,EAALF,GAAU,KAAKjiC,mBAA5C;AACA,iBAAKrqD,mBAAL,CAAyBl8B,CAAzB,GAA6BwoH,EAAE,GAAG,KAAKjiC,mBAAvC,CA/BkB;;AAkClB,iBAAKZ,YAAL,GAAoB,IAAIkjC,UAAJ,CAAe,IAAI18F,KAAJ,GAAY5a,MAA3B,CAApB;AACA,iBAAKm0E,cAAL,GAAsB,IAAIjf,UAAJ,CAAekiD,QAAf,CAAtB;AACA,iBAAK/iC,iBAAL,GAAyB,IAAIrf,YAAJ,CAAiB,IAAIp6C,KAAJ,GAAY5a,MAA7B,CAAzB;AAEA,iBAAK6qB,sBAAL,CAA4Bt8B,CAA5B,GAAgCqsB,KAAhC;AACA,iBAAKiQ,sBAAL,CAA4Br8B,CAA5B,GAAgC,MAAMosB,KAAtC;AACA,iBAAKiQ,sBAAL,CAA4Bp8B,CAA5B,GAAgC,MAAMuR,MAAtC;;AAEA,gBAAI,KAAKkrB,cAAT,EAAyB;AACrB,mBAAKA,cAAL,CAAoBn3B,OAApB;;;AAEJ,iBAAKm3B,cAAL,GAAsB,KAAK2lF,aAAL,CAAmBj2F,KAAnB,EAA0B5a,MAA1B,EAAkC6Y,GAAG,CAACuE,MAAJvE,CAAWwG,KAA7C,CAAtB;;AAEP,SAlDA;;AAkDA99B,QAAAA,OAEDg2H,cAFC,GAED,uBAAA,CAAgB7V,OAAhB,EAA8B;;AAG1B,cAAMzsB,WAAW,GAAG,KAAKC,YAAzB;AACA,cAAIsiC,QAAQ,GAAG,CAAf;;AAEA,eAAK,IAAIv1H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGy/G,OAAO,CAACx/G,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;;AAErC,gBAAMuH,GAAG,GAAGk4G,OAAO,CAACz/G,CAAD,CAAnB,CAFqC;;;;;AAQrC,gBAAIu1H,QAAQ,GAAG,KAAKb,QAApB,EAA8B;;AAG1B,kBAAIvoD,eAAe,SAAnB;;AACA,kBAAIopD,QAAQ,GAAGviC,WAAW,CAAC/yF,MAA3B,EAAmC;AAC/BksE,gBAAAA,eAAe,GAAG6mB,WAAW,CAACuiC,QAAD,CAA7BppD;AACH,eAFD,MAEO;;AAEHA,gBAAAA,eAAe,GAAG,IAAIioD,aAAJ,EAAlBjoD;AACA6mB,gBAAAA,WAAW,CAAC5wF,IAAZ4wF,CAAiB7mB,eAAjB6mB;eATsB;;;AAa1B7mB,cAAAA,eAAe,CAAC+mB,MAAhB/mB,GAAyB5kE,GAAzB4kE;AACA,mBAAKD,cAAL,CAAoB3kE,GAApB,EAAyB4kE,eAAzB;AAEAopD,cAAAA,QAAQ;AACX,aAjBD,MAiBO;AACH7yH,cAAAA,OAAO,CAACC,IAARD,CAAa,oCAAoC,KAAKgyH,QAAL,GAAgB,CAApD,IAAyD,sCAAtEhyH;AACA;;;;AAIRswF,UAAAA,WAAW,CAAC/yF,MAAZ+yF,GAAqBuiC,QAArBviC;SAvCH;AAAA;;AA0CD1zF,QAAAA,OACAk2H,cADA,GACA,uBAAA,GAAkB;AACd,cAAMxiC,WAAW,GAAG,KAAKC,YAAzB,CADc;;AAId,cAAMj1C,GAAG,GAAG,KAAKxV,SAAjB;AACA,cAAMnsB,GAAG,GAAG,KAAKo4G,SAAjB,CALc;;AAQd,cAAIzhC,WAAW,CAAC/yF,MAAZ+yF,GAAqB,CAAzB,EAA4B;;AAGxBrjF,YAAAA,IAAI,CAAC0B,IAAL1B,CAAUquC,GAAVruC,EAAeqjF,WAAW,CAAC,CAAD,CAAXA,CAAeh1C,GAA9BruC;AACAA,YAAAA,IAAI,CAAC0B,IAAL1B,CAAU0M,GAAV1M,EAAeqjF,WAAW,CAAC,CAAD,CAAXA,CAAe32E,GAA9B1M;;AAEA,iBAAK,IAAI3P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgzF,WAAW,CAAC/yF,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;;AAGzCiyE,cAAAA,QAAQ,CAACj0B,GAAD,EAAMA,GAAN,EAAWg1C,WAAW,CAAChzF,CAAD,CAAXgzF,CAAeh1C,GAA1B,CAARi0B;AACAC,cAAAA,QAAQ,CAAC71D,GAAD,EAAMA,GAAN,EAAW22E,WAAW,CAAChzF,CAAD,CAAXgzF,CAAe32E,GAA1B,CAAR61D;;AAEP,WAZD,MAYO;;AAGHl0B,YAAAA,GAAG,CAAClf,GAAJkf,CAAQ,CAARA,EAAW,CAAXA,EAAc,CAAdA;AACA3hC,YAAAA,GAAG,CAACyiB,GAAJziB,CAAQ,CAARA,EAAW,CAAXA,EAAc,CAAdA;WAxBU;;;AA4Bd1M,UAAAA,IAAI,CAACyG,QAALzG,CAAc,KAAK84B,WAAnB94B,EAAgC0M,GAAhC1M,EAAqCquC,GAArCruC;AAEA,cAAM84B,WAAW,GAAG,KAAKA,WAAzB;AACA,eAAKK,iCAAL,CAAuCx8B,CAAvC,GAA2C,KAAKgmF,MAAL,CAAYhmF,CAAZ,GAAgBm8B,WAAW,CAACn8B,CAAvE;AACA,eAAKw8B,iCAAL,CAAuCv8B,CAAvC,GAA2C,KAAK+lF,MAAL,CAAY/lF,CAAZ,GAAgBk8B,WAAW,CAACl8B,CAAvE;AACA,eAAKu8B,iCAAL,CAAuCt8B,CAAvC,GAA2C,KAAK8lF,MAAL,CAAY9lF,CAAZ,GAAgBi8B,WAAW,CAACj8B,CAAvE;AACA,eAAKs8B,iCAAL,CAAuChM,CAAvC,GAA2C,KAAKi2D,mBAAhD;;AAEA,cAAIC,WAAW,CAAC/yF,MAAZ+yF,GAAqB,CAAzB,EAA4B;AACxB,iBAAK,IAAIhzF,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGgzF,WAAW,CAAC/yF,MAAhC,EAAwCD,EAAC,EAAzC,EAA6C;AACzC,kBAAImsE,eAAe,GAAG6mB,WAAW,CAAChzF,EAAD,CAAjC;AACA,mBAAKy1H,cAAL,CAAoBtpD,eAApB,EAAqCA,eAAe,CAACkoD,OAArD,EAA8DloD,eAAe,CAACmoD,OAA9E;;;SAxCZ;AAAA;;AA6CAh1H,QAAAA,OACAm2H,cADA,GACA,uBAAA,CAAgBtpD,eAAhB,EAAmDnuB,GAAnD,EAA8D3hC,GAA9D,EAAyE;;AAErE2hC,UAAAA,GAAG,CAAClf,GAAJkf,CAAQmuB,eAAe,CAACnuB,GAAxBA;AACAA,UAAAA,GAAG,CAAC5nC,QAAJ4nC,CAAa,KAAKxV,SAAlBwV;AACAA,UAAAA,GAAG,CAAC03E,MAAJ13E,CAAW,KAAKvV,WAAhBuV;AACAA,UAAAA,GAAG,CAAC5sB,QAAJ4sB,CAAa,KAAKs0C,MAAlBt0C;AACAm0B,UAAAA,UAAU,CAACn0B,GAAD,EAAMA,GAAN,CAAVm0B,CANqE;;AASrE91D,UAAAA,GAAG,CAACyiB,GAAJziB,CAAQ8vD,eAAe,CAAC9vD,GAAxBA;AACAA,UAAAA,GAAG,CAACjG,QAAJiG,CAAa,KAAKmsB,SAAlBnsB;AACAA,UAAAA,GAAG,CAACq5G,MAAJr5G,CAAW,KAAKosB,WAAhBpsB;AACAA,UAAAA,GAAG,CAAC+U,QAAJ/U,CAAa,KAAKi2E,MAAlBj2E;AACA81D,UAAAA,UAAU,CAAC91D,GAAD,EAAMA,GAAN,CAAV81D,CAbqE;;AAgBrED,UAAAA,QAAQ,CAACl0B,GAAD,EAAMA,GAAN,EAAWruC,IAAI,CAAC0S,IAAhB,CAAR6vD;AACAD,UAAAA,QAAQ,CAAC51D,GAAD,EAAMA,GAAN,EAAW,KAAKk4G,WAAhB,CAARtiD;AACH,SAnBD;;AAmBC3yE,QAAAA,OAED2yF,cAFC,GAED,uBAAA,GAAkB;;AAGd,eAAKC,cAAL,CAAqB7mC,IAArB,CAA0B,CAA1B;AACA,eAAK8mC,YAAL,CAAmB9mC,IAAnB,CAAwB,CAAxB;AACA,eAAK+mC,iBAAL,CAAwB/mC,IAAxB,CAA6B2kC,QAA7B,EALc;;AAQd,cAAMqC,IAAI,GAAG,KAAKC,MAAL,CAAYhmF,CAAzB;AACA,cAAMimF,IAAI,GAAG,KAAKD,MAAL,CAAY/lF,CAAzB;AACA,cAAMimF,IAAI,GAAG,KAAKF,MAAL,CAAY9lF,CAAzB;AACA,cAAMimF,MAAM,GAAG,KAAKP,cAApB;AACA,cAAMQ,SAAS,GAAG,KAAKN,iBAAvB;AACA,cAAMO,KAAK,GAAG,KAAKC,mBAAnB;AACA,cAAMC,QAAQ,GAAG,KAAKV,YAAtB;AACA,cAAMW,kBAAkB,GAAG,KAAKC,mBAAhC;AAEA,cAAMC,WAAW,GAAG,KAAKC,YAAzB,CAjBc;;AAmBd,eAAK,IAAIjzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgzF,WAAW,CAAC/yF,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,gBAAMmsE,eAAe,GAAG6mB,WAAW,CAAChzF,CAAD,CAAnC;AACA,gBAAMkzF,MAAM,GAAG/mB,eAAe,CAAC+mB,MAA/B,CAFyC;;AAKzC,gBAAIA,MAAJ,EAAY;AACR,mBAAK9nB,aAAL,CAAmB8nB,MAAnB,EAA2BlzF,CAA3B;;;;AAIR,cAAMoiD,MAAM,GAAG,IAAIzyC,IAAJ,EAAf;AACA,cAAIgmH,aAAa,GAAG,EAApB;;AACA,cAAI77C,IAAI,GAAG,SAAPA,IAAO,CAACrmC,CAAD,EAAsBoJ,CAAtB,EAA8C;AACrD,gBAAI+4E,EAAE,GAAGjmH,IAAI,CAACjD,QAALiD,CAAc8jC,CAAC,CAAC2O,MAAhBzyC,EAAwByyC,MAAxBzyC,CAAT;AACA,gBAAIkmH,EAAE,GAAGlmH,IAAI,CAACjD,QAALiD,CAAcktC,CAAC,CAACuF,MAAhBzyC,EAAwByyC,MAAxBzyC,CAAT;AACA,mBAAOimH,EAAE,GAAGC,EAAZ;AACH,WAJD;;AAKA,eAAK,IAAItpH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgmF,IAApB,EAA0BhmF,CAAC,EAA3B,EAA+B;AAC3B,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgmF,IAApB,EAA0BhmF,CAAC,EAA3B,EAA+B;AAC3B,mBAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+lF,IAApB,EAA0B/lF,CAAC,EAA3B,EAA+B;AAE3BqpH,gBAAAA,aAAa,CAAC11H,MAAd01H,GAAuB,CAAvBA;;AACA,qBAAK,IAAI31H,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGgzF,WAAW,CAAC/yF,MAAhC,EAAwCD,GAAC,EAAzC,EAA6C;AACzC,sBAAMmsE,gBAAe,GAAG6mB,WAAW,CAAChzF,GAAD,CAAnC;;AACA,sBAAImsE,gBAAe,CAACkoD,OAAhBloD,CAAwB7/D,CAAxB6/D,GAA4B7/D,CAA5B6/D,IAAiCA,gBAAe,CAACkoD,OAAhBloD,CAAwB5/D,CAAxB4/D,GAA4B5/D,CAA7D4/D,IAAkEA,gBAAe,CAACkoD,OAAhBloD,CAAwB3/D,CAAxB2/D,GAA4B3/D,CAA9F2/D,IACAA,gBAAe,CAACmoD,OAAhBnoD,CAAwB7/D,CAAxB6/D,GAA4B7/D,CAD5B6/D,IACiCA,gBAAe,CAACmoD,OAAhBnoD,CAAwB5/D,CAAxB4/D,GAA4B5/D,CAD7D4/D,IACkEA,gBAAe,CAACmoD,OAAhBnoD,CAAwB3/D,CAAxB2/D,GAA4B3/D,CADlG,EACqG;AACjG;;;AAEJmpH,kBAAAA,aAAa,CAACvzH,IAAduzH,CAAmBxpD,gBAAnBwpD;;;AAEHvzE,gBAAAA,MAAM,CAACtjB,GAAPsjB,CAAW,KAAK3Z,WAAhB2Z,EAAsCgxC,UAAtChxC,CAAiD,CAAC91C,CAAC,GAAG,GAAL,IAAY+lF,IAA7DjwC,EAAmE,CAAC71C,CAAC,GAAG,GAAL,IAAYgmF,IAA/EnwC,EAAqF,CAAC51C,CAAC,GAAG,GAAL,IAAYgmF,IAAjGpwC,EAAuG5rC,GAAvG4rC,CAA2G,KAAK5Z,SAAhH4Z;AACDuzE,gBAAAA,aAAa,CAAC77C,IAAd67C,CAAmB77C,IAAnB67C;AAEA,oBAAMxiC,YAAY,GAAG7mF,CAAC,GAAG+lF,IAAI,IAAI7lF,CAAC,GAAGD,CAAC,GAAGimF,IAAZ,CAA7B;AACA,oBAAItxF,KAAK,GAAGuxF,MAAM,CAACU,YAAD,CAAlB;;AACA,qBAAK,IAAInzF,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG21H,aAAa,CAAC11H,MAAlC,EAA0CD,GAAC,EAA3C,EAA+C;AAC3C,sBAAMmsE,iBAAe,GAAGwpD,aAAa,CAAC31H,GAAD,CAArC;;AAEA,sBAAIkB,KAAK,GAAGyxF,KAAZ,EAAmB;AACfE,oBAAAA,QAAQ,CAACC,kBAAkB,GAAGK,YAArBL,GAAoC,CAApCA,GAAwC5xF,KAAzC,CAAR2xF,GAA0DG,WAAW,CAACt0B,OAAZs0B,CAAoB7mB,iBAApB6mB,CAA1DH;AACAJ,oBAAAA,MAAM,CAACU,YAAD,CAANV,GAAuB,EAAEvxF,KAAzBuxF;;;;;;AAUvB,SAvEA;;AAuEAnzF,QAAAA,OAEDgtE,WAFC,GAED,oBAAA,GAAe;AACX,iBAAO,EAAP;AACH,SAJA;;AAIAhtE,QAAAA,OAED0D,MAFC,GAED,eAAA,CAAQgwB,EAAR,EAAY;AACR,cAAIysF,OAAO,GAAG,KAAKnzC,WAAL,EAAd;AACA,eAAKgpD,cAAL,CAAoB7V,OAApB;AACA,eAAK+V,cAAL;AACA,eAAKT,WAAL;AACA,eAAK9iC,cAAL;AACA,eAAK6jC,cAAL;AAEA,eAAKC,SAAL;AACH,SAXA;;AAWAz2H,QAAAA,OAEDw2H,cAFC,GAED,uBAAA,GAAkB;AACd,cAAIthF,MAAM,GAAG9c,QAAQ,CAACC,IAATD,CAAe8c,MAA5B;AAEA,cAAIvL,cAAc,GAAG,KAAKA,cAA1B;AACA,cAAIkpD,YAAY,GAAG,KAAKA,YAAxB;;AACA,cAAIlpD,cAAc,IAAIkpD,YAAtB,EAAoC;AAChC,gBAAI6jC,MAAM,GAAG,IAAIp/F,GAAG,CAAC23F,iBAAR,CAA0BluH,SAA1B,EAAqCA,SAArC,EAAgD4oC,cAAc,CAAClrB,MAA/D,EAAuE1d,SAAvE,EAAkF,IAAIu2B,GAAG,CAAC63F,MAAR,CAAexlF,cAAc,CAACtQ,KAA9B,EAAqCsQ,cAAc,CAAClrB,MAApD,CAAlF,CAAb;AACAy2B,YAAAA,MAAM,CAACyhF,oBAAPzhF,CAA4B,CAAC29C,YAAD,CAA5B39C,EAA4CvL,cAA5CuL,EAA4D,CAACwhF,MAAD,CAA5DxhF;;;AAGJ,cAAI62B,aAAa,GAAG,KAAKA,aAAzB;AACA,cAAIriC,oBAAoB,GAAG,KAAKA,oBAAhC;;AACA,cAAIqiC,aAAa,IAAIriC,oBAArB,EAA2C;AACvC,gBAAIgtF,OAAM,GAAG,IAAIp/F,GAAG,CAAC23F,iBAAR,CAA0BluH,SAA1B,EAAqCA,SAArC,EAAgD2oC,oBAAoB,CAACjrB,MAArE,EAA6E1d,SAA7E,EAAwF,IAAIu2B,GAAG,CAAC63F,MAAR,CAAezlF,oBAAoB,CAACrQ,KAApC,EAA2CqQ,oBAAoB,CAACjrB,MAAhE,CAAxF,CAAb;;AACAy2B,YAAAA,MAAM,CAACyhF,oBAAPzhF,CAA4B,CAAC62B,aAAD,CAA5B72B,EAA6CxL,oBAA7CwL,EAAmE,CAACwhF,OAAD,CAAnExhF;;AAEP,SAlBA;;AAkBAl1C,QAAAA,OAEDoR,SAFC,GAED,kBAAA,GAAa;AAAA,kCAAA,uBAAA;;AACT,uCAAKu4B,cAAL,SAAA,SAAA,GAAAitF,qBAAqBpkH,OAArB,EAAA;AACA,wCAAKk3B,oBAAL,SAAA,SAAA,GAAAmtF,sBAA2BrkH,OAA3B,EAAA;AACH,SALA;;AAKAxS,QAAAA,OAKDy2H,SALC,GAKD,kBAAA,GAAa;AACT,cAAI,CAAC,KAAKK,WAAV,EAAuB;AACnB;;;AAGJ,cAAI9vF,gBAAgB,GAAGH,mBAAmB,EAA1C;;AACA,cAAI,CAACG,gBAAL,EAAuB;AACnB;;;AAGJ,eAAK+vF,WAAL,CAAiB/vF,gBAAjB,EAVS;AAYZ,SAjBA;;AAiBAhnC,QAAAA,OAED+2H,WAFC,GAED,oBAAA,CAAa/vF,gBAAb,EAAiD;AAC7C,cAAIgwF,KAAK,GAAG,KAAKA,KAAjB;AACCvrD,UAAAA,QAAQ,CAACjsC,GAATisC,CAAa,KAAKtiC,WAAlBsiC,EAAwC2qD,MAAxC3qD,CAA+CurD,KAA/CvrD;AACD,cAAIwrD,KAAK,GAAGxrD,QAAQ,CAACz+D,CAArB;AACA,cAAIkqH,KAAK,GAAGzrD,QAAQ,CAACx+D,CAArB;AACA,cAAIkqH,KAAK,GAAG1rD,QAAQ,CAACv+D,CAArB;AAEA,cAAIknG,UAAU,GAAG,IAAIplC,IAAJ,EAAjB;AACA,cAAIqlC,YAAY,GAAG,IAAIvnG,QAAQ,CAACoxD,IAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,CAAnB;AACA,cAAI+1C,SAAS,GAAG,IAAIx8E,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,EAAzB,CAAhB;AAEA,cAAIhsB,KAAK,GAAG,IAAI4E,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAZ;AACA,cAAIqK,GAAG,GAAGs8G,KAAV;;AAEA,eAAK,IAAIhqH,CAAC,GAAGvB,KAAK,CAACuB,CAAnB,EAAsBA,CAAC,GAAG0N,GAAG,CAAC1N,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AAClC,iBAAK,IAAIC,CAAC,GAAGxB,KAAK,CAACwB,CAAnB,EAAsBA,CAAC,GAAGyN,GAAG,CAACzN,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AAClC,mBAAK,IAAIC,CAAC,GAAGzB,KAAK,CAACyB,CAAnB,EAAsBA,CAAC,GAAGwN,GAAG,CAACxN,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACjC0nH,gBAAAA,QAAQ,CAACp1F,GAATo1F,CAAa,KAAK1rF,SAAlB0rF,EAAsCn6G,KAAtCm6G,CAA4CqC,KAAK,IAAIjqH,CAAC,GAAG,GAAR,CAAjD4nH,EAA+DsC,KAAK,IAAIjqH,CAAC,GAAG,GAAR,CAApE2nH,EAAkFuC,KAAK,IAAIjqH,CAAC,GAAG,GAAR,CAAvF0nH;AAEDnpD,gBAAAA,QAAQ,CAACjsC,GAATisC,CAAawrD,KAAbxrD,EAAoByrD,KAApBzrD,EAA2B0rD,KAA3B1rD;AACA2oC,gBAAAA,UAAU,CAACgjB,OAAXhjB,CAAmB1lF,IAAI,CAACkF,QAAxBwgF,EAA0CwgB,QAA1CxgB,EAA4D3oC,QAA5D2oC;AAEAptE,gBAAAA,gBAAgB,CAACstE,cAAjBttE,CAAgCqtE,YAAhCrtE,EAA8CitE,SAA9CjtE,EAAyD,KAAzDA,EAAgE,KAAhEA,EAAuEjmC,SAAvEimC,EAAkF,IAAlFA,EAAwFotE,UAAxFptE,EANkC;;;;;;;;;;;;;;;;;SAlBjD;;;;;;;;;;;;AAAA;;AA4DD3Y,QAAAA;AAAA3sB,UAAAA;AAAAlB,UAAAA,KA/bA,YAAA,GACa;AACT,mBAAO,KAAKwyF,MAAZ;AACH;AAAAxzD,UAAAA,KACD,YAAA,CAAWv+B,KAAX,EAAkB;;AAEdwqE,YAAAA,QAAQ,CAACjsC,GAATisC,CAAaxqE,KAAbwqE;AACAoH,YAAAA,UAAU,CAACpH,QAAD,EAAWA,QAAX,CAAVoH;;AAEA,gBAAI,CAAC,KAAKmgB,MAAL,CAAYl4C,MAAZ,CAAmB2wB,QAAnB,CAAL,EAAmC;AAC/B,mBAAKunB,MAAL,CAAYxzD,GAAZ,CAAgBisC,QAAhB;;AACA,mBAAKwpD,WAAL,CAAiBz1F,GAAjB,CAAqBisC,QAArB,EAA+B30D,QAA/B,CAAwCzG,IAAI,CAAC4nE,GAA7C;;AACA,mBAAKq9C,WAAL,GAAmB,IAAnB;;;;AAEP5zH,UAAAA;AAAAlB,UAAAA,KAKD,YAAA,GAC0B;AACtB,mBAAO,KAAK8yF,mBAAZ;AACH;AAAA9zD,UAAAA,KACD,YAAA,CAAwB59B,KAAxB,EAA+B;;AAG3B,gBAAM2zH,kBAAkB,GAAGxiD,OAAO,CAACnxE,KAAD,EAAQ,CAAR,CAAlC;AACA,iBAAK0xF,mBAAL,GAA2B1xF,KAA3B;AACA,iBAAK6xF,mBAAL,GAA2B8hC,kBAAkB,GAAG,CAAhD;AACA,iBAAKD,WAAL,GAAmB,IAAnB;;WAkaJ;;AAjaC,2BAAA;QAlCkD/pH,mFAElD9L;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACA,IAAIxO,IAAJ,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CADA;;iEAER5Q,gLAiBAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACa,CADb;;8EAERpf,qLAiWAA;AAAQif,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBACK,KADL;;mBAzXK,CAAjB4hB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBD,UAAQrjB,IAAI,GAAwB5d,UAAU,CAAtC4d,IAAR;AAAA,UAAc3d,QAAQ,GAAcD,UAAU,CAAhCC,QAAd;AAAA,UAAwBF,OAAO,GAAKC,UAAU,CAAtBD,OAAxB;AACA,UAAQ67B,UAAU,GAAmGC,SAAS,CAAtHD,UAAR;AAAA,UAAoBE,cAAc,GAAmFD,SAAS,CAA1GC,cAApB;AAAA,UAAoCC,UAAU,GAAuEF,SAAS,CAA1FE,UAApC;AAAA,UAAgDC,iBAAiB,GAAoDH,SAAS,CAA9EG,iBAAhD;AAAA,UAAmEC,SAAS,GAAyCJ,SAAS,CAA3DI,SAAnE;AAAA,UAA8EC,UAAU,GAA6BL,SAAS,CAAhDK,UAA9E;AAAA,UAA0FC,SAAS,GAAkBN,SAAS,CAApCM,SAA1F;AAAA,UAAqGC,WAAW,GAAKP,SAAS,CAAzBO,WAArG;AACA,UAAQC,MAAM,GAAqDvE,GAAG,CAA9DuE,MAAR;AAAA,UAAgBC,MAAM,GAA6CxE,GAAG,CAAtDwE,MAAhB;AAAA,UAAwBC,OAAO,GAAoCzE,GAAG,CAA9CyE,OAAxB;AAAA,UAAiCC,YAAY,GAAsB1E,GAAG,CAArC0E,YAAjC;AAAA,UAA+CvE,KAAK,GAAeH,GAAG,CAAvBG,KAA/C;AAAA,UAAsDwE,QAAQ,GAAK3E,GAAG,CAAhB2E,QAAtD;AAEA,UAAI2N,YAAY,GAAG,IAAItS,GAAG,CAACsH,OAAR,CAAgB,IAAItH,GAAG,CAACuH,WAAR,CAC/BvH,GAAG,CAACwH,MAAJxH,CAAWymB,KADoB,EACbzmB,GAAG,CAACwH,MAAJxH,CAAWymB,KADE,CAAhB,EAEhB,CAFgB,CAAnB;AAGCnU,MAAAA,YAAY,CAASoU,MAArBpU,GAA8B,IAA9BA;UAGYogE,eAAe,sCAD3BzqG,OAAO,CAAC,iBAAD,WAMHE,QAAQ,CAAC;AAAE08B,QAAAA,QAAQ,EAAE;AAAZ,OAAD,WAGR18B,QAAQ,CAAC;AAAE08B,QAAAA,QAAQ,EAAE;AAAZ,OAAD;AAAoBx8B,QAAAA,2CAAA;;AAG7B,gCAAA,GAAe;AAAA,mBAAA;;AACXE,UAAAA,qCAAA;AAAQA,UAAAA,MAXZm3B,aAWY,GAXI,aAWJ;AAXiBn3B,UAAAA,MAC7B0oC,WAD6B,GACuB,IAAI1O,GAAJ,EADvB;AAC8Bh6B,UAAAA,MAC3D+3B,WAD2D,GAC7C,IAD6C;;AACzCpa,UAAAA,qFAAA;;AAAAA,UAAAA,6FAAA;;AAAA3d,UAAAA,MAuClBstC,MAvCkB,GAuCT,CAvCS;AAuCRttC,UAAAA,MACVq+C,OADU,GACA,IAAIlkB,IAAJ,EADA;AACQn6B,UAAAA,MAClBw3H,YADkB,GACH,IAAI34F,IAAJ,EADG;AACK7+B,UAAAA,MAEvBy3H,QAFuB,GAEZ,IAAIt9F,IAAJ,EAFY;AAEJn6B,UAAAA,MAEnB03H,aAFmB,GAEH,CAFG;AAEF13H,UAAAA,MACjB23H,OADiB,GACP,KADO;AAlCA;AACTzkH,YAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgB6wC,WAAzB7wD,EAAsClT,MAAKgkE,YAA3C9wD,+BAAAA;AACAA,YAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBE,WAAzBlgB,EAAsClT,MAAK43H,WAA3C1kH,+BAAAA;AACAA,YAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBkjC,UAAzBljD,EAAqClT,MAAKq2D,WAA1CnjD,+BAAAA;AACAA,YAAAA,KAAK,CAAClQ,EAANkQ,CAASggB,KAAK,CAACC,SAAND,CAAgBI,SAAzBpgB,EAAoClT,MAAK63H,SAAzC3kH,+BAAAA;;AACH,sBAAA;;;AAEJ,8CAAA;;AAAA/S,QAAAA,OAGDwS,OAHC,GAGD,gBAAA,GAAW;AACM;AACTO,YAAAA,KAAK,CAAC9P,GAAN8P,CAAUggB,KAAK,CAACC,SAAND,CAAgB6wC,WAA1B7wD,EAAuC,KAAK8wD,YAA5C9wD,EAA0D,IAA1DA;AACAA,YAAAA,KAAK,CAAC9P,GAAN8P,CAAUggB,KAAK,CAACC,SAAND,CAAgBE,WAA1BlgB,EAAuC,KAAK0kH,WAA5C1kH,EAAyD,IAAzDA;AACAA,YAAAA,KAAK,CAAC9P,GAAN8P,CAAUggB,KAAK,CAACC,SAAND,CAAgBkjC,UAA1BljD,EAAsC,KAAKmjD,WAA3CnjD,EAAwD,IAAxDA;AACAA,YAAAA,KAAK,CAAC9P,GAAN8P,CAAUggB,KAAK,CAACC,SAAND,CAAgBI,SAA1BpgB,EAAqC,KAAK2kH,SAA1C3kH,EAAqD,IAArDA;;AAEP,SAVA;;AAUA/S,QAAAA,OAED0kD,KAFC,GAED,cAAA,GAAS;AACL,eAAKizE,mBAAL;AACA,eAAKC,WAAL;AACH,SALA;;AAKA53H,QAAAA,OAEDw4B,WAFC,GAED,oBAAA,GAAe;AACX,iBAAO4lB,oBAAA,CAAM5lB,WAAN,KAAA,KAAA,KAAuB,CAAC,CAACG,WAAW,CAACu1B,UAA5C;AACH,SAJA;;AAIAluD,QAAAA,OAUDy3H,WAVC,GAUD,oBAAA,CAAax8F,KAAb,EAAgC;AAC5BA,UAAAA,KAAK,CAAC48F,kBAAN58F,GAA2B,IAA3BA,CAD4B;;;;;;;AAU5B,eAAKs8F,aAAL,GAAqB,CAArB;AACA,eAAKC,OAAL,GAAe,IAAf;AACA,eAAKG,mBAAL,CAAyB18F,KAAzB;AACH,SAvBA;;AAuBAj7B,QAAAA,OACDk2D,WADC,GACD,oBAAA,CAAaj7B,KAAb,EAAgC;;;;;;;;;;;;AAgB5BA,UAAAA,KAAK,CAAC48F,kBAAN58F,GAA2B,IAA3BA;;AAEA,cAAI,KAAKu8F,OAAT,EAAkB;AACd,iBAAKG,mBAAL,CAAyB18F,KAAzB;AAEA,iBAAKijB,OAAL,CAAalxC,CAAb,IAAkBiuB,KAAK,CAAC8oC,SAAN9oC,KAAoBjrB,IAAI,CAACi8B,MAALj8B,CAAYqpB,KAAhC4B,GAAwC,KAAKkS,MAA/D;AACA,iBAAK+Q,OAAL,CAAajxC,CAAb,IAAkBguB,KAAK,CAAC+oC,SAAN/oC,KAAoBjrB,IAAI,CAACi8B,MAALj8B,CAAYqpB,KAAhC4B,GAAwC,KAAKkS,MAA/D;;AAEP,SAzBA;;AAyBAntC,QAAAA,OACD03H,SADC,GACD,kBAAA,CAAWz8F,KAAX,EAA8B;AAC1BA,UAAAA,KAAK,CAAC48F,kBAAN58F,GAA2B,IAA3BA;AAEA,eAAKu8F,OAAL,GAAe,KAAf;AACH,SALA;;AAKAx3H,QAAAA,OACD23H,mBADC,GACD,4BAAA,CAAqB18F,KAArB,EAAyC;AACrC,cAAIjuB,CAAC,GAAG,CAAR;AAAA,cAAWC,CAAC,GAAG,CAAf;;AAEA,cAAIguB,KAAJ,EAAW;AACPjuB,YAAAA,CAAC,GAAGiuB,KAAK,CAACunC,YAANvnC,KAAuBjrB,IAAI,CAACi8B,MAALj8B,CAAaqpB,KAAxCrsB;AACAC,YAAAA,CAAC,GAAGguB,KAAK,CAACwnC,YAANxnC,KAAuBjrB,IAAI,CAACi8B,MAALj8B,CAAayO,MAAxCxR;;;AAGJ,eAAKqqH,QAAL,CAAc93F,GAAd,CAAkBxyB,CAAlB,EAAqBC,CAArB;AACH,SAVA;;AAUAjN,QAAAA,OAED6jE,YAFC,GAED,qBAAA,CAAc5oC,KAAd,EAAiC;AAC7BA,UAAAA,KAAK,CAAC48F,kBAAN58F,GAA2B,IAA3BA;;AAEA,cAAIA,KAAJ,EAAW;AACP,gBAAI68F,OAAO,GAAG78F,KAAK,CAAC88F,UAAN98F,EAAd;AAEA,gBAAI+8F,WAAW,GAAG,MAAM,CAACzgH,IAAI,CAACE,IAALF,CAAUugH,OAAVvgH,CAAP,GAA4B,KAAK41B,MAAnD;AACA,iBAAKyqF,WAAL,CAAiB38F,KAAK,CAACq7B,WAANr7B,EAAjB,EAAsC+8F,WAAtC;AACH,WALD,MAMK;AACD,iBAAK7qF,MAAL,GAAc,CAAd;;AACA,iBAAK+Q,OAAL,CAAa1e,GAAb,CAAiB,CAAjB,EAAoB,CAApB;;AAEP,SAfA;;AAeAx/B,QAAAA,OAED43H,WAFC,GAED,oBAAA,CAAa90E,MAAb,EAA4Bk1E,WAA5B,EAA6C;AAAA,cAAjBA,WAAW,WAAM;AAAjBA,YAAAA,WAAW,GAAG,CAAdA;;;AACxB,cAAIl1E,MAAJ,EAAY;AACR,iBAAK3V,MAAL,IAAe6qF,WAAf;AACA,iBAAK7qF,MAAL,GAAc51B,IAAI,CAACwF,GAALxF,CAAS,CAATA,EAAY,KAAK41B,MAAjB51B,CAAd;AAEAurC,YAAAA,MAAM,CAAC91C,CAAP81C,IAAY9yC,IAAI,CAACi8B,MAALj8B,CAAaqpB,KAAzBypB;AACAA,YAAAA,MAAM,CAAC71C,CAAP61C,IAAY9yC,IAAI,CAACi8B,MAALj8B,CAAayO,MAAzBqkC;AAEA,iBAAK5E,OAAL,CAAalxC,CAAb,IAAkB81C,MAAM,CAAC91C,CAAP81C,GAAWk1E,WAA7B;AACA,iBAAK95E,OAAL,CAAajxC,CAAb,IAAkB61C,MAAM,CAAC71C,CAAP61C,GAAWk1E,WAA7B;AACH,WATD,MAUK;AACD,iBAAK7qF,MAAL,GAAc,CAAd;;AACA,iBAAK+Q,OAAL,CAAa1e,GAAb,CAAiB,CAAjB,EAAoB,CAApB;;AAEP,SAjBA;;AAiBAx/B,QAAAA,OAEMu5B,MAFN,GAED,eAAA,CAAexB,MAAf,EAA8CyB,GAA9C,EAA6E;AACzE,cAAMmG,QAAQ,GAAG1H,iBAAiB,CAACF,MAAD,CAAlC;AACA,cAAMoB,IAAI,GAAG,KAAKD,aAAL,CAAmBnB,MAAnB,CAAb;AACA,cAAMwf,UAAU,GAAGpe,IAAI,CAACE,KAAxB;AACA,cAAMme,WAAW,GAAGre,IAAI,CAAC1a,MAAzB;AAEA,cAAI0Z,YAAY,GAAG,KAAKD,iBAAL,EAAnB;AACA,cAAMuf,QAAQ,GAAGlgC,IAAI,CAAC+hB,KAAL/hB,CAAWggC,UAAU,GAAGpf,YAAxB5gB,CAAjB;AACA,cAAMmgC,SAAS,GAAGngC,IAAI,CAAC+hB,KAAL/hB,CAAWigC,WAAW,GAAGrf,YAAzB5gB,CAAlB;AAEAwhB,UAAAA,SAAS,CAACsE,SAAVtE,GAAsBzB,GAAG,CAAC0E,YAAJ1E,CAAiBiI,KAAvCxG;AACA2F,UAAAA,IAAI,CAACc,GAALd,CAAS3F,SAAS,CAACwE,UAAnBmB,EAA+B,CAA/BA,EAAkC,CAAlCA,EAAqC,CAArCA,EAAwC,CAAxCA;AAEA,cAAItC,QAAQ,GAAG,KAAKmM,WAAL,CAAiB/nC,GAAjB,CAAqBu3B,MAArB,CAAf;;AACA,cAAI,CAACqE,QAAD,IAAaA,QAAQ,CAAC3zB,MAAT2zB,KAAoB,KAAKA,QAA1C,EAAoD;AAChDA,YAAAA,QAAQ,GAAG,IAAIkO,QAAQ,CAACC,gBAAb,CAA8B;AACrC9hC,cAAAA,MAAM,EAAE,KAAK2zB;AADwB,aAA9B,CAAXA;AAGA,iBAAKmM,WAAL,CAAiB/I,GAAjB,CAAqBzH,MAArB,EAA6BqE,QAA7B;;;AAGJA,UAAAA,QAAQ,CAAC0D,WAAT1D,CAAqB,cAArBA,EAAqC,KAAKi7F,YAAL,CAAkB73F,GAAlB,CAAsB,KAAK2N,MAA3B,EAAmC,KAAKA,MAAxC,EAAgD,KAAK+Q,OAAL,CAAalxC,CAA7D,EAAgE,KAAKkxC,OAAL,CAAajxC,CAA7E,CAArCmvB;AAEA,cAAIpD,IAAI,GAAGoD,QAAQ,CAAC6e,MAAT7e,CAAgB,CAAhBA,CAAX;AACApD,UAAAA,IAAI,CAACi/F,WAALj/F,CAAiBA,IAAI,CAACk/F,UAALl/F,CAAgB,iBAAhBA,CAAjBA,EAAqD4Q,YAArD5Q;AAEAD,UAAAA,SAAS,CAACqD,QAAVrD,GAAqBqD,QAArBrD;AAEA,cAAMgH,MAAM,GAAG,KAAKpI,SAAL,CAAeG,QAAf,CAAwBC,MAAxB,EAAgC,CAAhC,CAAf;AACA,cAAMuE,KAAK,GAAG,KAAKxE,QAAL,CAAcC,MAAd,EAAsB,CAAtB,CAAd;AACAgB,UAAAA,SAAS,CAAC6D,aAAV7D,CAAwB0e,QAAxB1e,EAAkC2e,SAAlC3e,EAA6C,cAA7CA,8BAAuF4G,QAAvF5G,EA9ByE;;;AAmCzEA,UAAAA,SAAS,CAACiH,WAAVjH,CAAsBI,IAAI,CAACnsB,CAA3B+rB,EAA8BI,IAAI,CAAClsB,CAAnC8rB,EAAsC0e,QAAtC1e,EAAgD2e,SAAhD3e,EACKkH,YADLlH,CACkBgH,MADlBhH,EAC0B,iBAD1BA,EAEK0E,aAFL1E,CAEmBuD,KAFnBvD,EAE0B8C,MAAM,CAAC6D,OAFjC3G,EAGKmH,UAHLnH,CAGgB,CAHhBA,EAIKoH,OAJLpH;AAMH,SA3CA;;AA2CA,8BAAA;QAlLgClC;AAASnY,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAMnC,iBANmC;;;AAMlBH,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAAC,QAAAA;AAAA,iBAGV,CAAC,iBAAD,CAHU","file":"all.js","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport { UtilTime } from '../../core/util/util';\nimport { Save } from './save';\nimport { Singleton } from '../../core/pattern/singleton';\nimport { DataGameInst } from './data-core';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Achievement')\nexport class Achievement extends Singleton {\n\n    public percent:number = 0;\n\n    public unlockAllAchi = false;\n\n    public init() {\n\n        var achievement = DataGameInst._data['achievement'];\n        \n        var achi_save = Save.Instance.get('achievement');\n\n        //if (achi_save === undefined) {\n            Save.Instance._cur['achievement'] = {};\n            achi_save = Save.Instance.get('achievement');\n        //} \n\n        for(let i = 0; i < achievement.length; i++) {\n            var arch = achievement[i];\n            var arch_save = achi_save[arch.name];\n            if (arch_save === undefined) achi_save[arch.name] = { \"name\":arch.name,\"condition\":arch.condition,\"value\":arch.value,\"percent\":0,\"stat_value\":0 };\n        }\n\n        Save.Instance._cur['achievement'] = achi_save;\n\n        this.updateData();\n\n        \n\n    }\n\n    public totalTime():string {\n        var time = Save.Instance.statisticsValue('level_playTime');\n        if (time === undefined) time = 0;\n        time = UtilTime.toHours(time);\n        return `${time}`;\n    }\n\n    public totalPercent():number {\n        return this.percent;\n    }\n\n    public getAchi(key:string) {\n        var achievement = Save.Instance.get('achievement');\n        return achievement[key]; \n    }\n\n    public updateData() {\n\n        var achi_save = Save.Instance.get('achievement');\n        var statistics = Save.Instance.get('statistics');\n\n        if (Save.Instance.get('achi_percent') === 1) return;\n\n        var count = 1;\n\n        //achi_save.forEach(arch => {\n\n        for(const key in achi_save) {\n\n            var achi = achi_save[key];\n\n            if (achi['percent'] !== 1) {\n\n                var stat_value = statistics[achi.value];\n\n                if (stat_value === undefined) continue;\n\n                if (stat_value > achi.condition) stat_value = achi.condition;\n    \n                achi['stat_value'] = stat_value;\n    \n                var arch_percent = stat_value / achi.condition;            \n    \n                achi['percent'] = arch_percent;\n    \n                achi['unlock_time'] = UtilTime.yearMonth();\n    \n                \n            }\n            \n            this.percent += achi['percent'];\n            count++;\n\n        };\n\n        this.percent /= count;\n\n        this.unlockAllAchi = this.percent === 1;\n\n        Save.Instance._cur['achi_percent'] = this.percent;\n\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { randomRangeInt, _decorator } from 'cc';\nimport { UI } from '../ui/ui';\nimport { Sound } from '../audio/sound';\nimport { Msg } from '../msg/msg';\nimport { ResCache } from '../res/res-cache';\nimport { GScene } from '../scene/g-scene';\nimport { Queue } from '../util/data-structure';\nimport { Res } from '../res/res';\nimport { Actor } from '../../logic/actor/actor';\nimport { ActorBase } from '../actor/actor-base';\nimport { fun } from '../util/fun';\nimport { ActorEquipBase } from '../../logic/actor/actor-equip-base';\nimport { Level } from '../../logic/level/level';\nimport { Game } from '../../logic/data/game';\nimport { Local } from '../localization/local';\n\nexport class Action {\n\n    _data: { [key: string]: any } = {};\n    _time: number = 0;\n    _index: number = 0;\n    _queue: Queue<ActionGroup> = Object.create(null);\n    _act: ActionGroup | undefined;\n\n    constructor (name: string) {\n        this._data = ResCache.Instance.getJson(name).json;\n        this._queue = new Queue(5);\n    }\n\n    public on (name: string): void {\n        this.push(name, 'start');\n        Msg.emit('msg_stat_times', name);\n    }\n\n    public off (name: string): void {\n        this.push(name, 'end');\n    }\n\n    public push (name: string, state: string) {\n        var action = this._data[name];\n        if (action === undefined) {\n            console.warn('Undefined action:', name);\n            return;\n        }\n        var info: ActionInfo[] = action[state];\n        if (info === undefined) return;\n        let group = new ActionGroup(info);\n        this._queue.push(group);\n    }\n\n    public pop () {\n        this._act = this._queue.pop();\n    }\n\n    public update (deltaTime: number) {\n        if (GScene.isLoadScene) return;\n        if (this._act) {\n            this._act.time += deltaTime;\n            const cur = this._act?.data[this._act.idx]!;\n            if (cur === undefined || this._act === undefined) {\n                throw new Error(`Error actor action index: ${this._act?.idx}`);\n            }\n            if (this._act.time >= cur.time) {\n                UtilAction.do(cur.name, cur.data);\n                this._act.idx += 1;\n                if (this._act.idx >= this._act.data.length) {\n                    this._act = undefined;\n                }\n            }\n        } else {\n            if (!this._queue.empty()) this.pop();\n        }\n    }\n}\n\nexport class ActionParallel {\n\n    _data: { [key: string]: any } = {};\n    _time: number = 0;\n    _index: number = 0;\n    _act: ActionGroup | undefined;\n    _actions: ActionGroup[] = [];\n\n    constructor (name: string) {\n        this._data = ResCache.Instance.getJson(name).json;\n    }\n\n    public on (name: string): void {\n        this.push(name, 'start');\n        Msg.emit('msg_stat_times', name);\n    }\n\n    public off (name: string): void {\n        this.push(name, 'end');\n    }\n\n    public push (name: string, state: string) {\n        var action = this._data[name];\n        if (action === undefined) {\n            console.error('Undefined action:', name);\n            return;\n        }\n        const info: ActionInfo[] = action[state];\n        let group = new ActionGroup(info);\n        this._actions.push(group);\n    }\n\n    public update (deltaTime: number) {\n        var count = this._actions.length;\n        if (count <= 0) return;\n        for (let i = count - 1; i >= 0; i--) {\n            const element = this._actions[i];\n            element.time += deltaTime;\n            const cur = element.data[element.idx];\n            if (element.time >= cur.time) {\n                UtilAction.do(cur.name, cur.data);\n                element.idx += 1;\n                if (element.idx >= element.data.length) {\n                    this._actions.splice(i, 1);\n                }\n            }\n        }\n    }\n}\n\nexport class ActionActor extends Action {\n\n    _actor: ActorBase;\n\n    constructor (name: string, actor: ActorBase) {\n        super(name);\n        this._actor = actor;\n    }\n\n    public on (name: string): void {\n        super.on(name);\n        Msg.emit('msg_stat_times', name);\n    }\n\n    public update (deltaTime: number) {\n        if (GScene.isLoadScene) return;\n        if (this._act) {\n            this._act.time += deltaTime;\n            var length = this._act.data.length;\n            for (let i = this._act.idx; i < length; i++)\n                if (!this.checkRunAction()) break;\n        } else {\n            if (!this._queue.empty()) this.pop();\n        }\n    }\n\n    public checkRunAction () {\n        const cur = this._act?.data[this._act.idx]!;\n        if (cur === undefined || this._act === undefined) {\n            throw new Error(`Error actor action index: ${this._act?.idx}`);\n        }\n        if (this._act.time >= cur.time) {\n            if (cur.delay > 0) {\n                fun.delay(() => { UtilAction.do(cur.name, cur.data, this._actor); }, cur.delay);\n            } else {\n                UtilAction.do(cur.name, cur.data, this._actor);\n            }\n            this._act.idx += 1;\n            if (this._act.idx >= this._act.data.length) {\n                this._act = undefined;\n            }\n            this._actor.actionEnd();\n            return true;\n        }\n        return false;\n    }\n\n}\n\nexport class ActionActorEquip extends Action {\n\n    _actor: ActorEquipBase;\n\n    constructor (name: string, actor: ActorEquipBase) {\n        super(name);\n        this._actor = actor;\n    }\n\n    public on (name: string): void {\n        super.on(name);\n        if (this._actor.isPlayer) {\n            Msg.emit('msg_stat_times', name);\n        }\n    }\n\n    public update (deltaTime: number) {\n        if (GScene.isLoadScene) return;\n        if (this._act) {\n            this._act.time += deltaTime;\n            var length = this._act.data.length;\n            for (let i = this._act.idx; i < length; i++)\n                if (!this.checkRunAction()) break;\n        } else {\n            if (!this._queue.empty()) this.pop();\n        }\n    }\n\n    public checkRunAction () {\n        const cur = this._act?.data[this._act.idx]!;\n        if (cur === undefined || this._act === undefined) {\n            throw new Error(`Error actor action index: ${this._act?.idx}`);\n        }\n        if (this._act.time >= cur.time) {\n            if (cur.delay > 0) {\n                fun.delay(() => { UtilActionEquip.do(cur.name, cur.data, this._actor); }, cur.delay);\n            } else {\n                UtilActionEquip.do(cur.name, cur.data, this._actor);\n            }\n            this._act.idx += 1;\n            if (this._act.idx >= this._act.data.length) {\n                this._act = undefined;\n            }\n            this._actor.actionEnd();\n            return true;\n        }\n        return false;\n    }\n\n}\n\nexport class ActionQueue extends Action {\n\n    public update (deltaTime: number) {\n        if (GScene.isLoadScene) return;\n        if (this._act) {\n            this._act.time += deltaTime;\n            let cur = this._act.data[this._act.idx];\n            if (this._act.time >= cur.time) {\n                UtilAction.do(cur.name, cur.data);\n                this._act.idx += 1;\n                if (this._act.idx >= this._act.data.length) {\n                    this._act = undefined;\n                }\n            }\n        } else {\n            if (!this._queue.empty()) this.pop();\n        }\n    }\n}\n\ninterface ActionInfo {\n    time: number;\n    delay: number;\n    name: string;\n    data: string;\n}\n\nexport class ActionGroup {\n    public data: ActionInfo[];\n    public time: number = 0;\n    public idx: number = 0;\n\n    constructor (info: ActionInfo[]) {\n        this.data = info;\n    }\n}\n\nexport type key_type = { key: string, value: boolean | string | number | any };\nexport type key_type_boolean = { key: string, value: boolean };\nexport type key_type_string = { key: string, value: string };\nexport type key_type_number = { key: string, value: number };\nexport type action_type = number | boolean | string | key_type_boolean | key_type_number | key_type_string;\n\nexport class UtilAction {\n\n    public static do (name: string, key: action_type, actor: ActorBase | undefined = undefined) {\n        var action = this[name];\n        if (action) {\n            action(key, actor);\n        } else {\n            console.warn('Not defined action:' + name);\n        }\n    }\n\n    public static on_check_preload () {\n        if (GScene.isPreload)\n            GScene.isLoadScene = true;\n    }\n\n    public static on_scene (key: string) {\n\n        GScene.Load(key, () => { });\n    }\n\n    public static off_scene (key: string) {\n\n    }\n\n    public static on_ui (key: string) {\n        UI.Instance.on(key);\n    }\n\n    public static off_ui (key: string) {\n        UI.Instance.off(key);\n    }\n\n    public static on_sfx (key: string) {\n        Sound.on(key);\n    }\n\n    public static off_sfx (key: string) {\n        Sound.off(key);\n    }\n\n    public static on_sfxing (key: string, volume = 1) {\n        Sound.playLoop(key, volume);\n    }\n\n    public static off_sfxing (key: number) {\n        Sound.offing(key);\n    }\n\n    public static on_bgm (key: string) {\n        Sound.onBGM(key);\n    }\n\n    public static off_bgm (key: string) {\n        Sound.offBGM(key);\n    }\n\n    public static update_bgm () {\n        Sound.updateBGM();\n    }\n\n    public static on_msg (key: string) {\n        Msg.emit(key);\n    }\n\n    public static on_msg_num (data: key_type_number, actor: Actor) {\n        Msg.emit(data.key, data.value);\n    }\n\n    public static on_msg_str (data: key_type_string) {\n        Msg.emit(data.key, data.value);\n    }\n\n    public static on_msg_str_local (data: key_type_string, actor: Actor) {\n        Msg.emit(data.key, Local.Instance.get(data.value));\n    }\n\n    public static on_inst_scene (key: string) {\n        var asset = ResCache.Instance.getPrefab(key);\n        var obj = Res.inst(asset, Level.Instance._objectNode);\n        obj.setPosition(0, 0, 0);\n    }\n\n    public static on_inst (key: string, actor: Actor) {\n\n        var asset = ResCache.Instance.getPrefab(key);\n        var obj = Res.inst(asset, Level.Instance._objectNode);\n        if (actor !== undefined && actor._view) {\n            obj.parent = actor._view;\n            obj.setPosition(0, 0, 0);\n        }\n\n    }\n\n    public static on_inst_pool (key: string) {\n        var asset = ResCache.Instance.getPrefab(key);\n        var obj = Res.inst(asset, Game.Instance._poolNode);\n        obj.setPosition(0, 0, 0);\n    }\n\n\n    public static off_inst (key: string, actor: ActorBase) {\n\n    }\n\n    public static on_inst_fx (data: any, actor: ActorBase) {\n        var res = data.res;\n        var bone = data.bone;\n        var asset = ResCache.Instance.getPrefab(res);\n        var obj = Res.inst(asset, Level.Instance._objectNode);\n        if (actor !== undefined && actor._view) {\n            var bone_node = actor.node.getChildByName(bone);\n            obj.parent = bone_node;\n            obj.setPosition(0, 0, 0);\n        }\n    }\n\n\n    public static off_inst_fx (data: any, actor: ActorBase) {\n        var res = data.res;\n        var bone = data.bone;\n        if (actor !== undefined && actor._view !== null) {\n            var off_fx = actor.node.getChildByName(bone)?.getChildByName(res);\n            if (off_fx) off_fx.emit('setDestroy');\n        }\n    }\n\n    public static on_active (data: key_type_boolean, actor: ActorBase) {\n        actor.setActive(data);\n    }\n\n    public static on_fx (data: string, actor: ActorBase) {\n        actor.onFx(data);\n    }\n\n    public static on_buff (data: string, actor: ActorBase) {\n        //actor.onBuff(data);\n    }\n\n    public static set_fx (data: key_type_boolean, actor: ActorBase) {\n        actor.setFx(data);\n    }\n\n    public static on_ani (key: string, actor: ActorBase) {\n        if (actor._anim)\n            actor._anim.play(key);\n        else\n            console.log('Not register SkeletalAnimation');\n    }\n\n    public static on_anig (data: any, actor: ActorBase) {\n        if (actor._animationGraph && actor._animationGraph.play) {\n            actor._animationGraph.play(data.key, data.value);\n        } else\n            console.log('Not register animationGraph.');\n    }\n\n    public static on_set (data: key_type, actor: ActorBase) {\n        //console.log(`on set key:${data.key}  value:${data.value}`);\n        actor._data[data.key] = data.value;\n    }\n\n    public static off_set (key: string, actor: ActorBase) {\n        actor._data[key] = false;\n    }\n\n    public static on_add (data: any, actor: ActorBase) {\n        console.log(data);\n        for (let k in data) {\n            console.log(k);\n            actor._data[k] += data[k];\n        }\n    }\n\n    public static on_mul (data: any, actor: ActorBase) {\n        console.log(data);\n        for (let k in data) {\n            console.log(k);\n            actor._data[k] *= data[k];\n        }\n    }\n\n    public static on_com (key: string, actor: ActorBase) {\n        actor.node.addComponent(key);\n    }\n\n    public static on_call (key: string, actor: ActorBase) {\n        actor[key]();\n    }\n}\n\nexport class UtilActionEquip {\n\n    public static do (name: string, key: action_type, actor: ActorEquipBase | undefined = undefined) {\n        var action = this[name];\n        if (action) {\n            action(key, actor);\n        } else {\n            console.warn('Not defined action:' + name);\n        }\n    }\n\n    public static on_check_preload () {\n        if (GScene.isPreload) GScene.isLoadScene = true;\n    }\n\n    public static on_scene (key: string) {\n        GScene.Load(key, () => { });\n    }\n\n    public static off_scene (key: string) {\n    }\n\n    public static on_ui (key: string) {\n        UI.Instance.on(key);\n    }\n\n    public static off_ui (key: string) {\n        UI.Instance.off(key);\n    }\n\n    public static on_sfx (key: string) {\n        Sound.on(key);\n    }\n\n    public static on_sfx_random (data: key_type_number) {\n        const key = data.key;\n        const range = data.value;\n        const sfx = `${key}_${randomRangeInt(0, range)}`;\n        Sound.on(sfx);\n    }\n\n    public static off_sfx (key: string) {\n        Sound.off(key);\n    }\n\n    public static on_sfxing (key: string, volume = 1) {\n        Sound.playLoop(key, volume);\n    }\n\n    public static off_sfxing (key: number) {\n        Sound.offing(key);\n    }\n\n    public static on_bgm (key: string) {\n        Sound.onBGM(key);\n    }\n\n    public static off_bgm (key: string) {\n        Sound.offBGM(key);\n    }\n\n    public static update_bgm () {\n        Sound.updateBGM();\n    }\n\n    public static on_msg (key: string) {\n        Msg.emit(key);\n    }\n\n    public static on_msg_num (data: key_type_number, actor: ActorEquipBase) {\n        Msg.emit(data.key, data.value);\n    }\n\n    public static on_msg_str (data: key_type_string) {\n        Msg.emit(data.key, data.value);\n    }\n\n    public static on_msg_str_local (data: key_type_string, actor: ActorEquipBase) {\n        Msg.emit(data.key, Local.Instance.get(data.value));\n    }\n\n    public static on_inst_scene (key: string) {\n        var asset = ResCache.Instance.getPrefab(key);\n        var obj = Res.inst(asset, Level.Instance._objectNode);\n        obj.setPosition(0, 0, 0);\n    }\n\n    public static on_inst (key: string, actor: Actor) {\n        var asset = ResCache.Instance.getPrefab(key);\n        var obj = Res.inst(asset, Level.Instance._objectNode);\n        if (actor && actor._viewRoot) {\n            obj.parent = actor._viewRoot!;\n            obj.setPosition(0, 0, 0);\n        }\n    }\n\n    public static off_inst (key: string, actor: ActorEquipBase) {\n\n    }\n\n    public static on_inst_fx (data: any, actor: ActorEquipBase) {\n        var res = data.res;\n        var bone = data.bone;\n        var asset = ResCache.Instance.getPrefab(res);\n        var obj = Res.inst(asset, Level.Instance._objectNode);\n        if (actor !== undefined && actor._view !== null) {\n            var bone_node = actor.node.getChildByName(bone);\n            obj.parent = bone_node;\n            obj.setPosition(0, 0, 0);\n        }\n    }\n\n\n    public static off_inst_fx (data: any, actor: ActorEquipBase) {\n        var res = data.res;\n        var bone = data.bone;\n        if (actor !== undefined && actor._view !== null) {\n            var off_fx = actor.node.getChildByName(bone)?.getChildByName(res);\n            if (off_fx) off_fx.emit('setDestroy');\n        }\n    }\n\n    public static on_active (data: key_type_boolean, actor: ActorEquipBase) {\n        actor.setActive(data);\n    }\n\n    public static on_fx (data: string, actor: ActorEquipBase) {\n        actor.onFx(data);\n    }\n\n    public static on_buff (data: string, actor: ActorEquipBase) {\n        //actor.onBuff(data);\n    }\n\n    public static set_fx (data: key_type_boolean, actor: ActorEquipBase) {\n        actor.setFx(data);\n    }\n\n    public static on_anig (data: any, actor: ActorEquipBase) {\n        if (actor._animationGraph) actor._animationGraph.play(data.key, data.value);\n        else console.log('Not register animationGraph.');\n    }\n\n    public static on_set (data: key_type, actor: ActorEquipBase) {\n        actor._data[data.key] = data.value;\n    }\n\n    public static off_set (key: string, actor: ActorEquipBase) {\n        actor._data[key] = false;\n    }\n\n    public static on_add (data: any, actor: ActorEquipBase) {\n        console.log(data);\n        for (let k in data) {\n            console.log(k);\n            actor._data[k] += data[k];\n        }\n    }\n\n    public static on_mul (data: any, actor: ActorEquipBase) {\n        console.log(data);\n        for (let k in data) {\n            console.log(k);\n            actor._data[k] *= data[k];\n        }\n    }\n\n    public static on_call (key: string, actor: ActorEquipBase) {\n        actor[key]();\n    }\n}","\nimport { _decorator, Component, Node, animation, Vec3, v3 } from 'cc';\nimport { Actor } from './actor';\nimport { ActorAnimationGraph } from './actor-animation-graph';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorAnimationGraphGroup')\nexport class ActorAnimationGraphGroup extends Component {\n\n    _groups:ActorAnimationGraph[] | undefined;\n\n    __preload () {\n        this._groups = this.getComponentsInChildren(ActorAnimationGraph);\n        if (this._groups === undefined || this._groups === null) {\n            throw new Error(`${this.node.name} node not find ActorAnimationGraph`);\n        }\n    }\n\n    play (key: string, value: boolean | number) {\n        console.log('ActorAnimationGraphGroup', key, value);\n        for(let i = 0; i < this._groups!.length; i++) {\n            this._groups![i].play(key, value);\n        }\n    }\n    \n}\n","\nimport { _decorator, Component, Node, animation, Vec3, v3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorAnimationGraph')\nexport class ActorAnimationGraph extends Component {\n\n    _graph: animation.AnimationController | undefined | null;\n    //_actor: Actor = Object.create(null);\n\n    start () {\n        // [3]\n        this._graph = this.getComponent(animation.AnimationController);\n        //this._actor = this.node.parent.parent.getComponent(Actor);\n\n        if (this._graph === undefined || this._graph === null) {\n            throw new Error(`${this.node.name} can not find AnimationController`);\n        }\n    }\n\n    play (key: string, value: boolean | number) {\n        this._graph?.setValue(key, value);\n    }\n\n    setValue(key:string, value:number) {\n        this._graph?.setValue(key, value);\n    }\n\n    update (deltaTime: number) {\n        //     // [4]\n        //this.play('speed', this._actor._data.cur_speed);\n        //this.play('move_speed', this._actor._data.cur_speed + 0.5);\n        //this.play('is_ground', this._actor._data.is_ground);\n    }\n}\n","\nimport { _decorator, Component, Node, SkeletalAnimation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorAnimatorController')\nexport class ActorAnimatorController extends Component {\n\n    _anim:SkeletalAnimation = Object.create(null);\n    _data = Object.create(null);\n\n    init(_data) {\n        this._data = _data;\n        this._anim = this.getComponent(SkeletalAnimation);\n    }\n\n    play(name: string) {\n        var anims = this._data[name];\n        this._anim.play(anims[0]);\n    }\n    \n}\n","import { _decorator, Component, Node, geometry, PhysicsSystem, PhysicsRayResult } from 'cc';\nimport { fx } from '../../core/effect/fx';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { ActorPart } from './actor-part';\nimport { calculateDamage } from './damage-core';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorAxe')\nexport class ActorAxe extends ActorEquipBase {\n    onFire() {\n        this._bagData!.bulletCount--;\n        const forwardNode = this._actor!._forwardNode;\n        const origin = forwardNode.worldPosition;\n        const dir = forwardNode.forward;\n        let ray = new geometry.Ray(origin.x, origin.y, origin.z, dir.x, dir.y , dir.z);\n        const mask = 1 << 3 | 1 << 4;\n        const distance = this._data.damage.distance;\n        let hit:PhysicsRayResult | undefined = undefined;\n        if (PhysicsSystem.instance.raycastClosest(ray, mask, distance)) {\n            hit = PhysicsSystem.instance.raycastClosestResult;\n        }\n        calculateDamage(this._data, hit);\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { game, _decorator } from 'cc';\nimport { DataEquipInst } from '../data/data-core';\nimport { Level } from '../level/level';\nimport { Actor } from './actor';\n\nexport class ActorBag {\n\n    // The character object to which the current bag belongs.\n    _actor: Actor;\n\n    // Bag capacity.\n    _capacity = 0;\n\n    // Bag usage count statistics.\n    _usageCount = 0;\n\n    constructor (actor: Actor) {\n\n        // The character object to which the current equipment belongs.\n        this._actor = actor;\n\n        // Set Bag capacity.\n        this._capacity = this._actor._data.bag_capacity;\n\n        // Initialize the bag space and set the default value.\n        this._actor._data.equipment_name_list = new Array<string>(this._capacity);\n        for (let i = 0; i < this._capacity; i++) {\n            this._actor._data.equipment_name_list[i] = '';\n        }\n\n        // Set the default value of the bag.\n        const bags = actor._data.bags;\n        for (let i = 0; i < bags.length; i++) {\n            this.pickedItem(bags[i]);\n        }\n    }\n\n    /**\n     * Get the index of the empty slot in the bag\n     * @returns Returns the index of the corresponding empty slot, -1 means it cannot exist. \n     */\n    public getEmptySlot (): number {\n\n        for (let i = 0; i < this._actor._data.equipment_name_list.length; i++) {\n            const name = this._actor._data.equipment_name_list[i];\n            if (name.length <= 0) return i;\n        }\n        return -1;\n    }\n\n    /**\n     * The method is check picked same weapon then increase clip.\n     * @param name Weapon name\n     * @returns TRUE is same weapon increase clip, FALSE is not same weapon.\n     */\n    public pickedSameWeaponIncreaseClips (name: string) {\n\n        const bagItems = this._actor._data.items[name] as BagItem;\n\n        if (bagItems) {\n\n            //bagItems.bulletClipCount++;\n            this._actor.bulletBox++;\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     * The method picked bullet box.\n     * @returns \n     */\n    public pickedBulletBox () {\n\n        const bagItems = this._actor._actorEquipment?.currentEquipItem;\n\n        if (bagItems) {\n\n            //bagItems.bulletClipCount++;\n            this._actor.bulletBox += 2;\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     * This method is used to pick up item.\n     * @param name Pick item name.\n     * @returns Picked state, true is picked, false is not picked.\n     */\n    public pickedItem (name: string): boolean {\n\n        // Get the current backpack item by name, may be empty.\n        let bagItems = this._actor._data.items[name];\n\n        // Get information about equipment props.\n        const equipData = DataEquipInst.get(name);\n\n        // If the item already exists in the backpack and is stackable, run the stacking logic.\n        if (bagItems && equipData.stackable) {\n            this.stackItem(equipData.bullet_count);\n        } else {\n\n            // Get the current empty slot index and determine if it exists.\n            const index = this.getEmptySlot();\n            if (index === -1) return false;\n\n            // Create a backpack item.\n            this.createItem(equipData, name);\n\n            // Update the value corresponding to the array index of the item slot\n            this._actor._data.equipment_name_list[index] = name;\n\n            // Accumulation of the number of uses.\n            this._usageCount++;\n        }\n\n        return true;\n    }\n\n    /**\n     * This method is used to discard the equipment currently held in your hand.\n     * @returns Dropped status: true is success false is failure\n     */\n    public dropItem (): boolean {\n\n        // Get the bag index of the currently held equipment.\n        const curIndex = this._actor._data.current_equipment_index;\n\n        // Determine if the current index is in the valid range.\n        // Default 0 equipment is not drop.\n        if (curIndex >= this._capacity || curIndex <= 0) return false;\n\n        // Get it from the bag equipment list.\n        const data = this._actor._data.equipment_name_list;\n\n        //Get the name of the equipment in the current slot and determine if the equipment exists based on the name value.\n        const name = data[curIndex];\n        if (!name || name.length <= 0) return false;\n\n        // Take off the prop that is being equipped.\n        this._actor._actorEquipment?.unEquip();\n\n        // Clear specific items data.\n        this._actor._data.items[name] = undefined;\n\n        // Discard the current prop near the character.\n        const pos = this._actor.node.worldPosition;\n        Level.Instance.addDrop(name, pos);\n\n        // Clears the value of the equipment list for the current index mapping.\n        data[curIndex] = '';\n\n        // Replace the default equipment.\n        this._actor._data.current_equipment_index = 0;\n        this._actor._actorEquipment?.equip(0);\n\n        // The total number of bags used decreases.\n        this._usageCount--;\n\n        return true;\n    }\n\n    /**\n     * This method is used to create bag items.\n     * @param equipData Current equip data.\n     * @param name The name of the bag prop that needs to be created.\n     */\n    public createItem (equipData: any, name: string) {\n\n        let newItems = {\n            'name': name,\n            'actor': this._actor,\n            'stackable': equipData.stackable === undefined ? false : true,\n            'count': 1,\n            'data': equipData,\n            'bulletClipCount': equipData.bullet_clip_count,\n            'bulletCount': equipData.bullet_count,\n            'lastUseTime': game.totalTime,\n        }\n\n        this._actor._data.items[name] = newItems;\n    }\n\n    /**\n     * This method is used to update the number of stackable props.\n     * @param bagItems Current backpack information.\n     */\n    public stackItem (bagItems: BagItem) {\n        bagItems.count++;\n        bagItems.bulletCount += bagItems.data.bullet_count;\n    }\n\n}\n\n\n// The bag item data interface.\nexport interface BagItem {\n    fov: number;\n    name: string,\n    actor: Actor,\n    stackable: boolean,\n    count: number,\n    bulletClipCount: number\n    bulletCount: number,\n    data: any,\n    lastUseTime: number,\n}\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, SkeletalAnimation, ParticleSystem, Vec3 } from 'cc';\nimport { ActorAnimationGraph } from '../../logic/actor/actor-animation-graph';\nimport { ActionActor, key_type_boolean } from '../action/action';\nimport { KeyAnyType } from '../../logic/data/game-type';\nimport { Local } from '../localization/local';\nimport { Msg } from '../msg/msg';\nimport { ResCache } from '../res/res-cache';\nimport { UtilNode, UtilVec3 } from '../util/util';\nimport { Level } from '../../logic/level/level';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorBase')\nexport class ActorBase extends Component {\n\n    _action: ActionActor | undefined;\n    _data: KeyAnyType = {};\n    _updates: Function[] = [];\n\n    _dir = new Vec3(0, 0, 0);\n    _curDir = new Vec3(0, 0, 0);\n\n    _angleVertical = 0;\n    _groupIndex = -1;\n\n    isPlayer = false;\n\n    _anim: SkeletalAnimation | undefined;\n    _animationGraph: ActorAnimationGraph | undefined;\n\n    // The View node of the role.\n    _view: Node | undefined;\n\n    _actionUpdate = () => { };\n\n    init (actionName: string) {\n\n        Object.assign(this._data, ResCache.Instance.getJson(actionName).json);\n        this._action = new ActionActor(this._data.action, this);\n        this._view = UtilNode.find(this.node, 'view');\n\n        this.onBind();\n        this.initView();\n    }\n\n    initView () { }\n\n    onBind () {\n        this.node.on('do', this.do, this);\n    }\n\n    offBind () {\n        this.node.off('do', this.do, this);\n    }\n\n    onUpdate () { }\n\n    offUpdate () {\n        this._updates = [];\n    }\n\n    updateAttribute () { }\n\n    onDestroy () {\n        this.offBind();\n    }\n\n    do (name: string) {\n        if (this._action) this._action.on(name);\n    }\n\n    update (deltaTime: number) {\n        if (this._action) this._action.update(deltaTime);\n        var count = this._updates.length;\n        for (let i = 0; i < count; i++)\n            this._updates[i](deltaTime);\n    }\n\n    setActive (data: key_type_boolean) {\n        const activeNode = this.node.getChildByName(data.key);\n        if (activeNode) activeNode.active = data.value;\n        else console.warn(` You want set undefined node active. ${this.node?.name}/${data.key}`);\n    }\n\n    setFx (data: key_type_boolean) {\n        const pNode = UtilNode.find(this.node, data.key);//this.node.getChildByName(data.key);\n        const particles = pNode?.getComponentsInChildren(ParticleSystem);\n        if (particles === undefined) return;\n        for (let i = 0; i < particles.length; i++) {\n            let p = particles[i];\n            p.loop = data.value;\n            if (data.value) p.play();\n        }\n    }\n\n    onFx (data: string) {\n        const pNode = UtilNode.find(this.node, data);//this.node.getChildByName(data);\n        const particles = pNode?.getComponentsInChildren(ParticleSystem);\n        if (particles === undefined) return;\n        for (let i = 0; i < particles.length; i++) {\n            let p = particles[i];\n            p.play();\n        }\n    }\n\n    actionEnd () { }\n\n    setDir (dir: Vec3) {\n        UtilVec3.copy(this._dir, dir);\n    }\n\n    updateHP () {\n        const percent_hp = this._data.hp / this._data.max_hp;\n        this._data.is_low_hp = percent_hp < 0.5;\n        Msg.emit('fil_hp', percent_hp);\n    }\n\n    onDead () {\n\n        if (this._groupIndex !== -1) {\n            Level.Instance.removeEnemy(this.node);\n            Msg.emit('msg_remove_enemy', this._groupIndex);\n            Msg.emit(\n                'msg_tips',\n                `${Local.Instance.get('killed_one')}`\n            );\n        }\n\n        this.node?.destroy();\n    }\n\n}","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Vec3, v3, random, randomRangeInt, Node, math, game, randomRange, Game } from 'cc';\nimport { SensorRaysAngle } from '../../core/sensor/sensor-rays-angle';\nimport { UtilVec3 } from '../../core/util/util';\nimport { NavSystem } from '../navigation/navigation-system';\nimport { ActorInputBrain } from './actor-input-brain';\nimport { Level } from '../level/level';\nimport { Actor } from './actor';\n\nconst { ccclass } = _decorator;\n\nlet tempRotationSideVector = v3(0, 0, 0);\n\n@ccclass('ActorBrain')\nexport class ActorBrain extends Component {\n\n    // The character object to which the current equipment belongs.\n    _actor: Actor | undefined;\n\n    // The currently planned waypoint.\n    _wayPoints = new Array<NavSystem.NavPointType>();\n\n    // The direction the character moves.\n    _moveDir: Vec3 = v3(0, 0, 0);\n\n    // Target distance from my direction.\n    targetDirection: Vec3 = v3(0, 0, 0);\n\n    // Unified input management object for character.\n    input: ActorInputBrain | undefined;\n\n    // Sector sensor, used to detect the status in front of the character. \n    sensorRays: SensorRaysAngle | undefined;\n\n    // Whether it is waypoint navigation.\n    isFollowWayPointsMove = false;\n\n    // current waypoint index.\n    currentWaypointsIndex = 1;\n\n    // The closest Navigation point marker to the character.\n    closestNavigationPon = -1;\n\n    // The target object node.\n    _targetNode: Node | undefined;\n\n    // The position of the target node.\n    targetPosition: Vec3 = v3(0, 0, 0);\n\n    // Path node index of the current fire. \n    waypointsFireIndex = -1;\n\n    // Open fire planning waypoints.\n    waypointsFire = new Array<NavSystem.NavPointType>();\n\n    // The direction of the open fire.\n    fireDirection = v3(0, 0, 0);\n\n    // The time it takes to replace ammunition.\n    reloadTime = 0;\n\n    // Path following direction, 1 means move forward, -1 means move backwards.\n    followPathsDirection = 1;\n\n    // Fire wait time.\n    fireWaitTime = 5;\n\n    start () {\n        this._actor = this.getComponent(Actor)!;\n        this.input = this.getComponent(ActorInputBrain)!;\n        const sensorNode = this.node.getChildByName('sensor_target')!;\n        this.sensorRays = sensorNode.getComponent(SensorRaysAngle)!;\n        this.closestNavigationPon = this._actor._data.nearest;\n\n        if (this._actor === undefined || this.input === undefined || this.sensorRays === undefined) {\n            throw new Error(`${this.node.name} node lose components : ActorBase or ActorInputBrain.`);\n        }\n    }\n\n    onMove () {\n        this.input!.onMove(this._moveDir);\n        this.input!.onRotation(this.targetDirection.x, this.targetDirection.z);\n        this.input!.onRun(random() < 0.05);\n    }\n\n    onJump () {\n        this.input?.onJump();\n    }\n\n    onCrouch () {\n        this.input?.onCrouch();\n    }\n\n    onProne () {\n        this.input?.onProne();\n    }\n\n    onFire () {\n        this.input?.onFire();\n    }\n\n    update (deltaTime: Number) {\n\n        if (Level.Instance.stop) return;\n\n        // Not ready returns do not execute the following logic.\n        if (!this._actor!.isReady) return;\n\n        // If you die, you will return without executing the logic of your brain.\n        if (this._actor?._data.is_dead) return;\n\n        // Returns without executing brain logic if the player dies.\n        const player = Level.Instance._player;\n        if (!player || Level.Instance._player?._data.is_dead) return;\n\n        // Check near has player.\n        this.checkNearPlayer();\n\n        // Test to open and close enemy fire.\n        //this._targetNode = undefined;\n\n        //console.log('target node:', this._targetNode);\n\n        // Go target position.\n\n        // Find target look at target and shoot.\n        if (this._targetNode !== undefined) {\n            this.shootFire();\n        } else { // Random move and find target.\n            this.randomMove();\n            this.input?.onAim(false);\n        }\n\n    }\n\n    shootFire () {\n\n\n        const angle = this.checkPlayerAngle();\n\n        // Fire move.\n        this.moveFire(angle);\n\n        // Wait reload weapon.\n        if (this.reloadTime > 0) {\n            this.reloadTime -= game.deltaTime;\n            return;\n        }\n\n        // Check bullet empty.\n        if (this._actor?._actorEquipment?.currentEquip?.isBulletEmpty) {\n            // Reload Bullet.\n            this.input?.onReload();\n            this.reloadTime = 3;\n            return;\n        }\n\n        this.input?.onAim(true);\n\n        // Check fire.\n        this.checkFire(angle);\n\n    }\n\n    randomMove () {\n        this.waypointsFireIndex = -1;\n        if (this.isFollowWayPointsMove) {\n            this.PathsFollowing();\n        } else {\n            this.calculateNextPosition();\n        }\n    }\n\n    PathsFollowing () {\n\n        if (this.isFollowWayPointsMove) {\n\n            this._actor!._actorMove!.faceMove = true;\n\n            const worldPosition = this._actor!.node.worldPosition;\n            const target = this._wayPoints[this.currentWaypointsIndex];\n\n            UtilVec3.copy(this.targetPosition, target);\n\n            // Detect distance to target point.\n            if (Vec3.distance(worldPosition, target) <= 1) {\n\n                // Arrive current node.\n                this.currentWaypointsIndex += this.followPathsDirection;\n\n                if (this.currentWaypointsIndex >= this._wayPoints.length || this.currentWaypointsIndex < 0) this.isFollowWayPointsMove = false;\n                else this.closestNavigationPon = this._wayPoints[this.currentWaypointsIndex].id;\n\n            } else {\n\n                // Detects if there is a character ahead.\n                if (this.sensorRays?.checkedNode) {\n                    //this.followPathsDirection = -1;\n\n                    //Calculate checked node direction.\n                    UtilVec3.copy(this.targetDirection, this.sensorRays.checkedNode.worldPosition);\n                    this.targetDirection.y = this.node.worldPosition.y;\n\n                    let checkDirection = this.targetDirection.clone();\n                    checkDirection.subtract(this.node.worldPosition);\n\n                    //Calculate checked node side.\n                    const side = -this.targetDirection.clone().cross(this.node.forward).y\n\n                    //Calculate normal vector.\n                    let normal = checkDirection.clone();\n                    normal.cross(side > 0 ? v3(0, -1, 0) : v3(0, 1, 0));\n\n                    //Calculate new target direction.\n                    this.targetDirection.add(normal);\n\n                } else {\n\n                    // Calculate move direction.\n                    UtilVec3.copy(this.targetDirection, this.targetPosition);\n\n                    //this.followPathsDirection = 1;\n                }\n\n                this.targetDirection.y = worldPosition.y;\n                this.targetDirection.subtract(worldPosition).normalize();\n\n                // Set target move.\n                this._moveDir.x = -this.targetDirection.x;\n                this._moveDir.y = 0;\n                this._moveDir.z = -this.targetDirection.z;\n\n                // Calculates the rotation angle of the target.\n                this.lookAtTarget(this._moveDir);\n\n                this._moveDir.x = 0;\n                this._moveDir.y = 0;\n                this._moveDir.z = 1;\n\n                // \n                this.onMove();\n\n                // Random Jump.\n                //if (random() < 0.05) this.onJump();\n            }\n        }\n    }\n\n    followTargetPaths () {\n\n\n\n    }\n\n    lookAtTarget (lookAtDirection: Vec3) {\n\n        UtilVec3.copy(tempRotationSideVector, lookAtDirection);\n        const angle = Math.abs(Vec3.angle(lookAtDirection, this.node.forward));\n        if (angle > 0.001) {\n            const side = Math.sign(-tempRotationSideVector.cross(this.node.forward).y);\n            this.targetDirection.x = side * angle;// game.deltaTime;\n            this.targetDirection.z = 0;\n        }\n    }\n\n    moveFire (angle: number) {\n\n        this._actor!._actorMove!.faceMove = false;\n\n        if (this.waypointsFireIndex === -1) {\n            this.closestNavigationPon = NavSystem.findNearest(this._actor!.node.worldPosition);\n            NavSystem.randomFirePath(this.waypointsFire, this.closestNavigationPon);\n            this.waypointsFireIndex = 0;\n        }\n\n        const worldPosition = this._actor!.node.worldPosition;\n        let target = this.waypointsFire![this.waypointsFireIndex];\n\n        UtilVec3.copy(this.targetPosition, target);\n\n        const targetDistance = Vec3.distance(worldPosition, target);\n\n        //console.log('target distance:', targetDistance);\n\n        if (targetDistance <= 1) {\n\n            // Next way\n            this.waypointsFireIndex++;\n\n            if (this.waypointsFireIndex >= this.waypointsFire!.length) {\n\n                this.closestNavigationPon = NavSystem.findNearest(this._actor!.node.worldPosition);\n                NavSystem.randomFirePath(this.waypointsFire, this.closestNavigationPon);\n                this.waypointsFireIndex = 0;\n                target = this.waypointsFire![this.waypointsFireIndex];\n            }\n        }\n\n        // Calculate move direction.\n        UtilVec3.copy(this.targetDirection, this.targetPosition);\n        this.targetDirection.y = worldPosition.y;\n\n        // Calculate angle speed.\n        const angleSpeed = angle < 5 ? 0.5 : 1.5;\n        this.targetDirection.subtract(worldPosition).normalize().multiplyScalar(angleSpeed);\n\n        this._moveDir.x = -this.targetDirection.x;\n        this._moveDir.y = 0;\n        this._moveDir.z = -this.targetDirection.z;\n\n        // Look at direction.\n        const player = Level.Instance._player;\n\n        UtilVec3.copy(this.targetDirection, worldPosition);\n\n        this.targetDirection.y += player._data.is_crouch ? 0.3 : 1;\n        this.targetDirection.subtract(player.node.worldPosition).normalize();\n        this.lookAtTarget(this.targetDirection);\n\n        this.onMove();\n\n        //if (random() < 0.1) this.onJump();\n\n    }\n\n    checkPlayerAngle (): number {\n\n        // Check shoot angle.\n        const player = Level.Instance._player;\n        const forward = this._actor?.node.forward!;//this._actor?._forwardNode!.forward!;\n        UtilVec3.copy(this.fireDirection, player.node!.worldPosition);\n        this.fireDirection.subtract(this._actor!.node.worldPosition);\n        const angle = math.toDegree(Vec3.angle(forward, this.fireDirection));\n\n        return angle;\n    }\n\n    checkFire (angle: number) {\n\n        // Brain wait fire logic.\n        this.fireWaitTime -= game.deltaTime;\n        if (this.fireWaitTime > 0) return;\n        this.fireWaitTime = randomRange(0.3, 1.3);\n\n        if (angle < 10) this.onFire();\n    }\n\n    freePathMove () {\n        NavSystem.randomPaths(this._wayPoints, this._actor!.node.worldPosition, randomRangeInt(5, 10), this.closestNavigationPon);\n        //Navigation.calculateRandomPoint(this._actor!.node.worldPosition);\n        console.log('this._wayPoints:', this._wayPoints);\n        this.isFollowWayPointsMove = true;\n        this.currentWaypointsIndex = 0;\n    }\n\n    fleeTarget () {\n        // calculate flee.\n    }\n\n    followTarget () {\n        // calculate target.\n        NavSystem.findPaths(this._wayPoints, this._actor!.node.worldPosition, this.closestNavigationPon, Level.Instance._player!.node.worldPosition);\n\n    }\n\n    checkNearPlayer () {\n\n        const player = Level.Instance._player;\n\n        if (!player) return undefined;\n\n        const data = this._actor!._data;\n        const distance = Vec3.distance(player.node.worldPosition, this._actor!.node.worldPosition);\n\n        //console.log('target distance:', distance, ' nearby distance:', data._ai_nearby_distance);\n\n        if (distance < data.ai_nearby_distance) {\n            this._targetNode = player.node;\n        } else {\n            this._targetNode = undefined;\n        }\n\n    }\n\n    calculateNextPosition () {\n        NavSystem.randomPaths(this._wayPoints, this._actor!.node.worldPosition, randomRangeInt(5, 10),);\n        if (this._wayPoints.length === 0) {\n            console.warn(`${this.node.name} can not find path`);\n            return;\n        }\n        //console.log('this._wayPoints:', this._wayPoints);\n        this.isFollowWayPointsMove = true;\n        this.currentWaypointsIndex = 0;\n    }\n\n\n}","import { _decorator, Component, Node } from 'cc';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { IActorEquip } from './actor-interface';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorCrossbow')\nexport class ActorCrossbow extends ActorEquipBase {\n\n    _pointShoot:Node | null | undefined;\n\n    start() {\n        this._pointShoot = this.node.getChildByName('point_shoot');\n    }\n\n    onDestroy() {\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator } from 'cc';\nimport { geometry, PhysicsSystem, PhysicsRayResult } from 'cc';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { calculateDamage } from './damage-core';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\nlet ray = new geometry.Ray();\n\n@ccclass('ActorEnemyGun')\nexport class ActorEnemyGun extends ActorEquipBase {\n    \n    /**\n     * Execute fire.\n     */\n    onFire() {\n\n        if(!this._actor?._forwardNode) return;\n        \n        // The number of bullets is reduced by one.\n        this._bagData!.bulletCount--;\n\n        // Get the weapon shooting direction node.\n        const forwardNode = this._actor!._forwardNode!;\n\n        // Get Weapon Shooting Points\n        const origin = forwardNode.worldPosition;\n\n        // Get the weapon shooting direction.\n        const shootDirection = forwardNode.forward;\n\n        // Set physical ray detection parameters.\n        UtilVec3.copy(ray.o, origin);\n        UtilVec3.copy(ray.d, shootDirection);\n\n        // Get weapon range.\n        const distance = this._data.damage.distance;\n\n        // Start physical shot detection.\n        let hit:PhysicsRayResult | undefined;\n        if (PhysicsSystem.instance.raycastClosest(ray, this.mask, distance)) {\n            hit = PhysicsSystem.instance.raycastClosestResult;\n        }\n\n        // Show Tracer line.\n        this.showTracer(hit, shootDirection);\n\n        // Calculates shot damage.\n        calculateDamage(this._data, hit);\n    }\n    \n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, game, Vec3, PhysicsRayResult, randomRange, v3 } from 'cc';\nimport { ActionActorEquip, key_type_boolean } from '../../core/action/action';\nimport { Actor } from './actor';\nimport { BagItem } from './actor-bag';\nimport { UtilNode, UtilVec3 } from '../../core/util/util';\nimport { Msg } from '../../core/msg/msg';\nimport { ActorAnimationGraph } from './actor-animation-graph';\nimport { FxBase } from '../../core/effect/fx-base';\nimport { fx } from '../../core/effect/fx';\nimport { Local } from '../../core/localization/local';\nconst { ccclass, property } = _decorator;\n\nlet tracerEndPosition = v3(0, 0, 0);\n\n@ccclass('ActorEquipBase')\nexport class ActorEquipBase extends Component {\n\n    point_shoot: Node | undefined;\n\n    _animationGraph: ActorAnimationGraph | undefined;\n\n    _view: Node | undefined;\n\n    _bagData: BagItem | undefined;\n\n    _data: { [key: string]: any } = {};\n\n    _action: ActionActorEquip | undefined;\n\n    _actor: Actor | undefined;\n\n    isPlayer = false;\n\n    fxMuzzle: FxBase | undefined;\n\n    isBulletEmpty = false;\n\n    mask = 1 << 2 | 1 << 3 | 1 << 4;\n\n    __preload () {\n        this.point_shoot = this.node.getChildByName('point_shoot')!;\n        this.fxMuzzle = UtilNode.find(this.node, 'fx_muzzle').getComponent(FxBase)!;\n        this._view = this.node.getChildByName('view')!;\n        this.node.on('do', this.do, this);\n        this.node.on('init', this.init, this);\n    }\n\n\n    init (bagData: BagItem) {\n        this._actor = bagData.actor;\n        this._bagData = bagData;\n        this._data = this._bagData.data;\n        this._action = new ActionActorEquip(this._data.action, this);\n        this._bagData.lastUseTime = game.totalTime / 1000;\n        this.isPlayer = this._actor.isPlayer;\n        this._animationGraph = this._actor._animationGraph;\n    }\n\n    onDestroy () {\n        this.node.off('do', this.do, this);\n        this.node.off('init', this.init, this);\n    }\n\n    do (name: string) {\n        if (this._action) {\n            if (name === 'fire' && !this.checkUse()) return;\n            this._action.on(name);\n        }\n    }\n\n    checkAutoFire () {\n        if (this._actor?._data.is_auto_fire) {\n            this.do(\"fire\");\n        }\n    }\n\n    update (deltaTime: number) {\n        this._action?.update(deltaTime);\n    }\n\n    setActive (data: key_type_boolean) {\n        const activeNode = this.node.getChildByName(data.key);\n        if (activeNode) activeNode.active = data.value;\n        else console.warn(` You want set undefined node active. ${this.node?.name}/${data.key}`);\n    }\n\n    hiddenNode () {\n        this.node.active = false;\n    }\n\n    setFx (data: key_type_boolean) {\n        fx.playLoop(this.node, data.key, data.value);\n    }\n\n    showMuzzle () { this.fxMuzzle?.play(); }\n\n    onFx (name: string) {\n        fx.play(this.node, name);\n    }\n\n    /**\n     * Weapon recoil method\n     */\n    onRecoil () {\n\n        // Get the recoil ratio.\n        // Aim state gets a specific value based on the gun's data, non-Aim state defaults to one.\n        const recoil_rate = this._actor!._data.is_aim ? this._data.recoil_aim_rate : 1;\n\n        // Random recoil offset is performed.\n        const recoilX = randomRange(this._data.recoil_x[0], this._data.recoil_x[1]) * recoil_rate;\n        const recoilY = randomRange(this._data.recoil_y[0], this._data.recoil_y[1]) * recoil_rate;\n\n        // Set the offset of the recoil.\n        this._actor?.onRotation(recoilX, recoilY);\n    }\n\n\n    /**\n     * Display the current infrared tracking path.\n     * @param hit The location of the detection point.\n     * @param dir The direction of the target point.\n     */\n    showTracer (hit: PhysicsRayResult | undefined, dir: Vec3) {\n\n        // Get the world coordinates of the firing point.\n        const origin = this.fxMuzzle!.node.worldPosition;\n\n        // The physical hit point exists set as the end coordinate.\n        if (hit?.hitPoint) {\n            UtilVec3.copy(tracerEndPosition, hit.hitPoint);\n        } else {  // If the physical hit point does not exist, the end point is extended by 100 units in the direction of fire.\n            UtilVec3.copy(tracerEndPosition, origin);\n            tracerEndPosition.add3f(dir.x * 100, dir.y * 100, dir.z * 100);\n        }\n        //console.log(origin, dir, tracerEndPosition);\n        Msg.emit('msg_set_tracer', { start: origin, end: tracerEndPosition });\n    }\n\n    actionEnd () { }\n\n    checkUse (): boolean {\n        // Check bullet count.\n        this.isBulletEmpty = this._bagData!.bulletCount <= 0 && this._bagData!.data.bullet_count !== -1;\n        if (this.isBulletEmpty) {\n            this.do('fire_empty');\n            return false;\n        }\n        const lastUseTime = this._bagData!.lastUseTime;\n        const timeSpace = (game.totalTime - lastUseTime) / 1000;\n        return timeSpace >= this._data.damage.cooling;\n\n    }\n\n    updateCooling () {\n        this._bagData!.lastUseTime = game.totalTime;\n    }\n\n    checkFullBullet (): boolean {\n\n        if (this._bagData!.bulletCount == this._bagData?.data.bullet_count) {\n            Msg.emit(\n                'msg_tips',\n                `${Local.Instance.get('bullet_is_full')}`\n            );\n            return true;\n        }\n        return false;\n    }\n\n    onReload () {\n\n        if (!this._actor) return;\n\n        if (this._actor.bulletBox > 0) {\n            //this._bagData!.bulletClipCount--;\n            this._actor.bulletBox--;\n            if (this._actor.bulletBox < 0) this._actor.bulletBox = 0;\n            this._bagData!.bulletCount = this._bagData?.data.bullet_count;\n            this.isBulletEmpty = false;\n        } else {\n            Msg.emit(\n                'msg_tips',\n                `${Local.Instance.get('clip_is_null')}`\n            );\n        }\n\n    }\n\n    onUse () { }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Node, game, math } from 'cc';\nimport { Msg } from \"../../core/msg/msg\";\nimport { Res } from '../../core/res/res';\nimport { ResCache } from '../../core/res/res-cache';\nimport { UtilNode } from '../../core/util/util';\nimport { Actor } from \"./actor\";\nimport { BagItem } from './actor-bag';\nimport { fun } from '../../core/util/fun';\nimport { ActorEquipBase } from './actor-equip-base';\n\n\nexport class ActorEquipment {\n\n    // The character object to which the current equipment belongs.\n    _actor:Actor;\n\n    // A pool of cached equipment objects.\n    //The purpose is to avoid the creation and destruction of objects at runtime.\n    equipPool:{ [key:string]:Node } = {};\n\n    // Dictionary of weapon skeleton nodes for mounted equipment.\n    equipBoneNode: { [key:string]:Node } = {};\n\n    // Current equipment node.\n    currentEquipNode:Node | undefined;\n\n    // bag information of current equipment.\n    currentEquipItem:BagItem | undefined;\n\n    // The component object of the current weapon.\n    currentEquip:ActorEquipBase | undefined;\n\n    // The stability value of the equipment.\n    // The purpose is to describe the stability value of the shot.\n    // This value affects the size of the aiming area of the shot.\n    stableValue = 1;\n\n    constructor(actor:Actor) {\n\n        // Initialize the Actor object corresponding to the equipment manager passed in.\n        this._actor = actor;\n\n        // Get all node maps with the name 'weapon_root'.\n        this.equipBoneNode = UtilNode.getChildrenByNameBlur(this._actor.node, 'weapon_root');\n\n        // Initialize the cache pool for the equipment list.\n        const equipmentList = this._actor._data.cache_equipment_list;\n\n        // Get the length of the equipment list.\n        const length = equipmentList.length;\n        for(let i = 0; i < length; i++) {\n\n            // Get the equipment name from the current index.\n            const weaponName = equipmentList[i];\n\n            // Get the prefab of the equipment from the resource buffer pool.\n            const prefab = ResCache.Instance.getPrefab(weaponName + '_tps');\n\n            // Get the bone node of the equipment.\n            const bindNode = this.equipBoneNode[this._actor._data.weapon_bone];\n\n            // Instantiate the game object and set the parent node to the bone node.\n            const nodePrefab = Res.inst(prefab, bindNode);\n\n            // Set the object pool key to map to this instantiated weapon object.\n            this.equipPool[weaponName] = nodePrefab;\n\n            // Set the activity of this cache object to false.\n            nodePrefab.active = false;\n        }\n\n        // Equip the default weapon.\n        this.equip(actor._data.default_equip_index);\n    }\n\n    public equip(replaceEquipmentIndex:number):boolean {\n\n        // Get the current bag equipment index.\n        const currentEquipmentIndex = this._actor._data.current_equipment_index;\n\n        // If the current bag index is the same as the updated bag index, \n        // true is no need to switch weapons, false is need to switch weapons.\n        if (currentEquipmentIndex !== replaceEquipmentIndex) {\n\n            // Get bag equipment name list from player data.\n            const equipment_name_list = this._actor._data.equipment_name_list;\n\n            // Get the name of the equipment name to be switched from the equipment list.\n            const changeEquipmentName = equipment_name_list[replaceEquipmentIndex];\n\n            // Return false if the equipment does not exist or is not empty to cancel switching equipment.\n            if(!changeEquipmentName || changeEquipmentName.length <= 0) return false;\n\n            // Uninstall current equipment.\n            this.unEquip();\n\n            // Replace new equipment data and models.\n            // Here you need to do a time delay with the animation.\n            const self = this;\n            fun.delay(()=>{\n                const items = self._actor._data.items;\n                self.currentEquipNode = self.equipPool[changeEquipmentName];\n                self.currentEquipItem = items[changeEquipmentName];\n                self.currentEquipNode!.active = true;\n                self.currentEquipNode!.emit('init',this.currentEquipItem);\n                self.currentEquipNode!.emit('do', 'take_out');\n                self._actor._data.current_equipment_index = replaceEquipmentIndex;\n                self.currentEquip = self.currentEquipNode?.getComponent(ActorEquipBase)!;\n                if(this._actor.isPlayer) {\n                    //const mainCamera = CameraSetting.main?.camera;\n                    //if(mainCamera) mainCamera.fov = this.currentEquipItem!.fov;\n                    Msg.emit('msg_change_equip');\n                    Msg.emit('msg_update_equip_info');\n                }\n            }, 0.3)\n\n            return true;\n\n        }else{\n            return false;\n        }\n\n    }\n\n    /**\n     * Uninstall current equipment.\n     */\n    public unEquip() {\n\n        //Get the index of the current equipment.s\n        const currentEquipmentIndex = this._actor._data.current_equipment_index;\n\n        // Compare whether the current equipment index value is -1.\n        // An index of -1 means no current equipment, skip setting.\n        if (currentEquipmentIndex !== -1) {\n\n            // Get a list of equipment names.\n            const equipment_name_list = this._actor._data.equipment_name_list; \n\n            // Get the current equipment name.\n            const currentEquipmentName = equipment_name_list[currentEquipmentIndex];\n\n            // Whether the current equipment name exists.\n            // false means it does not exist, the return function does not uninstall the equipment\n            if(!currentEquipmentName) {\n                console.warn(`The equipment index that does not exist, the index id is ${currentEquipmentIndex}, the object is ${this._actor?.node.name}`)\n                return;\n            }\n\n            // Get the current equipment object node from the equipment object pool.\n            const currentEquipmentNode = this.equipPool[currentEquipmentName];\n\n            //Whether the object pool contains equipment objects.\n            if (currentEquipmentNode) {\n                // Notify the equipment node to perform recovery behavior.\n                currentEquipmentNode.emit('do', 'take_back');\n            }else{\n                console.warn(``);\n            }\n        }\n    }\n\n    /**\n     * Execution equipment action.\n     * @param action Name of the execution action.\n     */\n    public do(action:string) {\n        // Execute the current equipment action.\n        this.currentEquipNode?.emit('do', action);\n    }\n\n    /**\n     * Update to set the range of Aim.\n     * @param normalizeCharacterMoveSpeed Normalized character movement speed.\n     * @param toMax The aim range is set to the maximum value: true is set, false is not set. \n     */\n    public updateAim(normalizeCharacterMoveSpeed:number, toMax = false) {\n        \n        if (this.currentEquipItem === undefined) {\n            if (this.stableValue !== 0){\n                this.stableValue = 0;\n                if(this._actor.isPlayer) Msg.emit('msg_update_aim',  this.stableValue);\n            }\n        }else{\n            const equipData = this.currentEquipItem.data;\n            const equipStable = equipData.stable_max_value;\n            let currentStable = 0;\n            if(toMax) {\n                this.stableValue = equipData.stable_max_value;\n                currentStable = equipData.stable_max_value;\n            }else{\n                if (equipStable !== 0) {\n                    currentStable = Math.abs(normalizeCharacterMoveSpeed) <= 0.001 ? equipData.stable_min_value : equipData.stable_max_value * normalizeCharacterMoveSpeed;\n                    currentStable = Math.max(equipData.stable_min_value, currentStable);\n                }\n                this.stableValue = math.lerp(this.stableValue, currentStable, game.deltaTime * equipData.stable_smooth);\n            }\n            \n            if(this._actor.isPlayer) Msg.emit('msg_update_aim', this.stableValue);\n        }\n    }\n\n}","import { _decorator, Component, math, Node, v3, CCFloat } from 'cc';\nimport { UtilVec3 } from '../../core/util/util';\nimport { ActorMove } from '../actor/actor-move';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorFace')\nexport class ActorFace extends Component {\n\n    @property(Node)\n    rotationNode: Node | undefined;\n\n    @property({ type: ActorMove, tooltip: 'Test actor move.' })\n    actorMove: ActorMove | undefined;\n\n    @property(CCFloat)\n    smoothAngle = 20;\n\n    @property(CCFloat)\n    smoothHeight = 1;\n\n    targetAngle = v3(0, 0, 0);\n    currentAngle = v3(0, 0, 0);\n\n    targetPosition = v3(0, 0, 0);\n    currentPosition = v3(0, 0, 0);\n\n    start () {\n        UtilVec3.copy(this.targetAngle, this.rotationNode!.eulerAngles);\n        UtilVec3.copy(this.currentAngle, this.targetAngle);\n        UtilVec3.copy(this.targetPosition, this.rotationNode!.position);\n        UtilVec3.copy(this.currentAngle, this.targetPosition);\n    }\n\n    update (deltaTime: number) {\n\n        this.rotationX(this.actorMove!.angleVertical);\n\n        this.currentAngle.x = math.lerp(this.currentAngle.x, this.targetAngle.x, this.smoothAngle * deltaTime);\n\n        this.rotationNode?.setRotationFromEuler(this.currentAngle);\n\n        this.currentPosition.y = math.lerp(this.currentPosition.y, this.targetPosition.y, this.smoothHeight * deltaTime);\n\n        this.rotationNode?.setPosition(this.currentPosition);\n\n    }\n\n    rotationX (angleX: number) {\n\n        this.targetAngle.x = angleX;\n\n    }\n\n    setRootY (height: number) {\n        this.targetPosition.y = height;\n    }\n}\n\n","import { _decorator, Component } from 'cc';\n\nconst { ccclass } = _decorator;\n\n@ccclass('ActorFollowPathMove')\nexport class ActorFollowPathMove extends Component {\n\n    //public setMove()\n\n}","import { _decorator, v3 } from 'cc';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { Res } from '../../core/res/res';\nimport { ResCache } from '../../core/res/res-cache';\nimport { ProjectileGrenade } from './projectile-grenade';\nimport { Level } from '../level/level';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorGrenade')\nexport class ActorGrenade extends ActorEquipBase {\n\n    onFire() {\n        const forwardNode = this._actor!._forwardNode!;\n        const origin = forwardNode.worldPosition;\n        const dir = forwardNode.forward;\n        const prefab = ResCache.Instance.getPrefab(this._data.projectile_res);\n        let position = v3(origin.x, origin.y, origin.z);\n        position.add(dir);\n        const projectile = Res.instNode(prefab, Level.Instance._objectNode, position);\n        const projectileGrenade = projectile.getComponent(ProjectileGrenade);\n        const throwDir = dir.multiplyScalar(10);\n        projectileGrenade?.onThrow(this._data, throwDir, this._actor);\n    }\n\n}\n\n","import { _decorator, Component, Node, geometry, PhysicsSystem, game, PhysicsRayResult, Vec3, director } from 'cc';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { calculateDamage } from './damage-core';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\nlet ray = new geometry.Ray();\n\n@ccclass('ActorHandgun')\nexport class ActorHandgun extends ActorEquipBase {\n\n    onFire() {\n        this._bagData!.bulletCount--;\n        const forwardNode = this._actor!._forwardNode!;\n        const origin = forwardNode.worldPosition;\n        const dir = forwardNode.forward;\n        UtilVec3.copy(ray.o, origin);\n        UtilVec3.copy(ray.d, dir);\n        const distance = this._data.damage.distance;\n        let hit:PhysicsRayResult | undefined;\n        if (PhysicsSystem.instance.raycastClosest(ray, this.mask, distance)) {\n            hit = PhysicsSystem.instance.raycastClosestResult;\n        }\n        this.showTracer(hit, dir);\n        calculateDamage(this._data, hit, this._actor);\n    }\n\n}\n","\nimport { _decorator, Component, find, Vec2, PhysicsSystem, input, Input, EventMouse, geometry, Camera, game, EventTouch, director, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { IActorInput } from '../../core/input/IActorInput';\nimport { Msg } from '../../core/msg/msg';\nimport { Actor } from './actor';\n\n\n@ccclass('ActorInputBrain')\nexport class ActorInputBrain extends Component implements IActorInput {\n\n    _actor:IActorInput | undefined | null;\n\n    _isPause = false;\n\n    start () {\n        this._actor = this.getComponent(Actor);\n        if (this._actor === null) {\n            throw new Error(`${this.node.name} node can not find ActorEnemy`);\n        }\n    }\n\n    onMove(move:Vec3) {\n        this._actor?.onMove(move);\n    }\n\n    onRotation(x:number, y:number){\n        this._actor?.onRotation(x, y);\n    }\n\n    onDir(x:number, y:number) {\n        this._actor?.onDir(x, y);\n    }\n\n    onJump() {\n        this._actor?.onJump();\n    }\n\n    onRun(isRun:boolean) {\n        this._actor?.onRun(isRun);\n    }\n\n    onCrouch() {\n        this._actor?.onCrouch();\n    }\n\n    onProne(){\n        //this._actor?.onProne();\n    }\n\n    onAim(isAim:boolean | undefined): void {\n        this._actor?.onAim(isAim);\n    }\n    onChangeEquips(): boolean {\n        throw new Error('Method not implemented.');\n    }\n\n\n    onFire() {\n        this._actor?.onFire();\n    }\n\n    onEquip(index:number) {\n        this._actor?.onEquip(index);\n    }\n\n    onPick() {\n        this._actor?.onPick();\n    }\n\n    onReload() {\n        this._actor?.onReload();\n    }\n\n    onDrop() {\n        this._actor?.onDrop();\n    }\n\n    onPause() {}\n    \n\n}","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Vec3, sys } from 'cc';\nconst { ccclass } = _decorator;\nimport { IActorInput } from '../../core/input/IActorInput';\nimport { Level } from '../level/level';\nimport { Msg } from '../../core/msg/msg';\nimport { UI } from '../../core/ui/ui';\n\n@ccclass('ActorInput')\nexport class ActorInput extends Component implements IActorInput {\n\n    _actor:IActorInput | undefined | null;\n    _isPause = false;\n\n    _isOpenEquips = false;\n\n    public static inst:ActorInput | undefined;\n\n    start () {        \n        Msg.on('msg_set_input_active', this.setActive.bind(this));\n        ActorInput.inst = this;\n\n        Msg.on('msg_exit_pointer',this.exitPointer.bind(this));\n    }\n\n    exitPointer() {\n        document.exitPointerLock();\n    }\n    \n    onDestroy() {\n        Msg.off('msg_set_input_active', this.setActive.bind(this));\n        Msg.off('msg_exit_pointer', this.exitPointer.bind(this));\n\n        if(sys.platform === sys.Platform.MOBILE_BROWSER || \n            sys.platform === sys.Platform.ANDROID || \n            sys.platform === sys.Platform.IOS ) { \n                UI.Instance.off('ui_joystick');\n            }\n    }\n\n    setActive(isShow:boolean) {\n        if(isShow) {\n            this.initInput();\n        }else{\n            for(let i = 0; i < this.node.children.length; i++) this.node.children[i].active = false;\n            UI.Instance.off('ui_joystick');\n        }\n    }\n\n    initInput() {\n\n        this._actor = Level.Instance._player;\n\n        // Select the type of input device enabled based on the platform.\n        if(sys.platform === sys.Platform.MOBILE_BROWSER || \n            sys.platform === sys.Platform.ANDROID || \n            sys.platform === sys.Platform.IOS ) {\n            UI.Instance.on('ui_joystick');\n        }else {\n            this.node.children[1].active = true;\n            this.node.children[0].active = true;\n            //UI.Instance.on('ui_joystick');\n        }\n\n        \n    }\n\n    onMove(move:Vec3) {\n        this._actor?.onMove(move);\n    }\n\n    onRotation(x:number, y:number){\n        this._actor?.onRotation(x, y);\n    }\n\n    onJump() {\n        this._actor?.onJump();\n    }\n\n    onRun(isRun:boolean) {\n        this._actor?.onRun(isRun);\n    }\n\n    onCrouch() {\n        this._actor?.onCrouch();\n    }\n\n    onAim(){\n        this._actor?.onAim(undefined);\n    }\n\n    onFire() {\n        this._actor?.onFire();\n    }\n\n    onAutoFire(isAutoFire:boolean) {\n        this._actor?.onAutoFire(isAutoFire);\n    }\n\n    onEquip(index:number) {\n        this._actor?.onEquip(index);\n    }\n\n    onPick() {\n        this._actor?.onPick();\n    }\n\n    onReload() {\n        this._actor?.onReload();\n    }\n\n    onDrop() {\n        this._actor?.onDrop();\n    }\n\n    onDir(x: number, y: number) {\n    }\n\n    onPause() {\n\n        this._isPause = !this._isPause;\n        Msg.emit('push', 'level_pause');\n\n    }\n\n    onChangeEquips() {\n        Msg.emit('push', 'select_equips');\n        return true;\n    }\n    \n\n}","export interface IActorEquip {\n\n    onUse();\n    onDrop();\n    onPick();\n\n}\n\nexport class DamageData {\n    hitPart:string | undefined;\n    hitDistance:number | undefined;\n    fireData:any;\n}","import { Component, _decorator } from \"cc\";\nimport { BagItem } from \"./actor-bag\";\nimport { IActorEquip } from \"./actor-interface\";\n\nconst { ccclass } = _decorator;\n\n@ccclass('ActorItem')\nexport class ActorItem extends Component {\n\n    data:BagItem | undefined;\n    item:IActorEquip | undefined;\n\n    start() {\n\n    }\n\n}","import { _decorator, Component, Node, find } from 'cc';\nimport { UtilNode } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorLookAt')\nexport class ActorLookAt extends Component {\n\n    @property\n    bone_name = 'bone_root';\n\n    @property(Node)\n    bone_head: Node = Object.create(null);\n\n    _angle = 0;\n    _dir = 1;\n\n    start () {\n        this.bone_head = UtilNode.find(this.node, this.bone_name);\n    }\n\n    lateUpdate (deltaTime: number) {\n\n        this.bone_head?.setRotationFromEuler(this._angle, 0, 0);\n\n    }\n}\n\n","import { _decorator, geometry, PhysicsSystem, PhysicsRayResult } from 'cc';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { calculateDamage } from './damage-core';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\nlet ray = new geometry.Ray();\n\n@ccclass('ActorMachineGun')\nexport class ActorMachineGun extends ActorEquipBase {\n    \n    onFire() {\n        this._bagData!.bulletCount--;\n        const forwardNode = this._actor!._forwardNode!;\n        const origin = forwardNode.worldPosition;\n        const dir = forwardNode.forward;\n        UtilVec3.copy(ray.o, origin);\n        UtilVec3.copy(ray.d, dir);\n        const distance = this._data.damage.distance;\n        let hit:PhysicsRayResult | undefined;\n        if (PhysicsSystem.instance.raycastClosest(ray, this.mask, distance)) {\n            hit = PhysicsSystem.instance.raycastClosestResult;\n        }\n        this.showTracer(hit, dir);\n        calculateDamage(this._data, hit, this._actor);\n    }\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorMain')\nexport class ActorMain extends Component {\n\n    public static target = Object.create(null);\n\n    start () {\n        ActorMain.target = this.node;\n    }\n\n    update (deltaTime: number) {\n\n    }\n\n}\n\n","import { _decorator, geometry, PhysicsSystem, PhysicsRayResult } from 'cc';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { calculateDamage } from './damage-core';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorMeleeWeapon')\nexport class ActorMeleeWeapon extends ActorEquipBase {\n\n    onFire() {\n        this._bagData!.bulletCount--;\n        const forwardNode = this._actor!._forwardNode!;\n        const origin = forwardNode.worldPosition;\n        const dir = forwardNode.forward;\n        let ray = new geometry.Ray(origin.x, origin.y, origin.z, dir.x, dir.y , dir.z);\n        const mask = 1 << 3 | 1 << 4;\n        const distance = this._data.damage.distance;\n        let hit:PhysicsRayResult | undefined = undefined;\n        if (PhysicsSystem.instance.raycastClosest(ray, mask, distance)) {\n            hit = PhysicsSystem.instance.raycastClosestResult;\n        }\n        calculateDamage(this._data, hit, this._actor);\n    }\n\n}\n\n","import { _decorator, Component, geometry, Node, PhysicsRayResult, PhysicsSystem, v3, Vec3 } from 'cc';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorMoveSlope')\nexport class ActorMoveSlope extends Component {\n\n    ray = new geometry.Ray();\n    mask = 0;\n\n    distance = 0.4\n\n    p0 = v3(0, 0, 0);\n    p1 = v3(0, 0, 0);\n\n    direction = v3(0, 0, 0);\n\n    start() {\n        this.mask =  1 << 3 | 1 << 4;\n        UtilVec3.copy(this.ray.d, Vec3.ZERO);\n        this.ray.d = v3(0, -1, 0);\n        this.distance = 0.3;\n    }\n\n    updateSlope(moveDirection:Vec3):Vec3 {\n\n        const moveLength = moveDirection.length();\n\n        if(moveLength === 0) return Vec3.ZERO;\n\n        UtilVec3.copy(this.ray.o, this.node.worldPosition);\n        UtilVec3.copy(this.direction, moveDirection);\n\n        if (PhysicsSystem.instance.raycastClosest(this.ray, this.mask, this.distance)) {\n            const hit1 = PhysicsSystem.instance.raycastClosestResult;\n            UtilVec3.copy(this.p0, hit1.hitPoint);\n            this.ray.o.add(moveDirection.normalize().multiplyScalar(0.03));\n            if (PhysicsSystem.instance.raycastClosest(this.ray, this.mask, this.distance)) { \n                const hit2 = PhysicsSystem.instance.raycastClosestResult;\n                UtilVec3.copy(this.direction, hit2.hitPoint);\n                this.direction.subtract(this.p0).normalize().multiplyScalar(moveLength);\n            }\n        }\n\n        return this.direction;\n\n    }\n}\n\n","import { _decorator, Component, math, Node, RigidBody, v3, Vec3, CCFloat } from 'cc';\nimport { ActorMoveSlope } from './actor-move-slope';\nimport { UtilVec3 } from '../../core/util/util';\nimport { SensorSlope } from '../../core/sensor/sensor-slope';\nimport { SensorGround } from '../../core/sensor/sensor-ground';\nimport { fun } from '../../core/util/fun';\nimport { Level } from '../level/level';\nconst { ccclass, property } = _decorator;\n\nlet tempRotationSideVector = v3(0, 0, 0);\n\n@ccclass('ActorMove')\nexport class ActorMove extends Component {\n\n    @property({ type: CCFloat, tooltip: 'Move Speed. ' })\n    speed = 1;\n\n    @property({ tooltip: 'Jump Force.' })\n    jumpForce = v3(0, 6.0, 0);\n\n    @property({ type: CCFloat, tooltip: 'Move smooth value.' })\n    smoothMove = 5;\n\n    @property({ type: CCFloat, tooltip: 'Default angle value' })\n    angleVertical = 0;\n\n    @property({ type: SensorSlope, tooltip: ' Sensor slope.' })\n    sensorSlop: SensorSlope | undefined;\n\n    @property({ type: SensorGround, tooltip: ' Sensor ground.' })\n    sensorGround: SensorGround | undefined;\n\n    velocity = v3(0, 0, 0);\n    velocityLocal = v3(0, 0, 0);\n    currentVelocity: Vec3 = v3(0, 0, 0);\n    moveVec3 = new Vec3(0, 0, 0);\n\n    currentDirection = v3(0, 0, 0);\n    direction = v3(0, 0, 0);\n    angleHead = 0;\n\n    rigid: RigidBody | undefined;\n\n    @property\n    angleVerticalMax = 30;\n\n    @property\n    angleVerticalMin = -30;\n\n    @property\n    faceMove = true;\n\n    angle = 0;\n\n    isJump = false;\n\n    isStopMove = false;\n\n    start () {\n\n        this.rigid = this.getComponent(RigidBody)!;\n        this.sensorSlop = this.getComponent(SensorSlope)!;\n        this.sensorGround = this.getComponent(SensorGround)!;\n\n        this.node.setRotationFromEuler(0, 180, 0);\n        this.onRotation(180, 0);\n    }\n\n    lateUpdate (deltaTime: number) {\n        if (Level.Instance.stop) {\n            this.stop();\n            return;\n        }\n        if (this.isStopMove) return;\n        this.movePosition(deltaTime);\n        this.moveRotation();\n    }\n\n    movePosition (deltaTime: number) {\n\n        //Lerp velocity.\n        Vec3.lerp(this.velocityLocal, this.velocityLocal, this.moveVec3, deltaTime * this.smoothMove);\n        UtilVec3.copy(this.velocity, this.velocityLocal);\n\n        //rotate y.\n        if (this.faceMove)\n            Vec3.rotateY(this.velocity, this.velocity, Vec3.ZERO, math.toRadian(this.node.eulerAngles.y));\n\n        this.rigid?.getLinearVelocity(this.currentVelocity);\n        this.velocity.y = this.currentVelocity.y;\n\n        if (this.sensorGround?._isGround && this.sensorSlop!.checkSlope(this.velocity)) {\n            const moveLength = this.velocity.length();\n            UtilVec3.copy(this.velocity, this.sensorSlop!.vectorSlop);\n            this.velocity.normalize().multiplyScalar(moveLength);\n        }\n\n        this.rigid?.setLinearVelocity(this.velocity);\n    }\n\n    moveRotation () {\n        UtilVec3.copy(this.currentDirection, this.direction);\n        this.angle = Math.abs(Vec3.angle(this.currentDirection, this.node.forward));\n        if (this.angle > 0.001) {\n            UtilVec3.copy(tempRotationSideVector, this.currentDirection);\n            const side = Math.sign(-tempRotationSideVector.cross(this.node.forward).y);\n            const angle = side * this.angle * 20 + this.node.eulerAngles.y;\n            this.node.setRotationFromEuler(0, angle, 0);\n        }\n    }\n\n    moveDirection (direction: Vec3) {\n        UtilVec3.copy(this.moveVec3, direction);\n        this.moveVec3.multiplyScalar(this.speed);\n    }\n\n    jump () {\n        //this.rigid?.applyImpulse(this.jumpForce);\n        this.rigid?.getLinearVelocity(this.currentVelocity);\n        this.currentVelocity.y = 7;\n        this.rigid?.setLinearVelocity(this.currentVelocity);\n    }\n\n    onRotation (x: number, y: number) {\n        this.angleHead += x;\n        this.direction.z = -Math.cos(Math.PI / 180.0 * this.angleHead);\n        this.direction.x = Math.sin(Math.PI / 180.0 * this.angleHead);\n        this.angleVertical -= y;\n        if (this.angleVertical >= this.angleVerticalMax)\n            this.angleVertical = this.angleVerticalMax;\n\n        if (this.angleVertical <= this.angleVerticalMin)\n            this.angleVertical = this.angleVerticalMin;\n    }\n\n    onDirection (x: number, y: number, z: number) {\n\n        this.direction.x = x;\n        this.direction.z = z;\n\n        this.angleVertical = y;\n        if (this.angleVertical >= this.angleVerticalMax)\n            this.angleVertical = this.angleVerticalMax;\n\n        if (this.angleVertical <= this.angleVerticalMin)\n            this.angleVertical = this.angleVerticalMin;\n\n    }\n\n    stop () {\n        this.rigid!.getLinearVelocity(this.velocity);\n        this.velocity.x = 0;\n        this.velocity.z = 0;\n        this.velocity.y = 0;\n        this.rigid!.setLinearVelocity(this.velocity);\n    }\n\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { ActorBase } from '../../core/actor/actor-base';\nimport { UtilNode } from '../../core/util/util';\nimport { Actor } from './actor';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorPart')\nexport class ActorPart extends Component {\n\n    @property( { type:ActorBase } )\n    actor:ActorBase | undefined;\n\n    @property\n    part = 'body';\n\n}\n\n","import { _decorator, Component, Vec3, v3, v2, random, RigidBody, inverseLerp } from 'cc';\nimport { SensorRaysAngle } from '../../core/sensor/sensor-rays-angle';\nimport { UtilNode } from '../../core/util/util';\n\nconst { ccclass } = _decorator;\n\n@ccclass('ActorPhysicalSkin')\nexport class ActorPhysicalSkin extends Component {\n\n    sensor:SensorRaysAngle | undefined;\n    rigid:RigidBody | undefined;\n    velocity:Vec3 = v3(0, 0, 0); \n    dir:Vec3 = v3(0, 0, 0);\n    velocityPlane:Vec3 = v3(0, 0, 0);\n    inverseForce:Vec3 = v3(0, 0, 0);\n\n    start() {\n        this.sensor = UtilNode.getChildComponent(this.node, 'skin', SensorRaysAngle); //this.node.getChildByName('skin').getComponent(SensorRaysAngle);\n        this.rigid = UtilNode.getComponent(this.node, RigidBody); //this.getComponent(RigidBody);\n        this.velocity = v3(0, 0, 0);\n    }\n\n    lateUpdate(deltaTime:number) {\n        /*\n        if (this.sensor!.checked) {\n            this.rigid!.getLinearVelocity(this.velocity); \n            // change move direction.\n            const position = this.node.worldPosition;\n            this.dir.x = this.sensor!.hitPoint.x - position.x;\n            this.dir.z = this.sensor!.hitPoint.z - position.z;\n\n            this.velocityPlane.x = this.velocity.x;\n            this.velocityPlane.z = this.velocity.z;\n\n            if (Vec3.angle(this.dir, this.velocityPlane) < 10) {\n                //this.velocity.x = 0;\n                //this.velocity.z = 0;\n                this.velocity = this.velocity.normalize().multiplyScalar(3);\n                this.rigid!.setLinearVelocity(this.velocity);\n                // add inverse force.\n                //this.inverseForce.x = -this.velocity.x;\n                //this.inverseForce.z = -this.velocity.z;\n                //this.rigid.applyImpulse(this.inverseForce.normalize().multiplyScalar(1));\n\n            }\n\n        }\n        */\n    }\n\n}","import { _decorator, Component, Node } from 'cc';\nimport { ActorBase } from '../../core/actor/actor-base';\nimport { Brain } from '../../core/ai/brain';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorPiranha')\nexport class ActorPiranha extends ActorBase {\n\n    _brain:Brain;\n\n    start() {\n        this.init('actor-piranha');\n        this._brain = new Brain(this._data.brain, this);\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    //#region condition\n\n    noFoundPlayer() {\n\n    }\n\n    foundPlayer() {\n\n    }\n\n    nearPlayer() {\n\n    }\n\n    canEatPlayer() {\n\n    }\n\n    fleePlayer() {\n\n    }\n\n    feedPlayer() {\n        \n    }\n\n    //#endregion\n\n    idle() {\n\n    }\n\n    move() {\n\n    }\n\n    jump() {\n\n    }\n\n    crossRoad() {\n\n    }\n\n    forcePrepareJump() {\n\n    }\n\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { SensorRays } from '../../core/sensor/sensor-rays';\nimport { Actor } from './actor';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorSensorDropItem')\nexport class ActorSensorDropItem extends Component {\n\n    //@property(Actor)\n    //actor:Actor | undefined | null;\n\n    @property\n    num = 3;\n\n    sensor: SensorRays | undefined | null;\n    pickedNode: Node | undefined\n\n    state = -1;\n    curState = -1;\n\n    start () {\n        this.sensor = this.getComponent(SensorRays);\n        if (this.sensor === null) {\n            throw new Error(`${this.node.name} node can not find 'SensorRays' component.`);\n        }\n    }\n\n    update (deltaTime: number) {\n\n        if (this.sensor!.checked) {\n            this.pickedNode = this.sensor!.checkedNode;\n            const dropName = this.pickedNode!.name\n            this.curState = 255;\n            console.log('check drop name:', dropName);\n        } else {\n            this.curState = 0;\n            this.pickedNode = undefined;\n        }\n\n        if (this.state !== this.curState) {\n            this.state = this.curState;\n            Msg.emit('msg_grp_take_info', this.state);\n        }\n\n    }\n\n    public getPicked () {\n\n        if (this.pickedNode != undefined) {\n            return this.pickedNode;\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node, geometry, PhysicsSystem, game } from 'cc';\nimport { ActorBase } from '../../core/actor/actor-base';\nimport { ActorEquipBase } from './actor-equip-base';\nimport { ActorPart } from './actor-part';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorShotgun')\nexport class ActorShotgun extends ActorEquipBase {\n\n    onFire() {\n        this._bagData.bulletCount--;\n        const forwardNode = this._actor._forwardNode;\n        const origin = forwardNode.worldPosition;\n        const dir = forwardNode.forward;\n        let ray = new geometry.Ray(origin.x, origin.y, origin.z, dir.x, dir.y , dir.z);\n        const mask = 1 << 3;\n        const distance = this._data.damage.distance;\n        if (PhysicsSystem.instance.raycastClosest(ray, mask, distance)) {\n            const res = PhysicsSystem.instance.raycastClosestResult;\n            const hitName = res.collider.node.name;\n            console.log(`handgun fire hit ${hitName}`);\n            if (hitName.concat('actor')) {\n                const actorPart = res.collider.node.getComponent(ActorPart);\n                if (!actorPart) {\n                    console.error(` damage part can not add actor part component. ${actorPart}`);\n                }\n                const actor = actorPart.actor;\n                const damage = this._data.damage[hitName];\n                if (damage === undefined) {\n                    console.error(`hit part undefind ${hitName}`);\n                }\n                actor._data.hp -= damage;\n                if (actor._data.hp <= 0) {\n                    this._actor._data.hp = 1;\n                    actor.do('dead'); \n                }\n            }else if (hitName === 'col_brick') {\n\n            }else if (hitName === 'col_metal') {\n\n            }else{\n                \n            }\n\n        }else{\n            console.log('empty shoot.');\n        }\n    }\n\n}\n","import { _decorator, Component, randomRangeInt } from 'cc';\nimport { Sound } from '../../core/audio/sound';\nimport { KeyAnyType } from '../data/game-type';\nimport { Msg } from '../../core/msg/msg';\nimport { Actor } from './actor';\nimport { DataSoundInst } from '../data/data-core';\nimport { Level } from '../level/level';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorSound')\nexport class ActorSound extends Component {\n\n    @property\n    stepLength = 1.2;\n\n    _currentStepLength = 0;\n\n    _data:KeyAnyType = {};\n\n    actor: Actor | undefined;\n\n    start() {\n        this.actor = this.getComponent(Actor)!;\n        this._data = this.actor._data;\n        Msg.on('msg_walk_sfx', this.walkSfx.bind(this));\n    }\n\n    onDestroy () {\n        Msg.off('msg_walk_sfx', this.walkSfx.bind(this));\n    }\n\n    update(deltaTime:number) {\n\n        // If Level is stop return.\n        if(Level.Instance.stop) return;\n\n        if(this._data.is_ground)\n            this._currentStepLength += Math.abs(deltaTime * this.actor!._actorMove!.velocityLocal?.length());\n\n        if(this._currentStepLength >= this.stepLength) {\n            this.walkSfx();\n            this._currentStepLength -= this.stepLength;\n        }\n\n    }\n\n    walkSfx () {\n\n        const type = `walk_${this._data.walk_in_type}`;\n        const soundList = DataSoundInst.get(type);\n        const index = randomRangeInt(0, soundList.length);\n        Sound.on(soundList[index]);\n\n    }\n\n}\n\n","import { _decorator, Component, Node, v3, Vec3 } from 'cc';\nimport { Actor } from './actor';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ActorStatistics')\nexport class ActorStatistics extends Component {\n\n    actor:Actor | undefined;\n\n    _velocity = v3(0, 0, 0);\n\n    _statisticsTime = 1;\n\n    _moveDistance = 0;\n\n    _runDistance = 0;\n\n    start() {\n        this.actor = this.getComponent(Actor)!;\n    }\n\n    update(deltaTime: number) {\n\n        this.actor?._actorMove?.rigid?.getLinearVelocity(this._velocity);\n\n        this._velocity.y = 0;\n\n        const length = this._velocity.length();\n        if(length > 0.1) {\n            const distance = length * deltaTime;\n\n            this._moveDistance += distance;\n            \n            if(this.actor?._data.isRun) {\n                this._runDistance += distance;\n            }\n\n            this._statisticsTime -= deltaTime;\n            if(this._statisticsTime <= 0) {\n                this._statisticsTime = 1;\n                Msg.emit('msg_stat_distance', {key:'move', distance:this._moveDistance});\n\n                if(this._runDistance > 0)\n                    Msg.emit('msg_stat_distance', {key:'run', distance:this._runDistance});\n\n                this._moveDistance = 0;\n                this._runDistance = 0;\n            }\n        }\n        \n    }\n}\n\n","import { Vec3 } from \"cc\";\nimport { ITask, TaskBase } from \"./actor-tasks\";\nimport { ActorBase } from \"../actor/actor-base\";\n\nexport class ActorTaskGoTarget extends TaskBase {\n\n    name = 'ActorActionWay';\n    actor:ActorBase | undefined;\n    index = 0;\n    waypoints = [];\n\n    isStart = false;\n\n    public init(_actor:ActorBase) {\n        this.actor = _actor;\n    }\n\n    public initWayPoints(_waypoints) {\n        this.index = 0;\n        this.waypoints = _waypoints;\n    }\n\n    public update() {\n        if (!this.isStart) return;\n        if (!this.isWait) return;\n        // check arrived\n        if (Vec3.distance(this.actor!._data.pos, this.waypoints[this.index].pos) < 0.1) {\n            \n            if (this.index >= this.waypoints.length) {\n                this.end();\n                return;\n            }\n\n            // check actor direction.\n            var dir = this.waypoints[this.index + 1].clone();\n            dir.subtract(this.actor!._data.pos);\n            this.actor!.setDir(dir);\n\n            // check action.\n            this.onAction(this.waypoints[this.index].action);\n\n        }\n\n    }\n\n    onAction(action: string) {\n        this.actor!.do(action);\n    }\n\n}","import { game } from \"cc\";\n\nexport class TaskBase implements ITask {\n\n    name: string = '';\n    isStart: boolean = false;\n    isWait: boolean = false;\n    tasks:ITask[] = [];\n    \n    onCompleteFun:Function | undefined = undefined;\n\n    add(...tasks:ITask[]) {\n        for(let i = 0; i < tasks.length; i++) {\n            this.tasks.push(tasks[i]);\n        }\n    }\n\n    start() {\n        this.isStart = true;\n    }\n\n    public sequence(task:ITask) {\n        let sequence = new TaskSequence();\n        sequence.add(task);\n        this.tasks.push(sequence);\n        return sequence;\n    }\n\n    public parallel(task:ITask) {\n        let parallel = new TaskParallel();\n        parallel.add(task);\n        this.tasks.push(parallel);\n        return parallel;\n    }\n\n    update() {\n        if (!this.isStart) return;\n        if (this.isWait) return;\n        this.end();\n    }\n\n    end() {\n        this.isStart = false\n        this.isWait = false;\n        if (this.onCompleteFun !== null) {\n            this.onCompleteFun();\n            console.log('on complete:', this);\n        }\n        this.onCompleteFun = undefined;\n\n        console.log('on end:', this.name, game.frameTime);\n    }\n\n    break() {\n        for(let i = 0; i < this.tasks.length; i++) {\n            this.tasks[i].break();\n        }\n    }\n\n    onComplete(call:Function) {\n        this.onCompleteFun = call;\n    }\n}\n\nexport class TaskSequence extends TaskBase {\n\n    index = 0;\n\n    start(): void {\n        super.start();\n        this.index = 0;\n        this.tasks[this.index].start();\n    }\n\n    update() {\n        if (!this.isStart) return;\n        if (this.isWait) return;\n        if (!this.tasks[this.index].isStart) {\n            this.next();\n        }else{\n            this.tasks[this.index].update();\n        }\n    }\n\n    next() {\n        this.index++;\n        if (this.index >= this.tasks.length) {\n            this.end();\n        }else{\n            this.tasks[this.index].start();\n        }\n    }\n\n    end(){\n        super.end();\n    }\n\n}\n\nexport class TaskParallel extends TaskBase {\n\n    start(): void {\n        super.start();\n        for(let i = 0; i < this.tasks.length; i++) {\n            this.tasks[i].start();\n        }\n    }\n\n    update() {\n        if (!this.isStart) return;\n        if (this.isWait) return;\n        \n        for(let i = 0; i < this.tasks.length; i++) {\n            this.tasks[i].update();\n        }\n\n        // check all task is end.\n        for(let i = 0; i < this.tasks.length; i++) {\n            if (this.tasks[i].isStart) return;\n        }\n        this.end();\n    }\n\n    end() {\n        super.end();\n    }\n}\n\n\nexport interface ITask {\n\n    name:string;\n    isStart:boolean;\n    isWait:boolean;\n    start();\n    end();\n    break();\n    update();\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Vec3, v3, game, Node, math } from 'cc';\nimport { ActorBase } from '../../core/actor/actor-base';\nimport { IActorInput } from '../../core/input/IActorInput';\nimport { Local } from '../../core/localization/local';\nimport { Msg } from '../../core/msg/msg';\nimport { UtilNode, UtilVec3 } from '../../core/util/util';\nimport { ActorAnimationGraph } from './actor-animation-graph';\nimport { ActorBag } from './actor-bag';\nimport { ActorEquipment } from './actor-equipment';\nimport { ActorSensorDropItem } from './actor-sensor-drop-item';\nimport { ActorMove } from './actor-move';\nimport { SensorGround } from '../../core/sensor/sensor-ground';\nimport { ActorFace } from './actor-face';\nimport { Sound } from '../../core/audio/sound';\nconst { ccclass, property } = _decorator;\n\nlet tempLinearVelocity = v3(0, 0, 0);\nlet tempAngleVelocity = v3(0, 0, 0);\n\n@ccclass('Actor')\nexport class Actor extends ActorBase implements IActorInput {\n\n    _move = v3(0, 0, 0);\n    _actorBag: ActorBag | undefined;\n    _actorEquipment: ActorEquipment | undefined;\n\n    @property({ type: ActorSensorDropItem })\n    actorSensorDropItem: ActorSensorDropItem | undefined;\n\n    @property({ type: ActorFace })\n    _actorFace: ActorFace | undefined;\n\n    _actorSensorGround: SensorGround | undefined;\n    _actorMove: ActorMove | undefined;\n    _viewNoWeapon: Node = Object.create(null);\n    _forwardNode: Node | undefined;\n    _viewRoot: Node | undefined;\n\n    // forward\n    forward: Vec3 = v3(0, 0, 0);\n    _fps = 0;\n    isReady = false;\n\n    bulletBox = 2;\n\n    get noAction () {\n        return this._data.is_dead || this._data.is_win;\n    }\n\n    initView () {\n\n        super.initView();\n\n        this._actorBag = new ActorBag(this);\n        this._actorEquipment = new ActorEquipment(this);\n        this._actorSensorGround = this.node.getComponent(SensorGround)!;\n        this._actorMove = this.getComponent(ActorMove)!;\n        this._forwardNode = UtilNode.find(this.node, 'forwardNode');\n        this._viewRoot = UtilNode.find(this.node, 'animation_view');\n        this._animationGraph = this._viewRoot.getComponent(ActorAnimationGraph)!;\n\n        this.do('play');\n    }\n\n    onUpdate () {\n        super.onUpdate();\n        this._updates.push(this.updateAction.bind(this));\n    }\n\n    do (name: string) {\n        if (this.noAction) return;\n        super.do(name);\n    }\n\n    updateAction (deltaTime: number) {\n\n        this._fps = game.frameRate as number;\n\n        if (this._data.hit_recover > 0) {\n            this._data.hit_recover -= deltaTime;\n            this._actorMove!.isStopMove = true;\n            this._actorMove?.stop();\n        } else {\n            this._actorMove!.isStopMove = false;\n        }\n\n        // Check run strength\n        const canRun = this.calculateRunStrength(deltaTime);\n        this._actorMove!.speed = canRun ? -this._data.run_speed.z : -this._data.move_speed.z;\n        const normalizeSpeed = Math.abs(this._actorMove!.velocity.length() / this._actorMove!.speed);\n        this._actorEquipment?.updateAim(normalizeSpeed);\n        this.recoverStrength();\n\n        // Update forward info.\n        if (this._forwardNode) UtilVec3.copy(this.forward, this._forwardNode?.forward);\n    }\n\n    onJump () {\n\n        if (this._actorSensorGround!._isGround === false) return;\n\n        if (this._data.strength >= this._data.cost_jump_strength) {\n            this._data.strength -= this._data.cost_jump_strength;\n        }\n\n        this.do('jump');\n    }\n\n    onGround () {\n        this.do('on_ground');\n    }\n\n    offGround () {\n        this.do('off_ground');\n    }\n\n    onWin () { }\n\n    jump () {\n        this._actorMove?.jump();\n    }\n\n    onMove (move: Vec3) {\n        this._actorMove?.moveDirection(move);\n    }\n\n    onRotation (x: number, y: number) {\n\n        if (x > 90) x = 90;\n        if (x < -90) x = -90;\n\n        this._actorMove?.onRotation(x, y);\n    }\n\n    onDir (x: number, z: number) {\n        this._dir.z = z;\n        this._dir.x = x;\n    }\n\n    onPause () { }\n\n    onRun (isRun: boolean) { this._data.is_run = isRun; }\n\n    onPick () {\n\n        var pickedNode = this.actorSensorDropItem?.getPicked();\n\n        if (pickedNode !== undefined) {\n\n            // Picked health.\n            if (pickedNode.name == 'medkit') {\n                const recoverHP = this._data.max_hp - this._data.hp;\n                if (recoverHP <= 0) {\n                    Msg.emit(\n                        'msg_tips',\n                        `${Local.Instance.get('full_hp')}`\n                    );\n                    return;\n                }\n\n                this._data.hp = this._data.max_hp;\n                Sound.on('sfx_recovery_hp')\n                this.updateHP();\n                Msg.emit(\n                    'msg_tips',\n                    `${Local.Instance.get('recovery_hp')}  ${recoverHP}`\n                );\n                pickedNode.emit('picked');\n                return;\n            }\n\n            // Picked same weapon increase clip.\n            if (this._actorBag?.pickedSameWeaponIncreaseClips(pickedNode.name)) {\n                pickedNode.emit('picked');\n                Msg.emit(\n                    'msg_tips',\n                    `${Local.Instance.get('picked_clip')}  ${pickedNode.name}  x 1`\n                );\n                Msg.emit('msg_update_bag');\n                Msg.emit('msg_update_equip_info');\n                return;\n            }\n\n            // Picked bullet box.\n            if (pickedNode.name === 'bullet_box') {\n                this._actorBag?.pickedBulletBox()\n                pickedNode.emit('picked');\n                Msg.emit(\n                    'msg_tips',\n                    `${Local.Instance.get('picked_bullet_box')}`\n                );\n                Msg.emit('msg_update_equip_info');\n                return;\n            }\n\n            // Picked items\n            if (this._actorBag?.pickedItem(pickedNode.name)) {\n                pickedNode.emit('picked');\n                Msg.emit(\n                    'msg_tips',\n                    `${Local.Instance.get('picked')}  ${Local.Instance.get(pickedNode.name)}  x 1`\n                );\n                this.bulletBox++;\n                Msg.emit('msg_update_bag');\n                Msg.emit('msg_update_equip_info');\n            } else {\n                Msg.emit(\n                    'msg_tips',\n                    `${Local.Instance.get('bag_is_full')}`\n                );\n            }\n        }\n\n    }\n\n    onDrop () {\n        if (this._actorBag?.dropItem()) {\n            Msg.emit('msg_update_bag');\n        }\n    }\n\n    onCrouch () {\n\n        this._data.is_crouch = this._data.is_crouch ? false : true;\n\n        // set view height.\n        // set physic collider height.\n        // set hit part height.\n        this._animationGraph?.play('bool_crouch', this._data.is_crouch);\n        Msg.emit('msg_change_tps_camera_height', this._data.is_crouch ? this._data.stand_camera_height : this._data.crouch_camera_height);\n\n    }\n\n    onAim (isAim: boolean | undefined) {\n        if (isAim === undefined) {\n            this._data.is_aim = this._data.is_aim ? false : true;\n        } else {\n            if (isAim == this._data.is_aim) return;\n            this._data.is_aim = isAim;\n        }\n\n        // Get aim state.\n        this.do(this._data.is_aim ? 'on_aim' : 'off_aim');\n\n        if (this.isPlayer) Msg.emit('msg_change_tps_camera_target', this._data.is_aim ? 1 : 0);\n    }\n\n    /**\n     * Open fire interface. \n     * @returns \n     */\n    onFire () {\n\n        // Determines if the current equipment is ready to fire.\n        // Includes the number of rounds in the magazine and the firing cooldown.\n        if (this._actorEquipment!.currentEquip?.checkUse() == false) return;\n\n        // Execute the fir action.\n        this._actorEquipment?.do('fire');\n\n        // Sets the aim stable value to the maximum.\n        this._actorEquipment?.updateAim(1, true);\n\n        /*\n        const canUseEquip = this.calculateStrengthUseEquip();\n        if (canUseEquip) {}\n        */\n    }\n\n    /**\n     * Set Auto fire state.\n     * @param isAutoFire Auto fire state.\n     */\n    onAutoFire (isAutoFire: boolean) { this._data.is_auto_fire = isAutoFire; }\n\n    onReload () {\n\n        if (this._actorEquipment?.currentEquip?.checkFullBullet()) return;\n\n        this._actorEquipment?.do('reload');\n    }\n\n    onEquip (index: number) {\n\n        if (this._actorEquipment?.equip(index)) {\n            if (this._data.has_multi_res) this._viewNoWeapon.active = false;\n        } else {\n            if (this._data.has_multi_res) this._viewNoWeapon.active = true;\n        }\n    }\n\n    onChangeEquips (): boolean { return false; }\n\n    calculateStrengthUseEquip (): boolean {\n\n        const canUseEquip = this._data.strength >= this._data.cost_use_equip_strength;\n        if (canUseEquip) {\n            this._data.strength -= this._data.cost_use_equip_strength;\n            this._data.strength = Math.max(this._data.strength, 0);\n        }\n\n        return canUseEquip;\n    }\n\n    calculateRunStrength (deltaTime: number): boolean {\n        const canRun = this._data.is_run && this._data.strength >= this._data.cost_run_strength;\n        if (canRun) {\n            this._data.strength -= this._data.cost_run_strength * deltaTime;\n            this._data.strength = Math.max(this._data.strength, 0);\n        }\n        return canRun;\n    }\n\n    recoverStrength () {\n        if (this._data.is_ground === false) return;\n        if (this._data.is_run) return;\n\n        this._data.strength += this._data.recover_ground_strength * game.deltaTime;\n        if (this._data.strength > this._data.max_strength) this._data.strength = this._data.max_strength;\n        const percent_value = this._data.strength / this._data.max_strength;\n\n        if (this.isPlayer) {\n            Msg.emit('fil_strength', percent_value);\n        }\n    }\n\n    lateUpdate (deltaTime: number) {\n\n        if (this._actorMove == undefined) return;\n\n        // Synchronize animation setup data.\n        const rigidBody = this._actorMove?.rigid;\n        rigidBody!.getLinearVelocity(tempLinearVelocity);\n\n        tempLinearVelocity.y = 0;\n        const linearVelocityLength = tempLinearVelocity.length();\n        const eulerAnglesY = this.node.eulerAngles.y;\n\n        //rotate y.\n        Vec3.rotateY(tempLinearVelocity, tempLinearVelocity, Vec3.ZERO, math.toRadian(-eulerAnglesY));\n\n        let num_velocity_x = tempLinearVelocity.x;\n        let num_velocity_y = tempLinearVelocity.z;\n\n        let moveSpeed = linearVelocityLength * this._data.linear_velocity_animation_rate;\n\n        // Check rotation.\n        const angleSpeed = this._actorMove!.angle;\n        if (linearVelocityLength < 0.01 && angleSpeed > 2) {\n            moveSpeed = angleSpeed * this._data.angle_velocity_animation_rate;\n            num_velocity_x = angleSpeed / this._data.angle_velocity_animation_scale;\n        }\n\n        this._animationGraph?.setValue('num_velocity_x', num_velocity_x);\n        this._animationGraph?.setValue('num_velocity_y', -num_velocity_y);\n        this._animationGraph?.setValue('num_move_speed', moveSpeed);\n    }\n\n}","import { _decorator, Component, Node, Vec3, Quat, director, math, game } from 'cc';\nimport MathUtil from './math-util';\nimport AimIK from './aim-ik';\nimport IKSolverAim from './ik-solver-aim';\nimport { UtilVec3 } from '../util/util';\nconst { ccclass, property } = _decorator;\n\nlet _tempVec3 = new Vec3;\nlet _tempVec3_2 = new Vec3;\nlet _tempQuat = new Quat;\nlet _tempQuat_2 = new Quat;\nlet tempPivot = new Vec3;\n\n@ccclass('AimControl')\nexport default class AimControl extends Component {\n    @property({ type: AimIK, tooltip: 'Reference to the AimIK component.' })\n    public ik: AimIK | null = null;\n\n    @property({ tooltip: 'Master weight of the IK solver.' })\n    public weight: number = 1.0;\n\n    @property({ type: Node, tooltip: 'The target to aim at. Do not use the Target transform that is assigned to AimIK. Set to null if you wish to stop aiming.' })\n    public target: Node | null = null;\n\n    @property({ tooltip: 'The time it takes to switch targets.' })\n    public targetSwitchSmoothTime: number = 0.3;\n\n    @property({ tooltip: 'The time it takes to blend in/out of AimIK weight.' })\n    public weightSmoothTime: number = 0.3;\n\n    @property({ tooltip: 'Enables smooth turning towards the target according to the parameters under this header.' })\n    public smoothTurnTowardsTarget: boolean = true;\n\n    @property({ tooltip: 'Speed of turning towards the target using Vector3.RotateTowards.' })\n    public maxRadiansDelta: number = 3;\n\n    @property({ tooltip: 'Speed of moving towards the target using Vector3.RotateTowards.' })\n    public maxMagnitudeDelta: number = 3;\n\n    @property({ tooltip: 'Speed of slerping towards the target.' })\n    public slerpSpeed: number = 3.0;\n\n    @property({ tooltip: 'The position of the pivot that the aim target is rotated around relative to the root of the character.' })\n    public pivotOffsetFromRoot: Vec3 = new Vec3(0, 0, 0);\n\n    @property({ tooltip: 'Minimum distance of aiming from the first bone. Keeps the solver from failing if the target is too close.' })\n    public minDistance: number = 1.0;\n\n    @property({ tooltip: 'Offset applied to the target in world space. Convenient for scripting aiming inaccuracy.' })\n    public offset: Vec3 = new Vec3(0, 0, 0);\n\n    @property({ tooltip: 'Character root will be rotate around the Y axis to keep root forward within this angle from the aiming direction.' })\n    public maxRootAngle: number = 45.0;\n\n    @property({ tooltip: 'If enabled, aligns the root forward to target direction after Max Root Angle has been exceeded.' })\n    public turnToTarget: boolean = true;\n\n    @property({ tooltip: 'The time of turning towards the target direction if Max Root Angle has been exceeded and Turn To Target is enabled.' })\n    public turnToTargetTime: number = 0.2;\n\n    @property({ tooltip: 'If true, AimIK will consider whatever the current direction of the weapon to be the forward aiming direction and work additively on top of that. This enables you to use recoil and reloading animations seamlessly with AimIK. Adjust the Vector3 value below if the weapon is not aiming perfectly forward in the aiming animation clip.' })\n    public useAnimatedAimDirection: boolean = false;\n\n    @property({ tooltip: 'The direction of the animated weapon aiming in character space. Tweak this value to adjust the aiming. Use Animated Aim Direction must be enabled for this property to work.' })\n    public animatedAimDirection: Vec3 = new Vec3(0, 0, 1);\n\n    private _lastTarget: Node | null = null;\n    private _switchWeight: number = 0;\n    private _switchWeightV: number = 0;\n    private _weightV: number = 0;\n    private _lastPosition: Vec3 = new Vec3();\n    private _dir: Vec3 = new Vec3();\n    private _lastSmoothTowardsTarget: boolean = false;\n\n    private turningToTarget: boolean = false;\n    private turnToTargetMlp: number = 1.0;\n    private turnToTargetMlpV: number = 0.0;\n    private _interval: any;\n\n    start () {\n        this._lastPosition = Vec3.clone(this.ik!.solver.ikPosition);\n        Vec3.subtract(this._dir, this.ik!.solver.ikPosition, this._getPivot());\n        this.ik!.solver.target = this.target;\n    }\n\n    lateUpdate () {\n        // If target has changed...\n        if (this.target != this._lastTarget) {\n            if (this._lastTarget == null && this.target != null && this.ik!.solver.ikPositionWeight <= 0.0) {\n                this._lastPosition = Vec3.clone(this.target.getWorldPosition());\n                Vec3.subtract(this._dir, this.target.getWorldPosition(), this._getPivot());\n                Vec3.add(this.ik!.solver.ikPosition, this.target.getWorldPosition(), this.offset!);\n            }\n            else {\n                this._lastPosition = Vec3.clone(this.ik!.solver.ikPosition);\n                Vec3.subtract(this._dir, this.ik!.solver.ikPosition, this._getPivot());\n            }\n            this._switchWeight = 0.0;\n            this._lastTarget = this.target;\n        }\n\n        // Smooth weight\n        let outValue = { value: this._weightV };\n        this.ik!.solver.ikPositionWeight = MathUtil.smoothDamp(this.ik!.solver.ikPositionWeight, (this.target != null ? this.weight : 0), outValue, this.weightSmoothTime);\n        this._weightV = outValue.value;\n\n        if (this.ik!.solver.ikPositionWeight >= 0.999) this.ik!.solver.ikPositionWeight = 1.0;\n        if (this.ik!.solver.ikPositionWeight <= 0.001) this.ik!.solver.ikPositionWeight = 0.0;\n\n        if (this.ik!.solver.ikPositionWeight <= 0.0) return;\n        // Smooth target switching\n        outValue.value = this._switchWeightV;\n        this._switchWeight = MathUtil.smoothDamp(this._switchWeight, 1.0, outValue, this.targetSwitchSmoothTime);\n        this._switchWeightV = outValue.value;\n        if (this._switchWeight >= 0.99) this._switchWeight = 1.0;\n\n        if (this.target != null) {\n            Vec3.add(_tempVec3, this.target.getWorldPosition(), this.offset!);\n            Vec3.lerp(this.ik!.solver.ikPosition, this._lastPosition, _tempVec3, this._switchWeight);\n        }\n\n        // Smooth turn towards target\n        if (this.smoothTurnTowardsTarget != this._lastSmoothTowardsTarget) {\n            Vec3.subtract(this._dir, this.ik!.solver.ikPosition, this._getPivot());\n            this._lastSmoothTowardsTarget = this.smoothTurnTowardsTarget;\n        }\n\n        // fromViewUp\n        if (this.smoothTurnTowardsTarget) {\n            // Vector3 targetDir = ik.solver.ikPosition - pivot;\n            // dir = Vector3.Slerp(dir, targetDir, Time.deltaTime * slerpSpeed);\n            // dir = Vector3.RotateTowards(dir, targetDir, Time.deltaTime * maxRadiansDelta, maxMagnitudeDelta);\n            // ik.solver.ikPosition = pivot + dir;\n            // get targetDir\n            Vec3.subtract(_tempVec3, this.ik!.solver.ikPosition, this._getPivot());\n            Quat.fromViewUp(_tempQuat, _tempVec3, new Vec3(0, 1, 0));\n            Quat.toEuler(this._dir, _tempQuat);\n            Vec3.add(this.ik!.solver.ikPosition, this._getPivot(), this._dir);\n            //console.log('ikPosition:',this.ik!.solver.ikPosition);\n        }\n\n        // Min distance from the pivot\n        this._applyMinDistance();\n        // Root rotation\n        this._rootRotation();\n\n        // Offset mode\n        if (this.useAnimatedAimDirection) {\n            Vec3.transformQuat(_tempVec3, this.animatedAimDirection, this.ik!.rootNode!.getWorldRotation());\n            // MathUtil.directionToNodeSpace(this.ik!.solver.axis, _tempVec3, this.ik!.solver!.aimNode!);\n            this.ik!.rootNode!.inverseTransformPoint(this.ik!.solver.axis, _tempVec3);\n        }\n    }\n\n\n    _getPivot () {\n        //   this.ik!.transform.position + this.ik!.transform.rotation * this.pivotOffsetFromRoot;\n        //let tempVec3 = new Vec3();\n        Vec3.transformQuat(tempPivot, this.pivotOffsetFromRoot, this.ik!.rootNode!.getWorldRotation());\n        Vec3.add(tempPivot, tempPivot, this.ik!.rootNode!.getWorldPosition());\n        return tempPivot; //Vec3.clone(this.tempPivot);\n    }\n\n    // Make sure aiming target is not too close (might make the solver instable when the target is closer to the first bone than the last bone is).\n    _applyMinDistance () {\n        //_tempVec3 = this._getPivot();\n        UtilVec3.copy(_tempVec3, this._getPivot());\n        Vec3.subtract(_tempVec3_2, this.ik!.solver.ikPosition, _tempVec3);\n        let distance = Math.max(_tempVec3_2.length(), this.minDistance);\n        _tempVec3_2.normalize();\n        _tempVec3_2.multiplyScalar(distance);\n        Vec3.add(this.ik!.solver.ikPosition, _tempVec3, _tempVec3_2);\n    }\n\n    // Character root will be rotate around the Y axis to keep root forward within this angle from the aiming direction.\n    private _rootRotation () {\n        let maxRootAngle = this.ik!.enableAim ? this.maxRootAngle : 0;\n        let max = math.lerp(180.0, maxRootAngle * this.turnToTargetMlp, this.ik!.solver.ikPositionWeight);\n        if (max < 180.0) {\n            Quat.invert(_tempQuat, this.ik!.rootNode!.getWorldRotation());\n            Vec3.subtract(_tempVec3, this.ik!.solver.ikPosition, this._getPivot());\n            Vec3.transformQuat(_tempVec3, _tempVec3, _tempQuat);\n\n            let angle = math.toDegree(Math.atan2(_tempVec3.x, _tempVec3.z));\n\n            let rotation = 0.0;\n\n            if (angle > max) {\n                rotation = angle - max;\n                if (!this.turningToTarget && this.turnToTarget) this._startCoroutine(this._turnToTarget.bind(this));\n            }\n            if (angle < -max) {\n                rotation = angle + max;\n                if (!this.turningToTarget && this.turnToTarget) this._startCoroutine(this._turnToTarget.bind(this));\n            }\n\n            // Quaternion.AngleAxis(rotation, ik.transform.up) * ik.transform.rotation;\n            // let character = this.ik!.getComponent(\"CharacterOrientation\") as CharacterOrientation;\n            // character!.getUpdirection(_tempVec3);\n\n            Quat.fromAxisAngle(_tempQuat, Vec3.UP, math.toRadian(rotation));\n            Quat.multiply(_tempQuat, _tempQuat, this.ik!.rootNode!.getWorldRotation());\n            //this.ik!.rootNode!.setWorldRotation(_tempQuat);\n        }\n    }\n\n    // // Aligns the root forward to target direction after \"Max Root Angle\" has been exceeded.\n    private _turnToTarget () {\n        this.turningToTarget = true;\n\n        while (this.turnToTargetMlp > 0.0) {\n            // this.turnToTargetMlp = Mathf.SmoothDamp(turnToTargetMlp, 0f, ref turnToTargetMlpV, turnToTargetTime);\n            this.turnToTargetMlp -= game.deltaTime;\n            if (this.turnToTargetMlp < 0.01) this.turnToTargetMlp = 0.0;\n            return;\n        }\n\n        clearInterval(this._interval);\n        this._interval = null;\n        this.turnToTargetMlp = 1;\n    }\n\n    private _startCoroutine (fb: Function) {\n        if (this._interval) {\n            clearInterval(this._interval);\n        }\n        this._interval = setInterval(fb);\n    }\n}\n","import { _decorator, Component, Node, CCFloat } from 'cc';\nimport IKBone from './ik-bone';\nimport IKSolverAim from './ik-solver-aim';\nconst { ccclass, property } = _decorator;\n\n@ccclass('AimIK')\nexport default class AimIK extends Component {\n  public solver: IKSolverAim = new IKSolverAim(this.node);\n\n  @property({ type: Node, tooltip: 'this node that we want to aim at ikPosition.' })\n  public rootNode : Node | null = null;\n\n  @property({ type: Node, tooltip: 'this node that we want to aim at ikPosition.' })\n  public aimNode : Node | null = null;\n\n  @property({ type: [Node], tooltip: 'bones node' })\n  public boneNodes: Array<Node> = [];\n\n  @property({ type: [CCFloat], tooltip: 'bones weight' })\n  public boneWeights : Array<number> = [];\n\n  public enableAim: boolean = true;\n\n  start () {\n  \tthis.boneNodes.forEach((node, index) => {\n  \t\tthis.solver.bones.push(new IKBone(node, this.boneWeights[index]));\n  \t});\n\n  \tthis.solver.rootNode = this.rootNode;\n  \tthis.solver.aimNode = this.aimNode;\n  }\n\n  update () {\n  \tthis.enableAim && this.solver.update();\n  }\n\n  lateUpdate () {\n  \tthis.enableAim &&\tthis.solver.lateUpdate();\n  }\n}","import { _decorator, Component, Node, Animation, Quat, Vec3, input, Input } from 'cc';\nimport OrbitCamera from '../../extensions/pipeline/pipeline/utils/orbit-camera';\nconst { ccclass, property } = _decorator;\n\nlet tempQuat = new Quat\n\n@ccclass('animation_to_oribit')\nexport class animation_to_oribit extends Component {\n    @property(Animation)\n    ani: Animation | undefined\n    @property(OrbitCamera)\n    orbit: OrbitCamera | undefined\n\n    start () {\n        // this.ani = this.getComponent(Animation)\n        // this.orbit = this.getComponent(OrbitCamera)\n\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this)\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this)\n    }\n\n    touched = false;\n    timeoutID = undefined;\n    onTouchStart () {\n        if (!this.orbit || !this.ani) {\n            return;\n        }\n        this.touched = true;\n        if (this.timeoutID) {\n            clearTimeout(this.timeoutID)\n        }\n        this.ani.enabled = false;\n        this.orbit.enabled = true;\n    }\n    onTouchEnd () {\n        if (!this.orbit || !this.ani) {\n            return;\n        }\n        this.orbit.enabled = false;\n        this.timeoutID = setTimeout(() => {\n            this.touched = false;\n            this.ani.enabled = true;\n            this.timeoutID = undefined;\n        }, 1000)\n    }\n\n    update (dt: number) {\n        if (this.orbit && !this.touched) {\n            Quat.slerp(tempQuat, this.orbit.node.rotation, Quat.IDENTITY, dt * 7);\n            this.orbit.node.rotation = tempQuat\n        }\n\n    }\n}\n\n\n","import { _decorator, Component, Node, animation, CCFloat, CCString } from \"cc\";\nimport { Msg } from \"../../core/msg/msg\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"AnimationGraphMove\")\nexport class AnimationGraphMove extends animation.StateMachineComponent {\n\n\n    @property\n    time = 0.5;\n\n    @property\n    msg = 'msg_walk_sfx';\n\n    _triggered: boolean = false;\n\n    /**\n     * Called right after a motion state is entered.\n     * @param controller The animation controller it within.\n     * @param motionStateStatus The status of the motion.\n     */\n    public onMotionStateEnter (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\n        // Can be overrode\n    }\n\n    /**\n     * Called when a motion state is about to exit.\n     * @param controller The animation controller it within.\n     * @param motionStateStatus The status of the motion.\n     */\n    public onMotionStateExit (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\n        // Can be overrode\n        this._triggered = false;\n    }\n\n    /**\n     * Called when a motion state updated except for the first and last frame.\n     * @param controller The animation controller it within.\n     * @param motionStateStatus The status of the motion.\n     */\n    public onMotionStateUpdate (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\n        // Can be overrode\n        if (motionStateStatus.progress > this.time && !this._triggered) {\n            // 触发事件\n            this._triggered = true;\n            Msg.emit(this.msg);\n        } else if (motionStateStatus.progress < this.time && this._triggered) {\n            this._triggered = false;\n        }\n\n    }\n\n    /**\n     * Called right after a state machine is entered.\n     * @param controller The animation controller it within.\n     */\n    public onStateMachineEnter (controller: animation.AnimationController) {\n        // Can be overrode\n    }\n\n    /**\n     * Called right after a state machine is entered.\n     * @param controller The animation controller it within.\n     */\n    public onStateMachineExit (controller: animation.AnimationController) {\n        // Can be overrode\n    }\n\n}\n","import { instantiate, math, Node } from \"cc\";\nimport { Singleton } from \"../pattern/singleton\";\nimport { Stack } from \"../util/data-structure\";\n\n\nexport class AStar extends Singleton {\n\n    map:any[];\n    start_pos;\n    end_pos;\n\n    closeTable = [];\n    openTable:Stack<any[]>;\n\n    max_x = 0;\n    max_z = 0;\n\n    dir = [\n        [-1, 1], [0, 1], [1, 0],\n        [-1, 0],         [1, 0],\n        [-1, -1], [0, -1], [1, -1]\n    ]\n\n    _tempNode:Node;\n\n    _stop = true;\n\n    public initMap(_map:[][]) {\n\n        this.map = [];\n        this.max_x = _map.length;\n        this.max_z = _map[0].length;\n\n        // init map\n        for(let i = 0; i < this.max_x; i++) {\n            let m = [];\n            for(let j = 0; j < this.max_z; j++) {\n                var v = {'f':-1, 'state': _map[i][j]};\n                m.push(v);\n            }\n            this.map.push(m);\n        }\n\n        console.log(this.map);\n\n        this.openTable = new Stack(20);\n        this.closeTable = this.createTable(this.max_x, this.max_z, 0);\n        this.copyTable(this.closeTable, this.map);\n    }\n\n    setTestNode(node) {\n        this._tempNode = node;\n    }\n\n    testNode(pos) {\n        let inst = instantiate(this._tempNode);\n        inst.parent = this._tempNode.parent;\n        inst.setPosition(pos[0],0,pos[1]);\n    }\n\n    find(start_pos, end_pos) {\n\n        console.log('start:', start_pos, 'end:', end_pos);\n        this._stop = false;\n        this.start_pos = start_pos;\n        this.end_pos = end_pos;\n        // Set start pos into open table.\n        this.openTable.push([start_pos.x, start_pos.z]);\n        this.checkCurrent(start_pos);\n    }\n\n    update() {\n\n        if (this._stop) return;\n\n        if (this.openTable.size() > 0) {\n            var np = this.openTable.pop();\n            this.testNode(np);\n            this.checkCurrent({'x': np[0], 'z': np[1] });\n        }else{\n            console.log('can not find target pos.');\n        }\n    }\n\n    checkCurrent(pos) {\n\n        \n\n        // Check is end pos.\n        if (pos.x === this.end_pos.x && pos.z === this.end_pos.z) {\n            console.log('find end pos.');\n            this._stop = true;\n            return;\n        }\n\n        // Set remove state in open table.\n        this.map[pos.x][pos.z].state = 0;\n        this.openTable.pop();\n\n        // Set current pos in close table.\n        this.closeTable[pos.x][pos.z] = 1;\n\n        var min_index = -1;\n        // Calculate around\n        for(let i = 0; i < this.dir.length; i++) {\n\n            var nx = pos.x + this.dir[i][0];\n            var nz = pos.z + this.dir[i][1];\n\n            // Check bounder.\n            if (nx < 0 || nz < 0 || nx >= this.max_x || nz >= this.max_z) {\n                continue;\n            }\n\n            // Check is not close table.\n            if (this.closeTable[nx][nz] === 1) continue;\n\n            // Check is dir cost.\n            var f = this.f_cost({'x': nx, 'z': nz}, this.end_pos);\n            this.map[nx][nz].cost = f;\n\n            // Push new check point into open table.\n            this.openTable.push([nx, nz]);\n\n        }\n\n    }\n\n    public f_cost(cur_pos, end_pos) {\n        return Math.abs(cur_pos.x - end_pos.x) + Math.abs(cur_pos.z - end_pos.z)\n    }\n\n    createTable(x:number, y:number, value) {\n        var l0 = x;\n        var l1 = y;\n        var table = [];\n        for(let i = 0; i < l0; i++) {\n            var m = [];\n            for(let j = 0; j < l1; j++) {\n                m.push(value);\n            }\n            table.push(m);\n        }\n        return table;\n    }\n\n    copyTable(target, source) {\n        var l0 = this.max_x;\n        var l1 = this.max_z;\n        for(let i = 0; i < l0; i++) {\n            for(let j = 0; j < l1; j++) {\n                target[i][j] = source[i][j];\n            }\n        }\n    }\n\n    clearTable(table) {\n        var l0 = table.length;\n        var l1 = table[0].length;\n        for(let i = 0; i < l0; i++) {\n            for(let j = 0; j < l1; j++) {\n                table[i][j] = 0;\n            }\n        }\n    }\n\n    \n \n}\n\n/*\n\n    findMinCostPoint(cur_pos) {\n\n        var min_cost_pos = { 'x': -1, 'z': -1 };\n\n        // Calculate f_cost\n        for(let i = 0; i < this.dir.length; i++) {\n            var nx = cur_pos.x + this.dir[i][0];\n            var nz = cur_pos.z + this.dir[i][1];\n\n            // Check bounder.\n            if (nx < 0 || nz < 0 || nx >= this.max_x || nz >= this.max_z) {\n                continue;\n            }\n\n            // Check is not close table.\n            if (this.closeTable[nx][nz] === 1) continue;\n\n            // Check is \n\n        }\n\n        if (min_cost_pos.x === -1) {\n            console.error(' can not find min cost pos:', cur_pos);\n        }\n\n        //for()\n\n    }\n\n*/","import { director, game, gfx, Material, PipelineStateManager, renderer, RenderStage, RenderTexture, Vec2, _decorator, pipeline, Enum, Node, ForwardStage, rendering, CCString, } from 'cc';\nimport { EDITOR, JSB } from 'cc/env';\nimport { HrefSetting } from '../settings/href-setting';\nimport { passUtils } from '../utils/pass-utils';\nimport { getCameraUniqueID, getQuadIA, getRenderArea } from '../utils/utils';\nimport { settings } from './setting';\n\nconst { ccclass, type, property } = _decorator;\n\nlet _BaseStageID = 0\n\n@ccclass('BaseStage')\nexport class BaseStage {\n    static outputMap: Map<string, RenderTexture> = new Map\n    static stages: Map<string, BaseStage> = new Map\n    static forwardStage: ForwardStage | undefined;\n\n    _id = 0\n    constructor () {\n        this._id = _BaseStageID++;\n    }\n\n\n    // auto load material name\n    _materialName = 'blit-screen';\n    get materialName () {\n        return this._materialName;\n    }\n\n    get material () {\n        return globalThis.pipelineAssets.getMaterial(this._materialName);\n    }\n\n\n    @property\n    enable = true;\n\n    @property\n    name = 'BaseStage';\n\n    @property\n    shadingScale = 1;\n\n    @property\n    customSize = new Vec2(1024, 1024);\n\n    @property(CCString)\n    outputNames = []\n\n    @type(Node)\n    targetStageNode: Node;\n\n    useCustomSize = false;\n    renderToScreen = false;\n\n    rtCount = 1;\n    renderTextures: RenderTexture[] = [];\n\n    protected _rect = new gfx.Rect(0, 0, 1, 1);\n    clearColors = [new gfx.Color(0, 0, 0, 1)];\n\n    requestDepth = false;\n\n    lastStage: BaseStage | undefined;\n\n    uniqueStage = false\n    slotName (camera: renderer.scene.Camera, index = 0) {\n        let name = this.outputNames[index] + this.name\n        if (this.uniqueStage) {\n            return name\n        }\n        return `${name}_${this._id}_${getCameraUniqueID(camera)}`\n    }\n\n    finalShadingScale () {\n        return this.shadingScale * director.root.pipeline.pipelineSceneData.shadingScale;\n    }\n\n    checkEnable () {\n        return this.enable;\n    }\n\n    renderProfiler (camera) {\n        if (HrefSetting.showFps && settings.renderProfiler && !EDITOR) {\n            passUtils.pass.showStatistics = true\n            settings.renderProfiler = false;\n        }\n    }\n\n    // protected _finalShadingSize = new Vec2;\n    // finalShadingSize (camera: renderer.scene.Camera) {\n    //     let shadingScale = this.finalShadingScale();\n\n    //     let width = game.canvas!.width;\n    //     let height = game.canvas!.height;\n\n    //     if (this.useCustomSize) {\n    //         width = this.customSize.x;\n    //         height = this.customSize.y;\n    //     }\n\n    //     this._finalShadingSize.set(\n    //         Math.floor(width * shadingScale),\n    //         Math.floor(height * shadingScale)\n    //     )\n\n    //     return this._finalShadingSize;\n    // }\n\n    _renderArea = new gfx.Rect()\n    getRenderArea (camera) {\n        let shadingScale = this.finalShadingScale();\n        let area = getRenderArea(this._renderArea, camera, camera.window.width * shadingScale, camera.window.height * shadingScale)\n        area.width = Math.floor(area.width)\n        area.height = Math.floor(area.height)\n        return area\n    }\n\n    destroy () {\n\n    }\n\n    get outputTexture (): RenderTexture | null {\n        return null\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline) {\n\n    }\n}\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { Msg } from \"../../core/msg/msg\";\nimport { Singleton } from \"../../core/pattern/singleton\";\nimport { Local } from \"../../core/localization/local\";\nimport { GameQuality } from \"./GameQuality\";\nimport { Sound } from \"../../core/audio/sound\";\nimport { ResCache } from \"../../core/res/res-cache\";\nimport { Level } from \"../level/level\";\nimport { Save } from \"./save\";\n\nexport class Bind extends Singleton {\n\n    // Event dictionary, used to construct the mapping of keys to events.\n    _map: { [name: string]: Function } = {}\n\n    // Total number of events.\n    totalEvents = 0;\n\n    public init (): void {\n\n        // Registered events are used to count the total number of events.\n        Msg.on('msg_count_events', this.countEvents.bind(this));\n\n        // Bind the skill detail 0.\n        this._map['txt_upgrade_life_detail'] = () => Level.Instance.getUpgradeCardInfo(0);\n\n        // Bind the skill detail 1.\n        this._map['txt_upgrade_attack_detail'] = () => Level.Instance.getUpgradeCardInfo(1);\n\n        // Bind the skill detail 2.\n        this._map['txt_upgrade_defense_detail'] = () => Level.Instance.getUpgradeCardInfo(2);\n\n        // Bind the button event of skill upgrade tab 0.\n        this._map['btn_select_upgrade_0'] = () => {\n            Level.Instance.upgradePlayerAttributes(0);\n            Msg.emit('back');\n        }\n\n        // Bind the button event of skill upgrade tab 1.\n        this._map['btn_select_upgrade_1'] = () => {\n            Level.Instance.upgradePlayerAttributes(1);\n            Msg.emit('back');\n        }\n\n        // Bind the button event of skill upgrade tab 2.\n        this._map['btn_select_upgrade_2'] = () => {\n            Level.Instance.upgradePlayerAttributes(2);\n            Msg.emit('back');\n        }\n\n        // Bind the current language name.\n        this._map['txt_language'] = () => Local.Instance.getShowName();\n\n        // Bind the current game quality name.\n        this._map['txt_game_quality'] = () => GameQuality.Instance.getShowName();\n\n        // Bind the current volume value.\n        this._map['sli_sound'] = () => Sound.volumeSound;\n\n        // Bind the current music volume value.\n        this._map['sli_music'] = () => Sound.volumeMusic;\n\n        // Bind game result score.\n        this._map['spr_score'] = () => {\n            const imgSrc = `txt_score_${Level.Instance.getLevelScore()}`;\n            return ResCache.Instance.getSprite(imgSrc);\n        }\n\n        // Bind level over killed value.\n        this._map['txt_killed'] = () => Save.Instance.getStatistics('killedTimes');\n\n        // Bind level over hit value.\n        this._map['txt_hit_head'] = () => Save.Instance.getStatistics('hit_headTimes');\n\n        // Bind level over Hit Rate.\n        this._map['txt_hsp'] = () => `${(Save.Instance.getStatistics('hit_rate') * 100).toFixed(2)} %`;\n\n        // Bind level over hit value.\n        this._map['txt_be_hit'] = () => Save.Instance.getStatistics('be_hit_times');\n\n        // Bind dodge rate.\n        this._map['txt_dodge'] = () => `${(Save.Instance.getStatistics('dodge_rate') * 100).toFixed(2)} %`;\n\n        // Bind level score.\n        this._map['txt_level_score'] = () => `${Save.Instance.getStatistics('level_score')}`;\n\n        // Bind day value.\n        this._map['txt_day_num'] = () => `${Save.Instance.get('day')}`;\n\n    }\n\n    /**\n     * The method is used to initialize the event binder.\n     * @param data The data is game events mapping.\n     */\n    public initData (data: [{ name: string, event: string, data: string | undefined }]) {\n\n        this.init();\n\n        data.forEach(events => {\n            let name = events.name;\n            let event = events.event;\n            let data = events.data;\n            if (!events.data) data = undefined;\n            this._map[name] = () => {\n                Msg.emit(event, data);\n            }\n        });\n    }\n\n    /**\n     * This method is used to execute specific events by key.\n     * @param key The name of the event to execute.\n     */\n    public on (key: string) {\n        var event = this._map[key];\n        if (event) {\n            event();\n            this.countEvents();\n        } else {\n            console.warn('Can not find key:' + key);\n        }\n    }\n\n    /**\n     * This method is to get this event and return the result of executing the method.\n     * @param key The key is event to execute.\n     * @returns \n     */\n    public get (key: string) {\n        return this._map[key]();\n    }\n\n    /**\n     * This method is used to determine if the event is mapped or not.\n     * @param key The key of the event to be judged.\n     * @returns \n     */\n    public hasBind (key: string): boolean {\n        return this._map[key] !== undefined;\n    }\n\n    /**\n     * Current frame event execution statistics.\n     */\n    public countEvents () {\n        this.totalEvents++;\n    }\n\n    /**\n     * Check if the count needs to be refreshed according to the current frame.\n     */\n    public checkRefresh () {\n        if (this.totalEvents > 0) {\n            Msg.emit(\"refresh_ui\");\n            this.totalEvents = 0;\n        }\n    }\n\n    /**\n     * This method is an update function for each frame.\n     * @param deltaTime This value is the execution time per frame.\n     */\n    public update (deltaTime: number): void {\n\n        // Check if a refresh is needed.\n        this.checkRefresh();\n    }\n\n}","import { BaseStage, } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString } from \"cc\";\nimport { getCameraUniqueID, getLoadOpOfClearFlag } from \"../utils/utils\";\nimport { EDITOR } from \"cc/env\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n@ccclass('BlitStage')\nexport class BlitStage extends BaseStage {\n    _materialName = 'blit-screen';\n\n    @property({ override: true })\n    name = 'BlitStage'\n\n    @property\n    textureFormat = gfx.Format.RGBA8\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        if (!this.material) {\n            return;\n        }\n\n        const area = this.getRenderArea(camera)\n        const width = area.width;\n        const height = area.height;\n\n        let isOffScreen = !this.renderToScreen;\n\n        const slot0 = this.slotName(camera, 0);\n        if (!ppl.containsResource(slot0)) {\n            if (!isOffScreen) {\n                ppl.addRenderTexture(slot0, this.textureFormat, width, height, camera.window);\n            } else {\n                ppl.addRenderTarget(slot0, this.textureFormat, width, height, ResourceResidency.MANAGED);\n            }\n        }\n        const pass = ppl.addRasterPass(width, height, 'Blit');\n        pass.name = `${slot0}_Pass`\n\n        let inputName = this.lastStage.slotName(camera, 0)\n        if (ppl.containsResource(inputName)) {\n            let cv = new ComputeView\n            cv.name = 'inputTexture'\n            pass.addComputeView(inputName, cv);\n        }\n\n        const passView = new RasterView('_',\n            AccessType.WRITE, AttachmentType.RENDER_TARGET,\n            isOffScreen ? LoadOp.CLEAR : getLoadOpOfClearFlag(camera.clearFlag, AttachmentType.RENDER_TARGET),\n            StoreOp.STORE,\n            camera.clearFlag,\n            new Color(camera.clearColor.x, camera.clearColor.y, camera.clearColor.z, camera.clearColor.w));\n        pass.addRasterView(slot0, passView);\n\n        if (!isOffScreen) {\n            // pass.addQueue(QueueHint.NONE).addFullscreenQuad(\n            //     this.material, 0, SceneFlags.NONE,\n            // );\n            pass.addQueue(QueueHint.RENDER_TRANSPARENT).addCameraQuad(\n                camera, this.material, 0,\n                SceneFlags.NONE,\n            );\n        }\n    }\n}\n","\nimport { BaseStage, } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, Vec4, Material, CCString, input, director } from \"cc\";\nimport { getCameraUniqueID, getLoadOpOfClearFlag, getRenderArea } from \"../utils/utils\";\nimport { BloomSetting } from \"../components/bloom\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { settings } from \"./setting\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\nexport const MAX_BLOOM_FILTER_PASS_NUM = 6;\nexport const BLOOM_PREFILTERPASS_INDEX = 0;\nexport const BLOOM_DOWNSAMPLEPASS_INDEX = 1;\nexport const BLOOM_UPSAMPLEPASS_INDEX = BLOOM_DOWNSAMPLEPASS_INDEX + MAX_BLOOM_FILTER_PASS_NUM;\nexport const BLOOM_COMBINEPASS_INDEX = BLOOM_UPSAMPLEPASS_INDEX + MAX_BLOOM_FILTER_PASS_NUM;\n\nlet defaultSetting = {\n    enable: true,\n    threshold: 1,\n    iterations: 2,\n    intensity: 0.2,\n    blurRadius: 1\n}\n\nconst tempVec4 = new Vec4();\n\nlet clampSampler = new gfx.Sampler(new gfx.SamplerInfo(\n    gfx.Filter.LINEAR, gfx.Filter.LINEAR, undefined,\n    gfx.Address.CLAMP, gfx.Address.CLAMP\n), 0);\n\n@ccclass('custom.BloomStage')\nexport class BloomStage extends BaseStage {\n    _materialName = 'blit-screen';\n    uniqueStage = true;\n\n    @property({ override: true })\n    name = 'BloomStage'\n\n    @property({ override: true })\n    outputNames = ['BloomPassCombineColor']\n\n    checkEnable () {\n        let setting = BloomSetting.instance || defaultSetting;\n        return this.enable && setting.enable && !settings.bakingReflection && !!HrefSetting.bloom;\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        // passUtils.clearFlag = gfx.ClearFlagBit.NONE;\n        passUtils.clearFlag = gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        let material = globalThis.pipelineAssets.getMaterial('bloom')\n        passUtils.material = material;\n\n        let setting = BloomSetting.instance || defaultSetting;\n        let format = Format.RGBA16F\n\n        const cameraID = getCameraUniqueID(camera);\n        const cameraName = `Camera${cameraID}`;\n        const area = this.getRenderArea(camera);\n        let width = area.width;\n        let height = area.height;\n\n        // Start bloom\n        // ==== Bloom prefilter ===\n        const bloomPassPrefilterRTName = `dsBloomPassPrefilterColor${cameraName}`;\n\n        width >>= 1;\n        height >>= 1;\n\n        material.setProperty('texSize', new Vec4(0, 0, setting.threshold, 0), BLOOM_PREFILTERPASS_INDEX);\n\n        let input0 = this.lastStage.slotName(camera, 0)\n        passUtils.addRasterPass(width, height, 'bloom-prefilter', `CameraBloomPrefilterPass${cameraID}`)\n            .setViewport(area.x, area.y, width, height)\n            .setPassInput(input0, 'outputResultMap')\n            .addRasterView(bloomPassPrefilterRTName, format)\n            .blitScreen(BLOOM_PREFILTERPASS_INDEX)\n            .version()\n\n        // === Bloom downSampler ===\n        let inputName = bloomPassPrefilterRTName;\n        let iterations = setting.iterations;\n        let downIndex = 0;\n        for (let i = 0; i < iterations; ++i) {\n            width >>= 1;\n            height >>= 1;\n\n            for (let j = 0; j < 2; j++) {\n                let params = new Vec4\n                const bloomPassDownSampleRTName = `dsBloomPassDownSampleColor${cameraName}${downIndex}`;\n                if (j) {\n                    params.set(0, setting.blurRadius / width);\n                }\n                else {\n                    params.set(setting.blurRadius / width, 0);\n                }\n                material.setProperty('texSize', params, BLOOM_DOWNSAMPLEPASS_INDEX + downIndex);\n\n                let layoutName = `bloom-downsample${downIndex}`\n                passUtils.addRasterPass(width, height, layoutName, `CameraBloomDownSamplePass${cameraID}${downIndex}`)\n                    .setViewport(area.x, area.y, width, height)\n                    .setPassInput(inputName, 'bloomTexture')\n                    .addRasterView(bloomPassDownSampleRTName, format)\n                    .blitScreen(BLOOM_DOWNSAMPLEPASS_INDEX + downIndex)\n                    .version()\n\n                // let setter = (passUtils.pass as any);\n                // setter.addConstant('BloomUBO', layoutName);\n                // setter.setSampler('bloomTexture', clampSampler)\n\n                inputName = bloomPassDownSampleRTName;\n                downIndex++;\n            }\n        }\n\n\n        // === Bloom upSampler ===\n        for (let i = iterations - 2; i >= 0; --i) {\n            width <<= 1;\n            height <<= 1;\n\n            material.setProperty('texSize', new Vec4(1, 1, 0, 0), BLOOM_UPSAMPLEPASS_INDEX + i);\n\n            const bloomPassUpSampleRTName = `dsBloomPassUpSampleColor${cameraName}${i}`;\n            passUtils.addRasterPass(width, height, `bloom-upsample${i}`, `CameraBloomUpSamplePass${cameraID}${i}`)\n                .setViewport(area.x, area.y, width, height)\n                .setPassInput(inputName, 'outputResultMap')\n                .setPassInput(`dsBloomPassDownSampleColor${cameraName}${i * 2 + 1}`, 'bloomTexture')\n                .addRasterView(bloomPassUpSampleRTName, format)\n                .blitScreen(BLOOM_UPSAMPLEPASS_INDEX + i)\n                .version()\n\n            inputName = bloomPassUpSampleRTName;\n        }\n\n        // === Bloom Combine Pass ===\n        const slot0 = this.slotName(camera, 0);\n        material.setProperty('texSize', new Vec4(setting.intensity, 1, 0, 0), BLOOM_COMBINEPASS_INDEX);\n\n        passUtils.addRasterPass(area.width, area.height, 'bloom-combine', `CameraBloomCombinePass${cameraID}`)\n            .setPassInput(input0, 'outputResultMap')\n            .setPassInput(inputName, 'bloomTexture')\n            .addRasterView(slot0, format)\n            .blitScreen(BLOOM_COMBINEPASS_INDEX)\n            .version()\n\n    }\n}\n","import { Component, _decorator } from \"cc\";\n\nconst { ccclass, property, executeInEditMode } = _decorator\n\n@ccclass('BloomSetting')\n@executeInEditMode\nexport class BloomSetting extends Component {\n    static instance: BloomSetting | undefined\n\n    @property\n    enable = true\n\n    @property\n    threshold = 1\n\n    @property\n    iterations = 2\n\n    @property\n    intensity = 0.8\n\n    @property\n    blurRadius = 1\n\n    onEnable () {\n        BloomSetting.instance = this\n    }\n\n    onDisable () {\n        if (BloomSetting.instance === this) {\n            BloomSetting.instance = undefined;\n        }\n    }\n}\n","import { _decorator, Component, Node, random } from 'cc';\r\nimport { ResCache } from '../res/res-cache';\r\nimport { ActorBase } from '../actor/actor-base';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport class Brain {\r\n\r\n    data = {};\r\n\r\n    actor:ActorBase;\r\n\r\n    constructor(dataPath:string, actor:ActorBase) {\r\n\r\n        this.data = ResCache.Instance.getJson(dataPath).json;\r\n        this.actor = actor;\r\n\r\n    }\r\n\r\n    update(deltaTime:number) {\r\n\r\n    }\r\n\r\n    runNode(data) {\r\n\r\n        // find action.\r\n        if (data.children === undefined) {\r\n            this.action(data.action);\r\n        }else{\r\n            console.log('run node:', data.node);\r\n            this[data.node](data.children);\r\n        }\r\n\r\n    }\r\n\r\n    random(data) {\r\n        var rand = random();\r\n        for(let i = 0; i < data.length; i++) {\r\n            let info = data[i];\r\n            if (info.value < rand) {\r\n                this.runNode(info);\r\n                return;\r\n            }\r\n        }\r\n        console.error('bad config data:', data);\r\n    }\r\n\r\n    condition(data) {\r\n\r\n        console.log('condition:', data);\r\n\r\n        for(let i = 0; i < data.length; i++) {\r\n            let info = data[i];\r\n            if (info.value === 'canEatPlayer') {\r\n                this.runNode(info);\r\n                return;\r\n            }\r\n        }\r\n\r\n        console.log('bad logic design:', data);\r\n\r\n    }\r\n\r\n    sequence(data) {\r\n\r\n        console.log('sequence:', data);\r\n\r\n        for(let i = 0; i < data.length; i++) {\r\n            let info = data[i];\r\n            this.runNode(info);\r\n        }\r\n\r\n    }\r\n\r\n    action(data) {\r\n\r\n        console.log('do action:', data);\r\n        this.actor.do(data);\r\n\r\n    }\r\n    \r\n}","import { Singleton } from \"../../core/pattern/singleton\";\nimport { ResCache } from \"../../core/res/res-cache\";\n\n\nexport class Buff extends Singleton {\n\n    _data = {};\n\n    public init(): void {\n\n        this._data = ResCache.Instance.getJson('data-buff').json;\n\n    }\n\n    public get(key) {\n        if (this._data[key]) {\n            return this._data[key];\n        }else{\n            console.error('can not find buff:', key);\n        }\n    }\n\n}","import { _decorator, Component, Node, Game, Camera, find } from 'cc';\nimport { StaticOcclusionCulling } from '../../../../extensions/pipeline/pipeline/components/occlusion-culling/static/static-occlusion-culling';\nimport { Msg } from '../../core/msg/msg';\nimport { UtilNode } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraAutoBindOcclusion')\nexport class CameraAutoBindOcclusion extends Component {\n\n    onEnable() {\n        const culling = find('static-occlusion-culling');\n        if (culling === undefined || culling === null) {\n            console.warn(`Can not find static-occlusion-culling.`);\n            return;\n        }\n        const occlusionCulling = culling.getComponent(StaticOcclusionCulling);\n        if(occlusionCulling === null) throw new Error(`culling node not find 'StaticOcclusionCulling'`);\n        occlusionCulling.camera = this.getComponent(Camera);\n    }\n\n}\n\n","\nimport { _decorator, Component, Node, find, Vec3, v3 } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { GVec3 } from '../../core/util/g-math';\nimport { UtilVec3 } from '../../core/util/util';\nimport { SmoothLocalZ } from './smooth-local-z';\nconst { ccclass, property } = _decorator;\n@ccclass('CameraController')\nexport class CameraController extends Component {\n\n    @property\n    smooth: number = 0.5;\n    @property\n    maxOffsetZ: number = 2;\n    @property\n    target: string = 'actor';\n\n    _velocity: Vec3 = new Vec3(0, 0, 0);\n    _followTarget: Node = Object.create(null);\n\n    _offsetZ: number = 0;\n    _offsetZScale: number = 1;\n    _target: Vec3 = v3(0, 0, 0);\n    _dir: Vec3 = v3(0, 0, 0);\n    _pos: Vec3 = v3(0, 0, 0);\n\n    controlZ: SmoothLocalZ = Object.create(null);\n\n    start () {\n        this._followTarget = find(this.target);\n        this._target = this._followTarget.position.clone();\n        UtilVec3.copy(this._pos, this._target);\n        this.node.setWorldPosition(this._target);\n        this.controlZ = this.node.children[0].children[0].getComponent(SmoothLocalZ);\n        Msg.bind('set_camera_len', this.setLen, this);\n        Msg.bind('set_offset_scale', this.setOffsetScale, this);\n\n        console.log('camera controller:', this.node.worldPosition);\n    }\n\n    onDestroy () {\n        Msg.off('set_camera_len', this.setLen);\n        Msg.off('set_offset_scale', this.setOffsetScale);\n    }\n\n    setLen (offset: number) {\n        \n        this.controlZ.setOffset(offset);\n    }\n\n    setOffsetScale (scale: number) {\n        \n        //this._offsetZScale = 1 - scale;\n    }\n\n    lateUpdate (deltaTime: number) {\n        this.smoothDamp(deltaTime);\n    }\n\n    smoothDamp (deltaTime: number) {\n        //UtilVec3.copy(this._pos, this.node.position);\n        UtilVec3.copy(this._target, this._followTarget.position);\n        UtilVec3.copy(this._dir, this._followTarget.forward);\n        if (this._offsetZScale > 0)\n            this._target.add(this._dir.multiplyScalar(this._offsetZ * this._offsetZScale));\n        GVec3.smoothDamp(this._pos, this._target, this._velocity, this.smooth, deltaTime);\n        //this._pos = val[0];\n        //this._velocity = val[1];\n        this.node.setWorldPosition(this._pos);\n    }\n\n}\n\n/*\nsmoothLerp(deltaTime: number) {\n    var pos = this.node.worldPosition;\n    var target = this._followTarget.worldPosition;\n    Vec3.lerp(pos, this._followTarget.worldPosition, pos, deltaTime * this.smooth);\n}\n*/","import { _decorator, Component, Node, v3 } from 'cc';\nimport { ActorBase } from '../../core/actor/actor-base';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('camera_fps')\nexport class camera_fps extends Component {\n\n    angle = v3(0, 0, 0);\n\n    @property(Node)\n    root:Node | undefined;\n\n    @property(ActorBase)\n    _actor:ActorBase | undefined;\n\n    start() {\n        this._actor = this.root?.getComponent(ActorBase)!;\n    }\n\n    update(deltaTime: number) {\n        this.updateAngle();\n    }\n\n    updateAngle() {\n        \n        UtilVec3.copy(this.angle, this.node.eulerAngles);\n        this.angle.x = this._actor!._angleVertical;\n        this.node.setRotationFromEuler(this.angle);\n\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, v3, Vec3, CCFloat } from 'cc';\nimport { UtilVec3 } from '../../core/util/util';\nimport { Msg } from '../../core/msg/msg';\nimport { SensorRayNodeToNode } from '../../core/sensor/sensor-ray-node-to-node';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraMoveTarget')\nexport class CameraMoveTarget extends Component {\n\n    @property({ type: Node, tooltip: 'Target Node' })\n    targetNode: Node | undefined;\n\n    @property({ type: CCFloat, tooltip: 'Smooth position move.' })\n    smoothSlowMove = 5.0;\n\n    @property({ type: CCFloat, tooltip: 'Smooth angle.' })\n    smoothAngle = 5.0;\n\n    @property({ type: CCFloat, tooltip: 'Smooth position move.' })\n    smoothFastMove = 15;\n\n    @property({ type: Node, tooltip: 'Camera Node.' })\n    cameraNode: Node | undefined;\n\n    @property({ type: [Node], tooltip: 'Target node list.' })\n    targets: Node[] = [];\n\n    @property({ type: CCFloat, tooltip: 'Start the waiting time.' })\n    waitTime = 10;\n\n    @property({ type: Node, tooltip: 'Look at target node.' })\n    lookAtTarget: Node | undefined;\n\n    currentPosition = v3(0, 0, 0);\n    currentAngle = v3(0, 0, 0);\n\n    sensor: SensorRayNodeToNode | undefined;\n\n    movePosition = v3(0, 0, 0);\n\n    smoothMove = 5.0;\n\n    start () {\n        Msg.on('msg_change_tps_camera_target', this.setTarget.bind(this));\n        UtilVec3.copy(this.currentPosition, this.cameraNode!.position);\n        UtilVec3.copy(this.currentAngle, this.cameraNode!.eulerAngles);\n        this.sensor = this.getComponent(SensorRayNodeToNode)!;\n    }\n\n    onDestroy () {\n        Msg.off('msg_change_tps_camera_target', this.setTarget.bind(this));\n    }\n\n    update (deltaTime: number) {\n\n        if (this.waitTime > 0) {\n            this.waitTime -= deltaTime;\n            return;\n        }\n\n        if (!this.targetNode) return;\n\n        // Calculate move position.\n        if (this.sensor!.hitPoint.length() > 0) {\n            UtilVec3.copy(this.movePosition, this.sensor!.hitPoint);\n            this.movePosition.subtract(this.node!.worldPosition);\n            const length = this.movePosition.length();\n            UtilVec3.copy(this.movePosition, this.targetNode.position);\n            this.movePosition.subtract(this.node.position).normalize().multiplyScalar(length);\n            this.smoothMove = this.smoothFastMove;\n        } else {\n            UtilVec3.copy(this.movePosition, this.targetNode.position);\n            this.smoothMove = this.smoothSlowMove;\n        }\n        //const targetPosition = this.sensor!.hitPoint.length() > 0 ? this.sensor!.hitPoint : this.targetNode.position;\n\n        // Smooth move position.\n        Vec3.lerp(this.currentPosition, this.currentPosition, this.movePosition, this.smoothMove * deltaTime);\n        this.cameraNode?.setPosition(this.currentPosition);\n\n\n        // Smooth move angle.\n        Vec3.lerp(this.currentAngle, this.currentAngle, this.targetNode.eulerAngles, this.smoothAngle * deltaTime);\n        this.cameraNode?.setRotationFromEuler(this.currentAngle);\n\n        // Set Look at point.\n        this.lookAtTarget?.setPosition(0, 0, -this.cameraNode!.position.z - 5);\n\n    }\n\n    setTarget (index: number) {\n        this.targetNode = this.targets[index];\n        this.sensor!.endNode = this.targetNode;\n    }\n\n}\n\n","import { _decorator, Component, Node, Camera, find } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { UtilNode } from '../../core/util/util';\nimport { StaticOcclusionCulling } from '../../../../extensions/pipeline/pipeline/components/occlusion-culling/static/static-occlusion-culling';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraMsg')\nexport class CameraMsg extends Component {\n\n\n    @property\n    msg = \"msg_set_camera\";\n\n    _cameraNode:Node | undefined;\n\n    _camera:Camera | undefined;\n\n    start() {\n\n        Msg.bind(this.msg, this.setCamera, this);\n        this._cameraNode = this.node.children[0];\n        this._camera = this._cameraNode.getComponent(Camera)!;\n\n    }\n\n    setCamera(active:boolean) {\n        this._cameraNode!.active = active;\n        if(active) {\n            const culling = find('static-occlusion-culling');\n            if (culling === undefined || culling === null) {\n                console.warn(`Can not find static-occlusion-culling.`);\n                return;\n            }\n            const occlusionCulling = culling.getComponent(StaticOcclusionCulling);\n            if(occlusionCulling === null) throw new Error(`culling node not find 'StaticOcclusionCulling'`);\n\n            if(this._camera)\n                occlusionCulling.camera = this._camera;\n        }\n\n    }\n}\n\n","\nimport { _decorator, Component, RenderTexture, game, gfx, Camera, ccenum, director } from 'cc';\nimport { InPlayMode } from './utils/npm';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('CameraSetting')\n@executeInEditMode\nexport class CameraSetting extends Component {\n    static main: CameraSetting | undefined;\n    static get mainCamera (): Camera | null {\n        if (!InPlayMode) {\n            return globalThis.cce.Camera._camera;\n        }\n        if (this.main) {\n            return this.main.camera;\n        }\n        return null;\n    }\n\n    camera: Camera | undefined;\n\n    @property\n    isMainCamera = true;\n\n    @property\n    pipeline = 'main'\n\n    __preload () {\n        this.camera = this.getComponent(Camera)\n    }\n}\n","import { _decorator, Component, math, Node, v3, CCFloat } from 'cc';\nimport { UtilVec3 } from '../../core/util/util';\nimport { ActorMove } from '../actor/actor-move';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CameraTps')\nexport class CameraTps extends Component {\n\n    @property(Node)\n    rotationNode: Node | undefined;\n\n    @property({ type: ActorMove, tooltip: 'Test actor move.' })\n    actorMove: ActorMove | undefined;\n\n    @property(CCFloat)\n    smoothAngle = 20;\n\n    @property(CCFloat)\n    smoothHeight = 1;\n\n    targetAngle = v3(0, 0, 0);\n    currentAngle = v3(0, 0, 0);\n\n    targetPosition = v3(0, 0, 0);\n    currentPosition = v3(0, 0, 0);\n\n    start () {\n        UtilVec3.copy(this.targetAngle, this.rotationNode!.eulerAngles);\n        UtilVec3.copy(this.currentAngle, this.targetAngle);\n\n        UtilVec3.copy(this.targetPosition, this.rotationNode!.position);\n        UtilVec3.copy(this.currentAngle, this.targetPosition);\n\n        Msg.on('msg_change_tps_camera_height', this.setRootY.bind(this));\n    }\n\n    update (deltaTime: number) {\n\n        this.rotationX(this.actorMove!.angleVertical);\n\n        this.currentAngle.x = math.lerp(this.currentAngle.x, this.targetAngle.x, this.smoothAngle * deltaTime);\n\n        this.rotationNode?.setRotationFromEuler(this.currentAngle);\n\n        this.currentPosition.y = math.lerp(this.currentPosition.y, this.targetPosition.y, this.smoothHeight * deltaTime);\n\n        this.rotationNode?.setPosition(this.currentPosition);\n\n    }\n\n    rotationX (angleX: number) {\n\n        this.targetAngle.x = angleX;\n\n    }\n\n    setRootY (height: number) {\n        this.targetPosition.y = height;\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, sys } from 'cc';\nimport { Actor } from '../actor/actor';\nconst { ccclass } = _decorator;\n\n@ccclass('CheckAutoPick')\nexport class CheckAutoPick extends Component {\n\n    _actor: Actor | undefined;\n\n    // auto pick check time.\n    checkAutoPickTime = 1;\n\n    isAutoPick = false;\n\n    start () {\n\n        this._actor = this.getComponent(Actor)!;\n\n        this.isAutoPick = sys.platform === sys.Platform.MOBILE_BROWSER ||\n            sys.platform === sys.Platform.ANDROID ||\n            sys.platform === sys.Platform.IOS;\n\n    }\n\n    update (deltaTime: number) {\n\n        if (!this.isAutoPick) return;\n\n        this.checkAutoPickTime -= deltaTime;\n\n        if (this.checkAutoPickTime > 0) return;\n\n        this.checkAutoPickTime = 1;\n\n        this._actor?.onPick();\n\n    }\n}\n\n","import { _decorator, Component, Node, Collider } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ColliderGroup')\nexport class ColliderGroup extends Component {\n\n    @property\n    group: number = 0;\n\n    onEnable () {\n        this.node.getComponent(Collider)?.setGroup(1 << this.group);\n    }\n\n}\n\n","import { Node, PhysicsRayResult, Vec3 } from \"cc\";\nimport { Sound } from \"../../core/audio/sound\";\nimport { fx } from \"../../core/effect/fx\";\nimport { Local } from \"../../core/localization/local\";\nimport { Msg } from \"../../core/msg/msg\";\nimport { ActorPart } from \"./actor-part\";\nimport { Actor } from \"./actor\";\nimport { DataLevelInst } from \"../data/data-core\";\n\nexport function calculateDamageNode (data: any, node: Node, hitPoint: Vec3, shootActor: Actor | undefined) {\n    const hitName = node.name.split('_')[0];\n    let hitTag = `hit_${hitName}`;\n\n    const damage = data.damage;\n    const actorPart = node.getComponent(ActorPart);\n\n    if (shootActor?.isPlayer) Msg.emit('msg_stat_times', `enemy_fire`);\n\n    if (actorPart) {\n        const actorBodyName = actorPart.part;\n        const part_damage = damage[actorBodyName];\n        if (part_damage === undefined) throw new Error(`${node.name} node hit part undefine '${actorBodyName}'`);\n\n        const actor = actorPart.actor;\n        if (actor === undefined) throw new Error(`${node.name} node hit part '${actorBodyName}' undefine actor`);\n\n        if (shootActor?.isPlayer) {\n            Msg.emit('msg_stat_times', `hit_${actorBodyName}`);\n        }\n\n        if (actor.isPlayer) {\n            Msg.emit('msg_stat_times', `be_hit_${actorBodyName}`);\n        }\n\n        actor._data.hp -= part_damage;\n        if (actor._data.hp <= 0) {\n            actor._data.hp = 0;\n            fx.on(DataLevelInst._data.fx_dead, actor.node.worldPosition);\n            if (actor.isPlayer) Msg.emit('msg_stat_times', 'killed');\n            actor.do('dead');\n        } else {\n            actor.do('hit_gun');\n        }\n\n        if (actor.isPlayer) actor.updateHP();\n\n        hitTag = 'hit_body';\n    }\n    calculateDamageView(damage[hitTag], hitPoint);\n}\n\nexport function calculateDamage (data: any, hit: PhysicsRayResult | undefined, shootActor: Actor | undefined) {\n\n    if (shootActor?.isPlayer) Msg.emit('msg_stat_times', `enemy_fire`);\n\n    if (hit === undefined) {\n        Msg.emit(\n            'msg_tips',\n            `${Local.Instance.get('hit_nothing')}`,\n        );\n        return;\n    }\n    const node: Node = hit.collider.node;\n    const hitName = node.name.split('_')[0];\n    let hitTag = `hit_${hitName}`;\n\n    const damage = data.damage;\n    const actorPart = node.getComponent(ActorPart);\n\n    if (actorPart) {\n        const actorBodyName = actorPart.part;\n        const part_damage = damage[actorBodyName];\n        if (part_damage === undefined) throw new Error(`${node.name} node hit part undefine '${actorBodyName}'`);\n\n        const actor = actorPart.actor;\n        if (actor === undefined) throw new Error(`${node.name} node hit part '${actorBodyName}' undefine actor`);\n\n        if (shootActor?.isPlayer) {\n            Msg.emit('msg_stat_times', `hit_${actorBodyName}`);\n        }\n\n        if (actor.isPlayer) {\n            Msg.emit('msg_stat_times', `be_hit_${actorBodyName}`);\n        }\n\n        actor._data.hp -= part_damage;\n        if (actor._data.hp <= 0) {\n            actor._data.hp = 1;\n            fx.on(DataLevelInst._data.fx_dead, actor.node.worldPosition);\n            if (shootActor?.isPlayer) Msg.emit('msg_stat_times', 'killed');\n            actor.do('dead');\n\n        } else {\n            actor.do('hit_gun')\n        }\n        hitTag = 'hit_body';\n\n        if (actor.isPlayer) actor.updateHP();\n    }\n    calculateDamageView(damage[hitTag], hit.hitPoint);\n}\n\nfunction calculateDamageView (damage: Record<string, any> | undefined, hitPoint: Vec3) {\n    if (damage === undefined) return;\n    if (damage.fx) fx.on(damage.fx, hitPoint);\n    if (damage.sfx) Sound.on(damage.sfx);\n    if (damage.notify === undefined) {\n        const showMsg = damage['notify'];\n        if (showMsg == undefined) return;\n        Msg.emit(\n            'msg_tips',\n            `${Local.Instance.get(damage['notify'])}`\n        );\n    }\n}\n","import { ResCache } from \"../res/res-cache\";\nimport { KeyAnyType } from \"../../logic/data/game-type\";\n\nexport class DataBase {\n\n    _data:KeyAnyType = {};\n    _name:string = '';\n\n    constructor() {}\n\n    public init(name:string) {\n        this._name = name;\n        this._data = ResCache.Instance.getJson(name).json;\n        this.bind();\n    }\n\n    public bind() {}\n\n    public get(name:string) {\n        const item = this._data[name];\n        if (item === undefined) {\n            throw new Error(`${this._name} database not find ${name}.`);\n        }\n        return item;\n    }\n\n}","import { Camera, director, game, Scene } from \"cc\";\nimport { DataBase } from \"../../core/data/data-base\";\nimport { Msg } from \"../../core/msg/msg\";\n\nexport class DataCamera extends DataBase {\n}","import { DataEquip } from \"../../logic/data/data-equip\";\nimport { DataSound } from \"../../logic/data/data-sound\";\nimport { DataCamera } from \"./data-camera\";\nimport { DataGame } from \"./data-game\";\nimport { DataLevel } from \"./data-level\";\nimport { DataNavigation } from \"./data-navigation\";\nimport { DataUpgradeCard } from \"./data-upgrade-card\";\n\nexport const DataEquipInst = new DataEquip();\nexport const DataSoundInst = new DataSound();\nexport const DataCameraInst = new DataCamera();\nexport const DataNavigationInst = new DataNavigation();\nexport const DataUpgradeCardInst = new DataUpgradeCard();\nexport const DataGameInst = new DataGame();\nexport const DataLevelInst = new DataLevel();\n\nexport function Init() {\n    //Init data.\n    DataEquipInst.init('data-equips');\n    DataSoundInst.init('data-sound');\n    DataCameraInst.init('data-camera');\n    DataNavigationInst.init('data-navigation');\n    DataUpgradeCardInst.init('data-upgrade-card');\n    DataGameInst.init('data-game');\n    DataLevelInst.init('data-level');\n}","import { DataBase } from \"../../core/data/data-base\";\n\nexport class DataEquip extends DataBase {\n}","import { DataBase } from \"../../core/data/data-base\";\n\nexport class DataGame extends DataBase {\n}","import { DataBase } from \"../../core/data/data-base\";\n\nexport class DataLevel extends DataBase {\n}","import { DataBase } from \"../../core/data/data-base\";\n\nexport class DataNavigation extends DataBase {\n}","import { DataBase } from \"../../core/data/data-base\";\n\nexport class DataSound extends DataBase {\n}","const CAPACITY:number = 10;\n\n\nexport class Stack<T> {\n\n    private _elements: Array<T>;\n    private _size:number;\n\n    public constructor(capacity: number = CAPACITY) {\n        this._elements = new Array<T>(capacity);\n        this._size = 0;\n    }\n\n    public push(o:T) {\n        var len = this._elements.length;\n        if (this._size > len) {\n            let temp = new Array<T>(len);\n            this._elements = this._elements.concat(temp);\n        }\n        this._elements[this._size++] = o;\n    }\n\n    public cur() {\n        return this._elements[this._size - 1];\n    }\n\n    public pop() {\n        return this._elements[--this._size];\n    }\n\n    public peek() {\n        return this._elements[this._size-1];\n    }\n\n    public size():number {\n        return this._size;\n    }\n\n    public empty():boolean {\n        return this._size === 0;\n    }\n    \n    public clear(capacity:number = CAPACITY) {\n        delete this._elements;\n        this._elements = new Array(capacity);\n        this._size = 0;\n    }\n\n}\n\nexport class Queue<T> {\n    private _elements: Array<T>;\n    private _size: number | undefined;\n\n    public constructor(capacity?: number) {\n        this._elements = new Array<T>();\n        this._size = capacity;\n    }\n\n    public push(o:T) {\n        if (o === null) {\n            return false;\n        }\n\n        if (this._size !== undefined && !isNaN(this._size)) {\n            if (this._elements.length === this._size) {\n                this.pop();\n            }\n        }\n\n        this._elements.unshift(o);\n        return true;\n    }\n\n    public pop(): T {\n        return this._elements.pop();\n    }\n\n    public size():number {\n        return this._elements.length; \n    }\n    \n    public empty():boolean {\n        return this.size() === 0;\n    } \n\n    public clear() {\n        delete this._elements;\n        this._elements = new Array<T>(); \n    }\n}","import { DataBase } from \"../../core/data/data-base\";\n\nexport class DataUpgradeCard extends DataBase {\n}","import { setDisplayStats } from \"cc\";\nimport { Save } from \"../../logic/data/save\";\nimport { Local } from \"../localization/local\";\nimport { Msg } from \"../msg/msg\";\nimport { Singleton } from \"../pattern/singleton\";\nimport { DataGameInst } from \"../../logic/data/data-core\";\n\nexport class DebugUtil extends Singleton {\n\n    index: number = 0;\n\n    public init (): void {\n\n        if (Save.Instance._cur.debugIndex === undefined) \n            Save.Instance._cur.debugIndex = 0;\n\n        this.index = Save.Instance._cur.debugIndex;\n        var gdata = DataGameInst._data;\n\n        this.CheckDisplayStats();\n\n        Msg.on('next_debug', () => {\n            this.index++;\n            if (this.index >= gdata.debug_info.length) this.index = 0;\n            Save.Instance._cur.debugIndex = this.index;\n            this.CheckDisplayStats();\n        });\n\n        Msg.on('pre_debug', () => {\n            this.index--;\n            if (this.index < 0) this.index = gdata.debug_info.length - 1;\n            Save.Instance._cur.debugIndex = this.index;\n            this.CheckDisplayStats();\n        });\n\n    }\n\n    public CheckDisplayStats() {\n        setDisplayStats(this.index === 1);\n    }\n\n    public getShowName() {\n        var gdata = DataGameInst._data;\n        return Local.Instance.get(gdata.debug_info[this.index]);\n    }\n\n    \n\n}","import { director, GeometryRenderer } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { CameraSetting } from \"../camera-setting\";\n\n\nexport function getGeometryRenderer () {\n    let camera;\n    if (EDITOR) {\n        director.root.scenes.forEach(s => {\n            s.cameras.forEach(c => {\n                if (c.name === 'Editor UIGizmoCamera') {\n                    camera = c;\n                }\n            })\n        })\n    }\n    else {\n        camera = CameraSetting.mainCamera && CameraSetting.mainCamera.camera;\n    }\n\n    if (camera) {\n        camera.initGeometryRenderer();\n    }\n    let geometryRenderer: GeometryRenderer = camera && camera.geometryRenderer || director.root.pipeline.geometryRenderer;\n    return geometryRenderer;\n}\n\nglobalThis.getGeometryRenderer = getGeometryRenderer;\n","import { BaseStage } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString, sys, director, Vec4 } from \"cc\";\nimport { getCameraUniqueID, getRenderArea, SRGBToLinear } from \"../utils/utils\";\nimport { settings } from \"./setting\";\nimport { EDITOR } from \"cc/env\";\nimport { passUtils } from \"../utils/pass-utils\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n@ccclass('DeferredGBufferStage')\nexport class DeferredGBufferStage extends BaseStage {\n    _name = 'DeferredGBufferStage'\n    _materialName = 'blit-screen';\n\n    @property({ override: true })\n    outputNames = ['gBufferColor', 'gBufferNormal', 'gBufferEmissive', 'gBufferPosition', 'gBufferDS']\n\n    uniqueStage = true;\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        settings.gbufferStage = this;\n\n        // hack: use fog uniform to set deferred pipeline\n        director.root.pipeline.pipelineSceneData.fog.fogStart = 1;\n\n        const area = this.getRenderArea(camera);\n        const width = area.width;\n        const height = area.height;\n\n        passUtils.clearFlag = ClearFlagBit.COLOR | ClearFlagBit.DEPTH_STENCIL;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n        Vec4.set(passUtils.clearDepthColor, camera.clearDepth, camera.clearStencil, 0, 0);\n\n        const colFormat = Format.RGBA16F;\n        let posFormat = colFormat;\n        if (!sys.isMobile) {\n            posFormat = Format.RGBA32F\n        }\n\n        const slot0 = this.slotName(camera, 0);\n        const slot1 = this.slotName(camera, 1);\n        const slot2 = this.slotName(camera, 2);\n        const slot3 = this.slotName(camera, 3);\n        const slot4 = this.slotName(camera, 4);\n\n        passUtils.addRasterPass(width, height, 'default', `${slot0}_Pass`)\n            .setViewport(area.x, area.y, width, height)\n            .addRasterView(slot0, colFormat, true)\n            .addRasterView(slot1, colFormat, true)\n            .addRasterView(slot2, colFormat, true)\n            .addRasterView(slot3, posFormat, true)\n            .addRasterView(slot4, Format.DEPTH_STENCIL, true)\n            .version()\n\n        passUtils.pass\n            .addQueue(QueueHint.RENDER_OPAQUE)\n            .addSceneOfCamera(camera, new LightInfo(), SceneFlags.OPAQUE_OBJECT | SceneFlags.CUTOUT_OBJECT | SceneFlags.DRAW_INSTANCING);\n\n    }\n}\n","\nimport { BaseStage, } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, Material, CCString, Vec4, game, director, ReflectionProbe, TextureCube } from \"cc\";\nimport { getCameraUniqueID, getLoadOpOfClearFlag, getRenderArea } from \"../utils/utils\";\nimport { EDITOR, JSB } from \"cc/env\";\nimport { ExponentialHeightFog, fogUBO } from \"../components/fog/height-fog\";\nimport { ReflectionProbes } from \"../components/reflection-probe-utils\";\nimport { DeferredGBufferStage } from \"./deferred-gbuffer-stage\";\nimport { settings } from \"./setting\";\nimport { CustomShadowStage } from \"./shadow-stage\";\nimport { LightWorldCluster } from \"../components/cluster/light-cluster\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\nlet EditorCameras = [\n    'scene:material-previewcamera',\n    'Scene Gizmo Camera',\n    'Editor UIGizmoCamera',\n\n    'Main Camera',\n]\n\nlet tempVec4 = new Vec4\n\n@ccclass('DeferredLightingStage')\nexport class DeferredLightingStage extends BaseStage {\n    _materialName = 'blit-screen';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    tempMat: Material\n    clearMat: renderer.MaterialInstance\n\n    enableClusterLighting = 0;\n    enableIBL = 0;\n    enableShadow = 0;\n\n    uniqueStage = true;\n\n    probes: ReflectionProbe[] = []\n\n    @property({ override: true })\n    name = 'DeferredLightingStage'\n\n    @property({ override: true })\n    outputNames = ['DeferredLightingColor', 'gBufferDS']\n\n    updateClusterUBO (setter: any, material: Material) {\n        let cluster = globalThis.LightWorldCluster.instance as LightWorldCluster;\n        if (!cluster) {\n            return;\n        }\n\n        material.setProperty('light_cluster_BoundsMin', tempVec4.set(cluster.boundsMin.x, cluster.boundsMin.y, cluster.boundsMin.z, 1))\n        material.setProperty('light_cluster_BoundsDelta', tempVec4.set(cluster.boundsDelta.x, cluster.boundsDelta.y, cluster.boundsDelta.z, 1))\n        material.setProperty('light_cluster_CellsDot', cluster.clusterCellsDotData)\n        material.setProperty('light_cluster_CellsMax', cluster.clusterCellsMaxData)\n        material.setProperty('light_cluster_TextureSize', cluster.clusterTextureSizeData)\n        material.setProperty('light_cluster_InfoTextureInvSize', cluster.infoTextureInvSizeData)\n        material.setProperty('light_cluster_CellsCountByBoundsSizeAndPixelsPerCell', cluster.clusterCellsCountByBoundsSizeData)\n\n        // if (EDITOR) {\n        //     material.setProperty('light_cluster_InfoTexture', cluster.dataInfoTextureFloat)\n        //     material.setProperty('light_cluster_Texture', cluster.clusterTexture)\n\n        //     let pass = material.passes[0];\n        //     let pointSampler = director.root.pipeline.globalDSManager.pointSampler\n        //     let binding = pass.getBinding('light_cluster_InfoTexture')\n        //     pass.bindSampler(binding, pointSampler)\n        //     binding = pass.getBinding('light_cluster_Texture')\n        //     pass.bindSampler(binding, pointSampler)\n        // }\n        // else {\n        setter.setTexture('light_cluster_InfoTexture', cluster.dataInfoTextureFloat);\n        setter.setTexture('light_cluster_Texture', cluster.clusterTexture);\n\n        let pointSampler = director.root.pipeline.globalDSManager.pointSampler\n        setter.setSampler('light_cluster_InfoTexture', pointSampler)\n        setter.setSampler('light_cluster_Texture', pointSampler)\n        // }\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        const cameraID = getCameraUniqueID(camera);\n        // const cameraName = `Camera${cameraID}`;\n        // const cameraInfo = buildShadowPasses(cameraName, camera, ppl);\n        const area = this.getRenderArea(camera);\n        const width = area.width;\n        const height = area.height;\n\n        const slot0 = this.slotName(camera, 0);\n        let slot1 = this.slotName(camera, 1);\n        if (settings.gbufferStage) {\n            slot1 = settings.gbufferStage.slotName(camera, 4);\n        }\n\n        // passUtils.clearFlag = gfx.ClearFlagBit.NONE;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n        passUtils.clearFlag = gfx.ClearFlagBit.COLOR;\n        passUtils.addRasterPass(width, height, 'deferred-lighting', `LightingShader${cameraID}`)\n            .setViewport(area.x, area.y, width, height)\n            .setPassInput(this.lastStage.slotName(camera, 0), 'gbuffer_albedoMap')\n            .setPassInput(this.lastStage.slotName(camera, 1), 'gbuffer_normalMap')\n            .setPassInput(this.lastStage.slotName(camera, 2), 'gbuffer_emissiveMap')\n            .setPassInput(this.lastStage.slotName(camera, 3), 'gbuffer_posMap');\n\n        let setter = passUtils.pass as any;\n        let shadowStage: CustomShadowStage = settings.shadowStage;\n        if (shadowStage) {\n            for (const dirShadowName of shadowStage.mainLightShadows) {\n                passUtils.setPassInput(dirShadowName, 'cc_shadowMap');\n            }\n\n            // not work, will override by queue data\n            // let frameBuffer = ppl.pipelineSceneData.shadowFrameBufferMap.get(camera.scene.mainLight);\n            // if (frameBuffer) {\n            //     setter.setTexture('cc_shadowMap', frameBuffer.colorTextures[0])\n\n            //     let pointSampler = director.root.pipeline.globalDSManager.pointSampler\n            //     setter.setSampler('cc_shadowMap', pointSampler)\n            // }\n        }\n\n        passUtils\n            .addRasterView(slot0, Format.RGBA16F, true)\n            // .addRasterView(slot1, Format.DEPTH_STENCIL, true)\n            .version()\n\n        let probes = ReflectionProbes.probes\n        probes = probes.filter(p => {\n            return p.enabledInHierarchy\n        })\n\n        let sharedMaterial = globalThis.pipelineAssets.getMaterial('deferred-lighting')\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== sharedMaterial) {\n            if (EDITOR && EditorCameras.includes(camera.name)) {\n                material = new renderer.MaterialInstance({\n                    parent: sharedMaterial,\n                })\n                material.recompileShaders({ CLEAR_LIGHTING: true })\n            }\n            else {\n                // director.root.pipeline.macros.CC_USE_IBL = 0;\n\n                material = new renderer.MaterialInstance({\n                    parent: sharedMaterial,\n                })\n                material.recompileShaders({\n                    // CC_USE_IBL: 0,\n                    CC_RECEIVE_SHADOW: 1,\n                    REFLECTION_PROBE_COUNT: probes.length,\n                    ENABLE_CLUSTER_LIGHTING: HrefSetting.clusterLighting,\n                    ENABLE_IBL: HrefSetting.ibl,\n                    ENABLE_SHADOW: HrefSetting.shadow,\n                })\n\n                this.enableClusterLighting = HrefSetting.clusterLighting\n                this.enableIBL = HrefSetting.ibl\n                this.enableShadow = HrefSetting.shadow\n            }\n            this.materialMap.set(camera, material);\n        }\n\n        if (probes.length !== this.probes.length ||\n            this.enableClusterLighting !== HrefSetting.clusterLighting ||\n            this.enableIBL !== HrefSetting.ibl ||\n            this.enableShadow !== HrefSetting.shadow) {\n            material.recompileShaders({\n                REFLECTION_PROBE_COUNT: probes.length,\n                ENABLE_CLUSTER_LIGHTING: HrefSetting.clusterLighting,\n                ENABLE_IBL: HrefSetting.ibl,\n                ENABLE_SHADOW: HrefSetting.shadow,\n            })\n            this.enableClusterLighting = HrefSetting.clusterLighting\n            this.enableIBL = HrefSetting.ibl\n            this.enableShadow = HrefSetting.shadow\n        }\n\n        if (!JSB) {\n            setter.addConstant('CustomLightingUBO', 'deferred-lighting');\n        }\n        for (let i = 0; i < 3; i++) {\n            let probe = probes[i];\n            if (!probe) break;\n\n            let pos = probe.node.worldPosition;\n            let range = Math.max(probe.size.x, probe.size.y, probe.size.z)\n\n            material.setProperty('light_ibl_posRange' + i, tempVec4.set(pos.x, pos.y, pos.z, range))\n            let cubemap: TextureCube = (probe as any)._cubemap\n            // if (EDITOR) {\n            //     material.setProperty('light_ibl_Texture' + i, cubemap)\n            // }\n            // else {\n            setter.setTexture('light_ibl_Texture' + i, cubemap.getGFXTexture())\n            setter.setSampler('light_ibl_Texture' + i, cubemap.getGFXSampler())\n            // }\n        }\n\n        this.probes = probes;\n\n        this.updateClusterUBO(setter, material);\n\n        fogUBO.update(material);\n\n        passUtils.pass\n            .addQueue(QueueHint.RENDER_TRANSPARENT)\n            .addCameraQuad(\n                camera, material, 0,\n                SceneFlags.VOLUMETRIC_LIGHTING,\n            );\n\n        // render transparent\n        // todo: remove this pass\n        if (HrefSetting.transparent) {\n            passUtils.clearFlag = gfx.ClearFlagBit.NONE;\n            passUtils.addRasterPass(width, height, 'default', `LightingTransparent${cameraID}`)\n                .setViewport(area.x, area.y, width, height)\n                .addRasterView(slot0, Format.RGBA16F, true)\n                .addRasterView(slot1, Format.DEPTH_STENCIL, true)\n                .version()\n\n            let flags = SceneFlags.TRANSPARENT_OBJECT | SceneFlags.PLANAR_SHADOW | SceneFlags.GEOMETRY;\n            passUtils.pass\n                .addQueue(QueueHint.RENDER_TRANSPARENT)\n                .addSceneOfCamera(\n                    camera, new LightInfo(),\n                    flags\n                )\n        }\n    }\n}\n","import { BaseStage, } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString, Vec4, game, Material } from \"cc\";\nimport { getCameraUniqueID } from \"../utils/utils\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { settings } from \"./setting\";\nimport { EDITOR } from \"cc/env\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n@ccclass('DeferredPostStage')\nexport class DeferredPostStage extends BaseStage {\n    _materialName = 'final-post';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    // uniqueStage = true;\n\n    @property({ override: true })\n    name = 'DeferredPostStage'\n\n    @property({ override: true })\n    outputNames = ['DeferredPostColor', 'DeferredPostDS']\n\n    params1 = new Vec4\n    params2 = new Vec4\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        const cameraID = getCameraUniqueID(camera);\n        const area = this.getRenderArea(camera);\n\n        const input0 = this.lastStage.slotName(camera, 0);\n        const slot0 = this.slotName(camera, 0);\n\n        passUtils.clearFlag = camera.clearFlag & gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== this.material) {\n            material = new renderer.MaterialInstance({\n                parent: this.material\n            })\n            this.materialMap.set(camera, material);\n        }\n\n        passUtils.material = material;\n\n        let shadingScale = this.finalShadingScale()\n        material.setProperty('params1',\n            this.params1.set(\n                game.canvas.width, game.canvas.height,\n                settings.outputRGBE ? 1 : 0,\n                settings.tonemapped ? 0 : 1\n            )\n        );\n\n        material.setProperty('params2',\n            this.params2.set(\n                HrefSetting.fxaa, 0, 0, 0\n            )\n        );\n\n        let width = area.width / shadingScale;\n        let height = area.height / shadingScale;\n        passUtils.addRasterPass(width, height, 'post-process', `CameraPostprocessPass${cameraID}`)\n            .setViewport(area.x, area.y, width, height)\n            .setPassInput(input0, 'inputTexture')\n            .addRasterView(slot0, Format.RGBA8, false)\n            .blitScreen(0)\n            .version()\n\n        this.renderProfiler(camera);\n    }\n}\n","import { _decorator, Component, Node, Animation, input, Input, EventKeyboard, KeyCode } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('DelayPlayAnimation')\nexport class DelayPlayAnimation extends Component {\n\n\n    @property\n    delay = 2;\n\n    @property\n    anim_name:string = 'minmax.com';\n\n    start() {\n\n        input.on(Input.EventType.KEY_UP, (event:EventKeyboard)=>{\n            if (event.keyCode === KeyCode.SPACE) this.delayPlay();\n        }, this)\n\n    }\n\n    delayPlay() {\n        setTimeout(()=>{ \n            this.node.getComponent(Animation)?.play(this.anim_name);\n            var anim = this.node.getComponent(Animation);\n        }, this.delay * 1000);\n    }\n}\n\n","import { _decorator, Component, Node, ParticleSystem } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('DelayActive')\nexport class DelayActive extends Component {\n    @property(Node)\n    targets: Node[] = []\n\n    @property\n    delay = 0.5\n\n    start () {\n\n        const particles = this.node?.getComponentsInChildren(ParticleSystem);\n\n        for (let i = 0; i < particles.length; i++) {\n            particles[i].play();\n        }\n\n\n        setTimeout(() => {\n            this.targets.forEach(t => {\n                t.active = true\n            })\n\n            this.node.removeFromParent()\n        }, this.delay * 1000)\n    }\n\n}\n\n\n","import { _decorator, Component, Node, Animation, CCFloat, CCString } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('DelayPlay')\nexport class DelayPlay extends Component {\n\n\n    @property([Animation])\n    animations = [];\n\n    @property([CCFloat])\n    delay = [];\n\n    @property([CCString])\n    animation_names = [];\n\n    start () {\n\n\n\n    }\n\n}\n\n","import { _decorator, Component, Node, Vec3, v3 } from 'cc';\nimport { fun } from './fun';\nimport { UtilVec3 } from './util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('delay_show_node')\nexport class delay_show_node extends Component {\n\n    @property\n    delay_time = 0.2;\n\n    _scale = v3(0, 0, 0);\n\n    onEnable () {\n        UtilVec3.copy(this._scale, this.node.getWorldScale());\n        this.node.setScale(0, 0, 0);\n    }\n\n    start () {\n\n        fun.delay(() => {\n            this.node.setScale(this._scale);\n        }, this.delay_time);\n\n    }\n}\n\n","import { _decorator, Component, director, Node, CCBoolean } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('destroySettings')\nexport class destroySettings extends Component {\n\n    @property(CCBoolean)\n    isDestroy = true;\n\n    start () {\n        if (this.isDestroy) director.addPersistRootNode(this.node);\n    }\n\n}\n\n","import { _decorator, Component, Node, MeshRenderer } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('disable_update_ubo')\nexport class disable_update_ubo extends Component {\n    start () {\n        setTimeout(() => {\n            let mrs = this.getComponentsInChildren(MeshRenderer);\n            mrs.forEach(mr => {\n                // mr.model.updateUBOs(0);\n                let origin = mr.model.updateUBOs;\n                mr.model.updateUBOs = function () {\n                    if (!this._localDataUpdated) return;\n                    origin.call(this)\n                }\n            })\n        }, 1000)\n    }\n}\n\n\n","import { _decorator, Component, Node, Vec3, v3, randomRangeInt } from 'cc';\nimport { Res } from '../../core/res/res';\nimport { ResCache } from '../../core/res/res-cache';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('DropItem')\nexport class DropItem extends Component {\n\n    itemName: string = '';\n\n    groupIndex = 0;\n\n    public init (name: string, effectIndex: number, _groupIndex: number) {\n\n        this.itemName = name;\n        this.node.name = name;\n        this.groupIndex = _groupIndex;\n        // Load Item.\n        var prefab = ResCache.Instance.getPrefab(name + '_pickup');\n        const dropNode = Res.inst(prefab, this.node.children[4], v3(0, 0, 0));\n        this.node.on('picked', this.picked, this);\n\n        // random drop effect.\n        const index = effectIndex;\n        this.node.children[index].active = true;\n\n\n    }\n\n    onDestroy () {\n        this.node.off('picked', this.picked, this);\n    }\n\n    public picked () {\n\n        Msg.emit('msg_remove_item', this.groupIndex);\n\n        // Remove object.\n        this.node.destroy();\n\n    }\n\n}\n\n","import { Component, Node, Quat, Vec3, _decorator } from 'cc';\nimport { EDITOR } from 'cc/env';\n\nconst { property, ccclass, executeInEditMode } = _decorator\n\n@ccclass('EditorCameraPlacer')\n@executeInEditMode\nexport class EditorCameraPlacer extends Component {\n    @property\n    _place = false;\n\n    @property\n    get place () {\n        return this._place;\n    }\n    set place (v) {\n        this._place = v;\n\n        if (EDITOR) {\n            let cameraNode: Node = (globalThis as any).cce.Camera._camera.node\n            if (v) {\n                this._oldPosition.set(cameraNode.worldPosition);\n                this._oldRotation.set(cameraNode.worldRotation);\n            }\n            else {\n                cameraNode.worldPosition = this._oldPosition;\n                cameraNode.worldRotation = this._oldRotation;\n            }\n        }\n    }\n\n    _oldPosition = new Vec3;\n    _oldRotation = new Quat;\n\n    update () {\n        if (EDITOR && this.place) {\n            let cameraNode: Node = (globalThis as any).cce.Camera._camera.node\n            cameraNode.worldPosition = this.node.worldPosition;\n            cameraNode.worldRotation = this.node.worldRotation;\n\n            (globalThis as any).cce.Engine.repaintInEditMode()\n        }\n    }\n}","import { EDITOR as _EDITOR } from 'cc/env';\n\nimport { log as cclog, warn as ccwarn, error as ccerror } from 'cc';\n\nexport const EDITOR = _EDITOR;\n\nexport const io = EDITOR && (window as any).require('socket.io');\nexport const ws = EDITOR && (window as any).require('ws');\nexport const path = EDITOR && (window as any).require('path');\nexport const fse = EDITOR && (window as any).require('fs-extra');\nexport const base642arraybuffer = EDITOR && (window as any).require('base64-arraybuffer');\nexport const Sharp = EDITOR && (window as any).require('sharp');\nexport const Buffer = EDITOR && (window as any).Buffer;\nexport const globby = EDITOR && (window as any).require('globby');\nexport const request = EDITOR && (window as any).require('request');\n\nglobalThis.fse = fse\nglobalThis.path = path\nglobalThis.globby = globby\n\nif (Sharp) {\n    Sharp.cache(false);\n}\n\nexport function formatPath (p: string) {\n    return p.replace(/\\\\/g, '/');\n}\n\nexport function relpaceExt (fspath: string, extname: string) {\n    let basename = path.basename(fspath).replace(path.extname(fspath), extname)\n    return path.join(path.dirname(fspath), basename);\n}\n\n\nexport const cce = EDITOR && (window as any).cce;\nexport const EditorExtends = EDITOR && (window as any).EditorExtends;\nexport const Editor = EDITOR && (window as any).Editor;\nexport const projectPath = EDITOR && formatPath(Editor.Project.path);\nexport const projectAssetPath = EDITOR && formatPath(path.join(projectPath, 'assets'));\nexport const projectTempPath = EDITOR && formatPath(path.join(projectPath, 'temp'));\n\n\nexport function log (...args: any[]) {\n    ccwarn(...args);\n}\nexport function warn (...args: any[]) {\n    ccwarn(...args);\n}\n\nexport function error (...args: any[]) {\n    ccerror(...args);\n}\n\nexport function download (url: string, path: string) {\n    return new Promise((resolve, reject) => {\n        request.head(url, (err: Error, res: any, body: any) => {\n            if (err) {\n                return reject(err)\n            }\n            request(url)\n                .pipe(fse.createWriteStream(path))\n                .on('close', () => {\n                    resolve(null)\n                })\n        })\n    })\n}\n\nexport function repaintInEditMode () {\n    cce.Engine.repaintInEditMode()\n}\n","export default class Electron {\n\n    static is_steam = false;\n\n    static counter = 0;\n\n    static get appUserID () {\n        return globalThis.remote ? globalThis.remote.app.getUserID() : '';\n    }\n\n    static get appUserPath () {\n        return globalThis.remote ? globalThis.remote.app.getPath('userData') : '';\n    }\n\n    static async sendAsync (name: string, data: any = undefined, call: Function = undefined) {\n        var call_data = await (window as any).electron?.ipcRenderer.invoke(name, data);\n        if (call !== undefined) {\n            call(call_data);\n        }\n    }\n\n    static send (name: string, data: any = undefined) {\n        var call_data = (window as any).electron?.ipcRenderer.invoke(name, data);\n        return call_data;\n    }\n\n    static A2C (name: string, data: any): void {\n        console.log('A2C:', name, data);\n    }\n}","export default class Event implements IEvent {\n    _listeners: any[][] = [];\n    _onceListeners: any[][] = [];\n\n    public on (cb: Function, target?: Object) {\n        let listeners = this._listeners;\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i][0] === cb && listeners[i][1] === target) {\n                return;\n            }\n        }\n        listeners.push([cb, target]);\n    }\n\n    public off (cb: Function, target?: Object) {\n        let listeners = this._listeners;\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i][0] === cb) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    public once (cb: Function, target?: Object) {\n        let listeners = this._onceListeners;\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i][0] === cb && listeners[i][1] === target) {\n                return;\n            }\n        }\n        listeners.push([cb, target]);\n    }\n\n    public invoke (a1?: any, a2?: any, a3?: any, a4?: any, a5?: any, a6?: any) {\n        var args: any[] = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n\n        let listeners = this._listeners;\n        for (let i = 0; i < listeners.length; i++) {\n            let l = listeners[i];\n            l[0].apply(l[1], args);\n        }\n\n        let onceListeners = this._onceListeners;\n        for (let i = 0; i < onceListeners.length; i++) {\n            let l = onceListeners[i];\n            l[0].apply(l[1], args);\n        }\n        onceListeners.length = 0;\n    }\n}","import { _decorator, Component, Node, Sprite, math, game } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FilSmooth')\nexport class FilSmooth extends Component {\n\n    fil_value: Sprite = Object.create(null);\n    value: number = 1;\n\n    @property\n    smooth: number = 10;\n\n    start() {\n        this.fil_value = this.getComponent(Sprite);\n    }\n\n    setValue(value: number) {\n        this.value = value;\n    }\n\n    update(deltaTime: number) {\n        var delta = Math.abs(this.fil_value.fillRange - this.value);\n        if (delta !== 0) {\n            this.fil_value.fillRange = math.lerp(this.fil_value.fillRange, this.value, game.deltaTime * this.smooth);\n            if (delta < 0.0001) this.fil_value.fillRange = this.value;\n        }\n    }\n\n}\n\n","import { _decorator, Component, Node, Vec3, Collider, ITriggerEvent, v3, math, game } from 'cc';\nimport { Game } from '../../logic/data/game';\nimport { UtilVec3 } from './util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ForceArea')\nexport class ForceArea extends Component {\n\n    @property(Vec3)\n    force: Vec3 = v3(0, 0, 0);\n\n    @property\n    posScale: Vec3 = v3(0, 4, 0);\n\n    _force: Vec3 = v3(0, 0, 0);\n\n    _collider: Collider;\n\n    __preload () {\n\n        this._collider = this.getComponent(Collider);\n        this._collider.on('onTriggerEnter', this.onTriggerEnter, this);\n        this._collider.on('onTriggerStay', this.onTriggerStay, this);\n\n    }\n\n    onEnable() {\n        var area_force = Game.Instance._currentGameNodeName === 'level';\n        this._collider.enabled = area_force;\n    }\n\n    forceRate (other: Node): Vec3 {\n        UtilVec3.copy(this._force, this.force);\n        if (this.posScale.x !== 0) this._force.x = this.calculate(other.worldPosition.x - this.node.worldPosition.x, this.posScale.x, this.force.x);\n        if (this.posScale.y !== 0) this._force.y = this.calculate(other.worldPosition.y - this.node.worldPosition.y, this.posScale.y, this.force.y);\n        if (this.posScale.z !== 0) this._force.z = this.calculate(other.worldPosition.z - this.node.worldPosition.z, this.posScale.z, this.force.z);\n\n        //if (this._force.x < 0) this._force.x = 0;\n        //if (this._force.y < 0) this._force.y = 0;\n        //if (this._force.z < 0) this._force.z = 0;\n\n        //this._force.multiply(this.force);\n\n        \n        return this._force.clone();\n    }\n\n    calculate (value: number, max: number, scale: number): number {\n        var a = value / max;\n        a = Math.log(a) * 2 + max;\n        if (a < 0) a = 0;\n        a = (max - a) / max + 11;\n        \n        return a;\n    }\n\n    onTriggerEnter (event: ITriggerEvent) {\n        event.otherCollider.node.emit('addAreaForce', this.forceRate(event.otherCollider.node));\n    }\n\n    onTriggerStay (event: ITriggerEvent) {\n        event.otherCollider.node.emit('addAreaForce', this.forceRate(event.otherCollider.node));\n    }\n\n}\n\n","import { BaseStage, } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString, Vec4, game, Material, director } from \"cc\";\nimport { getCameraUniqueID } from \"../utils/utils\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { settings } from \"./setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n@ccclass('ForwardPostStage')\nexport class ForwardPostStage extends BaseStage {\n    _materialName = 'blit-screen';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    // uniqueStage = true;\n\n    @property({ override: true })\n    name = 'ForwardPostStage'\n\n    @property({ override: true })\n    outputNames = ['ForwardPostColor']\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        const cameraID = getCameraUniqueID(camera);\n        const area = this.getRenderArea(camera);\n        let width = area.width;\n        let height = area.height;\n\n        const input0 = this.lastStage.slotName(camera, 0);\n        const slot0 = this.slotName(camera, 0);\n\n        passUtils.clearFlag = camera.clearFlag & gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== this.material) {\n            material = new renderer.MaterialInstance({\n                parent: this.material\n            })\n            this.materialMap.set(camera, material);\n        }\n\n        passUtils.material = material;\n\n        let shadingScale = this.finalShadingScale()\n        let isOffScreen = director.root.mainWindow !== camera.window;\n\n        if (!isOffScreen) {\n            width /= shadingScale;\n            height /= shadingScale;\n        }\n\n        passUtils.addRasterPass(width, height, 'post-process', `CameraPostprocessPass${cameraID}`)\n            .setViewport(area.x, area.y, width, height)\n            .setPassInput(input0, 'inputTexture')\n            .addRasterView(slot0, Format.RGBA8, isOffScreen)\n            .blitScreen(0)\n        // ppl.updateRenderWindow(slot0, camera.window);\n\n        this.renderProfiler(camera);\n    }\n}\n","import { CCString, director, geometry, gfx, pipeline, renderer, rendering, _decorator } from \"cc\";\nimport { CameraInfo, getCameraUniqueID, getLoadOpOfClearFlag, getRenderArea, validPunctualLightsCulling } from \"../utils/utils\";\nimport { BaseStage } from \"./base-stage\";\n\nconst { supportsR32FloatTexture } = pipeline\nconst { ShadowType, LightType, SKYBOX_FLAG, CSMLevel } = renderer.scene\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\n\nconst { ccclass, property } = _decorator\n\n\n@ccclass('custom.ForwardStage')\nexport class ForwardStage extends BaseStage {\n    _materialName = 'blit-screen';\n\n    @property({ override: true })\n    name = 'custom.ForwardStage'\n    @property({ override: true })\n    outputNames = ['ForwardColor', 'ForwardDepth']\n\n    buildShadowPass (passName: Readonly<string>,\n        ppl: rendering.Pipeline,\n        camera: renderer.scene.Camera, light: renderer.scene.Light, level: number,\n        width: Readonly<number>, height: Readonly<number>) {\n        const device = ppl.device;\n        const shadowMapName = passName;\n        if (!ppl.containsResource(shadowMapName)) {\n            const format = supportsR32FloatTexture(device) ? Format.R32F : Format.RGBA8;\n            ppl.addRenderTarget(shadowMapName, format, width, height, ResourceResidency.MANAGED);\n            ppl.addDepthStencil(`${shadowMapName}Depth`, Format.DEPTH_STENCIL, width, height, ResourceResidency.MANAGED);\n        }\n        const pass = ppl.addRasterPass(width, height, 'default');\n        pass.name = passName;\n\n        pass.addRasterView(shadowMapName, new RasterView('_',\n            AccessType.WRITE, AttachmentType.RENDER_TARGET,\n            LoadOp.CLEAR, StoreOp.STORE,\n            ClearFlagBit.COLOR,\n            new Color(1, 1, 1, camera.clearColor.w)));\n        pass.addRasterView(`${shadowMapName}Depth`, new RasterView('_',\n            AccessType.WRITE, AttachmentType.DEPTH_STENCIL,\n            LoadOp.CLEAR, StoreOp.DISCARD,\n            ClearFlagBit.DEPTH_STENCIL,\n            new Color(camera.clearDepth, camera.clearStencil, 0, 0)));\n        const rect = getRenderArea(new gfx.Rect, camera, width, height, light, level);\n        pass.setViewport(new Viewport(rect.x, rect.y, rect.width, rect.height));\n        const queue = pass.addQueue(QueueHint.RENDER_OPAQUE);\n        queue.addSceneOfCamera(camera, new LightInfo(light, level),\n            SceneFlags.SHADOW_CASTER);\n    }\n\n    buildShadowPasses (cameraName: string, camera: renderer.scene.Camera, ppl: rendering.Pipeline) {\n        validPunctualLightsCulling(ppl, camera);\n        const pipeline = ppl;\n        const shadowInfo = pipeline.pipelineSceneData.shadows;\n        const validPunctualLights = ppl.pipelineSceneData.validPunctualLights;\n        const cameraInfo = new CameraInfo();\n        const shadows = ppl.pipelineSceneData.shadows;\n        if (!shadowInfo.enabled || shadowInfo.type !== ShadowType.ShadowMap) { return cameraInfo; }\n        cameraInfo.shadowEnabled = true;\n        const _validLights: renderer.scene.Light[] = [];\n        let n = 0;\n        let m = 0;\n        for (; n < shadowInfo.maxReceived && m < validPunctualLights.length;) {\n            const light = validPunctualLights[m];\n            if (light.type === LightType.SPOT) {\n                const spotLight = light as renderer.scene.SpotLight;\n                if (spotLight.shadowEnabled) {\n                    _validLights.push(light);\n                    n++;\n                }\n            }\n            m++;\n        }\n\n        const { mainLight } = camera.scene!;\n        // build shadow map\n        const mapWidth = shadows.size.x;\n        const mapHeight = shadows.size.y;\n        if (mainLight && mainLight.shadowEnabled) {\n            cameraInfo.mainLightShadowNames[0] = `MainLightShadow${cameraName}`;\n            if (mainLight.shadowFixedArea) {\n                this.buildShadowPass(cameraInfo.mainLightShadowNames[0], ppl,\n                    camera, mainLight, 0, mapWidth, mapHeight);\n            } else {\n                const csmLevel = pipeline.pipelineSceneData.csmSupported ? mainLight.csmLevel : 1;\n                for (let i = 0; i < csmLevel; i++) {\n                    cameraInfo.mainLightShadowNames[i] = `MainLightShadow${cameraName}`;\n                    this.buildShadowPass(cameraInfo.mainLightShadowNames[i], ppl,\n                        camera, mainLight, i, mapWidth, mapHeight);\n                }\n            }\n        }\n\n        for (let l = 0; l < _validLights.length; l++) {\n            const light = _validLights[l];\n            const passName = `SpotLightShadow${l.toString()}${cameraName}`;\n            cameraInfo.spotLightShadowNames[l] = passName;\n            this.buildShadowPass(passName, ppl,\n                camera, light, 0, mapWidth, mapHeight);\n        }\n        return cameraInfo;\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        // hack: use fog uniform to set forward pipeline\n        director.root.pipeline.pipelineSceneData.fog.fogStart = 0;\n\n        const cameraID = getCameraUniqueID(camera);\n        const cameraName = `Camera${cameraID}`;\n\n        // const shadowInfo = this.buildShadowPasses(cameraName, camera, ppl);\n        const area = this.getRenderArea(camera);\n        const width = area.width;\n        const height = area.height;\n\n        let isOffScreen = true;//director.root.mainWindow !== camera.window;\n\n        const slot0 = this.slotName(camera, 0);\n        const slot1 = this.slotName(camera, 1);\n        if (!ppl.containsResource(slot0)) {\n            if (!isOffScreen) {\n                ppl.addRenderTexture(slot0, Format.RGBA8, width, height, camera.window);\n            } else {\n                ppl.addRenderTarget(slot0, Format.RGBA16F, width, height, ResourceResidency.MANAGED);\n            }\n            ppl.addDepthStencil(slot1, Format.DEPTH_STENCIL, width, height, ResourceResidency.MANAGED);\n        }\n\n        if (!isOffScreen) {\n            ppl.updateRenderWindow(slot0, camera.window);\n        } else {\n            ppl.updateRenderTarget(slot0, width, height);\n            ppl.updateDepthStencil(slot1, width, height);\n        }\n\n        const pass = ppl.addRasterPass(width, height, 'default');\n        pass.name = `${this.name}_${cameraID}`;\n        // pass.setViewport(new Viewport(area.x, area.y, width, height));\n\n        // for (const dirShadowName of shadowInfo.mainLightShadowNames) {\n        //     if (ppl.containsResource(dirShadowName)) {\n        //         const computeView = new ComputeView();\n        //         forwardPass.addComputeView(dirShadowName, computeView);\n        //     }\n        // }\n        // for (const spotShadowName of shadowInfo.spotLightShadowNames) {\n        //     if (ppl.containsResource(spotShadowName)) {\n        //         const computeView = new ComputeView();\n        //         forwardPass.addComputeView(spotShadowName, computeView);\n        //     }\n        // }\n\n        const passView = new RasterView('_',\n            AccessType.WRITE, AttachmentType.RENDER_TARGET,\n            isOffScreen ? LoadOp.CLEAR : getLoadOpOfClearFlag(camera.clearFlag, AttachmentType.RENDER_TARGET),\n            StoreOp.STORE,\n            camera.clearFlag,\n            new Color(0, 0, 0, 0));\n        const passDSView = new RasterView('_',\n            AccessType.WRITE, AttachmentType.DEPTH_STENCIL,\n            isOffScreen ? LoadOp.CLEAR : getLoadOpOfClearFlag(camera.clearFlag, AttachmentType.DEPTH_STENCIL),\n            StoreOp.STORE,\n            camera.clearFlag,\n            new Color(camera.clearDepth, camera.clearStencil, 0, 0));\n        pass.addRasterView(slot0, passView);\n        pass.addRasterView(slot1, passDSView);\n\n        pass.addQueue(QueueHint.RENDER_OPAQUE)\n            .addSceneOfCamera(camera, new LightInfo(),\n                SceneFlags.OPAQUE_OBJECT | SceneFlags.PLANAR_SHADOW | SceneFlags.CUTOUT_OBJECT\n                | SceneFlags.DEFAULT_LIGHTING | SceneFlags.DRAW_INSTANCING);\n        pass.addQueue(QueueHint.RENDER_TRANSPARENT)\n            .addSceneOfCamera(camera, new LightInfo(), SceneFlags.UI | SceneFlags.TRANSPARENT_OBJECT | SceneFlags.GEOMETRY);\n    }\n}\n","import { BaseStage } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString, Vec4, game, Material } from \"cc\";\nimport { getCameraUniqueID } from \"../utils/utils\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { settings } from \"./setting\";\nimport { JSB } from \"cc/env\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n@ccclass('FSRStage')\nexport class FSRStage extends BaseStage {\n    _materialName = 'fsr';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    uniqueStage = true;\n\n    @property({ override: true })\n    name = 'FSRStage'\n\n    @property\n    sharpness = 0.2\n\n    @property({ override: true })\n    outputNames = ['FSRColor']\n\n    checkEnable () {\n        let enable = this.enable && !!HrefSetting.fsr;\n        return enable\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        const cameraID = getCameraUniqueID(camera);\n        const area = this.getRenderArea(camera);\n        const inputWidth = area.width;\n        const inputHeight = area.height;\n\n        let shadingScale = this.finalShadingScale()\n        const outWidth = Math.floor(inputWidth / shadingScale);\n        const outHeight = Math.floor(inputHeight / shadingScale);\n\n        passUtils.clearFlag = gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== this.material) {\n            material = new renderer.MaterialInstance({\n                parent: this.material\n            })\n            this.materialMap.set(camera, material);\n        }\n\n        passUtils.material = material;\n\n        material.setProperty('fsrParams', new Vec4(this.sharpness, 0, 0, 0))\n        material.setProperty('texSize',\n            new Vec4(\n                inputWidth, inputHeight,\n                outWidth, outHeight\n            )\n        );\n\n\n        const input0 = this.lastStage.slotName(camera, 0);\n        const easu = 'FSR_EASU'\n        passUtils.addRasterPass(outWidth, outHeight, 'post-process', `CameraFSR_EASU_Pass${cameraID}`)\n            .setViewport(area.x, area.y, outWidth, outHeight)\n            .setPassInput(input0, 'outputResultMap')\n            .addRasterView(easu, Format.RGBA8)\n            .blitScreen(0);\n\n        const slot0 = this.slotName(camera, 0);\n        passUtils.addRasterPass(outWidth, outHeight, 'post-process', `CameraFSR_RCAS_Pass${cameraID}`)\n            .setViewport(area.x, area.y, outWidth, outHeight)\n            .setPassInput(easu, 'outputResultMap')\n            .addRasterView(slot0, Format.RGBA8)\n            .blitScreen(1);\n\n        settings.tonemapped = true;\n    }\n}\n","export class fun {\n\n    public static delay(f: Function, time:number) {\n        setTimeout(f, time * 1000);\n    }\n\n}","import { _decorator, Component, Node, geometry, PhysicsSystem, v3, Line, Vec3, Graphics, ParticleSystem, CurveRange } from 'cc';\nimport { UtilVec3 } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxActorFallPoint')\nexport class FxActorFallPoint extends Component {\n\n    _ray: geometry.Ray = new geometry.Ray();\n    _height = 0;\n    _line: Node;\n    _fxHit: Node;\n    _hitPos: Vec3;\n\n    @property(ParticleSystem)\n    particle_high_light:ParticleSystem = null\n\n    @property\n    rate_high_light = 1.0;\n\n    start () {\n        this._line = this.node.getChildByName('line');\n        this._fxHit = this.node.getChildByName('hitpoint');\n        this._hitPos = v3(0, 0, 0);\n        this._ray.d.x = 0;\n        this._ray.d.y = -1;\n        this._ray.d.z = 0;\n    }\n\n    update (deltaTime: number) {\n        this.detectPoint();\n    }\n\n    detectPoint () {\n        UtilVec3.copy(this._ray.o, this.node.worldPosition);\n        if (PhysicsSystem.instance.raycastClosest(this._ray)) {\n            var res = PhysicsSystem.instance.raycastClosestResult;\n            this._height = this.node.worldPosition.y - res.hitPoint.y;\n            UtilVec3.copy(this._hitPos, res.hitPoint);\n            this._hitPos.y += 0.05;\n            this.particle_high_light.startSpeed.constant = this._height * this.rate_high_light;//this._curverange;\n        } else {\n            this._height = 0;\n        }\n        \n        const isShow = this._height > 0.3;\n        this._line.active = isShow;\n        this._fxHit.active = isShow;\n        this._line.setScale(1, this._height * 3, 1);\n        this._fxHit.setWorldPosition(this._hitPos);\n    }\n\n}\n\n","import { _decorator, Component, ParticleSystem } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxAutoRemove')\nexport class FxAutoRemove extends Component {\n\n    @property\n    delayTime = 0.5;\n\n    start () {\n\n        const particles = this.node?.getComponentsInChildren(ParticleSystem);\n\n        for (let i = 0; i < particles.length; i++) {\n            particles[i].play();\n        }\n\n    }\n\n    update (deltaTime: number) {\n\n        this.delayTime -= deltaTime;\n        if (this.delayTime < 0) {\n            deltaTime = 9999;\n            this.node.destroy();\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node, ParticleSystem, resources } from 'cc';\nimport { fun } from '../util/fun';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxBase')\nexport class FxBase extends Component {\n\n    @property\n    destroyTime = 3;\n    particles:ParticleSystem[] | undefined;\n\n    start() {\n        this.particles = this.node?.getComponentsInChildren(ParticleSystem);\n    }\n\n    play() {\n        for (let i = 0; i < this.particles!.length; i++) {\n            const particle = this.particles![i];\n            particle.stop();\n            particle.play();\n        }\n    }\n\n    remove() {\n        fun.delay(()=>{\n            this.node.destroy()\n        }, this.destroyTime);\n    }\n}","import { _decorator, Component, error, Node, randomRange, Vec3 } from 'cc';\nimport { Res } from '../../core/res/res';\nimport { fun } from '../../core/util/fun';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxBulletTracer')\nexport class FxBulletTracer extends Component {\n\n    @property\n    poolCount = 5;\n\n    @property\n    segment = 5;\n\n    @property\n    hiddenTime = 0.05;\n\n    pool:Array<Node> | undefined;\n\n    __preload() {\n        this.node.on('init', this.init, this);\n    }\n\n    init() {\n\n        this.pool = new Array(this.poolCount);\n        const firstChild = this.node.children[0];\n        this.pool[0] = firstChild;\n        firstChild.active = false;\n\n        for(let i = 1; i < this.poolCount; i++) {\n            this.pool[i] = Res.instNode(firstChild, this.node);\n        }\n\n        this.node.on('setTracer', this.setTracer, this);\n    }\n\n    onDestroy() {\n        this.node.off('init', this.init, this);\n        this.node.off('setTracer', this.setTracer, this);\n    }\n\n    public setTracer(start:Vec3, end:Vec3) {\n\n        const endPosition = end.clone();\n        const direction = end.clone().subtract(start).normalize();\n        const length = endPosition.subtract(start).length();\n\n        const eachSegment = length/this.poolCount;\n        const count = this.calculateSegment(length);\n        const startPosition = start.clone();\n\n        for(let i = 0; i < count; i++) {\n            const currentLength = eachSegment;\n            const currentNode = this.pool![i];\n            currentNode.active = true;\n            currentNode.setPosition(startPosition);\n            currentNode.lookAt(end);\n            currentNode.setScale(0.3, 1, randomRange(0.3, currentLength));\n            startPosition.add(direction.clone().multiplyScalar(currentLength));\n        }\n\n        fun.delay(this.hiddenLines.bind(this), this.hiddenTime);\n\n    }\n\n    calculateSegment(length:number):number {\n        let count = Math.round(length / this.segment);\n        if(count > this.poolCount) count = this.poolCount;\n        return count;\n    }\n\n    hiddenLines() {\n        for(let i = 0; i < this.poolCount; i++) this.pool![i].active = false;\n    }\n}\n\n","import { _decorator, Component, Node, randomRange } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxCarRandomMove')\nexport class FxCarRandomMove extends Component {\n\n    @property\n    offsetY = 54;\n\n    @property\n    intervalTime = 0;\n\n    @property\n    count = 5;\n\n    @property\n    minTime = 3;\n\n    @property\n    maxTime = 10;\n\n    start () {\n        this.intervalTime = randomRange(this.minTime, this.maxTime);\n        this.node.setPosition(0, this.offsetY, 0);\n    }\n\n    update (deltaTime: number) {\n\n        this.intervalTime -= deltaTime;\n        if (this.intervalTime < 0) {\n            this.intervalTime = randomRange(this.minTime, this.maxTime);\n            for (let i = 0; i < this.node.children.length; i++) {\n                this.node.children[i].emit('msg_node_fly_car');\n            }\n        }\n\n    }\n}\n\n","import { _decorator, Component, Animation, randomRange, randomRangeInt, random } from 'cc';\nimport { Sound } from '../../core/audio/sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxFlyCar')\nexport class FxFlyCar extends Component {\n\n    @property\n    maxTime = 5;\n\n    @property\n    minTime = 1;\n\n    animation: Animation | undefined | null;\n\n    waitTime = 0;\n\n    start () {\n        this.animation = this.node.children[0].getComponent(Animation);\n        this.node.on('msg_node_fly_car', () => {\n            this.waitTime = randomRange(this.minTime, this.maxTime);\n        })\n    }\n\n    update (deltaTime: number) {\n\n        this.waitTime -= deltaTime;\n        if (this.waitTime < 0) {\n            this.waitTime = 9999999999;\n            this.node.setRotationFromEuler(0, randomRange(0, 360), 0);\n            const y = randomRangeInt(0, 5);\n            this.node.setPosition(0, y, 0);\n            this.animation?.stop();\n            this.animation?.play();\n            this.animation!.defaultClip!.speed = randomRange(0.2, 0.6);\n            if (random() > 0.5 && y < 7) Sound.on('sfx_car_fly', randomRange(0.3, 1));\n        }\n\n    }\n\n}\n\n","import { _decorator, Component, Node, SkinnedMeshRenderer, v4, v3, Vec3, clamp01, Material } from 'cc';\nimport { UtilVec3 } from '../../core/util/util';\nimport { TestColliderMeshSwitch } from '../../test/test-collider-mesh-switch';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxGhostVertex')\nexport class FxGhostVertex extends Component {\n\n    @property\n    intensity = 4;\n\n    private materials: Array<Material> = [];\n\n    private directionUniform = v4();\n    private direction: Vec3 = v3();\n\n    private currentPosition: Vec3 | undefined;\n    private lastPosition: Vec3 | undefined;\n\n    private t = 0;\n\n    start() {\n        this.currentPosition = this.node.position.clone();\n        this.lastPosition = this.currentPosition.clone();\n\n        let components = this.node.getComponentsInChildren(SkinnedMeshRenderer);\n        components.forEach(\n            (comp) => {\n                this.materials.push(comp.material!);\n            }\n        );\n    }\n\n    update(deltaTime: number) {\n        UtilVec3.copy(this.currentPosition!, this.node.worldPosition);\n\n        if (this.currentPosition!.equals(this.lastPosition!)) {\n            this.t = 0;\n        }\n\n        this.t += deltaTime;\n        this.t = clamp01(this.t);\n        Vec3.lerp(this.lastPosition!, this.lastPosition!, this.currentPosition!, this.t);\n        Vec3.subtract(this.direction, this.lastPosition!, this.currentPosition!).multiplyScalar(this.intensity);\n\n        this.materials.forEach(\n            (material: Material) => {\n                let handle = material.passes[0].getHandle(\"direction\")\n                material.passes[0].getUniform(handle, this.directionUniform);\n                this.directionUniform.set(\n                    this.direction.x,\n                    this.direction.y,\n                    this.direction.z,\n                    this.directionUniform.w,\n                );\n                material.passes[0].setUniform(handle, this.directionUniform);\n            }\n        );\n    }\n}\n\n","import { _decorator, Component, Node, MeshRenderer, Mesh, SkinnedMeshRenderer } from 'cc';\nimport { Res } from '../../core/res/res';\nimport { UtilNode } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxGhost')\nexport class FxGhost extends Component {\n\n    @property\n    count = 5;\n\n    @property(Node)\n    target:Node|undefined;\n\n    @property\n    simpleTime = 1;\n\n    meshRenders:SkinnedMeshRenderer[] | undefined;\n\n    _intervalTime = 0;\n\n    _ghostItems:GhostNode[] = [];\n\n    _eachCount = 0;\n\n    _index = 0;\n\n    _total = 0;\n\n    start() {\n\n        this.meshRenders = this.target!.getComponentsInChildren(SkinnedMeshRenderer);\n\n        console.log(this.meshRenders);\n\n        this._eachCount = this.meshRenders.length;\n\n        const total = this.count * this._eachCount;\n\n        this._total = total;\n\n        this._ghostItems = Array<GhostNode>(total);\n\n        const itemNode = this.node!.children[0];\n        this._ghostItems[0] = {\n            node:itemNode,\n            meshRender:UtilNode.getComponent(itemNode, MeshRenderer),\n        }\n        for(let i = 1; i < total; i++) {\n            const newNode = Res.instNode(itemNode, this.node);\n            this._ghostItems[i] = {\n                node:newNode,\n                meshRender:UtilNode.getComponent(newNode, MeshRenderer),\n            }\n        }\n\n        console.log(this.meshRenders, this._ghostItems);\n\n    }\n\n    update(deltaTime: number) {\n\n        this._intervalTime -= deltaTime;\n        if(this._intervalTime < 0) {\n            this.simpleMeshInfo();\n            this._intervalTime = this.simpleTime;\n        }\n        \n    }\n\n    simpleMeshInfo() {\n        for(let i = 0; i < this._eachCount; i++) {\n            const mesh = this.meshRenders![i].mesh;\n            const node = this.meshRenders![i].node;\n            if(mesh != null) {\n                const copyMesh = Object.assign(mesh);\n                const ghost = this._ghostItems[this._index];\n                ghost.meshRender.mesh = copyMesh;\n                ghost.node.setPosition(this._index, node.worldPosition.y, node.worldPosition.z);\n                ghost.node.setWorldRotation(node.getWorldRotation());\n                this._index++;\n                console.log(this._index);\n                if(this._index >= this._total) this._index = 0;\n            }else{\n                console.warn(`${this.meshRenders![i].node.name} Can not find mesh`)\n            }\n        }\n    }\n}\n\nexport type GhostNode = {\n    node: Node,\n    meshRender: MeshRenderer,\n}","import { _decorator, Component, Node, ParticleSystem } from 'cc';\nimport { fun } from '../util/fun';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxGroup')\nexport class FxGroup extends Component {\n\n    _particles:ParticleSystem[] | undefined;\n\n    _loop:boolean = true;\n\n    @property\n    delayTime = 3;\n\n    start() {\n\n        this._particles = this.node.getComponentsInChildren(ParticleSystem);\n        this.node.on('setDestroy', this.setDestroy, this);\n        this.play(true);\n\n        if (this._particles === undefined || this._particles.length <= 0) {\n            throw new Error(`This node ${this.node.name} can not find particles.`);\n        }\n\n    }\n\n    onDestroy() {\n        this.node.off('setDestroy', this.setDestroy, this);\n    }\n\n    setLoop(value:boolean) {\n\n        for(let i = 0; i < this._particles!.length; i++) {\n            this._particles![i].loop = value;\n        }\n        this._loop = value\n    }\n\n    setEnable(value:boolean) {\n        for(let i = 0; i < this._particles!.length; i++) {\n            this._particles![i].enabled = value;\n        }\n    }\n\n\n    stop(value:boolean) {\n        for(let i = 0; i < this._particles!.length; i++) {\n            this._particles![i].stop();\n        }\n    }\n\n    play(value:boolean) {\n        for(let i = 0; i < this._particles!.length; i++) {\n            this._particles![i].play();\n        }\n    }\n\n    setDestroy() {\n\n        this.setLoop(false);\n        fun.delay(()=>{\n            this.node?.destroy();\n        }, this.delayTime);\n\n    }\n\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { fx } from './fx';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxInit')\nexport class FxInit extends Component {\n\n    start() {\n        fx.init(this.node);\n    }\n\n}\n\n","import { _decorator, Color, Component, Material, math, MeshRenderer, Node, randomRange, randomRangeInt } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxLightFlash')\nexport class FxLightFlash extends Component {\n\n    matLight:Material | undefined | null;\n\n    lightColor:Color = new Color(255, 255, 255, 255);\n\n    lightValueMax = 10;\n\n    lightValueMin = 200;\n\n    length = 0;\n\n    flashTimes = 3;\n\n    value = 0;\n\n    t = 0;\n\n    smooth = 10;\n\n    isFlash = false;\n\n    start() {\n\n        this.matLight = this.node.getComponent(MeshRenderer)?.materials[0];\n\n        this.onFlash();\n\n    }\n\n    onFlash() {\n\n        this.flashTimes = randomRangeInt(1, 5);\n\n        this.lightValueMax = 255;\n\n        this.lightValueMin = randomRangeInt(180, 200);\n\n        this.length = this.lightValueMax - this.lightValueMin;\n\n        this.value = this.lightValueMax;\n\n    }\n\n    update(deltaTime: number) {\n\n        this.t += deltaTime;\n        \n        this.value = math.pingPong(this.t * this.smooth, this.length) + this.lightValueMin;\n        this.lightColor.a = this.value;\n        this.lightColor.g = this.value;\n        this.lightColor.b = this.value;\n        this.matLight?.setProperty('emissive', this.lightColor);\n        \n    }\n}\n\n","import { _decorator, Component, Node, v3, Vec2, Vec3 } from 'cc';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FxRayLine')\nexport class FxRayLine extends Component {\n\n    direction:Vec3 = v3(0, 0, 0);\n\n    public setRayLine(start:Vec3, end:Vec3) {\n\n        UtilVec3.copy(this.direction, end);\n        this.direction.subtract(start);\n        const length = this.direction.length();\n        //this.node.lookAt(this.direction);\n        this.node.setScale(0.1, 1, length);\n\n    }\n}\n\n","import { _decorator, Node, ParticleSystem, sys, Vec3 } from 'cc';\nimport { Res } from '../res/res';\nimport { ResCache } from '../res/res-cache';\nimport { UtilNode } from '../util/util';\nimport { FxBase } from './fx-base';\nconst { ccclass, property } = _decorator;\n\nlet close_blood_fx = true;\n\n@ccclass('fx')\nexport class fx {\n\n    public static node: Node;\n\n    public static init (node: Node) {\n        this.node = node;\n    }\n\n    public static on (name: string, pos: Vec3) {\n\n        if (sys.platform == sys.Platform.IOS && name.includes('fx_hit')) {\n            return;\n        }\n\n        if (close_blood_fx)\n            if (name == 'fx_hit_body') return;\n\n        var prefab = ResCache.Instance.getPrefab(name);\n        var newFx = Res.inst(prefab, this.node, pos);\n    }\n\n    public static play (node: Node, name: string) {\n        const fxNode = UtilNode.find(node, name);\n        const fx = fxNode.getComponent(FxBase);\n        fx?.play();\n    }\n\n    public static playLoop (node: Node, name: string, isLoop: boolean) {\n        const pNode = UtilNode.find(this.node, name);\n        var particles = pNode?.getComponentsInChildren(ParticleSystem);\n        if (particles === undefined) {\n            console.warn(` effect can not find ${name}`);\n            return;\n        }\n        for (let i = 0; i < particles.length; i++) {\n            let p = particles[i];\n            p.loop = isLoop;\n            if (isLoop) p.play();\n        }\n    }\n\n}\n\n","import { BaseStage } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString, Vec4, game, Material, input, EventTouch, EventMouse, Vec2, director } from \"cc\";\nimport { getCameraUniqueID } from \"../utils/utils\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { settings } from \"./setting\";\nimport { EDITOR } from \"cc/env\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\nlet pointSampler = new gfx.Sampler(new gfx.SamplerInfo(\n    gfx.Filter.POINT, gfx.Filter.POINT\n), 0);\n(pointSampler as any).custom = true;\n\n@ccclass('FxaaStage')\nexport class FxaaStage extends BaseStage {\n    _materialName = 'fxaa';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    uniqueStage = true;\n\n    @property({ override: true })\n    name = 'FxaaStage'\n\n    @property({ override: true })\n    outputNames = ['FxaaStageColor']\n\n    checkEnable () {\n        return super.checkEnable() && !!HrefSetting.fxaa;\n    }\n\n    _offset = new Vec2\n    texSize = new Vec4\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        const cameraID = getCameraUniqueID(camera);\n        const area = this.getRenderArea(camera);\n        const width = area.width;\n        const height = area.height;\n\n        passUtils.clearFlag = gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== this.material) {\n            material = new renderer.MaterialInstance({\n                parent: this.material\n            })\n            this.materialMap.set(camera, material);\n        }\n\n        material.setProperty('texSize', this.texSize.set(width, height, 0, 0))\n\n        passUtils.material = material;\n\n        const input0 = this.lastStage.slotName(camera, 0);\n        const slot0 = this.slotName(camera, 0);\n        passUtils.addRasterPass(width, height, 'post-process', `Camera_Fxaa_Pass${cameraID}`);\n\n        passUtils.setViewport(area.x, area.y, width, height)\n            .setPassInput(input0, 'inputTex')\n            .addRasterView(slot0, Format.RGBA8)\n            .blitScreen(0)\n            .version()\n\n    }\n}\n","import { Color, lerp, math, Quat, v3, Vec2, Vec3 } from \"cc\";\nimport { Gizmo } from \"./util\";\n\nexport class GMath {\n\n    public static uuid () {\n\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n\n    }\n\n    // Clamps value between min and max and returns value.\n    // Set the position of the transform to be that of the time\n    // but never less than 1 or more than 3\n    //\n    public static clamp (value: number, min: number, max: number): number {\n        if (value < min)\n            value = min;\n        else if (value > max)\n            value = max;\n        return value;\n    }\n\n    // Gradually changes a value towards a desired goal over time.\n    public static smoothDamp (current: number, target: number, currentVelocity: number, smoothTime: number, deltaTime: number): [number, number] {\n\n        var maxSpeed = Number.POSITIVE_INFINITY;\n        // Based on Game Programming Gems 4 Chapter 1.10\n        smoothTime = Math.max(0.0001, smoothTime);\n        var omega = 2 / smoothTime;\n        var x = omega * deltaTime;\n        var exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n        var change = current - target;\n        var originalTo = target;\n\n        // Clamp maximum speed\n        var maxChange = maxSpeed * smoothTime;\n        change = GMath.clamp(change, -maxChange, maxChange);\n        target = current - change;\n\n        var temp = (currentVelocity + omega * change) * deltaTime;\n        currentVelocity = (currentVelocity - omega * temp) * exp;\n        var output = target + (change + temp) * exp;\n\n        // Prevent overshooting\n        if (originalTo - current > 0 === output > originalTo) {\n            output = originalTo;\n            currentVelocity = (output - originalTo) / deltaTime;\n        }\n\n        return [output, currentVelocity];\n    }\n\n    static lerpSmooth (value: number, target: number, rate: number, dt: number) {\n        return lerp(target, value, Math.exp(-rate * dt))\n    }\n\n    static range(max:number, min:number, value:number) {\n        if(value > max) return max;\n        if(value < min) return min;\n        return value;\n    }\n\n    public static StretchedBillboardAngle(upward:Vec3, current:Vec3, target:Vec3, nodeForward:Vec3):number | undefined {\n\n        const targetForward = target.clone().subtract(current);\n       \n        const costValue = Vec3.dot(targetForward, nodeForward);\n\n        const projectPoint = nodeForward.clone().multiplyScalar(costValue);\n\n        const projectForward = target.clone().subtract(projectPoint);\n\n        Gizmo.drawLine(Vec3.ZERO, upward.clone().multiplyScalar(4), Color.RED);\n\n        Gizmo.drawLine(Vec3.ZERO, targetForward.clone().multiplyScalar(4), Color.YELLOW);\n\n        Gizmo.drawLine(Vec3.ZERO, nodeForward.clone().multiplyScalar(4), Color.YELLOW);\n\n        Gizmo.drawBox(projectPoint, v3(0.1, 0.1, 0.1), Color.BLUE);\n\n        Gizmo.drawLine(projectPoint, projectForward.clone().add(projectPoint), Color.GREEN);\n\n        Gizmo.drawLine(Vec3.ZERO, projectForward, Color.GREEN);\n\n        const angleForward = v3(1, 0, 0);\n\n        Gizmo.drawLine(Vec3.ZERO, angleForward, Color.MAGENTA);\n\n        ///const side = -Math.sign(targetForward.clone().cross(upward).x);\n\n        const angle = math.toDegree(Vec3.angle(projectForward, angleForward));\n\n        console.log(angle);\n\n        return target.y > current.y ? angle - 90 :  - angle - 90;\n        \n    }\n\n}\n\nexport class GVec3 {\n\n    public static smoothDamp (current: Vec3, target: Vec3, currentVelocity: Vec3, smoothTime: number, deltaTime: number) {\n\n        var x = GMath.smoothDamp(current.x, target.x, currentVelocity.x, smoothTime, deltaTime);\n        var y = GMath.smoothDamp(current.y, target.y, currentVelocity.y, smoothTime, deltaTime);\n        var z = GMath.smoothDamp(current.z, target.z, currentVelocity.z, smoothTime, deltaTime);\n\n        current.x = x[0];\n        current.y = y[0];\n        current.z = z[0];\n\n        target.x = x[1];\n        target.y = y[1];\n        target.z = z[1];\n\n    }\n\n    static lerpSmooth (value: Vec3, target: Vec3, rate: number, dt: number) {\n        value.x = GMath.lerpSmooth(target.x, value.x, rate, dt)\n        value.y = GMath.lerpSmooth(target.y, value.y, rate, dt)\n        value.z = GMath.lerpSmooth(target.z, value.z, rate, dt)\n\n        return value;\n    }\n}","import { Director, director, Scene } from \"cc\";\nimport { Msg } from \"../msg/msg\";\nimport { ILoadMsg } from \"../../logic/ui/ui-loading\";\nimport { ResCache } from \"../res/res-cache\";\n\nexport class GScene {\n\n    public static isLoadScene = false;\n\n    public static isPreload = false;\n\n    public static msg: ILoadMsg = {\n        id: 100,\n        action: 'load scene',\n        current: '',\n        wait_count: 1,\n        count: 1,\n    }\n\n\n    public static Load (name: string, onload: () => void) {\n        GScene.isLoadScene = true;\n        Msg.emit('pool_recycle');\n\n        /*\n        this.msg.current = name;\n        this.msg.wait_count = 1;\n        this.msg.count = 1;\n        Msg.emit('msg_loading',this.msg);\n        */\n\n        director.loadScene(name, (error: Error | null, scene?: Scene) => {\n            if (error) {\n                throw new Error(`Load Scene Error.`);\n            }\n            if (scene) {\n                onload();\n                GScene.isLoadScene = false;\n                ResCache.Instance.removeLoad();\n                //this.msg.count--;\n            } else {\n                console.warn('Can not load scene. - ' + name);\n            }\n        });\n    }\n\n}","import { _decorator, Component, Node, Label, Sprite, Button, EditBox, Toggle, Slider } from 'cc';\nimport { FilSmooth } from '../../core/ui/fil-smooth';\nconst { ccclass, property } = _decorator;\n\nexport type type_x_y = {\n    x: number,\n    y: number,\n}\n\nexport type KeyAnyType = {\n    [key:string]:any;\n}\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { Node, find, game } from \"cc\";\nimport { Action } from \"../../core/action/action\";\nimport { Singleton } from \"../../core/pattern/singleton\";\nimport { UI } from '../../core/ui/ui';\nimport { Bind } from './bind'\nimport { Local } from \"../../core/localization/local\";\nimport { Save } from \"./save\";\nimport { Msg } from \"../../core/msg/msg\";\nimport { Stack } from \"../../core/util/data-structure\";\nimport { Level } from \"../level/level\";\nimport { Sound } from \"../../core/audio/sound\";\nimport { Notify } from \"../../core/io/notify\";\nimport { GameQuality as GameQuality } from \"./GameQuality\";\n\nimport * as dataCore from \"./data-core\";\nimport { BindUI } from \"../../core/ui/ui-base\";\n\nexport class Game extends Singleton {\n\n    // Action objects are used to execute the current set of actions.\n    _action: Action | undefined;\n\n    // The stack collection is used to manage the current node order.\n    _stack: Stack<string> = new Stack(5);\n\n    // The key-value collection is used to store all the game node data.\n    _nodes: { [key: string]: any } = {};\n\n    // Game data object to store static game data.\n    _data: { [key: string]: any } = {};\n\n    // If or not the game is initialized, true is initialized, false is not initialized.\n    _isInit = false;\n\n    // Total game time, used to store the total time the game has been running. \n    _totalGameTime = 0;\n\n    // The next storage time point is used to control the event interval control for automatic storage. \n    _nextSaveTime = 0;\n\n    // Current game node name, used to record the current game node name. \n    _currentGameNodeName = '';\n\n    // The root node of all pool objects game runtime.\n    _poolNode: Node | null | undefined;\n\n    // Safe time for back\n    backSafeTime = 0;\n\n    public init (): void {\n\n        // Find the root node of all pool objects.\n        this._poolNode = find('init')?.getChildByName('objects-pool');\n\n        // Initialize the data core.\n        dataCore.Init();\n\n        // Initialize local storage.\n        Save.Instance.init();\n\n        // Initialize the game data.\n        this._data = dataCore.DataGameInst._data;\n\n        // Initialize game action data.\n        this._action = new Action(this._data.action_data);\n\n        // Get the game node data.\n        this._nodes = this._data['nodes'];\n\n        // Initialize the game quality.\n        GameQuality.Instance.init();\n\n        // Initialize the sound manager.\n        Sound.init();\n\n        // Initialize localization.\n        Local.Instance.init();\n\n        // Initialize the level object.\n        Level.Instance.init();\n\n        // Initialize the UI binding.\n        BindUI.init();\n\n        // Initialize the binder.\n        Bind.Instance.initData(this._data['events']);\n\n        // Initialize the UI management object.\n        UI.Instance.init();\n\n        // Register game node stack operation method.\n        Msg.on('push', (key: string) => { Game.Instance.push(key); });\n        Msg.on('root', (key: string) => { Game.Instance.root(key); });\n        Msg.on('next', this.next.bind(this));\n        Msg.on('back', this.back.bind(this));\n\n        // Push the game initial node into the stack data.\n        this.push(this._data['start_node']);\n\n        //Set game initialization to true.\n        this._isInit = true;\n\n        // Check if a message currently exists. \n        // Why it is detected after initialization: because messages may not be displayed properly during initialization.\n        Notify.Instance.check_notify();\n\n    }\n\n    /**\n     * Jump to the next game node. \n     */\n    public next (): void {\n        var cur = this._stack.cur();\n        const nextAction = this._nodes[cur].next;\n        if (nextAction) this.push(nextAction);\n    }\n\n    /**\n     * Return to the previous game node.\n     */\n    public back (): void {\n        if (game.totalTime - this.backSafeTime < 50) return;\n        this.backSafeTime = game.totalTime;\n        const preNode = this._stack.pop();\n        this._action!.off(preNode);\n    }\n\n    /**\n     * Returns to the game root node corresponding to the name.\n     * @param name \n     */\n    public root (name: string): void {\n        var size = this._stack.size() - 1;\n        for (let i = 0; i < size - 1; i++) {\n            let pre = this._stack.pop();\n            this._action!.off(pre);\n        }\n    }\n\n    /**\n     * Pushes a new game node.\n     * @param name node name.\n     */\n    public push (name: string) {\n        this._currentGameNodeName = name;\n        if (!this._nodes[name].is_pop && this._stack.size() > 0) {\n            var pre = this._stack.pop();\n            this._action!.off(pre);\n        }\n        this._stack.push(name);\n        this._action!.on(name);\n    }\n\n    public update (deltaTime: number): void {\n\n        // If initialization false returns, initialization success continues.\n        if (!this._isInit) return;\n\n        //Increase the game time, The accumulated time is the length of each frame.\n        this._totalGameTime += deltaTime;\n\n        // Update the game action logic every frame.\n        Game.Instance._action.update(deltaTime);\n\n        // Update the level logic every frame.\n        Level.Instance.update(deltaTime);\n\n        // Update the binder logic every frame.\n        Bind.Instance.update(deltaTime);\n\n        // Automatic save judgment: true is on, false is off\n        if (this._data.auto_save) {\n            // When the current total time of the game is greater than the next time node. \n            // true is to update the game storage logic. \n            // false is to wait.\n            if (this._totalGameTime > this._nextSaveTime) {\n                // Updates the current game time stats.\n                Save.Instance.statisticsTime('game', Math.floor(this._data.next_save_time));\n                this._nextSaveTime += this._data.next_save_time\n            }\n        }\n\n    }\n\n}\n","import { game, math, PhysicsSystem } from \"cc\";\nimport { Save } from \"./save\";\nimport { Local } from \"../../core/localization/local\";\nimport { Msg } from \"../../core/msg/msg\";\nimport { Singleton } from \"../../core/pattern/singleton\";\nimport { ResCache } from \"../../core/res/res-cache\";\n\nexport class GameQuality extends Singleton {\n\n    index: number = 0;\n    max: number = 2;\n    _data = Object.create(null);\n    _map = Object.create(null);\n    cur = {\n        \"name\": \"game_quality_high\",\n        \"level\": -1,\n        \"fps\": 59.9,\n        \"maxSubSteps\": 1,\n        \"open_ik\": true\n    };\n    _default = 0;\n\n    public init (): void {\n        this._data = ResCache.Instance.getJson('data-quality').json;\n        this.index = 0;\n        if (this.index < 0) this.index = 0;\n        if (this.index >= this._data.set.length) this.index = this.index = this._data.set.length - 1;\n        this._default = this.index;\n        this.cur = this._data.set[this.index];\n        PhysicsSystem.instance.maxSubSteps = 10;\n        // game.frameRate = this.cur.fps;\n\n        Msg.on('next_quality', () => {\n            this.index++;\n            if (this.index >= this._data.set.length) this.index = 0;\n            this.cur = this._data.set[this.index];\n            Save.Instance._cur.game_quality = this.index;\n            Local.Instance.refresh();\n        });\n\n        Msg.on('pre_quality', () => {\n            this.index--;\n            if (this.index < 0) this.index = this._data.set.length - 1;\n            this.cur = this._data.set[this.index];\n            Save.Instance._cur.game_quality = this.index;\n            Local.Instance.refresh();\n        });\n\n        Msg.on('msg_check_change', this.checkChange.bind(this));\n\n    }\n\n    public checkChange () {\n\n        if (this._default !== this.index) {\n            // Restart game.\n            globalThis.window.location.reload();\n        }\n    }\n\n    public getShowName () {\n        return Local.Instance.get(this._data.set[this.index].name);\n    }\n}","import { _decorator, Component, Node, MeshRenderer, instantiate, CCObject, Prefab, find } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('generate_white_box')\nexport class generate_white_box extends Component {\n    @property(Node)\n    targetRoot: Node | undefined\n\n    @property(Node)\n    temp: Node | undefined\n\n    @property\n    get generate () {\n        return false\n    }\n    set generate (v) {\n        this.doGenerate()\n    }\n\n\n    doGenerate () {\n        if (!this.temp || !this.targetRoot) {\n            return;\n        }\n\n        let root = find('root', this.node)\n        if (!root) {\n            root = new Node('root')\n            root.parent = this.node\n        }\n        root.removeAllChildren();\n\n        let mrs = this.targetRoot.getComponentsInChildren(MeshRenderer);\n        mrs.forEach(mr => {\n            if (!mr.model) {\n                return;\n            }\n\n            let n = instantiate(this.temp)! as any as Node;\n            n.name = mr.node.name\n\n            let bounds = mr.model!.worldBounds\n            n.position = bounds.center;\n            n.setScale(bounds.halfExtents.x * 2, bounds.halfExtents.y * 2, bounds.halfExtents.z * 2)\n\n            // n.hideFlags |= CCObject.Flags.DontSave;\n            n.parent = root;\n        })\n    }\n\n\n}\n\n\n","import { DEV } from 'cc/env';\nimport Electron from \"../core/app/Electron\";\nimport { Save } from \"../logic/data/save\";\nimport { ResCache } from \"../core/res/res-cache\";\n\nexport class GM {\n\n    private static _dic: { [key: string]: Function } = {};\n\n    private static _data = Object.create(null);\n\n    public static init () {\n\n        this._data = ResCache.Instance.getJson('data-gm').json;\n        console.log(this._data);\n        this._dic['clear_data'] = (data: string) => {\n            Save.Instance.clear_data(data[1]);\n        }\n        this._dic['delete_all'] = (data: string) => {\n            Save.Instance.deleteAllArchive();\n        }\n        this._dic['clear_by_key'] = (data: string) => {\n            Save.Instance.clearByKey(data[1]);\n        }\n        this._dic['set'] = (data: string) => {\n            Save.Instance.set(data[1], data[2]);\n        }\n        this._dic['app'] = (data: string) => {\n            const info = data[1].split(':');\n            Electron.sendAsync(info[0], info[1]);\n        }\n\n    }\n\n    static deleteAll () {\n        Save.Instance.deleteAllArchive();\n    }\n\n    public static run (data: string) {\n        const cmdList = data.split(' ');\n        const cmd = cmdList[0];\n        let cmdFun = this._dic[cmd];\n        if (cmdFun) {\n            cmdFun(cmdList);\n        }\n    }\n\n    public static getHelp () {\n        let info = 'GM help:';\n        this._data['gm_help'].forEach(element => {\n            info += element + '\\n\\n';\n        });\n        console.log(info);\n        return info;\n    }\n\n}\n\nglobalThis.GM = GM;\n","export const GpuMobiles = {\n    \"adreno\": {\n        \"530\": 272,\n        \"540\": 384,\n        \"615\": 196,\n        \"616\": 227,\n        \"618\": 316,\n        \"619\": 330,\n        \"620\": 457,\n        \"630\": 509,\n        \"640\": 848,\n        \"642\": 835,\n        \"650\": 1171,\n        \"660\": 1460,\n        \"662\": 824,\n        \"730\": 2596,\n        \"740\": 3671,\n        \"642l\": 703,\n        \"619l\": 252\n    },\n    \"immortalis\": {\n        \"g715\": 3535\n    },\n    \"apple\": {\n        \"a16\": 3331,\n        \"a15\": 2725,\n        \"a14\": 1800,\n        \"a13\": 1576,\n        \"a12\": 1100,\n        \"a11\": 896,\n        \"a10\": 300\n    },\n    \"mali\": {\n        \"g710\": 2319,\n        \"g78\": 1790,\n        \"g610\": 1440,\n        \"g77\": 1258,\n        \"g76\": 625,\n        \"g57\": 365,\n        \"g68\": 610,\n        \"g52\": 190,\n        \"g72\": 183\n    },\n    \"xclipse\": {\n        \"920\": 1906\n    }\n}","import { director, game, sys } from 'cc';\nimport { BUILD, JSB, MINIGAME } from 'cc/env';\n\nimport { GpuMobiles } from './gpu-mobiles';\n\nexport enum RenderQulity {\n    Low,\n    Medium,\n    High,\n}\n\nconst getGpuType = (renderer: string) => {\n    const types = sys.isMobile\n        ? ([\n            'adreno',\n            'apple',\n            'mali',\n            'xclipse',\n            'immortalis'\n        ] as const)\n        : (['intel', 'apple', 'amd', 'radeon', 'nvidia', 'geforce'] as const);\n    for (const type of types) {\n        if (renderer.includes(type)) {\n            return type;\n        }\n    }\n};\nexport function getGPUVersion (model: string) {\n    // model = model.replace(/\\([^)]+\\)/, '');\n\n    const matches =\n        // First set of digits\n        model.match(/[ga]?\\d+/) ||\n        // If the renderer did not contain any numbers, match letters\n        model.match(/(\\W|^)([A-Za-z]{1,3})(\\W|$)/g);\n\n    // Remove any non-word characters and also remove 'amd' which could be matched\n    // in the clause above\n    return matches?.join('').replace(/\\W|amd/g, '') ?? '';\n}\n\nexport let gpuType = ''\nexport let gpuVersion = ''\nexport let gpuScore = 0\n\nif (director.root && director.root.device) {\n    let renderer = director.root.device.renderer.toLowerCase();\n    console.log('renderer: ' + renderer)\n\n    gpuType = getGpuType(renderer)\n    gpuVersion = getGPUVersion(renderer)\n\n    console.log('gpuType : ' + gpuType)\n    console.log('gpuVersion : ' + gpuVersion)\n\n    try {\n        gpuScore = GpuMobiles[gpuType][gpuVersion]\n        console.log(`gpu : score(${gpuScore})`)\n    }\n    catch (err) {\n        if (sys.isMobile) {\n            console.warn(`Get gpu score failed`)\n        }\n    }\n}\n\n\nglobalThis.gpuInfo = {\n    gpuType,\n    gpuVersion,\n    gpuScore\n}\n","import { _decorator, Component, Node, random, randomRangeInt } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/*\n *  Xn+1 =( A * Xn + C ) mod M\n */\n@ccclass('GRandom')\nexport class GRandom {\n\n    preValue: number = 0;\n    seed: number = 0;\n    c = 49297;\n    a = 9301;\n    m = 233280;//0x07ffff;\n\n    constructor (seed: number = -1) {\n        this.seed = seed;\n        if (this.seed === -1) this.seed = randomRangeInt(0, 0xffffffff);\n        this.preValue = this.seed;\n    }\n\n    reset () {\n        this.preValue = this.seed;\n    }\n\n    value () {\n        this.preValue = (this.a * this.preValue + this.c) % this.m;\n        return this.preValue\n    }\n\n    get value1000 () {\n        return this.range(0, 1000);\n    }\n\n    range (min: number, max: number): number {\n        var v = min + (this.value() % (max - min + 1))\n        return v;\n    }\n\n    range1000 (min: number, max: number) {\n        var ret = this.range(min * 1000, max * 1000);\n        return Math.floor(ret / 1000);\n    }\n}\n\n","export default {\n    \"last_node_id\": 26,\n    \"last_link_id\": 67,\n    \"nodes\": [\n        {\n            \"id\": 17,\n            \"type\": \"pipeline/TAAStage\",\n            \"pos\": [\n                1353,\n                714\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 14,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 52\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        53\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"TAA\",\n                \"shadingScale\": 1,\n                \"Name\": \"TAAStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"sampleScale\": 1,\n                \"feedback\": 0.95,\n                \"shaowHistoryTexture\": false,\n                \"clampHistoryTexture\": true,\n                \"forceRender\": true,\n                \"dirty\": false\n            }\n        },\n        {\n            \"id\": 15,\n            \"type\": \"pipeline/Pipeline\",\n            \"pos\": [\n                123,\n                144\n            ],\n            \"size\": {\n                \"0\": 210,\n                \"1\": 82\n            },\n            \"flags\": {},\n            \"order\": 0,\n            \"mode\": 0,\n            \"outputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"links\": [\n                        34\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"Name\": \"forward\",\n                \"Enable\": true\n            }\n        },\n        {\n            \"id\": 16,\n            \"type\": \"pipeline/RenderToScreen\",\n            \"pos\": [\n                951,\n                134\n            ],\n            \"size\": {\n                \"0\": 140,\n                \"1\": 26\n            },\n            \"flags\": {},\n            \"order\": 9,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 56\n                }\n            ],\n            \"properties\": {}\n        },\n        {\n            \"id\": 5,\n            \"type\": \"pipeline/custom.ForwardStage\",\n            \"pos\": [\n                402,\n                133\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 3,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": 34\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        55\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"BaseStage\",\n                \"shadingScale\": 1,\n                \"Name\": \"custom.ForwardStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\",\n                \"outputName\": \"ForwardStage\"\n            }\n        },\n        {\n            \"id\": 19,\n            \"type\": \"pipeline/ForwardPostStage\",\n            \"pos\": [\n                689,\n                145\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 6,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 55\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        56\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"ForwardPostStage\",\n                \"shadingScale\": 1\n            }\n        },\n        {\n            \"id\": 20,\n            \"type\": \"pipeline/Pipeline\",\n            \"pos\": [\n                150,\n                1030\n            ],\n            \"size\": {\n                \"0\": 210,\n                \"1\": 82\n            },\n            \"flags\": {},\n            \"order\": 1,\n            \"mode\": 0,\n            \"outputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"links\": [\n                        57\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"Name\": \"reflection-probe\",\n                \"Enable\": true\n            }\n        },\n        {\n            \"id\": 24,\n            \"type\": \"pipeline/RenderToScreen\",\n            \"pos\": [\n                1243,\n                1046\n            ],\n            \"size\": {\n                \"0\": 140,\n                \"1\": 26\n            },\n            \"flags\": {},\n            \"order\": 12,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 60\n                }\n            ],\n            \"properties\": {}\n        },\n        {\n            \"id\": 21,\n            \"type\": \"pipeline/DeferredGBufferStage\",\n            \"pos\": [\n                420,\n                1029\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 4,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": 57\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        58\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"DeferredGBuffer-rp\",\n                \"shadingScale\": 1,\n                \"Name\": \"DeferredGBufferStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\"\n            }\n        },\n        {\n            \"id\": 22,\n            \"type\": \"pipeline/DeferredLightingStage\",\n            \"pos\": [\n                714,\n                1034\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 7,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 58\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        59\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"DeferredLighting-rp\",\n                \"shadingScale\": 1,\n                \"Name\": \"DeferredLightingStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\"\n            }\n        },\n        {\n            \"id\": 23,\n            \"type\": \"pipeline/DeferredPostStage\",\n            \"pos\": [\n                992,\n                1039\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 10,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 59\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        60\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"DeferredPost-rp\",\n                \"shadingScale\": 1,\n                \"Name\": \"DeferredPostStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\"\n            }\n        },\n        {\n            \"id\": 14,\n            \"type\": \"pipeline/custom.BloomStage\",\n            \"pos\": [\n                1088,\n                753\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 13,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 62\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null,\n                    \"slot_index\": 2\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        52\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"Bloom\",\n                \"shadingScale\": 1,\n                \"Name\": \"custom.BloomStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\",\n                \"threshold\": 0.1,\n                \"iterations\": 2,\n                \"intensity\": 0.8\n            }\n        },\n        {\n            \"id\": 11,\n            \"type\": \"pipeline/DeferredLightingStage\",\n            \"pos\": [\n                745,\n                608\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 11,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 17\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        62\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"DeferredLighting\",\n                \"shadingScale\": 1,\n                \"Name\": \"DeferredLightingStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\"\n            }\n        },\n        {\n            \"id\": 18,\n            \"type\": \"pipeline/FSRStage\",\n            \"pos\": [\n                1618,\n                739\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 170\n            },\n            \"flags\": {},\n            \"order\": 15,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 53\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        64\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"FSR\",\n                \"shadingScale\": 1,\n                \"sharpness\": 0.2,\n                \"Name\": \"FSRStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\"\n            }\n        },\n        {\n            \"id\": 12,\n            \"type\": \"pipeline/DeferredPostStage\",\n            \"pos\": [\n                2260,\n                762\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 17,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 65\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        22\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"DeferredPost\",\n                \"shadingScale\": 1,\n                \"Name\": \"DeferredPostStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\"\n            }\n        },\n        {\n            \"id\": 4,\n            \"type\": \"pipeline/RenderToScreen\",\n            \"pos\": [\n                2534,\n                770\n            ],\n            \"size\": {\n                \"0\": 140,\n                \"1\": 26\n            },\n            \"flags\": {},\n            \"order\": 18,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 22\n                }\n            ],\n            \"properties\": {}\n        },\n        {\n            \"id\": 25,\n            \"type\": \"pipeline/ZoomScreenStage\",\n            \"pos\": [\n                1942,\n                742\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 16,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 64\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        65\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"ZoomScreenStage\",\n                \"shadingScale\": 1\n            }\n        },\n        {\n            \"id\": 1,\n            \"type\": \"pipeline/Pipeline\",\n            \"pos\": [\n                -223,\n                626\n            ],\n            \"size\": {\n                \"0\": 210,\n                \"1\": 82\n            },\n            \"flags\": {},\n            \"order\": 2,\n            \"mode\": 0,\n            \"outputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"links\": [\n                        66\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"Name\": \"main\",\n                \"Enable\": true\n            }\n        },\n        {\n            \"id\": 26,\n            \"type\": \"pipeline/CustomShadowStage\",\n            \"pos\": [\n                103,\n                641\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 170\n            },\n            \"flags\": {},\n            \"order\": 5,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": 66\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        67\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"CustomShadowStage\",\n                \"shadingScale\": 1,\n                \"textureFormat\": 35\n            }\n        },\n        {\n            \"id\": 10,\n            \"type\": \"pipeline/DeferredGBufferStage\",\n            \"pos\": [\n                444,\n                612\n            ],\n            \"size\": {\n                \"0\": 228.39999389648438,\n                \"1\": 146\n            },\n            \"flags\": {},\n            \"order\": 8,\n            \"mode\": 0,\n            \"inputs\": [\n                {\n                    \"name\": \"Camera Output\",\n                    \"type\": \"Camera Output\",\n                    \"link\": null\n                },\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"link\": 67\n                },\n                {\n                    \"name\": \"Custom Size\",\n                    \"type\": \"vec2\",\n                    \"link\": null\n                }\n            ],\n            \"outputs\": [\n                {\n                    \"name\": \"RenderTexture\",\n                    \"type\": \"RenderTexture\",\n                    \"links\": [\n                        17\n                    ],\n                    \"slot_index\": 0\n                }\n            ],\n            \"properties\": {\n                \"showResult\": false,\n                \"enable\": true,\n                \"name\": \"DeferredGBuffer\",\n                \"shadingScale\": 1,\n                \"Name\": \"DeferredGBufferStage\",\n                \"Enable\": true,\n                \"CameraOutputType\": \"Color\",\n                \"Format\": \"RGBA8\",\n                \"material\": \"blit-screen\"\n            }\n        }\n    ],\n    \"links\": [\n        [\n            17,\n            10,\n            0,\n            11,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            22,\n            12,\n            0,\n            4,\n            0,\n            \"RenderTexture\"\n        ],\n        [\n            34,\n            15,\n            0,\n            5,\n            0,\n            \"Camera Output\"\n        ],\n        [\n            52,\n            14,\n            0,\n            17,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            53,\n            17,\n            0,\n            18,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            55,\n            5,\n            0,\n            19,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            56,\n            19,\n            0,\n            16,\n            0,\n            \"RenderTexture\"\n        ],\n        [\n            57,\n            20,\n            0,\n            21,\n            0,\n            \"Camera Output\"\n        ],\n        [\n            58,\n            21,\n            0,\n            22,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            59,\n            22,\n            0,\n            23,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            60,\n            23,\n            0,\n            24,\n            0,\n            \"RenderTexture\"\n        ],\n        [\n            62,\n            11,\n            0,\n            14,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            64,\n            18,\n            0,\n            25,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            65,\n            25,\n            0,\n            12,\n            1,\n            \"RenderTexture\"\n        ],\n        [\n            66,\n            1,\n            0,\n            26,\n            0,\n            \"Camera Output\"\n        ],\n        [\n            67,\n            26,\n            0,\n            10,\n            1,\n            \"RenderTexture\"\n        ]\n    ],\n    \"groups\": [],\n    \"config\": {},\n    \"extra\": {},\n    \"version\": 0.4\n}","\nimport { JsonAsset, sys } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { LGraph, LGraphCanvas, LiteGraph } from './@types/litegraph';\nimport { css } from './litegragh-css';\nimport { loadResource, saveJson, saveString } from '../utils/npm';\nimport { HrefSetting } from '../settings/href-setting';\nimport graphData from './graph-data'\n\nexport const lGraph = globalThis.LGraph as typeof LGraph;\nexport const lGraphCanvas = globalThis.LGraphCanvas as typeof LGraphCanvas;\nexport const liteGraph = globalThis.LiteGraph as typeof LiteGraph;\n\nif (!globalThis.__graph__) {\n    globalThis.__graph__ = new lGraph();\n}\nexport let graph = globalThis.__graph__ as LGraph;\n\nenum GraphShowType {\n    None,\n    InnerWindow,\n    NewWindow\n}\n\nexport function saveGraph () {\n    if (EDITOR) {\n        let content = JSON.stringify(graph.serialize(), null, 4);\n        content = `export default ${content}`\n        saveString('../graph/graph-data.ts', content);\n    }\n}\n\nexport async function loadGraph () {\n    graph.clear();\n    graph.configure(graphData);\n    graph.start();\n\n    if (!EDITOR && HrefSetting.pauseGraphAfterLoad) {\n        setTimeout(() => {\n            graph.stop();\n        }, 2000)\n    }\n}\n\nexport function showGraph (show = true, onclose?: Function) {\n    if (!sys.isBrowser) {\n        return;\n    }\n\n    let document = window.document;\n    let isNewWindow = HrefSetting.graph === GraphShowType.NewWindow;\n    if (isNewWindow && show) {\n        if (!globalThis.__graph_window__ || !globalThis.__graph_window__.document) {\n            if (EDITOR) {\n                globalThis.__graph_window__ = window.open();\n            }\n            else {\n                globalThis.__graph_window__ = window.open('', 'newwindow', 'width=960,height=640');\n            }\n            globalThis.__graph_window__.CanvasRenderingContext2D.prototype.roundRect = window.CanvasRenderingContext2D.prototype.roundRect;\n        }\n        document = globalThis.__graph_window__.document;\n        (document.body as any).style = \"background: #181818;overflow:hidden;\";\n    }\n    let body = document.body;\n\n    if (show) {\n        // graph.start();\n\n        if (!globalThis.__graph_canvas__) {\n            // load css\n            {\n                let style = document.createElement('style');\n                style.innerHTML = css;\n                body.appendChild(style);\n            }\n\n            // create dom canvas\n            {\n                let canvasElem = document.createElement('Canvas') as any;\n                canvasElem.style = `\n                    width:100%;\n                    height:100%;\n                    position:absolute;\n                `;\n\n                if (!globalThis.__l_graph_canvas__) {\n                    globalThis.__l_graph_canvas__ = new lGraphCanvas(canvasElem, graph);\n                }\n                else {\n                    globalThis.__l_graph_canvas__.setCanvas(canvasElem);\n                }\n\n                globalThis.__graph_canvas__ = canvasElem;\n            }\n\n        }\n\n        if (globalThis.__l_graph_canvas__) {\n            globalThis.__l_graph_canvas__.setDirty(true, true);\n        }\n\n        let __graph_canvas__ = globalThis.__graph_canvas__ as any\n        if (__graph_canvas__) {\n            __graph_canvas__.width = body.offsetWidth;\n            __graph_canvas__.height = body.offsetHeight;\n            body.appendChild(__graph_canvas__);\n\n            if (globalThis.__graph_window__) {\n                globalThis.__graph_window__.onresize = () => {\n                    __graph_canvas__.width = body.offsetWidth;\n                    __graph_canvas__.height = body.offsetHeight;\n                }\n                globalThis.__graph_window__.onbeforeunload = () => {\n                    globalThis.__graph_window__ = null;\n                    globalThis.__graph_canvas__ = null;\n                    globalThis.__l_graph_canvas__ = null;\n\n                    saveGraph();\n\n                    if (onclose) {\n                        onclose();\n                    }\n                }\n            }\n        }\n    }\n    else {\n        // graph.stop();\n\n        if (isNewWindow) {\n            if (globalThis.__graph_window__) {\n                globalThis.__graph_window__.close();\n            }\n        }\n        else {\n            if (globalThis.__graph_canvas__) {\n                body.removeChild(globalThis.__graph_canvas__);\n            }\n        }\n\n    }\n}\nglobalThis.showGraph = showGraph;\n","import { math, Mesh, primitives, utils, Vec3 } from \"cc\";\n\nexport class GGraphics {\n\n\n\n}\n\nexport class GMesh {\n\n    /**\n     * static Create\n     */\n    public static Create(): Mesh {\n        let size = 1;\n        let vers = [\n            0, 0, 0,\n            size, 0, 0,\n            size, 0, size,\n            0, 0, size\n        ]\n        let triangles: number[] = [0, 2, 1, 0, 3, 2];\n        let uvs: number[] = [\n            0,0,\n            size,0,\n            size,size,\n            0, size\n        ];\n        let geometry: primitives.IGeometry = {\n            positions: vers,\n            indices: triangles,\n            uvs: uvs\n        };\n        let mesh = utils.createMesh(geometry);\n        return mesh;\n        \n    }\n\n}\n\nexport class GImage {\n    \n}\n\n\nexport class MeshBase {\n    vers = [];\n    triangles = [];\n    uvs = [];\n    colors = [];\n    trianglesIndex = 0;\n}","import { Save } from \"../../logic/data/save\";\r\nimport { Singleton } from \"../pattern/singleton\";\r\nimport { ResCache } from \"../res/res-cache\";\r\nimport { Game } from \"../../logic/data/game\";\r\nimport { UI } from \"../ui/ui\";\r\nimport { Msg } from \"../msg/msg\";\r\nimport { Sound } from \"../audio/sound\";\r\n\r\nexport class Guide extends Singleton {\r\n\r\n    _data:{} = {};\r\n    _cur_index = -1;\r\n\r\n    _guide_name = '';\r\n\r\n    _cur:[] = null;\r\n    _currentGameNodeName:string = '';\r\n    _has_guide = false;\r\n\r\n    public init() {\r\n\r\n        // Test\r\n        //Save.Instance._cur.guide_info = {};\r\n\r\n        this._data = ResCache.Instance.getJson('data-guide').json;\r\n        Msg.on('guide_story', ()=>{ this.set_guide('guide_story'); });\r\n        Msg.on('guide_menu', ()=>{ this.set_guide('guide_menu'); });\r\n        Msg.on('guide_build', ()=>{ this.set_guide('guide_build'); });\r\n        Msg.on('guide_keyboard', ()=>{ this.set_guide('guide_keyboard'); });\r\n        Msg.on('guide_gamepad', ()=>{ this.set_guide('guide_gamepad'); });\r\n\r\n        Msg.on('guide_set', this.set_guide.bind(this));\r\n        Msg.on('guide_next', this.next.bind(this));\r\n\r\n        Msg.on('guide_force_set', this.guide_force_set.bind(this));\r\n    }\r\n\r\n    public set_guide(name:string) {\r\n        this._guide_name = name;\r\n\r\n        if (Save.Instance._cur.guide_info === undefined) \r\n            Save.Instance._cur.guide_info = {};\r\n\r\n        if (Save.Instance._cur.guide_info[this._guide_name]){\r\n            console.log('has guide:', this._guide_name);\r\n            return;\r\n        }\r\n        this._has_guide = true;\r\n        this._cur = this._data[this._guide_name];\r\n        this._cur_index = -1;\r\n        this.next();\r\n        UI.Instance.on('uiguide');  \r\n    }\r\n\r\n    public guide_force_set(name:string) {\r\n        this._guide_name = name; \r\n        this._has_guide = true;\r\n        this._cur = this._data[this._guide_name];\r\n        this._cur_index = -1;\r\n        this.next();\r\n        UI.Instance.on('uiguide');   \r\n    }\r\n\r\n    public next() {\r\n        this._cur_index++;\r\n        if (this._cur_index >= (this._cur.length - 1)) {\r\n            // Close guide ui.\r\n            UI.Instance.off('uiguide');\r\n            Save.Instance._cur.guide_info[this._guide_name] = true;\r\n            this._has_guide = false;\r\n            var guide_end_event = this._cur[this._cur_index];\r\n            if (guide_end_event !== '')\r\n                Msg.emit(guide_end_event);\r\n            Msg.emit('msg_save_archive');\r\n        }else{\r\n            this._currentGameNodeName = this._cur[this._cur_index];\r\n            Msg.emit('guide_refresh');\r\n        }\r\n       \r\n    }\r\n\r\n}\r\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, Vec2, Vec3, CCFloat } from 'cc';\nimport { Res } from '../../core/res/res';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GunTracerPool')\nexport class GunTracerPool extends Component {\n\n    //The depth of the object pool. \n    @property({ type: CCFloat, tooltip: 'The depth of the object pool.' })\n    poolCount = 20;\n\n    // A collection of arrays that store object pools.\n    pool: Array<Node> | undefined;\n\n    // The usage index of the object pool.\n    index = 0;\n\n    start () {\n\n        // Create an array of objects based on the object pool depth.\n        this.pool = new Array(this.poolCount);\n\n        // Get the base object of the object pool.\n        const poolItem = this.node.children[0];\n\n        // Set the base object as the first element of the object pool.\n        this.pool[0] = poolItem;\n\n        // Starting from one, generate an object pool in a loop.\n        for (let i = 1; i < this.poolCount; i++) {\n            // Instantiates a new object from the base object. And map to the current object pool index object.\n            this.pool[i] = Res.instNode(poolItem, this.node);\n            // Initialize this newly generated object.\n            this.pool[i].emit('init');\n        }\n\n        // Initialize the base object.\n        poolItem.emit('init');\n\n        // Register an external access message executor\n        Msg.on('msg_set_tracer', this.setTracer.bind(this));\n\n    }\n\n    /**\n     * Set start and end positions\n     * @param data set data.\n     */\n    setTracer (data: { start: Vec3, end: Vec3 }) {\n\n        // Get a ray from the object pool.\n        this.pool![this.index].emit('setTracer', data.start, data.end);\n\n        // The object pool index add one.\n        this.index++;\n\n        // If the index exceeds the maximum length, set the index to start from 0.\n        if (this.index >= this.poolCount) this.index = 0;\n\n    }\n\n\n}\n\n","import { assetManager, CCObject, clamp, Director, director, Game, game, instantiate, Prefab, profiler, ReflectionProbeManager, RenderTexture } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { HrefSetting } from \"./settings/href-setting\";\n\nRenderTexture.prototype.resize = function resize (width: number, height: number) {\n    this._width = Math.floor(clamp(width, 1, 4096));\n    this._height = Math.floor(clamp(height, 1, 4096));\n    if (this._window) {\n        this._window.resize(this._width, this._height);\n    }\n    this.emit('resize', this._window);\n}\n\n\ngame.on(Game.EVENT_GAME_INITED, () => {\n    if (!globalThis.__pipeline__) {\n        assetManager.loadAny('223548d6-e1d4-462a-99e1-f4046b1d0647', (err, pipPrefab: Prefab) => {\n            if (err) {\n                return console.error(err);\n            }\n            let p = instantiate(pipPrefab)\n            p.name = 'pipeline-default-persist';\n            p.hideFlags |= CCObject.Flags.DontSave;// | CCObject.Flags.HideInHierarchy;\n            globalThis.__pipeline__ = p;\n        })\n    }\n})\n\nif (!director.__runSceneImmediate) {\n    director.__runSceneImmediate = director.runSceneImmediate\n}\ndirector.runSceneImmediate = function (scene, onBeforeLoadScene, onLaunched) {\n    globalThis.__pipeline__.parent = null;\n\n    director.__runSceneImmediate.call(this, scene, onBeforeLoadScene, onLaunched)\n\n    if (!globalThis.pipelineAssets && globalThis.__pipeline__) {\n        globalThis.__pipeline__.parent = director.getScene()\n    }\n}\n\nif (!EDITOR) {\n    game.on(Game.EVENT_GAME_INITED, () => {\n        let target, func;\n        if (ReflectionProbeManager !== undefined) {\n            target = ReflectionProbeManager.probeManager\n            func = ReflectionProbeManager.probeManager.onUpdateProbes\n        }\n        else {\n            let callbackInfos = (director as any)._callbackTable[Director.EVENT_BEFORE_UPDATE].callbackInfos;\n            for (let i = 0; i < callbackInfos.length; i++) {\n                target = callbackInfos[i].target\n                if (target && target.onUpdateProbes) {\n                    func = target.onUpdateProbes;\n                    break;\n                }\n            }\n        }\n\n        if (target && func) {\n            director.off(Director.EVENT_BEFORE_UPDATE, func, target);\n        }\n\n        if (HrefSetting.showFps) {\n            profiler.showStats()\n        }\n    })\n}\n","import { Vec2, Vec3 } from \"cc\";\n\nexport class HaltonSeq {\n    static cache: Map<string, number> = new Map\n    public static Get (index: number, radix: number) {\n        let key = `${index}_${radix}`;\n        let result = this.cache.get(key);\n\n        if (!result) {\n            let fraction = 1 / radix;\n\n            result = 0;\n            while (index > 0) {\n                result += (index % radix) * fraction;\n\n                index /= radix;\n                fraction /= radix;\n            }\n\n            this.cache.set(key, result);\n        }\n\n        return result;\n    }\n}\n\nexport class HaltonUtils {\n    static instance = new HaltonUtils;\n\n    sampleIndex = 0;\n\n    private _tempVec2 = new Vec2;\n    public Generate2DRandomOffset (sampleCount = 8, index?: number) {\n        if (index === undefined) {\n            index = this.sampleIndex++;\n        }\n        index = index % sampleCount;\n\n        // The variance between 0 and the actual halton sequence values reveals noticeable instability\n        // in shadow maps, so we avoid index 0.\n        this._tempVec2.set(\n            (HaltonSeq.Get((index & 1023) + 1, 2) - 0.5),\n            (HaltonSeq.Get((index & 1023) + 1, 3) - 0.5)\n        );\n\n        return this._tempVec2;\n    }\n\n    private _tempVec3 = new Vec3;\n    public Generate3DRandomOffset (sampleCount = 8, index?: number) {\n        if (index === undefined) {\n            index = this.sampleIndex++;\n        }\n        index = index % sampleCount;\n\n        // The variance between 0 and the actual halton sequence values reveals noticeable instability\n        // in shadow maps, so we avoid index 0.\n        this._tempVec3.set(\n            HaltonSeq.Get((index & 1023) + 1, 2) - 0.5,\n            HaltonSeq.Get((index & 1023) + 1, 3) - 0.5,\n            HaltonSeq.Get((index & 1023) + 1, 5) - 0.5\n        );\n\n        return this._tempVec3;\n    }\n}\n","import { clamp, Color, Component, Material, Vec4, _decorator } from 'cc';\nimport { CameraSetting } from '../../camera-setting';\n\nconst { ccclass, property, type, executeInEditMode } = _decorator;\n\nclass FExponentialHeightFogSceneData {\n    Height = 0;\n    Density = 0;\n    HeightFalloff = 0;\n};\n\nlet FogData = [new FExponentialHeightFogSceneData, new FExponentialHeightFogSceneData]\nlet FogColor = new Vec4\n\nconst NumFogs = 2;\nlet CollapsedFogParameter = new Array(NumFogs).fill(0);\n\nconst _tempFogInscatteringColor = new Color;\n\nlet _empty = new Array(4).fill(0);\n\nexport let fogUBO = {\n    fog_Parameters: new Vec4,\n    fog_Parameters2: new Vec4,\n    fog_Parameters3: new Vec4,\n    fog_ColorParameters: new Vec4,\n\n    update (material: Material) {\n        material.setProperty('fog_Parameters', this.fog_Parameters)\n        material.setProperty('fog_Parameters2', this.fog_Parameters2)\n        material.setProperty('fog_Parameters3', this.fog_Parameters3)\n        material.setProperty('fog_ColorParameters', this.fog_ColorParameters)\n    },\n\n    reset () {\n        this.fog_Parameters.w = 1000000;\n    }\n}\n\n\n@ccclass('SecondExponentialHeightFog')\nexport class SecondExponentialHeightFog {\n    @property\n    fogDensity = 0.02;\n\n    /**\n    * Height density factor, controls how the density increases as height decreases.\n    * Smaller values make the visible transition larger.\n    */\n    @property\n    fogHeightFalloff = 0.2;\n\n    /** Height offset, relative to the actor position Z. */\n    @property\n    fogHeightOffset = 0.0;\n}\n\n@ccclass('ExponentialHeightFog')\n@executeInEditMode\nexport class ExponentialHeightFog extends Component {\n    static instance: ExponentialHeightFog | undefined = undefined;\n\n    _dirty = true;\n\n    @property\n    _fogDensity = 0.02;\n    @property\n    get fogDensity () {\n        return this._fogDensity;\n    }\n    set fogDensity (v) {\n        this._fogDensity = v;\n        this._dirty = true;\n    }\n    @property\n    _fogHeightFalloff = 0.2;\n    @property\n    get fogHeightFalloff () {\n        return this._fogHeightFalloff;\n    }\n    set fogHeightFalloff (v) {\n        this._fogHeightFalloff = v;\n        this._dirty = true;\n    }\n\n    /** Settings for the second fog. Setting the density of this to 0 means it doesn't have any influence. */\n    @type(SecondExponentialHeightFog)\n    _secondFogData = new SecondExponentialHeightFog;\n    @type(SecondExponentialHeightFog)\n    get secondFogData () {\n        return this._secondFogData;\n    }\n    set secondFogData (v) {\n        this._secondFogData = v;\n        this._dirty = true;\n    }\n\n    @property\n    _fogInscatteringColor = new Vec4;\n    @property\n    get fogInscatteringColor () {\n        return this._fogInscatteringColor;\n    }\n    set fogInscatteringColor (v) {\n        this._fogInscatteringColor = v;\n        this._dirty = true;\n    }\n\n    @property\n    get fogInscatteringColorSetter () {\n        _tempFogInscatteringColor.set(this._fogInscatteringColor.x * 255, this._fogInscatteringColor.y * 255, this._fogInscatteringColor.z * 255, this._fogInscatteringColor.w * 255);\n        return _tempFogInscatteringColor;\n    }\n    set fogInscatteringColorSetter (v) {\n        this._fogInscatteringColor.set(v.x, v.y, v.z, v.w);\n        this._dirty = true;\n    }\n\n    /** \n     * Maximum opacity of the fog.  \n     * A value of 1 means the fog can become fully opaque at a distance and replace scene color completely,\n     * A value of 0 means the fog color will not be factored in at all.\n     */\n    @property\n    _fogMaxOpacity = 1.;\n    @property\n    get fogMaxOpacity () {\n        return this._fogMaxOpacity;\n    }\n    set fogMaxOpacity (v) {\n        this._fogMaxOpacity = v;\n        this._dirty = true;\n    }\n\n    /** Distance from the camera that the fog will start, in world units. */\n    @property\n    _startDistance = 0.;\n    @property\n    get startDistance () {\n        return this._startDistance;\n    }\n    set startDistance (v) {\n        this._startDistance = v;\n        this._dirty = true;\n    }\n\n    /** Scene elements past this distance will not have fog applied.  This is useful for excluding skyboxes which already have fog baked in. */\n    @property\n    _fogCutoffDistance = 0.;\n    @property\n    get fogCutoffDistance () {\n        return this._fogCutoffDistance;\n    }\n    set fogCutoffDistance (v) {\n        this._fogCutoffDistance = v;\n        this._dirty = true;\n    }\n\n    inscatteringColorCubemap = null;\n    inscatteringTextureTint = new Vec4;\n\n    onEnable () {\n        this._dirty = true;\n\n        ExponentialHeightFog.instance = this;\n    }\n    onDisable () {\n        if (ExponentialHeightFog.instance === this) {\n            ExponentialHeightFog.instance = undefined;\n        }\n\n        fogUBO.reset();\n    }\n\n    update () {\n        if (this._dirty) {\n            this._dirty = false;\n            this.updateUBO();\n        }\n    }\n\n    updateFogData () {\n        let secondFogData = this.secondFogData!;\n\n        FogData[0].Height = this.node.worldPosition.z;\n        FogData[1].Height = FogData[0].Height + secondFogData.fogHeightOffset;\n\n        // Scale the densities back down to their real scale\n        // Artists edit the densities scaled up so they aren't entering in minuscule floating point numbers\n        FogData[0].Density = this.fogDensity / 10.0;\n        FogData[0].HeightFalloff = this.fogHeightFalloff / 10.0;\n        FogData[1].Density = secondFogData.fogDensity / 10.0;\n        FogData[1].HeightFalloff = secondFogData.fogHeightFalloff / 10.0;\n\n        FogColor = this.inscatteringColorCubemap ? this.inscatteringTextureTint : this.fogInscatteringColor;\n    }\n\n    updateUBO () {\n        this.updateFogData();\n\n        let MaxObserverHeight = 10e5;\n        const MaxObserverHeightDifference = 65536.0;\n\n        for (let i = 0; i < NumFogs; i++) {\n            // Only limit the observer height to fog if it has any density\n            if (FogData[i].Density > 0.0) {\n                MaxObserverHeight = Math.min(MaxObserverHeight, FogData[i].Height + MaxObserverHeightDifference);\n            }\n        }\n\n        let ObserverHeight = 10;\n        let camera = CameraSetting.mainCamera;\n        if (camera) {\n            ObserverHeight = Math.min(camera.node.worldPosition.y, MaxObserverHeight);\n        }\n\n        for (let i = 0; i < CollapsedFogParameter.length; i++) {\n            let CollapsedFogParameterPower = clamp(\n                -FogData[i].HeightFalloff * (ObserverHeight - FogData[i].Height),\n                -126. + 1., // min and max exponent values for IEEE floating points (http://en.wikipedia.org/wiki/IEEE_floating_point)\n                +127. - 1.\n            );\n\n            CollapsedFogParameter[i] = FogData[i].Density * Math.pow(2.0, CollapsedFogParameterPower);\n        }\n\n        fogUBO.fog_Parameters.set(CollapsedFogParameter[0], FogData[0].HeightFalloff, MaxObserverHeight, this.startDistance)\n        fogUBO.fog_Parameters2.set(CollapsedFogParameter[1], FogData[1].HeightFalloff, FogData[1].Density, FogData[1].Height)\n        fogUBO.fog_Parameters3.set(FogData[0].Density, FogData[0].Height, this.inscatteringColorCubemap ? 1.0 : 0.0, this.fogCutoffDistance)\n        fogUBO.fog_ColorParameters.set(FogColor.x, FogColor.y, FogColor.z, 1 - this.fogMaxOpacity)\n    }\n}\n","import { game, sys } from 'cc';\nimport { BUILD, EDITOR, JSB } from 'cc/env';\nimport { gpuScore, gpuType, gpuVersion } from './gpu';\n\nexport const HrefSetting = {\n    settings: 0,\n    graph: 0,\n    pauseGraphAfterLoad: 1,\n    spector: 0,\n\n    // rendering setting\n    shadingScale: 1,\n    zoomScreen: 0,\n    bloom: 1,\n    showFps: 1,\n    fps: 30,\n    transparent: 1,\n    clusterLighting: 1,\n    ibl: 1,\n    shadow: 0,\n    fsr: 1,\n\n    taa: 1,\n    fxaa: 1,\n\n    maxEnemies: 4,\n    sceneParticles: 1\n}\nglobalThis.HrefSetting = HrefSetting\n\n\nexport let changedMap: Map<string, boolean> = new Map\n\nif (!EDITOR) {\n    let href = window && window.location && window.location.href;\n    let settings = href.split('?')[1]\n    if (settings) {\n        let results = settings.match(/([a-zA-Z]+=[0-9\\.]+)/g)\n        results.forEach(res => {\n            let test = res.split('=')\n            let value = Number.parseFloat(test[1])\n            if (typeof value === 'number') {\n                HrefSetting[test[0]] = value\n\n                changedMap.set(test[0], true)\n            }\n        })\n    }\n\n}\n\nif (EDITOR) {\n    HrefSetting.graph = 2;\n}\n\nif (game.canvas) {\n\n    let mobileSettings = [\n        {\n            score: 2000,\n            shadingScale: Math.min(1240 / game.canvas.width, 1),\n            bloom: 0,\n            fxaa: 0\n        },\n        {\n            score: 1200,\n            shadingScale: Math.min(1024 / game.canvas.width, 1),\n        },\n        {\n            score: 500,\n            gpu: [['apple', 'a10']],\n            fsr: 0,\n            taa: 0,\n            clusterLighting: 1,\n            ibl: 0,\n            maxEnemies: 2,\n            sceneParticles: 0\n        }\n    ]\n\n    let gpuSettings = []\n    if (sys.isMobile) {\n        gpuSettings = mobileSettings\n    }\n\n    for (let i = 0; i < gpuSettings.length; i++) {\n        let s = gpuSettings[i]\n\n        let use = false\n        if (gpuScore < s.score) {\n            use = true\n        }\n        if (s.gpu) {\n            for (let j = 0; j < s.gpu.length; j++) {\n                let g = s.gpu[j]\n                if (g[0] === gpuType && g[1] === gpuVersion) {\n                    use = true\n                    console.log('Force use gpu setting : ' + g)\n                    break;\n                }\n            }\n        }\n\n        if (use) {\n            for (let name in s) {\n                if (name in HrefSetting) {\n                    HrefSetting[name] = s[name]\n                }\n            }\n        }\n    }\n\n    if (sys.platform === sys.Platform.IOS || sys.platform === sys.Platform.MACOS) {\n        HrefSetting.sceneParticles = 0\n    }\n\n    console.log(`canvas size ${game.canvas.width}, ${game.canvas.height}`)\n    console.log(`rendering size ${game.canvas.width * HrefSetting.shadingScale}, ${game.canvas.height * HrefSetting.shadingScale}`)\n\n    game.frameRate = HrefSetting.fps\n\n    if (sys.isMobile && !JSB) {\n        // todo: mobile particle rendering issue\n        HrefSetting.transparent = 0\n    }\n    console.log(HrefSetting)\n}\n","import { Quat, Vec3, Node } from \"cc\";\nimport MathUtil from \"./math-util\";\nimport Point from \"./ik-point\";\nlet _tempVec3 = new Vec3;\nlet _tempVec3_2 = new Vec3;\nlet _tempQuat = new Quat;\nlet _tempQuat_2 = new Quat;\n\nexport default class Bone extends Point {\n    public length: number = 0;\n    public sqrMag: number = 0;\n    public axis = new Vec3(1, 0, 0);\n\n    constructor (node: Node | null = null, weight:number | null = null) {\n    \tsuper();\n    \tif (node) {\n    \t\tthis.node = node;\n    \t}\n    \tif (weight) {\n    \t\tthis.weight = weight;\n    \t}\n    }\n\n    public get rotationLimit () {\n    \treturn null;\n    }\n\n    public set rotationLimit (value) {\n    \treturn;\n    }\n\n    public swing (swingTarget:Vec3, weight:number = 1.0) {\n    \tif (weight <= 0.0) return;\n\n    \tVec3.subtract(_tempVec3, swingTarget, this.node!.getWorldPosition());\n    \tVec3.transformQuat(_tempVec3_2, this.axis, this.node!.getWorldRotation());\n    \tMathUtil.fromToRotation(_tempQuat, _tempVec3_2, _tempVec3);\n\n    \tif (weight >= 1.0) {\n    \t\tQuat.multiply(_tempQuat, _tempQuat, this.node!.getWorldRotation());\n    \t\tthis.node?.setWorldRotation(_tempQuat);\n    \t\treturn;\n    \t}\n    \tMathUtil.quatLerp(_tempQuat, Quat.IDENTITY, _tempQuat, weight);\n    \tQuat.multiply(_tempQuat, _tempQuat, this.node!.getWorldRotation());\n        this.node!.setWorldRotation(_tempQuat);\n    }\n\n    public static solverSwing (bones:Bone[], index:number, swingTarget:Vec3, weight:number = 1.0) {\n    \tif (weight <= 0.0) return;\n\n    \tVec3.subtract(_tempVec3, swingTarget, bones[index].solverPosition);\n    \tVec3.transformQuat(_tempVec3_2, bones[index].axis, bones[index].solverRotation);\n    \tMathUtil.fromToRotation(_tempQuat, _tempVec3_2, _tempVec3);\n\n    \tif (weight >= 1.0) {\n    \t\tfor (let i = index; i < bones.length; i++) {\n    \t\t\tQuat.multiply(bones[i].solverRotation, _tempQuat, bones[index].solverRotation,);\n    \t\t}\n    \t\treturn;\n    \t}\n\n    \tfor (let i = index; i < bones.length; i++) {\n    \t\tMathUtil.quatLerp(_tempQuat_2, Quat.IDENTITY, _tempQuat, weight);\n    \t\tQuat.multiply(bones[i].solverRotation, _tempQuat_2, bones[index].solverRotation);\n    \t}\n    }\n\n    /*\n     * Moves the bone to the solver position\n     * */\n    public setToSolverPosition () {\n    \tthis.node?.setWorldPosition(this.solverPosition);\n    }\n}","import { _decorator,  Node, Vec3,  Quat } from 'cc';\nexport default class Point {\n    public node: Node | null = null;\n    public weight: number = 1.0;\n    public solverPosition: Vec3 = new Vec3();\n    public solverRotation:Quat = new Quat(); // Identity\n    public defaultLocalPosition:Vec3 = new Vec3();\n    public defaultLocalRotation:Quat = new Quat();\n\n    public storeDefaultLocalState () {\n    \tthis.node?.getPosition(this.defaultLocalPosition);\n    \tthis.node?.getRotation(this.defaultLocalRotation);\n    }\n\n    public fixTransform () {\n    \tif (!this.node?.position.equals(this.defaultLocalPosition)) {\n    \t\tthis.node?.setPosition(this.defaultLocalPosition);\n    \t}\n\n    \tif (!this.node?.rotation.equals(this.defaultLocalRotation)) {\n    \t\tthis.node?.setRotation(this.defaultLocalRotation);\n    \t}\n    }\n\n    public updateSolverPosition () {\n    \tthis.node?.getWorldPosition(this.solverPosition);\n    }\n\n    public updateSolverState () {\n    \tthis.node?.getWorldPosition(this.solverPosition);\n    \tthis.node?.getWorldRotation(this.solverRotation);\n    }\n\n    public updateSolverLocalState () {\n    \tthis.node?.getPosition(this.solverPosition);\n    \tthis.node?.getRotation(this.solverRotation);\n    }\n}","import { _decorator,  Node, Vec3,  Quat, log } from 'cc';\nimport { DEBUG } from 'cc/env';\nimport MathUtil from './math-util';\nimport IKBone from './ik-bone';\nimport IKSolverHeuristic from './ik-solver-heuristic';\nconst { ccclass, property } = _decorator;\n\nlet _tempVec3 = new Vec3;\nlet _tempVec3_2 = new Vec3;\nlet _tempVec3_3 = new Vec3;\nlet _tempQuat = new Quat;\nlet _tempQuat_2 = new Quat;\nlet _time = 0;\n\n@ccclass('IKSolverAim')\nexport default class IKSolverAim extends IKSolverHeuristic {\n    @property({ type: Node, tooltip: 'The transform that we want to aim at ikPosition.' })\n\tpublic aimNode: Node | null = null;\n\n    @property({ type: Node, tooltip: 'The transform that we want to aim at ikPosition.' })\n    public rootNode: Node | null = null;\n\n    @property({ tooltip: 'The local axis of the Transform that you want to be aimed at ikPosition.' })\n    public axis:Vec3 = new Vec3(0, 0, 1);\n\n    @property({ tooltip: 'Keeps that axis of the Aim Transform directed at the polePosition.' })\n    public poleAxis:Vec3 = new Vec3(0, 1, 0);\n\n    @property({ tooltip: 'The position in world space to keep the pole axis of the Aim Transform directed at' })\n    public polePosition: Vec3 = new Vec3();\n\n    @property({ tooltip: 'The weight of the Pole.' })\n    public poleWeight:number = 0;\n\n    @property({ type: Node, tooltip: 'If assigned, will automatically set polePosition to the position of this Transform.' })\n    public poleTarget:Node | null = null;\n\n    @property({ tooltip: 'Clamping rotation of the solver. 0 is free rotation, 1 is completely clamped to transform axis.' })\n    public clampWeight:number = 0;\n\n    @property({ tooltip: 'Number of sine smoothing iterations applied to clamping to make it smoother' })\n    public clampSmoothing:number = 2;\n\n    protected minBones: number = 1;\n    private _step : number = 0;\n    private _clampedIKPosition:Vec3 = new Vec3;\n    private _lastNode: Node|null = null;\n    private _transformPoleAxis: Vec3 = new Vec3;\n    private _transformAxis: Vec3 = new Vec3;\n\n    public getAngle ():number {\n    \tVec3.subtract(_tempVec3_3, this.ikPosition, this.aimNode!.getWorldPosition());\n    \treturn MathUtil.radiansToDegrees(Vec3.angle(this.transformAxis, _tempVec3_3));\n    }\n\n    // Gets the Axis of the AimTransform is world space.\n    public get transformAxis (): Vec3 {\n    \tVec3.transformQuat(this._transformAxis, this.axis, this.aimNode!.getWorldRotation());\n    \treturn Vec3.clone(this._transformAxis);\n    }\n\n    // Gets the Pole Axis of the AimTransform is world space.\n    public get transformPoleAxis () :Vec3 {\n    \treturn Vec3.transformQuat(this._transformPoleAxis, this.poleAxis, this.aimNode!.getWorldRotation());\n    }\n\n    protected onInitiate () {\n    \tif ((this.firstInitiation) && this.aimNode != null) {\n    \t\tVec3.add(this.ikPosition, this.aimNode.getWorldPosition(), this.transformAxis.multiplyScalar(3));\n    \t\tVec3.add(this.polePosition, this.aimNode.getWorldPosition(), this.transformPoleAxis.multiplyScalar(3));\n    \t}\n\n    \tthis._step = 1.0 / this.bones.length;\n    \tthis.axis.normalize();\n    }\n\n    protected onUpdate () {\n    \tif (this.axis.equals(Vec3.ZERO)) {\n    \t\tif (!DEBUG) log(\"IKSolverAim axis is Vector3.zero.\");\n    \t\treturn;\n    \t}\n\n    \tif (this.poleAxis.equals(Vec3.ZERO) && this.poleWeight > 0) {\n    \t\tif (!DEBUG) log(\"IKSolverAim poleAxis is Vector3.zero.\");\n    \t\treturn;\n    \t}\n\n    \tif (this.target != null) this.target.getWorldPosition(this.ikPosition);\n    \tif (this.poleTarget != null) this.poleTarget.getWorldPosition(this.polePosition);\n\n    \tif (this.XY) this.ikPosition.z = this.bones[0].node!.getWorldPosition().z;\n\n    \t// Clamping weights\n    \tif (this.ikPositionWeight <= 0) {\n    \t\t_time = 0;\n    \t\treturn;\n    \t}\n    \tthis.ikPositionWeight = MathUtil.clamp(this.ikPositionWeight, 0.0, 1.0);\n\n    \t// Rotation Limit on the Aim Transform\n    \tif (this.aimNode != this._lastNode) {\n    \t\tthis._lastNode = this.aimNode;\n    \t}\n\n    \t// In case transform becomes unassigned in runtime\n    \tif (this.aimNode == null) {\n    \t\tif (!DEBUG) log(\"Aim Transform unassigned in Aim IK solver. Please Assign a Transform (lineal descendant to the last bone in the spine) that you want to be aimed at ikPosition\");\n    \t\treturn;\n    \t}\n\n    \tthis.clampWeight = MathUtil.clamp(this.clampWeight, 0.0, 1.0);\n    \tthis._clampedIKPosition = this._getClampedIKPosition();\n\n    \tVec3.subtract(_tempVec3, this._clampedIKPosition, this.aimNode.getWorldPosition());\n    \tVec3.multiplyScalar(_tempVec3_2, this.transformAxis, _tempVec3.length());\n\n    \tMathUtil.sLerp(_tempVec3_2, _tempVec3_2, _tempVec3, this.ikPositionWeight);\n    \tVec3.add(this._clampedIKPosition, this.aimNode.getWorldPosition(), _tempVec3_2);\n\n    \t// Iterating the solver\n    \tfor (let i = 0; i < this.maxIterations; i++) {\n    \t\t// Optimizations\n    \t\tif (i >= 1 && this.tolerance > 0 && this.getAngle() < this.tolerance) break;\n    \t\tthis.lastLocalDirection = Vec3.clone(this.localDirection);\n    \t\tthis._solve();\n    \t}\n\n    \tthis.lastLocalDirection = Vec3.clone(this.localDirection);\n    }\n\n    private _solve () {\n    \t// Rotating bones to get closer to target.\n    \tfor (let i = 0; i < this.bones.length - 1; i++) this._rotateToTarget(this._clampedIKPosition, this.bones[i], this._step * (i + 1) * this.ikPositionWeight * this.bones[i].weight);\n    \tthis._rotateToTarget(this._clampedIKPosition, this.bones[this.bones.length - 1], this.ikPositionWeight * this.bones[this.bones.length - 1].weight);\n    }\n\n    private _getClampedIKPosition ():Vec3 {\n    \tif (this.clampWeight <= 0.0) return Vec3.clone(this.ikPosition);\n    \tif (this.clampWeight >= 1.0) {\n    \t\tVec3.subtract(_tempVec3, this.ikPosition, this.aimNode!.getWorldPosition());\n    \t\tVec3.multiplyScalar(_tempVec3_2, this.transformAxis, _tempVec3.length());\n    \t\tVec3.add(_tempVec3_3, this.aimNode!.getWorldPosition(), _tempVec3_2);\n    \t\treturn Vec3.clone(_tempVec3_3);\n    \t}\n\n    \t// Getting the dot product of IK direction and transformAxis\n    \tVec3.subtract(_tempVec3, this.ikPosition, this.aimNode!.getWorldPosition());\n    \tlet angle = MathUtil.radiansToDegrees(Vec3.angle(this.transformAxis, _tempVec3));\n    \tlet dot = 1.0 - (angle / 180.0);\n\n    \t// Clamping the target\n    \tlet targetClampMlp = this.clampWeight > 0 ? MathUtil.clamp(1.0 - ((this.clampWeight - dot) / (1.0 - dot)), 0.0, 1.0) : 1.0;\n\n    \t// Calculating the clamp multiplier\n    \tlet clampMlp = this.clampWeight > 0 ? MathUtil.clamp(dot / this.clampWeight, 0.0, 1.0) : 1.0;\n\n    \tfor (let i = 0; i < this.clampSmoothing; i++) {\n    \t\tlet sinF = clampMlp * Math.PI * 0.5;\n    \t\tclampMlp = Math.sin(sinF);\n    \t}\n\n    \t// Slerping the IK direction (don't use Lerp here, it breaks it)\n    \tVec3.subtract(_tempVec3, this.ikPosition, this.aimNode!.getWorldPosition());\n    \tVec3.multiplyScalar(_tempVec3_2, this.transformAxis, 10);\n\n    \t// need slerp\n    \tMathUtil.sLerp(_tempVec3_2, _tempVec3_2, _tempVec3, clampMlp * targetClampMlp);\n    \tVec3.add(_tempVec3_3, this.aimNode!.getWorldPosition(), _tempVec3_2);\n    \treturn Vec3.clone(_tempVec3_3);\n    }\n\n    /*\n     * Rotating bone to get transform aim closer to target\n     * */\n    private _rotateToTarget (targetPosition:Vec3, bone:IKBone, weight: number) {\n    \t// Swing\n    \tif (this.XY) {\n    \t\tif (weight >= 0.0) {\n    \t\t\tlet dir = this.transformAxis;\n    \t\t\tVec3.subtract(_tempVec3, targetPosition, this.aimNode!.getWorldPosition());\n\n    \t\t\tlet angleDir = MathUtil.radiansToDegrees(Math.atan2(dir.x, dir.y));\n    \t\t\tlet angleTarget = MathUtil.radiansToDegrees(Math.atan2(_tempVec3.x, _tempVec3.y));\n\n    \t\t\tlet deltaAngle = MathUtil.deltaAngle(angleDir, angleTarget);\n\n    \t\t\tMathUtil.axisAngle(_tempQuat, new Vec3(0, 0, -1), deltaAngle);\n    \t\t\tQuat.multiply(_tempQuat, _tempQuat, bone.node!.getWorldRotation());\n    \t\t\tbone.node?.setRotation(_tempQuat);\n    \t\t}\n    \t} else {\n    \t\tif (weight >= 0.0) {\n    \t\t\tVec3.subtract(_tempVec3, targetPosition, this.aimNode!.getWorldPosition());\n    \t\t\t//  MathUtil.fromToRotation(_tempQuat, this.transformAxis, _tempVec3);\n    \t\t\tQuat.rotationTo(_tempQuat, this.transformAxis.normalize(), _tempVec3.normalize());\n    \t\t\tif (weight >= 1.0) {\n    \t\t\t\tQuat.multiply(_tempQuat, _tempQuat, bone.node!.getWorldRotation());\n                    bone.node!.setWorldRotation(_tempQuat);\n    \t\t\t} else {\n    \t\t\t\tMathUtil.quatLerp(_tempQuat, Quat.IDENTITY, _tempQuat, weight);\n    \t\t\t\tQuat.multiply(_tempQuat, _tempQuat, bone.node!.getWorldRotation());\n\t\t\t\t\tQuat.normalize(_tempQuat, _tempQuat);\n                   \tbone.node!.setWorldRotation(_tempQuat);\n    \t\t\t}\n    \t\t}\n\n    \t\t// Pole\n    \t\tif (this.poleWeight > 0.0) {\n    \t\t\t// wait to do\n    \t\t\t// Vec3.subtract(_tempVec3, this.polePosition , this.aimNode!.getWorldPosition())\n    \t\t\t// // Ortho-normalize to transform axis to make this a twisting only operation\n    \t\t\t// Vec3.copy(_tempVec3_2, _tempVec3);\n    \t\t\t// let normal = this.transformAxis;\n    \t\t\t// Vector3.OrthoNormalize(ref normal, ref poleDirOrtho);\n    \t\t\t// Quaternion toPole = Quaternion.FromToRotation(this.transformPoleAxis, poleDirOrtho);\n    \t\t\t// bone.node.rotation = Quaternion.Lerp(Quaternion.identity, toPole, weight * this.poleWeight) * bone.node.rotation;\n    \t\t}\n    \t}\n\n    }\n\n}","import { _decorator,  Node, Vec3,  Quat,  CCFloat } from 'cc';\nimport MathUtil from './math-util';\nimport IKBone from './ik-bone';\nimport IKPoint from \"./ik-point\";\nimport IKSolver from './ik-solver';\nconst { ccclass, property } = _decorator;\n\nlet _tempVec3 = new Vec3;\nlet _tempVec3_2 = new Vec3;\nlet _tempQuat = new Quat;\nlet _tempQuat_2 = new Quat;\n\n@ccclass('IKSolverHeuristic')\nexport default class IKSolverHeuristic extends IKSolver {\n    @property({ type: Node, tooltip: 'Reference to the AimIK component.' })\n\tpublic target: Node | null = null;\n\n    @property({ tooltip: 'Minimum distance from last reached position. Will stop solving if difference from previous reached position is less than tolerance. If tolerance is zero, will iterate until maxIterations.' })\n    public tolerance: number = 0;\n\n    @property({ tooltip: 'Max iterations per frame.' })\n    public maxIterations:number = 4;\n\n    @property({ tooltip: 'Solve in 2D?' })\n    public XY :boolean = false;\n\n\n    // @property({type:[Node], tooltip: 'boneNodes'})\n    // public boneNodes :Node[] = [];\n\n    // @property({type:[CCFloat],tooltip: 'boneWeights'})\n    // public boneWeights: number [] = [];\n\n\n    // @property({type:[IKBone], tooltip: 'The hierarchy of bones.'})\n    public bones: IKBone [] = [];\n\n    protected lastLocalDirection: Vec3 | null = null;\n    protected chainLength: number = 0;\n    private _localDirection: Vec3 = new Vec3;\n\n    // initBones (){\n    //     this.boneNodes.forEach((node, index)=>{\n    //         this.bones.push(new IKBone(node, this.boneWeights[index]));\n    //     })\n    // }\n\n    public setChain (hierarchy:Node[], root:Node)\n    {\n        if (this.bones == null || this.bones.length != hierarchy.length) this.bones = new Array<IKBone>(hierarchy.length);\n        for (let i = 0; i < hierarchy.length; i++)\n        {\n            if (this.bones[i] == null) this.bones[i] = new IKBone();\n            this.bones[i].node = hierarchy[i];\n        }\n\n        this.initiate(root);\n        return this.initiated;\n    }\n\n    public addBone (bone:Node)\n    {\n        let newBones:Node[] = new Array<Node>(this.bones.length + 1);\n\n        for (let i = 0; i < this.bones.length; i++)\n        {\n            newBones[i] = this.bones[i].node!;\n        }\n\n        newBones[newBones.length - 1] = bone;\n\n        this.setChain(newBones, this.root!);\n    }\n\n    public storeDefaultLocalState ()\n    {\n        for (let i = 0; i < this.bones.length; i++) this.bones[i].storeDefaultLocalState();\n    }\n\n    public fixTransforms ()\n    {\n        if (!this.initiated) return;\n        if (this.ikPositionWeight <= 0.0) return;\n\n        for (let i = 0; i < this.bones.length; i++) this.bones[i].fixTransform();\n    }\n\n    public getPoints ()\n    {\n        return this.bones;\n    }\n\n    public getPoint (node:Node) : IKPoint | null\n    {\n        for (let i = 0; i < this.bones.length; i++) if (this.bones[i].node == node) return this.bones[i] as IKPoint;\n        return null;\n    }\n\n    protected initiateBones ()\n    {\n        this.chainLength = 0;\n\n        for (let i = 0; i < this.bones.length; i++)\n        {\n            // Find out which local axis is directed at child/target position\n            if (i < this.bones.length - 1)\n            {\n                Vec3.subtract(_tempVec3, this.bones[i].node!.getWorldPosition(), this.bones[i + 1].node!.getWorldPosition());\n                this.bones[i].length = _tempVec3.length();\n                this.chainLength += this.bones[i].length;\n\n                this.bones[i + 1].node!.getWorldPosition(_tempVec3_2);\n                Vec3.subtract(_tempVec3_2, _tempVec3_2, this.bones[i].node!.getWorldPosition());\n                Quat.invert(_tempQuat, this.bones[i].node!.getWorldRotation());\n                Vec3.transformQuat(this.bones[i].axis, _tempVec3_2, _tempQuat);\n            }\n            else\n            {\n                Vec3.subtract(_tempVec3, this.bones[this.bones.length - 1].node!.getWorldPosition(), this.bones[0].node!.getWorldPosition());\n                Quat.invert(_tempQuat, this.bones[i].node!.getWorldRotation());\n                Vec3.transformQuat(this.bones[i].axis, _tempVec3_2, _tempQuat);\n            }\n        }\n    }\n\n    protected get localDirection () :Vec3 {\n        MathUtil.directionToNodeSpace(this._localDirection, this.bones[this.bones.length - 1].node!.getWorldPosition().subtract(this.bones[0].node!.getWorldPosition()), this.bones[0].node!);\n        return this._localDirection.clone();\n    }\n\n    protected get positionOffset () : number {\n        return Vec3.lengthSqr(this.localDirection.subtract(this.lastLocalDirection!));\n    }\n\n    protected getSingularityOffset ()\n    {\n        if (!this._singularityDetected()) return Vec3.ZERO;\n\n        Vec3.subtract(_tempVec3, this.ikPosition, this.bones[0].node!.getWorldPosition());\n        _tempVec3.normalize();\n\n        let secondaryDirection:Vec3 = new Vec3(_tempVec3.y, _tempVec3.z, _tempVec3.x);\n        Vec3.cross(_tempVec3, _tempVec3, secondaryDirection);\n\n        return _tempVec3.multiplyScalar(this.bones[this.bones.length - 2].length * 0.5).clone();\n    }\n\n    private _singularityDetected ()\n    {\n        if (!this.initiated) return false;\n\n        Vec3.subtract(_tempVec3, this.bones[this.bones.length - 1].node!.getWorldPosition(), this.bones[0].node!.getWorldPosition());\n        Vec3.subtract(_tempVec3_2, this.ikPosition, this.bones[0].node!.getWorldPosition());\n\n        let toLastBoneDistance =  _tempVec3.length();\n        let toIKPositionDistance =  _tempVec3_2.length();\n\n        if (toLastBoneDistance < toIKPositionDistance) return false;\n        if (toLastBoneDistance < this.chainLength - (this.bones[this.bones.length - 2].length * 0.1)) return false;\n    }\n\n}","import { _decorator, Component, Node, Vec3, RigidBody, physics, v3, Quat, director, quat, CCBoolean } from 'cc';\nimport Bone from './ik-bone';\nconst { ccclass, property } = _decorator;\n\n@ccclass('IKSolver')\nexport default class IKSolver {\n    // @property({type:CCBoolean,tooltip: 'If true, will fix all the Transforms used by the solver to their initial state in each Update. This prevents potential problems with unanimated bones and animator culling with a small cost of performance. Not recommended for CCD and FABRIK solvers.'})\n    public isFixTransforms: boolean = true;\n\n    public initiated: boolean = false;\n    protected root: Node | null = null;\n    protected firstInitiation: boolean = true;\n    public ikPosition: Vec3 = new Vec3();\n    public ikPositionWeight: number = 1.0;\n\n\n    protected onInitiate () {}\n    protected storeDefaultLocalState () {}\n    protected onUpdate () {}\n    protected fixTransforms () {}\n\n    constructor (root:Node) {\n    \tthis.root = root;\n    }\n\n    public initiate (root:Node | null) {\n    \tthis.root = root;\n    \tthis.initiated = false;\n\n    \tthis.onInitiate();\n    \tthis.storeDefaultLocalState();\n    \tthis.initiated = true;\n    \tthis.firstInitiation = false;\n    }\n\n    public lateUpdate () {\n    \tif (this.firstInitiation) this.initiate(this.root); // when the IK component has been disabled in Awake, this will initiate it.\n    \tif (!this.initiated) return;\n\n    \tthis.onUpdate();\n    }\n\n    public static containsDuplicateBone (bones:Bone[]) {\n    \tfor (let i = 0; i < bones.length; i++) {\n    \t\tfor (let i2 = 0; i2 < bones.length; i2++) {\n    \t\t\tif (i != i2 && bones[i].node == bones[i2].node) return bones[i].node;\n    \t\t}\n    \t}\n    \treturn null;\n    }\n\n    public update () {\n    \tthis.isFixTransforms && this.fixTransforms();\n    }\n}","import { _decorator, Color, Component, geometry, Node, PhysicsRayResult, PhysicsSystem, v3, Vec2, Vec3, CCFloat } from 'cc';\nimport { Gizmo, Util, UtilVec3 } from '../../core/util/util';\nimport { FxRayLine } from '../effect/fx-ray-line';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('InfraredTracker')\n@executeInEditMode\nexport class InfraredTracker extends Component {\n\n    @property([CCFloat])\n    masks: number[] = [];\n\n    @property\n    distance = 300;\n\n    @property(Node)\n    forwardNode: Node | undefined;\n\n    ray: geometry.Ray | undefined;\n\n    target: Node | undefined;\n\n    mask: number = 0;\n\n    hit: PhysicsRayResult | undefined;\n\n    endPosition = v3(0, 0, 0);\n\n    rayLine: FxRayLine | undefined;\n\n    forward = v3(0, 0, 0);\n\n    direction = v3(0, 0, 0);\n\n    onEnable () {\n        this.ray = new geometry.Ray();\n        this.mask = Util.calculateMask(this.masks);\n        this.rayLine = this.node.children[0].getComponent(FxRayLine)!;\n    }\n\n    update (deltaTime: number) {\n        UtilVec3.copy(this.ray!.o, this.node.worldPosition);\n        UtilVec3.copy(this.direction, this.forwardNode!.worldPosition);\n        this.direction.subtract(this.node.worldPosition).normalize();\n        UtilVec3.copy(this.ray!.d, this.direction);\n        this.hit = undefined;\n        this.target = undefined;\n        if (PhysicsSystem.instance.raycastClosest(this.ray!, this.mask, this.distance)) {\n            this.hit = PhysicsSystem.instance.raycastClosestResult;\n        }\n\n        if (this.hit !== undefined) {\n            this.target = this.hit.collider.node;\n            UtilVec3.copy(this.endPosition, this.hit.hitPoint);\n        } else {\n            UtilVec3.copy(this.endPosition, this.node.worldPosition);\n            //console.log('InfraredTracker forward:', this.direction);\n            UtilVec3.scaleDirection(this.endPosition, this.direction, this.distance);\n        }\n\n        // Update ray line.\n        this.rayLine?.setRayLine(this.node.worldPosition, this.endPosition);\n\n        if (EDITOR) Gizmo.drawLine(this.ray!.o, this.endPosition, Color.BLUE);\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, director } from 'cc';\nimport { Game } from '../data/game'\nimport { ResCache } from '../../core/res/res-cache';\nimport { loadTextures } from '../../core/res/res-texture';\n\nconst { ccclass } = _decorator;\n\n@ccclass('Init')\nexport class Init extends Component {\n\n    start () {\n\n        // Set the change node not to be destroyed.\n        director.addPersistRootNode(this.node);\n\n        // Load the resource cache data and execute the initialize game function.\n        ResCache.Instance.load(async () => {\n            console.time('loadTextures')\n            await loadTextures();\n            console.timeEnd('loadTextures')\n            Game.Instance.init();\n        });\n\n    }\n\n    update (deltaTime: number) {\n\n        // Update the main game logic with every frame.\n        Game.Instance.update(deltaTime);\n\n    }\n\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { ActorInput } from '../../logic/actor/actor-input';\nimport { IActorInput } from './IActorInput';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('InputBase')\nexport class InputBase extends Component {\n\n    _actorInput:IActorInput | undefined | null;\n\n    onStart() {\n    }\n\n    onEnd() {}\n\n    onEnable() {\n        this._actorInput = this.node.parent?.getComponent(ActorInput);\n        if (this._actorInput === undefined || this._actorInput === null) {\n            throw new Error(`Not find Actor Input. node is : ${this.node.name}`);\n        }\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, EventKeyboard, EventMouse, EventTouch, game, Input, input, KeyCode, v2, v3, Vec2 } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { UtilVec2 } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('InputEquipSelect')\nexport class InputEquipSelect extends Component {\n\n    center:Vec2 = v2(0, 0);\n\n    current:Vec2 = v2(0, 0);\n\n    time_wait = 0.3;\n    \n    start() {\n        this.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        //input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n        this.node.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    }\n\n    onTouchMove(event: EventTouch) {\n\n        this.center.x = game.canvas!.width/2\n        this.center.y = game.canvas!.height/2;\n\n        UtilVec2.c(this.current, event.getLocation());\n        this.current.subtract(this.center);\n\n        Msg.emit('msg_select_equip', this.current.normalize());\n    }\n\n    onMouseMove(event: EventMouse) {\n\n        this.center.x = game.canvas!.width/2\n        this.center.y = game.canvas!.height/2;\n\n        UtilVec2.c(this.current, event.getLocation());\n        this.current.subtract(this.center);\n\n        Msg.emit('msg_select_equip', this.current.normalize());\n    }\n\n}\n\n","import { _decorator, Component, Node, Input, EventGamepad, Vec2, v3, game, Vec3, input, v2 } from 'cc';\nimport { UtilVec3 } from '../util/util';\nimport { InputBase } from './input-base';\nimport { Msg } from '../msg/msg';\nconst { ccclass, property } = _decorator;\n\nexport let isGamePad = false;\n\n@ccclass('InputGamepad')\nexport class InputGamepad extends InputBase {\n\n    offset_euler = -45;\n    move_a = 50;\n    move_speed = 50;\n    _v_increase_move = 0;\n    _move = 0.1;\n    _dir = v3(0, 0, 0);\n    _move_v3 = v3(0, 0, 0);\n    _key_count = 0;\n    _curKeyJump = 0;\n    _move_dir = v3(0, 0, 0);\n\n    _isChangeEquips:boolean | undefined = false;\n\n    _checkGamepadTime = 2;\n\n    start() {\n        input.on(Input.EventType.GAMEPAD_INPUT, this.onGamePad_Input, this);\n        this.offset_euler *= Math.PI / 180;\n    }\n\n    onDestroy() {\n        input.off(Input.EventType.GAMEPAD_INPUT, this.onGamePad_Input, this);\n    }\n\n    onGamePad_Input(event: EventGamepad) {\n\n        this._checkGamepadTime = 2;\n        isGamePad = true;\n\n        const leftStickXAxis = event.gamepad.leftStick.xAxis.getValue();\n        const leftStickYAxis = event.gamepad.leftStick.yAxis.getValue();\n\n        this.onMove(leftStickXAxis, -leftStickYAxis);\n\n        const rightStickXAxis = event.gamepad.rightStick.xAxis.getValue();\n        const rightStickYAxis = event.gamepad.rightStick.yAxis.getValue();\n\n        this.onRotation(rightStickXAxis * 5, rightStickYAxis * 5);\n\n        const isFire = event.gamepad.buttonR1.getValue();\n        if(isFire) this._actorInput?.onFire();\n\n        const isJump = event.gamepad.buttonR2.getValue();\n        if(isJump) this._actorInput?.onJump();\n\n        const isRun = event.gamepad.buttonL2.getValue();\n        this._actorInput?.onRun(isRun === 1);\n\n        const isChangeWeapon = event.gamepad.buttonL1.getValue();\n        if(isChangeWeapon) {\n            this._isChangeEquips = this._actorInput?.onChangeEquips();\n        }\n\n        const isReload = event.gamepad.buttonEast.getValue();\n        if(isReload) this._actorInput?.onReload();\n\n\n\n        const isCrouch = event.gamepad.buttonWest.getValue();\n        if(isCrouch) this._actorInput?.onCrouch();\n\n        //const isProne = event.gamepad.buttonNorth.getValue();\n        //if(isProne) this._actorInput?.onProne();\n\n        const isPick = event.gamepad.buttonSouth.getValue();\n        if(isPick) this._actorInput?.onPick();\n\n        const isPause = event.gamepad.buttonOptions.getValue();\n        if(isPause) this._actorInput?.onPause();\n\n    }\n\n\n    onMove(x:number, z:number) {\n        this._dir.x = x;\n        this._dir.z = z;\n        this._dir.y = 0;\n        this.onUpdateMove();\n    }\n\n    onUpdateMove() {\n        UtilVec3.copy(this._move_v3, this._dir);\n        Vec3.rotateY(this._move_v3, this._move_v3, Vec3.ZERO, this.offset_euler);\n        if (this._move_v3.length() !== 0) UtilVec3.copy(this._move_dir, this._move_v3);\n        this._actorInput?.onMove(this._move_v3);\n    }\n\n\n    onRotation(deltaX:number, deltaY:number) {\n\n        if(this._isChangeEquips) {\n            console.log('select_equip', deltaX, deltaY);\n            Msg.emit('msg_select_equip', v2(deltaX, deltaY));\n            return;\n        }\n\n        this._actorInput?.onRotation(deltaX, -deltaY);\n    }\n\n    update(deltaTime:number) {\n\n        this._checkGamepadTime -= deltaTime;\n        if(this._checkGamepadTime < 0) {\n            isGamePad = false;\n        }\n\n\n    }\n\n\n}\n\n","\r\nimport { _decorator, Component, Node, EventKeyboard, input, Input } from 'cc';\r\nimport { Msg } from '../msg/msg';\r\nimport { Res } from '../res/res';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport class InputHandle {\r\n\r\n    static _map = Object.create(null);\r\n\r\n    public static Init () {\r\n        Res.loadJson('data/input', (err, asset)=>{\r\n            if (asset) {\r\n                this._map = asset.json;\r\n                console.log(this._map);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static create(type: string) {\r\n        \r\n    }\r\n\r\n    public static do(key:string, id:number, data?: null | any) {\r\n        const sendKey = id + this._map[key];\r\n        if (sendKey) {\r\n            Msg.emit(sendKey, data);\r\n        }else{\r\n            console.log('Not defined key' + key)\r\n        }\r\n    }\r\n\r\n}\r\n","import { _decorator, Camera, Canvas, Component, Node, v2, Vec2, Vec3 } from 'cc';\nimport { InputBase } from './input-base';\nimport { Msg } from '../msg/msg';\nimport { CameraSetting } from '../../../../extensions/pipeline/pipeline/camera-setting';\nimport { UI } from '../ui/ui';\nimport { ActorInput } from '../../logic/actor/actor-input';\nconst { ccclass, property } = _decorator;\n\n@ccclass('InputJoystick')\nexport class InputJoystick extends InputBase {\n\n    _isRun = false;\n\n    _isChangeEquips:boolean | undefined = false;\n\n    start() {\n        this.node.on('onAutoFireStart', this.onAutoFireStart, this);\n        this.node.on('onAutoFireEnd', this.onAutoFireEnd, this);\n    }\n\n    onEnable () {\n        this._actorInput = ActorInput.inst;\n    }\n\n    onDestroy() {\n        this.node.on('onAutoFireStart', this.onAutoFireStart, this);\n        this.node.on('onAutoFireEnd', this.onAutoFireEnd, this);\n    }\n\n    onChangeEquips() {\n        //this._isChangeEquips = this._actorInput?.onChangeEquips();\n        Msg.emit('push', 'select_equips');\n    }\n\n    onMove(dir:Vec3) {\n        this._actorInput?.onMove(dir);\n    }\n\n    onFire() {\n        this._actorInput?.onFire();\n    }\n\n    onAutoFireStart() {\n        this._actorInput?.onAutoFire(true);\n    }\n\n    onAutoFireEnd() {\n        this._actorInput?.onAutoFire(false);\n    }\n\n    onFireStart() {\n\n    }\n\n    onFireEnd() {\n        \n    }\n\n    onJump() {\n        this._actorInput?.onJump();\n    }\n\n    onCrouch() {\n        this._actorInput?.onCrouch();\n    }\n\n    onProne() {\n        //this._actorInput?.onProne();\n    }\n\n    onAim() {\n        this._actorInput?.onAim(undefined);\n    }\n\n    onPick() {\n        this._actorInput?.onPick();\n    }\n\n    onDrop() {\n        this._actorInput?.onDrop();\n    }\n\n    onReload() {\n        this._actorInput?.onReload();\n    }\n\n    onRun() {\n        this._isRun = !this._isRun;\n        this._actorInput?.onRun(this._isRun);\n    }\n\n    onPause() {\n        //this._actorInput?.onPause();\n        Msg.emit('push', 'level_pause');\n    }\n\n    onSetRun(isRun:boolean) {\n        this._isRun = isRun;\n        this._actorInput?.onRun(isRun);\n    }\n\n    onRotation(deltaX:number, deltaY:number) {\n\n        if(this._isChangeEquips) {\n            Msg.emit('msg_select_equip', v2(deltaX, deltaY));\n            return;\n        }\n\n        this._actorInput?.onRotation(deltaX/5, -deltaY/5);\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, EventKeyboard, input, Input, KeyCode, game, v3, EventMouse, } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { InputBase } from './input-base';\nimport { fun } from '../util/fun';\nimport { Level } from '../../logic/level/level';\nconst { ccclass, property } = _decorator;\n\nlet _pointerLock = false;\n\n@ccclass('InputKeyboard')\nexport class InputKeyboard extends InputBase {\n\n    move_a = 50;\n    move_speed = 50;\n\n    _dir = v3(0, 0, 0);\n    key_count = 0;\n\n    _pressQ = false;\n\n    direction_up = 0;\n    direction_down = 0;\n    direction_left = 0;\n    direction_right = 0;\n\n    _isPause = false;\n\n    start () {\n\n        // Register keyboard events.\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n\n        // Register mouse events.\n        input.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\n        input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\n        input.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        document.addEventListener('pointerlockchange', this.onPointerChange, false);\n\n    }\n\n    onPointerChange () {\n        if (document.pointerLockElement === game.canvas) {\n            _pointerLock = true;\n        } else {\n            fun.delay(() => {\n                _pointerLock = false;\n            }, 2);\n        }\n    }\n\n    onDestroy () {\n        input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\n\n        input.off(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\n        input.off(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n\n        document.removeEventListener('pointerlockchange', this.onPointerChange, false);\n    }\n\n    hasKey (event: EventKeyboard): boolean {\n        return (event.keyCode === KeyCode.KEY_W ||\n            event.keyCode === KeyCode.KEY_S ||\n            event.keyCode === KeyCode.KEY_A ||\n            event.keyCode === KeyCode.KEY_D ||\n            event.keyCode === KeyCode.KEY_E ||\n            event.keyCode === KeyCode.KEY_G ||\n            event.keyCode === KeyCode.KEY_Q ||\n            event.keyCode === KeyCode.KEY_C ||\n            event.keyCode === KeyCode.KEY_N ||\n            event.keyCode === KeyCode.KEY_R ||\n            event.keyCode === KeyCode.SPACE ||\n            event.keyCode === KeyCode.ARROW_UP ||\n            event.keyCode === KeyCode.ARROW_LEFT ||\n            event.keyCode === KeyCode.ARROW_RIGHT ||\n            event.keyCode === KeyCode.ARROW_DOWN ||\n            event.keyCode === KeyCode.SHIFT_LEFT ||\n            event.keyCode === KeyCode.ESCAPE ||\n            event.keyCode === KeyCode.KEY_T\n        );\n    }\n\n    onKeyDown (event: EventKeyboard) {\n\n        if (Level.Instance.stop) {\n            this.clear();\n            return;\n        }\n\n        if (!this.hasKey(event)) return;\n\n        this.key_count++;\n\n        if (event.keyCode === KeyCode.KEY_W || event.keyCode === KeyCode.ARROW_UP) this.direction_up = 1;\n        if (event.keyCode === KeyCode.KEY_S || event.keyCode === KeyCode.ARROW_DOWN) this.direction_down = -1;\n        if (event.keyCode === KeyCode.KEY_A || event.keyCode === KeyCode.ARROW_LEFT) this.direction_left = 1;\n        if (event.keyCode === KeyCode.KEY_D || event.keyCode === KeyCode.ARROW_RIGHT) this.direction_right = -1;\n\n\n        if (event.keyCode === KeyCode.KEY_Q) {\n            this._actorInput?.onChangeEquips();\n            document.exitPointerLock();\n\n        }\n\n        if (event.keyCode === KeyCode.SPACE) this._actorInput?.onJump();\n        if (event.keyCode === KeyCode.KEY_C) this._actorInput?.onCrouch();\n        if (event.keyCode === KeyCode.KEY_N) this._actorInput?.onAim(undefined);\n        if (event.keyCode === KeyCode.KEY_E) this._actorInput?.onPick();\n        if (event.keyCode === KeyCode.KEY_G) this._actorInput?.onDrop();\n        if (event.keyCode === KeyCode.KEY_R) this._actorInput?.onReload();\n        if (event.keyCode === KeyCode.SHIFT_LEFT) this._actorInput?.onRun(true);\n\n        if (event.keyCode === KeyCode.KEY_T) Msg.emit('msg_change_tps_camera_target', 2);\n\n    }\n\n    onKeyUp (event: EventKeyboard) {\n\n        if (Level.Instance.stop) {\n            this.clear();\n            return;\n        }\n\n        if (event.keyCode === 0 || this.key_count <= 0) {\n            this._pressQ = false;\n            this.clear();\n            return;\n        }\n\n        if (!this.hasKey(event)) return;\n\n        this.key_count--;\n\n        if (event.keyCode === KeyCode.KEY_W || event.keyCode === KeyCode.ARROW_UP) this.direction_up = 0;\n        if (event.keyCode === KeyCode.KEY_S || event.keyCode === KeyCode.ARROW_DOWN) this.direction_down = 0;\n        if (event.keyCode === KeyCode.KEY_A || event.keyCode === KeyCode.ARROW_LEFT) this.direction_left = 0;\n        if (event.keyCode === KeyCode.KEY_D || event.keyCode === KeyCode.ARROW_RIGHT) this.direction_right = 0;\n\n        if (event.keyCode === KeyCode.SHIFT_LEFT) this._actorInput?.onRun(false);\n        if (event.keyCode === KeyCode.ESCAPE) {\n            this._actorInput?.onPause();\n        }\n\n    }\n\n    onMouseDown (event: EventMouse) {\n\n        if (Level.Instance.stop) {\n            this.clear();\n            return;\n        }\n\n        if (event.getButton() === 0) {\n            this._actorInput?.onAutoFire(true);\n            this._actorInput?.onFire();\n        }\n\n    }\n\n    onMouseUp (event: EventMouse) {\n\n        if (event.getButton() === 0) {\n            this._actorInput?.onAutoFire(false);\n        }\n\n    }\n\n    onMouseMove (event: EventMouse) {\n\n        if (Level.Instance.stop) {\n            this.clear();\n            return;\n        }\n\n        const x = event.movementX;\n        const y = event.movementY;\n\n        const screenXRate = x / game.canvas!.width;\n        const screenYRate = y / game.canvas!.height;\n\n        const rotateX = 360 * screenXRate;\n        const rotateY = 180 * screenYRate;\n\n        this._actorInput?.onRotation(rotateX, rotateY);//event.movementX / 5, event.movementY / 10);\n    }\n\n    onMove () {\n        //if (document.pointerLockElement === null && sys.isBrowser) return;\n        this._dir.x = this.direction_left + this.direction_right;\n        this._dir.z = this.direction_up + this.direction_down;\n        this._dir.y = 0;\n        this._actorInput?.onMove(this._dir.normalize());\n    }\n\n    clear () {\n        this.direction_up = 0;\n        this.direction_down = 0;\n        this.direction_left = 0;\n        this.direction_right = 0;\n    }\n\n    update (deltaTime: number) {\n        this.onMove();\n    }\n}\n\n","import { _decorator, Component, Node, find, Camera, input, Input, EventTouch, director, PhysicsSystem, EventMouse, geometry, v2 } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { InputBase } from './input-base';\nconst { ccclass, property } = _decorator;\n\n@ccclass('InputMouse')\nexport class InputMouse extends InputBase {\n\n    _ray: geometry.Ray = new geometry.Ray();\n    _screenPos = v2(0, 0);\n    _camera: Camera = Object.create(null);\n\n    @property\n    mask_group = 3;\n\n    start () {\n        var cameraCtr = find('camera_controller');\n        if (cameraCtr) {\n            this._camera = cameraCtr.children[0].children[0].getComponent(Camera);\n        } else {\n            console.warn('Can not find camera-controller.');\n        }\n        input.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        input.on(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onDestroy () {\n        input.off(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        input.off(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onTouchStart (event: EventTouch) {\n        //this._actorInput?.onStart(); \n    }\n\n    onTouchMove (event: EventTouch) {\n        const mask = (1 << this.mask_group);\n        event.getLocation(this._screenPos);\n        let shadingScale = director.root.pipeline.pipelineSceneData.shadingScale\n        this._camera.screenPointToRay(this._screenPos.x * shadingScale, this._screenPos.y * shadingScale, this._ray);\n        if (PhysicsSystem.instance.raycastClosest(this._ray, mask, 100)) {\n            var res = PhysicsSystem.instance.raycastClosestResult;\n            var hit = res.hitPoint;\n            hit.subtract(res.collider.node.worldPosition);\n            hit.y = 0;\n            //this._actorInput?.onMove(hit, undefined);\n        }\n    }\n\n    onMouseMove (event: EventMouse) {\n        const mask = (1 << this.mask_group);\n        event.getLocation(this._screenPos);\n        let shadingScale = director.root.pipeline.pipelineSceneData.shadingScale\n        this._camera.screenPointToRay(this._screenPos.x * shadingScale, this._screenPos.y * shadingScale, this._ray);\n        if (PhysicsSystem.instance.raycastClosest(this._ray, mask, 100)) {\n            var res = PhysicsSystem.instance.raycastClosestResult;\n            var hit = res.hitPoint;\n            hit.subtract(res.collider.node.worldPosition);\n            hit.y = 0;\n            //this._actorInput?.onMove(hit, undefined);\n        }\n    }\n\n    onTouchEnd (event: EventTouch) {\n        //this._actorInput?.onEnd();\n    }\n\n    onTouchCancel(event: EventTouch) {\n        //this._actorInput?.onEnd();\n    }\n\n}","import { _decorator, Component, EventKeyboard, EventMouse, game, Input, input, KeyCode, Node } from 'cc';\nimport { fun } from '../util/fun';\nimport { Msg } from '../msg/msg';\nconst { ccclass, property } = _decorator;\n\nexport let _pointerLock = false;\n\n@ccclass('InputPointerLock')\nexport class InputPointerLock extends Component {\n\n    start() {\n        document.addEventListener('pointerlockchange', this.onPointerChange, false);\n        input.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\n\n        // Register keyboard events.\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n\n        //Msg.on('msg_point')\n    }\n\n    onDestroy() {\n        document.removeEventListener('pointerlockchange', this.onPointerChange, false);\n        input.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\n    }\n\n    onPointerChange() {\n        if(document.pointerLockElement === game.canvas) {\n            _pointerLock = true;\n        }else{\n            fun.delay(()=>{\n                _pointerLock = false;\n            }, 2);\n        }\n    }\n\n    onMouseDown(event: EventMouse) {\n\n        if (!_pointerLock) {\n            try {\n                if(game.canvas?.requestPointerLock) {\n                    game.canvas?.requestPointerLock();\n                }\n            }catch (error) {\n                console.warn(error);\n            }            \n            return;\n        }\n    }\n\n    onKeyDown(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.ESCAPE) {\n            document.exitPointerLock();\n        }\n    }\n\n}\n\n","import { director, geometry, MeshRenderer, Node, renderer, Vec3 } from 'cc';\nimport { BaseStage } from './stages/base-stage';\n\nexport enum InstancedQueueType {\n    MapGrass,\n    Terrain,\n}\n\nclass InstancedAreaItem {\n    id = -1\n    bounding = new geometry.AABB\n    queue: any\n\n    constructor (x, y, z, halfExtent, id) {\n        let forwardStage = BaseStage.forwardStage as any;\n        if (forwardStage) {\n            this.queue = new (forwardStage._instancedQueue.constructor)();\n        }\n\n        this.bounding.center.set(x + halfExtent, y + halfExtent, z + halfExtent)\n        this.bounding.halfExtents.set(halfExtent, halfExtent, halfExtent)\n\n        this.id = id\n    }\n}\n\nclass InstancedArea {\n    items: Map<number, InstancedAreaItem> = new Map;\n\n    distanceToCulling = 25\n\n    add (node: Node) {\n        const ItemExtent = 5\n        const SizeEachRow = 10\n\n        let pos = node.worldPosition\n        let index = Math.floor(pos.x / ItemExtent) + Math.floor(pos.z / ItemExtent) * SizeEachRow + Math.floor(pos.y / ItemExtent) * SizeEachRow * SizeEachRow\n        let item = this.items.get(index)\n        if (!item) {\n            item = new InstancedAreaItem(Math.floor(pos.x / ItemExtent) * ItemExtent, Math.floor(pos.y / ItemExtent) * ItemExtent, Math.floor(pos.z / ItemExtent) * ItemExtent, ItemExtent / 2, index)\n            this.items.set(index, item)\n        }\n\n        let q = item.queue;\n\n        let mrs = node.getComponentsInChildren(MeshRenderer);\n        mrs.forEach((mr: MeshRenderer) => {\n            if (!mr.node.active) {\n                return;\n            }\n\n            // if (!mr.model) {\n            //     (mr.node as any)._activeInHierarchy = true;\n            //     (mr as any)._updateModels();\n            // }\n\n            let model = mr.model;\n            mr.node.updateWorldTransform();\n            (model as any)._localDataUpdated = true;\n            model.updateUBOs(0);\n\n            let passIdx = 0;\n            for (let i = 0; i < model.subModels.length; i++) {\n                const instancedBuffer = model.subModels[i].passes[passIdx].getInstancedBuffer(index);\n                instancedBuffer.merge(model.subModels[i], model.instancedAttributes, passIdx);\n                q.queue.add(instancedBuffer);\n            }\n        })\n\n        // let total = 0\n        // this.items.forEach(i => {\n        //     i.queue.queue.forEach(ib => {\n        //         ib.instances.forEach(i => {\n        //             total += i.count\n        //         })\n        //     })\n        // })\n    }\n\n    clear () {\n        this.items.forEach(i => {\n            i.queue.clear()\n        })\n    }\n\n    enable (enabled: boolean, camera: renderer.scene.Camera) {\n        let forwardStage = BaseStage.forwardStage as any;\n\n        let enableDistanceCulling = director.getScene().name !== 'scene-logo'\n\n        let frustum = camera && camera.frustum\n        this.items.forEach(i => {\n            let q = i.queue\n            let index = forwardStage.additiveInstanceQueues.indexOf(q);\n            if (enabled) {\n                if (frustum && !geometry.intersect.aabbFrustum(i.bounding, frustum)) {\n                    return\n                }\n                if (enableDistanceCulling) {\n                    let dist = Vec3.distance(camera.node.worldPosition, i.bounding.center)\n                    if (dist > this.distanceToCulling) {\n                        return\n                    }\n                }\n                if (q && index == -1) {\n                    forwardStage.additiveInstanceQueues.push(q);\n                }\n            }\n            else {\n                if (index !== -1) {\n                    forwardStage.additiveInstanceQueues.splice(index, 1);\n                }\n            }\n        })\n    }\n}\n\nclass InstancedQueue {\n    _queues: InstancedArea[] = [];\n\n    clear (type: InstancedQueueType) {\n        let q = this._queues[type];\n        if (q) {\n            q.clear();\n        }\n    }\n\n    get (type: InstancedQueueType) {\n        let q = this._queues[type];\n\n        if (!q) {\n            q = this._queues[type] = new InstancedArea()\n        }\n\n        return q;\n    }\n\n    enable (type: InstancedQueueType, enabled: boolean, camera: renderer.scene.Camera) {\n        let forwardStage = BaseStage.forwardStage as any;\n        if (!forwardStage || !forwardStage.additiveInstanceQueues) {\n            return;\n        }\n\n        let q = this._queues[type];\n        if (q) {\n            q.enable(enabled, camera)\n        }\n    }\n\n    enableAll (enabled: boolean, camera: renderer.scene.Camera) {\n        let forwardStage = BaseStage.forwardStage as any;\n        if (!forwardStage || !forwardStage.additiveInstanceQueues) {\n            return;\n        }\n\n        for (let i = 0; i < this._queues.length; i++) {\n            let q = this._queues[i];\n            if (q) {\n                q.enable(enabled, camera)\n            }\n        }\n    }\n\n    add (type: InstancedQueueType, node: Node) {\n        let q = this.get(type);\n        if (q) {\n            q.add(node)\n        }\n    }\n}\n\nexport let instancedQueue = new InstancedQueue;\nglobalThis.instancedQueue = instancedQueue;\n","import { sys, native } from \"cc\";\n\nexport class IO {\n    \n    public static getNum (name: string): number {\n        var val = this.read(name);\n        if (val.search('.') === -1) {\n            var num = Number.parseInt(val);\n        } else {\n            var num = Number.parseFloat(val);\n        }\n        if (!num) {\n            num = 0;\n        }\n        return num;\n    }\n\n    public static write (path: string, data: string): void {\n        try { \n            if (sys.isNative) {\n                native.fileUtils.writeStringToFile(data, path);\n            }else{\n                sys.localStorage.setItem(path, data);\n            }\n        } catch (error) {\n            console.error('can not write:', error);\n        }\n\n    }\n\n    public static read (path: string): string {\n        try {\n            if (sys.isNative) {\n                return native.fileUtils.getStringFromFile(path);\n            }else{\n                return sys.localStorage.getItem(path);\n            }\n            \n        }\n        catch (err) {\n            console.error(err);\n            return ''\n        }\n    }\n\n    public static delete (name: string) {\n        sys.localStorage.removeItem(name);\n    }\n\n    public static exist (path: string): boolean {\n        let item = sys.localStorage.getItem(path)\n        return item && item.length > 0;\n    }\n\n}\n","import { _decorator, Component, Node, SpriteComponent, Color, math } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('JoystickAutoHidden')\nexport class JoystickAutoHidden extends Component {\n\n\n    @property\n    smooth = 5;\n\n    @property\n    hidden_delay_time = 3;\n\n    @property\n    hidden_alpha = 100;\n\n    _color = new Color(0, 0, 0, 1);\n\n    _isHidden = false;\n\n    _sprite:SpriteComponent | undefined\n\n    _alpha = 255;\n\n    _cur_alpha = 255;\n\n    _delay = 0;\n\n    start() {\n        this._sprite = this.getComponent(SpriteComponent)!;\n        this.node.on('autoHidden', this.autoHidden, this);\n        this._delay = this.hidden_delay_time;\n\n        this._cur_alpha = this.hidden_alpha;\n        this._color.a = this._cur_alpha;\n        this._sprite.color = this._color;\n    }\n\n    update(deltaTime: number) {\n\n        this._delay -= deltaTime;\n        if (this._delay < 0) {\n            this._cur_alpha = math.lerp(this._cur_alpha, this._alpha, deltaTime * this.smooth);\n            this._color.a = this._cur_alpha;\n            this._sprite!.color = this._color;\n        }\n        \n    }\n\n    autoHidden(isHidden:boolean) {\n        this._isHidden = isHidden;\n        this._alpha = this._isHidden ? this.hidden_alpha : 255;\n        this._delay = this._isHidden ? this.hidden_delay_time : 0;\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, Vec3, Input, EventTouch, v3, Vec2, v2, Rect, UITransform, game, Camera, CCFloat, CCBoolean } from 'cc';\nimport { InputJoystick } from './input-joystick';\nimport { UI } from '../ui/ui';\nimport { UtilVec3 } from '../util/util';\nimport { fun } from '../util/fun';\nconst { ccclass, property } = _decorator;\n\n@ccclass('JoystickMove')\nexport class JoystickMove extends Component {\n\n    @property(CCFloat)\n    radius = 20;\n\n    @property(CCFloat)\n    smooth = 5;\n\n    @property(CCBoolean)\n    autoHidden: Boolean = false\n\n    @property(CCFloat)\n    runRadius = 80;\n\n    _pos: Vec3 = v3(0, 0, 0);\n    _movePos: Vec3 = v3(0, 0, 0);\n\n    _tempMove: Vec3 = v3(0, 0, 0);\n\n    _moveNode: Node | undefined;\n    _bgNode: Node | undefined;\n\n    _input: InputJoystick | undefined;\n\n    ui_camera: Camera | undefined;\n\n    screenVec3 = v3(0, 0, 0);\n    screenCenter = v3(0, 0, 0);\n    worldPosition = v3(0, 0, 0);\n\n    isStart = false;\n\n    @property(Node)\n    nodeTestCenter: Node | undefined;\n\n    start () {\n\n        //bind input joystick\n        this._input = this.node.parent!.getComponent(InputJoystick)!;\n\n        //Get the joystick node.\n        this._bgNode = this.node.children[0];\n        this._moveNode = this._bgNode.children[0];\n\n        // Register for touch events.\n        this.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n\n        //Get the ui camera.\n        this.ui_camera = UI.Instance.camera;\n\n        fun.delay(() => {\n            // Init default position.\n            UtilVec3.copy(this._pos, this.node.worldPosition);\n        }, 1)\n\n    }\n\n    /**\n     * Unregister when the node is destroyed.\n     */\n    onDestroy () {\n        this.node.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.off(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onTouchStart (event: EventTouch) {\n\n        this.isStart = true;\n\n        // Get the center screen coordinates.\n        this.ui_camera?.worldToScreen(this.node.worldPosition, this.screenCenter);\n\n        this.calculateMoveDirection(event);\n\n        if (this.autoHidden) this.node.emit('autoHidden', false);\n    }\n\n    /**\n     * On touch move event.\n     * @param event \n     */\n    onTouchMove (event: EventTouch) {\n\n        this.calculateMoveDirection(event);\n    }\n\n    /**\n     * On touch end event.\n     * @param event \n     */\n    onTouchEnd (event: EventTouch) {\n        this.cancelTouch(event);\n    }\n\n    /**\n     * On touch cancel event.\n     * @param event \n     */\n    onTouchCancel (event: EventTouch) {\n        this.cancelTouch(event);\n    }\n\n    /**\n     * Calculate the direction of movement of the character.\n     * @param event \n     */\n    calculateMoveDirection (event: EventTouch) {\n\n        this.isStart = false;\n\n        // Get screen coordinates.\n        this._pos.x = event.getLocationX();\n        this._pos.y = event.getLocationY();\n\n        this.screenVec3.x = this._pos.x;\n        this.screenVec3.y = this._pos.y;\n\n        this.ui_camera?.screenToWorld(this.screenVec3, this._pos);\n\n        // Get the movement difference of the touch on the screen.\n        this._pos.subtract(this.node.worldPosition);\n\n        // Get move length.\n        this._pos.z = 0;\n        const len = this._pos.length();\n\n        // Override position beyond move radius.\n        if (len > this.radius) {\n            this._pos.normalize().multiplyScalar(this.radius);\n        }\n\n        // Judging the magnitude of remote sensing to determine whether to run.\n        const isRun = len > this.runRadius;\n\n        UtilVec3.copy(this._tempMove, this._pos);\n\n        //Assign the Y direction of the screen to the Z direction of the movement.\n        this._tempMove.z = this._tempMove.y;\n        this._tempMove.y = 0;\n\n        // Inverts the left and right direction of the telemetry.\n        this._tempMove.x = -this._tempMove.x;\n\n        // Set the character's running state.\n        this._input?.onSetRun(isRun);\n\n        // Call the character input interface to perform the movement operation.\n        this._input?.onMove(this._tempMove.normalize());\n\n        this._pos.add(this.node.worldPosition);\n    }\n\n    /**\n     * The touch event is canceled.\n     */\n    cancelTouch (event: EventTouch) {\n\n        // Reset the touch point to the center.\n        UtilVec3.copy(this._pos, this.node.worldPosition);\n        this._input?.onMove(Vec3.ZERO);\n        if (this.autoHidden) this.node.emit('autoHidden', true);\n    }\n\n    /**\n     * Each frame smoothly updates the remote sensing position.\n     * @param deltaTime \n     */\n    update (deltaTime: number) {\n\n        Vec3.lerp(this._movePos, this._movePos, this._pos, deltaTime * this.smooth);\n        this._moveNode!.setWorldPosition(this._movePos.x, this._movePos.y, 0);\n\n    }\n}\n\n","import { _decorator, Component, Node, Input, EventTouch } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { InputJoystick } from './input-joystick';\nconst { ccclass, property } = _decorator;\n\n@ccclass('JoystickPadAction')\nexport class JoystickPadAction extends Component {\n\n    _input:InputJoystick | undefined;\n\n    @property(Node)\n    actionNode:Node | undefined;\n\n    @property\n    startMsg = '';\n\n    @property\n    endMsg = '';\n\n    start() {\n        this._input = this.node.parent!.getComponent(InputJoystick)!;\n        this.node.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onDestroy() {\n        this.node.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.off(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onTouchStart(event: EventTouch) {\n        this.actionNode?.emit(this.startMsg);\n    }\n\n    onTouchEnd(event: EventTouch) {\n        this.actionNode?.emit(this.endMsg); \n    } \n\n    onTouchCancel(event: EventTouch) {\n        this.actionNode?.emit(this.endMsg); \n    }\n\n}\n\n","import { _decorator, Component, Node, Input, EventTouch } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { InputJoystick } from './input-joystick';\nconst { ccclass, property } = _decorator;\n\n@ccclass('JoystickPad')\nexport class JoystickPad extends Component {\n\n    _input:InputJoystick | undefined;\n\n    start() {\n        this._input = this.node.parent!.getComponent(InputJoystick)!;\n        this.node.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onDestroy() {\n        this.node.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.off(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n\n    onTouchStart(event: EventTouch) {\n        this._input?.onStart();\n    }\n\n    onTouchEnd(event: EventTouch) {\n        this._input?.onEnd();\n    } \n\n    onTouchCancel(event: EventTouch) {\n        this._input?.onEnd();\n    }\n\n}\n\n","\r\nimport { _decorator, Component, Node, EventKeyboard, EventMouse, EventTouch, input, Input, KeyCode } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('Joystick')\r\nexport class Joystick extends Component {\r\n\r\n    start () {\r\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.on(Input.EventType.KEY_PRESSING, this.onKeyPRESSING, this);\r\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n\r\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        input.on(Input.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n\r\n        // Mouse Event\r\n        input.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n        input.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\r\n        input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n        input.on(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this);\r\n    }\r\n\r\n    onKeyDown(event: EventKeyboard) {\r\n    }\r\n\r\n    onKeyPRESSING(event: EventKeyboard) {\r\n        if (event.keyCode === KeyCode.KEY_A) {\r\n            console.log('press right.');\r\n        }\r\n    }\r\n\r\n    onKeyUp(event: EventKeyboard) {\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n    }\r\n\r\n    onTouchMove(event: EventTouch) {\r\n    }\r\n\r\n    onTouchEnd(event: EventTouch) {\r\n    }\r\n\r\n    onTouchCancel(event: EventTouch) {\r\n    }\r\n\r\n    onMouseDown(event: EventMouse) {\r\n    }\r\n\r\n    onMouseUp(event: EventMouse) {\r\n    }\r\n\r\n    onMouseMove(event: EventMouse) {\r\n    }\r\n\r\n    onMouseWheel(event: EventMouse) {\r\n    }\r\n\r\n}\r\n","import { _decorator, Component, Node, Input, EventTouch, game } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { InputJoystick } from './input-joystick';\nconst { ccclass, property } = _decorator;\n\n@ccclass('JoystickPadRotation')\nexport class JoystickPadRotation extends Component {\n\n    _input:InputJoystick | undefined;\n\n    start() {\n        this._input = this.node.parent!.getComponent(InputJoystick)!;\n        this.node.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    onDestroy() {\n        this.node.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    onTouchMove(event: EventTouch) {\n\n        const x = event.getDeltaX();\n        const y = event.getDeltaY();\n\n        const screenXRate = x / game.canvas!.width;\n        const screenYRate = y / game.canvas!.height;\n\n        const rotateX = 1500 * screenXRate;\n        const rotateY = 1500 * screenYRate;\n        \n        this._input?.onRotation(rotateX, rotateY);//event.movementX / 5, event.movementY / 10);\n    }\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { IO } from './io';\nconst { ccclass, property } = _decorator;\n\nexport class JsonTool {\n    public static toJson(data: any): string {\n        return JSON.stringify(data);\n    }\n\n    public static toObject(data: any): any {\n        return JSON.parse(data);\n    }\n\n    public static toIOObject(path: any): any{\n        var str = IO.read(path+'.json');\n        if (str) {\n            return this.toObject(str);\n        }\n    }\n}\n","import { _decorator, Component, Node, Label, math } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('JumpPoints')\nexport class JumpPoints extends Component {\n\n    label: Label | null | undefined;\n    real_points = 0;\n    cur_points = 0;\n\n    speed = 0;\n    a = 1;\n\n    str: string = '';\n\n    onEnable () {\n        this.label = this.node.getComponent(Label);\n        if (this.label === null) {\n            throw new Error(`Jump Points not get component Label.`);\n        }\n        this.node.on('set_points', (points: number, str: string = 's') => {\n            this.str = str;\n            this.cur_points = 0;\n            this.real_points = points;\n            this.speed = 0;\n            this.a = 1;\n        })\n    }\n    update (deltaTime: number) {\n\n        if (this.cur_points < this.real_points) {\n            this.speed += this.a;\n            this.cur_points += deltaTime * this.speed;\n            if (this.cur_points > this.real_points) this.cur_points = this.real_points;\n            var show_num = Math.ceil(this.cur_points);\n        }\n\n    }\n}\n\n","import { _decorator, Component, animation } from 'cc';\nimport { Level } from '../level/level';\nimport { Game } from '../data/game';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LevelEnablePlay')\nexport class LevelEnablePlay extends Component {\n\n    onEnable() {\n        if (Game.Instance._currentGameNodeName !== 'level') {\n            this.node.getComponent(animation.AnimationController)!.enabled = false;\n        }\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, randomRange, random, randomRangeInt } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { DataLevelInst, DataUpgradeCardInst } from '../data/data-core';\nimport { Local } from '../../core/localization/local';\nimport { Level } from './level';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LevelEventsCard')\nexport class LevelEventsCard extends Component {\n\n    _interval:number = 0.1;\n\n    probability:any;\n    counter = 0;\n    groupCounter:Array<number> | undefined;\n\n    currentCards: Array<{ name: string; info: any; }> = new Array(3);\n    nextCounter = 2;\n    counterCard = 0;\n\n    start() {\n        this.probability = DataLevelInst._data.probability_drop_card;\n        this.groupCounter = new Array(DataLevelInst._data.cards.length);\n        this._interval = randomRange(this.probability.interval[0], this.probability.interval[1]);\n\n        this.nextCounter = DataUpgradeCardInst._data.next_show_card_param_a;\n\n        Msg.on('msg_kill_enemy', this.checkNextEvent.bind(this));\n    }\n\n    onDestroy() {\n        Msg.off('msg_kill_enemy', this.checkNextEvent.bind(this));\n    }\n\n    nextEvent() {\n\n        this.counterCard++;\n        \n        this.nextCounter += DataUpgradeCardInst._data.next_show_card_param_a * DataUpgradeCardInst._data.next_show_card_param_b;\n\n        const odds = random();\n        const weights = this.probability.weights;\n        let excludeGroupIndex = -1;\n\n        for(let iWeight = 0; iWeight < weights.length; iWeight++) {\n            if (odds <= weights[iWeight]) {\n                excludeGroupIndex = iWeight;\n                break;\n            }\n        }\n\n        if (excludeGroupIndex === -1) {\n            throw new Error(`Error calculate weight level events card. value:${odds}`);\n        }\n\n        const currentMax = this.groupCounter![excludeGroupIndex];\n        const weightMax = this.probability.weights_max;\n\n        if (currentMax >= weightMax[excludeGroupIndex]) {\n            this._interval = this.probability.interval_weight_max;\n            return;\n        }\n\n        // Exclude 3, This is temp.\n        const excludeIndex = 3;//this.probability.weights_group[excludeGroupIndex];\n        \n        // Get upgrade card list.\n        const cards = DataLevelInst._data.cards;\n        for(let i = 0; i < cards.length; i++) {\n            if(i === excludeIndex) continue;\n            this.currentCards[i] = {\n                name:cards[i],\n                info:this.calculateCardInfo(cards[i])\n            };\n        }\n\n        Level.Instance.currentCards = this.currentCards;\n\n        console.log('Current cards:', this.currentCards);\n\n        Msg.emit('push', 'upgrade_cards');\n\n        this.counter++;\n        this.groupCounter![excludeGroupIndex]++;    \n\n    }\n\n    calculateCardInfo(name:string) {\n\n        const upgradeCards = DataUpgradeCardInst._data;\n        const selectCardData = upgradeCards[name];\n        const randomCardIndex = randomRangeInt(0, selectCardData.length);\n        const randomCardData = selectCardData[randomCardIndex];\n        const valueCount = randomCardData.values.length;\n\n        let values = new Array(valueCount);\n\n        let describe = Local.Instance.get(randomCardData.describe);\n\n        for(let i = 0; i < valueCount; i++) {\n            const tempData = randomCardData.values[i];\n            const tempValue = this.calculateRange(tempData.isFloat, tempData.range);\n            const showValue = tempData.isFloat ? `${tempValue * 100} %` : `${tempValue}`;\n            describe = describe.replace(`##${i}##`, showValue);\n            values[i] = {\n                \"name\":tempData.name,\n                \"isFloat\":tempData.isFloat,\n                \"value\": tempValue\n            }\n        }\n        \n        return { describe, values }\n\n    }\n\n    calculateRange(isFloat:boolean, range:number[]):number {\n        if(range.length !== 2) return 0;\n        let value = isFloat? randomRange(range[0], range[1]) : randomRangeInt(range[0], range[1]);\n        if(isFloat) value = Number(value.toFixed(2));\n        return value;\n    }\n\n    checkNextEvent(counter:number) {\n        if (counter > this.nextCounter) {\n            this.nextEvent();\n        }\n    }\n}\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, randomRange, random } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { Level } from './level';\nimport { DataLevelInst } from '../data/data-core';\nconst { ccclass } = _decorator;\n\n@ccclass('LevelEventsEnemy')\nexport class LevelEventsEnemy extends Component {\n\n    // Used to record the interval at which time occurs.\n    _interval: number = 0.1;\n\n    // The probability data of enemy drops.\n    probability: any;\n\n    // Used for the total number of enemies already generated.\n    counter = 0;\n\n    // Used to count the total number of each grouping.\n    groupCounter: Array<number> | undefined;\n\n    // Total number of deaths.\n    killCounter = 0;\n\n    start () {\n\n        // Get probability.\n        this.probability = DataLevelInst._data.probability_drop_enemy;\n\n        if ((globalThis as any).HrefSetting) {\n            this.probability.max = (globalThis as any).HrefSetting.maxEnemies\n        }\n\n        // Initialize group statistics based on the number of groups.\n        this.groupCounter = new Array(DataLevelInst._data.enemies.length);\n\n        for (let i = 0; i < DataLevelInst._data.enemies.length; i++) {\n            this.groupCounter[i] = 0;\n        }\n\n        // Get the time of the next decision cycle.\n        this._interval = randomRange(this.probability.interval[0], this.probability.interval[1]);\n\n        // Register enemy event logic.\n        Msg.on('msg_remove_enemy', this.remove.bind(this));\n    }\n\n    onDestroy () {\n\n        // Register enemy event logic.\n        Msg.off('msg_remove_enemy', this.remove.bind(this));\n    }\n\n    /**\n     * Calculates a monster generation event.\n     * @returns \n     */\n    generateEvent () {\n\n        // If the total number of enemies in the scene is greater than or equal to the maximum value No enemy generation logic is performed.\n        // The total number of survivors is equal to the total number of generation minus the number of deaths.\n        if ((this.counter - this.killCounter) >= this.probability.max) return;\n\n        // Get a random value range [0-1].\n        const odds = random();\n\n        // Get a list of weights.\n        const weights = this.probability.weights;\n\n        // Set default occur group index.\n        let occurGroupIndex = -1;\n\n        // Find the matching index in a random list based on a random number.\n        for (let iWeight = 0; iWeight < weights.length; iWeight++) {\n            if (odds <= weights[iWeight]) {\n                occurGroupIndex = iWeight;\n                break;\n            }\n        }\n\n        // Determine if it is found, if not it means there is a problem with the data configuration.\n        // The set of random intervals contains all interval values from 0 - 1.\n        if (occurGroupIndex === -1) {\n            throw new Error(`Error calculate weight on Level events enemy. value:${odds}`);\n        }\n\n        // Get the maximum value of the current group.\n        const currentMax = this.groupCounter![occurGroupIndex];\n\n        // \n        const weightMax = this.probability.weights_max;\n\n        if (currentMax >= weightMax[occurGroupIndex]) {\n            this._interval = this.probability.interval_weight_max;\n            return;\n        }\n\n        const currentIndex = this.probability.weights_group[occurGroupIndex];\n        const res = DataLevelInst._data.enemies[currentIndex];\n\n        // Send add add enemy.\n        Msg.emit('msg_add_enemy', { res: res, groupID: occurGroupIndex })\n\n        // Increase event count.\n        this.counter++;\n\n        // Increase the mapping event group count.\n        this.groupCounter![occurGroupIndex]++;\n\n        // Send warning message.\n        if (res == 'boss_0') Msg.emit('level_action', 'warning');\n\n    }\n\n    /**\n     * Removes enemies and updates the corresponding stats.\n     * @param groupIndex Group ID to be removed.\n     */\n    public remove (groupIndex: number) {\n\n        // Increase the number of kills once\n        this.killCounter++;\n\n        // The number of current index groups minus one.\n        this.groupCounter![groupIndex]--;\n\n        // Exception judgment, if it is less than 0 it means there is a duplicate count of enemy death statistics.\n        // You need to check the death-related logic to see if multiple deaths were executed.\n        if (this.groupCounter![groupIndex] < 0) {\n            throw new Error(`Multiply remove enemy. group index = ${groupIndex}`);\n        }\n\n        // Triggers a death execution message.\n        Msg.emit('msg_kill_enemy', this.killCounter);\n    }\n\n    /**\n     * The detection logic is executed per frame.\n     * @param deltaTime The incremental time of the current frame. \n     * @returns \n     */\n    update (deltaTime: number) {\n\n        // \n        if (!Level.Instance._isStart && Level.Instance.stop && !Level.Instance._player) return;\n        this._interval -= deltaTime;\n\n        // Interval time less than 0 to start event detection.\n        if (this._interval <= 0) {\n\n            // Get the time of the next decision cycle.\n            this._interval = randomRange(this.probability.interval[0], this.probability.interval[1]);\n\n            // Execute generated events.\n            this.generateEvent();\n        }\n\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, randomRange, random } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { Level } from './level';\nimport { DataLevelInst } from '../data/data-core';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LevelEventsItems')\nexport class LevelEventsItems extends Component {\n\n    // Used to record the interval at which time occurs.\n    _interval: number = 0.1;\n\n    // The probability data of item drops.\n    probability: any;\n\n    // Used for the total number of items already generated.\n    counter = 0;\n\n    // Used to count the total number of each grouping.\n    groupCounter: Array<number> | undefined;\n\n    start () {\n\n        // Get probability.\n        this.probability = DataLevelInst._data.probability_drop_items;\n        this.groupCounter = new Array(DataLevelInst._data.items.length);\n        for (let i = 0; i < DataLevelInst._data.items.length; i++) {\n            this.groupCounter[i] = 0;\n        }\n        this._interval = randomRange(this.probability.interval[0], this.probability.interval[1]);\n        Msg.on('msg_remove_item', this.remove.bind(this));\n    }\n\n    onDestroy () {\n        Msg.off('msg_remove_item', this.remove.bind(this));\n    }\n\n    nextEvent () {\n\n        this._interval = randomRange(this.probability.interval[0], this.probability.interval[1]);\n\n        if (this.counter >= this.probability.max) return;\n\n        const odds = random();\n        const weights = this.probability.weights;\n        let occurGroupIndex = -1;\n\n        for (let iWeight = 0; iWeight < weights.length; iWeight++) {\n            if (odds <= weights[iWeight]) {\n                occurGroupIndex = iWeight;\n                break;\n            }\n        }\n\n        if (occurGroupIndex === -1) {\n            throw new Error(`Error calculate weight on Level Infinite Events. value:${odds}`);\n        }\n\n        const currentMax = this.groupCounter![occurGroupIndex];\n        const weightMax = this.probability.weights_max;\n\n        if (currentMax >= weightMax[occurGroupIndex]) {\n            this._interval = this.probability.interval_weight_max;\n            return;\n        }\n\n        const currentIndex = this.probability.weights_group[occurGroupIndex];\n        const res = DataLevelInst._data.items[currentIndex];\n\n        const sendData = { res: res, pos: undefined, groupIndex: currentIndex };\n        Msg.emit('msg_add_item', sendData);\n        this.counter++;\n        this.groupCounter![occurGroupIndex]++;\n\n    }\n\n    public remove (groupIndex: number) {\n        this.counter--;\n        this.groupCounter![groupIndex]--;\n        if (this.groupCounter![groupIndex] < 0) {\n            throw new Error(`Mutiply remove enemy. group index = ${groupIndex}`);\n        }\n    }\n\n    update (deltaTime: number) {\n        if (!Level.Instance._isStart && Level.Instance.stop && !Level.Instance._player) return;\n        this._interval -= deltaTime;\n        if (this._interval <= 0) {\n            this.nextEvent();\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { Level } from './level';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LevelEvents')\nexport class LevelEvents extends Component {\n\n    _events:{ [key:string]:any } = {};\n    _time = 0;\n    _index = 0;\n\n    _max = 0;\n    _cur:any;\n\n    start() {\n\n    }\n\n    public init(events:any) {\n        this._events = events;\n        this._index = 0;\n        this._max = this._events.length;\n\n        this._cur = this._events[this._index];\n    }\n\n    updateEvent(deltaTime: number) {\n\n        if (this._index >= this._max) return;\n\n        this._time += deltaTime;\n\n        if (this._time > this._cur.time) {\n            Level.Instance.addEnemy(this._cur.res);\n            this._index++;\n            if (this._index < this._max)\n                this._cur = this._events[this._index];\n        }\n\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Node, find, Vec3, v3, game } from 'cc';\nimport { Action } from '../../core/action/action';\nimport { Save } from '../data/save';\nimport { Msg } from '../../core/msg/msg';\nimport { Singleton } from '../../core/pattern/singleton';\nimport { Res } from '../../core/res/res';\nimport { ResCache } from '../../core/res/res-cache';\nimport { Actor } from '../actor/actor';\nimport { DropItem } from '../item/drop-item';\nimport { NavSystem } from '../navigation/navigation-system';\nimport { DataEquipInst, DataNavigationInst } from '../data/data-core';\nimport { fun } from '../../core/util/fun';\n\nconst { ccclass, property } = _decorator;\n\nexport class Level extends Singleton {\n\n    // Action objects are used to execute the current set of actions.\n    _action: Action | undefined;\n\n    // Level data object to store static game data.\n    _data: { [key: string]: any } = {};\n\n    // Level time.\n    _time: number = 0;\n\n    // The state at the beginning of the level.\n    _isStart = false;\n\n    // The spawn position of the player's level.\n    _spawn_pos = v3(0, 2, 0);\n\n    // The score rate of the level.\n    _scoreRate: number = 0;\n\n    // The player's game object.\n    _player: Actor | undefined;\n\n    // List of nodes of level enemies.\n    _enemies: Node[] = [];\n\n    // The root node of all objects at game runtime.\n    _objectNode: Node | null | undefined;\n\n    // Current upgrade cards.\n    currentCards: Array<{ name: string; info: any; }> = new Array(3);\n\n    // Level stop.\n    stop = false;\n\n    /**\n     * Initialize the level object.\n     */\n    public init (): void {\n\n        // Get the level data and copy it for storage.\n        this._data = Object.assign(ResCache.Instance.getJson('data-level').json);\n\n        // Create an action object to manage the action of the level.\n        this._action = new Action('action-level');\n\n        // Find the root node of all objects.\n        this._objectNode = find('init')?.getChildByName('objects');\n\n        // Register external message access function mapping.\n        Msg.on('msg_level_start', this.onLevelStart.bind(this));\n        Msg.on('level_action', this.levelAction.bind(this));\n        Msg.on('level_do', this.do.bind(this));\n        Msg.on('msg_add_enemy', this.addEnemy.bind(this));\n        Msg.on('msg_add_item', this.addDrop.bind(this));\n        Msg.on('msg_replay', this.onReplay.bind(this));\n\n    }\n\n    /**\n     * Executes the function with the name specified by the current object.\n     * @param fun Name of the function to be executed.\n     */\n    public do (fun: string) {\n        this[fun]();\n    }\n\n    /**\n     * This function is used to set the behavior related to the start of the level.\n     */\n    public onLevelStart () {\n\n        // Set level stop is false.\n        this.stop = false;\n        this._isStart = true;\n\n        // Switch to the next statistic.\n        Save.Instance.nextStatistics();\n\n        // Initialize the current path finding data.\n        NavSystem.Init(DataNavigationInst._data);\n\n        this.levelAction('start');\n    }\n\n    public pause () {\n        this.stop = true;\n    }\n\n    public resume () {\n        this.stop = false;\n    }\n\n    /**\n     * This method is used to restart the game.\n     */\n    public onReplay () {\n        fun.delay(() => {\n            Msg.emit('push', 'level');\n        }, 2);\n    }\n\n    public levelAction (name: string) {\n        this._action!.on(name);\n    }\n\n    /**\n     * Added level role method.\n     * Used to initialize the character game object.\n     */\n    public addPlayer () {\n\n        // Get a random node from the navigation system.\n        //const point = NavSystem.randomPoint();\n\n        // Get the player's prefab object from the resource cache.\n        const prefab = ResCache.Instance.getPrefab(this._data.prefab_player);\n\n        // Instantiate player level game object.\n        const resPlayer = Res.inst(prefab, this._objectNode!, this._data.spawn_pos);\n\n        // Get the Actor from the player level game object.\n        this._player = resPlayer.getComponent(Actor)!;\n\n        // Detect if this actor exists\n        if (this._player === null) {\n            throw new Error(`Level add player can not bind Actor Component.`);\n        }\n\n        this._player.bulletBox = 5;\n\n        // Set the player tag value of this actor to true.\n        this._player.isPlayer = true;\n\n        // Initialize the player object.\n        this._player.init('data-player');\n\n        // Update player hp.\n        this._player.updateHP();\n\n    }\n\n    /**\n     * Add level enemy method.\n     * @param res Add enemy resource name.\n     * @param groupID Enemy group id.\n     * @returns Enemy game object.\n     */\n    public addEnemy (data: { res: string, groupID: number }) {\n\n        // Get a random node from the navigation system.\n        const point = NavSystem.randomPoint();\n\n        // Get the enemy's prefab object from the resource cache.\n        var prefab = ResCache.Instance.getPrefab(data.res);\n\n        // Instantiate enemy level game object.\n        var enemy = Res.inst(prefab, this._objectNode!, point.position);\n\n        enemy.name = data.res;\n        const actor = enemy.getComponent(Actor);\n        if (!actor) {\n            console.error('error inst enemy lose actor component. the name is :', data.res);\n            return;\n        }\n        actor._groupIndex = data.groupID;\n        actor.init(`data-${data.res}`);\n        actor.bulletBox = 9999;\n        actor.isReady = true;\n        this._enemies.push(enemy);\n        return enemy;\n    }\n\n    public removeEnemy (node: Node) {\n        for (let i = 0; i < this._enemies.length; i++) {\n            if (this._enemies[i] === node) {\n                this._enemies.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    public addDrop (_data: { res: string, pos: Vec3 | undefined, groupIndex: number }) {\n        if (_data.pos === undefined) {\n            const point = NavSystem.randomPoint();\n            _data.pos = point.position;\n        }\n        const prefab = ResCache.Instance.getPrefab(this._data.prefab_drop_item);\n        const dropNode = Res.inst(prefab, this._objectNode!, _data.pos);\n        dropNode.name = _data.res;\n\n        const drop = dropNode.getComponent(DropItem);\n        const data = DataEquipInst.get(_data.res);\n\n        if (drop === null) {\n            throw new Error(`Drop node can not add component Drop Item.`);\n        }\n\n        drop.init(_data.res, data.drop_effect_index, _data.groupIndex);\n\n    }\n\n    public addObj (res: string) {\n        const point = NavSystem.randomPoint();\n        var prefab = ResCache.Instance.getPrefab(res);\n        var objNode = Res.inst(prefab, this._objectNode!, point.position);\n        return objNode;\n    }\n\n    public update (deltaTime: number): void {\n        if (!this._isStart) return;\n\n        if (this.stop) return;\n\n        this._time += deltaTime;\n        this._action!.update(deltaTime);\n\n        Msg.emit('msg_update_map');\n    }\n\n    /**\n     * Select a skill card to update player attributes.\n     * @param selectIndex Select upgrade card index.\n     */\n    public upgradePlayerAttributes (selectIndex: number) {\n        // Get upgrade values.\n        const upgradeValues = this.currentCards[selectIndex].info.values;\n        // Upgrade player data.\n        const length = upgradeValues.length;\n        //Update all attributes of the card.\n        for (let i = 0; i < length; i++) {\n            console.log(upgradeValues[i]);\n            const data = upgradeValues[i];\n            this._player!._data[data.name] = data.value;\n        }\n\n    }\n\n    public getUpgradeCardInfo (selectIndex: number) {\n        return this.currentCards[selectIndex].info.describe;\n    }\n\n    public gameOver () {\n\n        // Set level stop is true.\n        this.stop = true;\n        this._isStart = false;\n        Msg.emit('msg_stat_time', { key: 'play', time: this._time });\n        this.calculateScore();\n        this._enemies = [];\n        Save.Instance.saveGameOver(this._time, this._scoreRate);\n        this._player = undefined;\n\n    }\n\n\n    /**\n     * Calculate level score.\n     */\n    public calculateScore () {\n\n        // Save day.\n        let day = Save.Instance.get('day');\n        if (day === undefined) day = 0;\n        else day++;\n        Save.Instance.setValue('day', day);\n\n        // Get killed number.\n        const killedTimes = Save.Instance.getStatistics('killedTime');\n\n        // Calculate hit rate.\n        const hitBodyTimes = Save.Instance.getStatistics('hit_bodyTimes');\n        const hitHeadTimes = Save.Instance.getStatistics('hit_headTimes');\n        let fireTimes = Save.Instance.getStatistics('fireTimes');\n        const hitRate = fireTimes == 0 ? 0 : ((hitBodyTimes + hitHeadTimes) / fireTimes);\n        Save.Instance.setStatistics('hit_rate', Number(hitRate.toFixed(4)));\n\n        // Calculate be hit times.\n        const beHitBodyTimes = Save.Instance.getStatistics('be_hit_bodyTimes');\n        const beHitHeadTimes = Save.Instance.getStatistics('be_hit_headTimes');\n        const beHitTimes = beHitBodyTimes + beHitHeadTimes;\n        Save.Instance.setStatistics('be_hit_times', beHitTimes);\n\n        // Calculate dodge rate.\n        const enemyFireTimes = Math.max(beHitTimes, Save.Instance.getStatistics('enemy_fireTimes'));\n        const dodgeRate = enemyFireTimes == 0 ? 0 : (1 - beHitTimes / enemyFireTimes);\n        Save.Instance.setStatistics('dodge_rate', Number(dodgeRate.toFixed(4)));\n\n        // Calculate level score.\n        // level score = killed * killed_to_score + hitRate * eachRateValue + dodgeRate * eachRateValue + survivalTime * survival_time_to_score\n        const eachRateValue = this._data.each_rate_value;\n        const level_score = Math.floor(killedTimes * this._data.killed_to_score + hitRate * eachRateValue + dodgeRate * eachRateValue + this._time * this._data.survival_time_to_score);\n        Save.Instance.setStatistics('level_score', level_score);\n\n        // Calculate final score rate.\n        const scoreLevels = this._data.score_level;\n        let passLevel = true;\n        this._scoreRate = scoreLevels.length - 1;\n        for (let i = 0; i < scoreLevels.length; i++) {\n            const infos = scoreLevels[i];\n            passLevel = true;\n            for (let k in infos) {\n                if (k == 'score') continue;\n                if (Save.Instance._currentStatistics[k] < infos[k]) {\n                    passLevel = false;\n                    break;\n                }\n            }\n            if (passLevel) {\n                this._scoreRate = i;\n                break;\n            }\n        }\n\n        // Save score rate.\n        Save.Instance.setStatistics('score_rate', this._scoreRate);\n    }\n\n    /**\n     * Get final score rating\n     * @returns \n     */\n    public getLevelScore () {\n        return this._data.score_level[this._scoreRate].score;\n    }\n\n}\n","import { director, geometry, MobilityMode, Node, renderer, SphereLight, SpotLight, Vec3, Vec4, _decorator } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { cce, repaintInEditMode } from \"../../utils/editor\";\nimport { ClusterObject, WorldCluster } from \"./world-cluster\";\n\nconst { ccclass, executeInEditMode, property } = _decorator\n\nlet _sphere = new geometry.Sphere();\nlet tempVec3 = new Vec3\n\n@ccclass('LightWorldCluster')\n@executeInEditMode\nexport class LightWorldCluster extends WorldCluster<SphereLight | SpotLight> {\n    static instance: LightWorldCluster | undefined;\n\n    onEnable () {\n        globalThis.LightWorldCluster.instance = this;\n    }\n    onDisable () {\n        if (globalThis.LightWorldCluster.instance === this) {\n            globalThis.LightWorldCluster.instance = undefined;\n        }\n    }\n\n    // 0: pos.x, pos.y, pos.z, isSpotLight\n    // 1: rgb: color, w: intensity\n    // 2: x: size, y: range, z: spotAngle\n    // 3: xyz: dir\n    pixelsPerObjectFloat = 4;\n\n    addObjectData (light: renderer.scene.SphereLight | renderer.scene.SpotLight, index: number) {\n        const dataInfoFloat = this.dataInfoFloat!;\n        let dataInfoFloatIndex = index * this.dataInfoTextureFloat!.width * 4;\n\n        let isSpotLight = light instanceof renderer.scene.SpotLight;\n\n        // 0\n        let pos = light.node!.worldPosition;\n        dataInfoFloat[dataInfoFloatIndex++] = pos.x;\n        dataInfoFloat[dataInfoFloatIndex++] = pos.y;\n        dataInfoFloat[dataInfoFloatIndex++] = pos.z;\n        dataInfoFloat[dataInfoFloatIndex++] = isSpotLight ? 1 : 0;\n\n        // 1\n        const color = light.color;\n        dataInfoFloat[dataInfoFloatIndex++] = color.x;\n        dataInfoFloat[dataInfoFloatIndex++] = color.y;\n        dataInfoFloat[dataInfoFloatIndex++] = color.z;\n\n        const lightMeterScale = 10000;\n        const defaultExposure = 0.00002604165638331324;\n        dataInfoFloat[dataInfoFloatIndex++] = light.luminance * defaultExposure * lightMeterScale;\n\n        // 2\n        if (isSpotLight) {\n            let spot = (light as renderer.scene.SpotLight);\n\n            const clampedInnerConeAngle = Math.clamp(spot.size, 0.0, 89.0) * Math.PI / 180.0;\n            const clampedOuterConeAngle = Math.clamp(spot.angle / 2, clampedInnerConeAngle + 0.001, 89.0 * Math.PI / 180.0 + 0.001);\n\n            let cosOuterCone = Math.cos(clampedOuterConeAngle);\n            let cosInnerCone = Math.cos(clampedInnerConeAngle);\n            let invCosConeDifference = 1.0 / (cosInnerCone - cosOuterCone);\n\n            dataInfoFloat[dataInfoFloatIndex++] = light.range;\n            dataInfoFloat[dataInfoFloatIndex++] = cosOuterCone;\n            dataInfoFloat[dataInfoFloatIndex++] = invCosConeDifference;\n        }\n        else {\n            dataInfoFloat[dataInfoFloatIndex++] = light.range;\n            dataInfoFloat[dataInfoFloatIndex++] = light.size;\n            dataInfoFloat[dataInfoFloatIndex++] = 0;\n        }\n        dataInfoFloat[dataInfoFloatIndex++] = 0;\n\n\n        // 3\n        if (isSpotLight) {\n            light.update();\n            let dir = (light as renderer.scene.SpotLight).direction;\n            // Vec3.rotateX(tempVec3, dir, Vec3.ZERO, Math.PI * 0.5)\n            // Vec3.rotateY(tempVec3, dir, Vec3.ZERO, Math.PI * 0.5)\n            // tempVec3.normalize()\n            dataInfoFloat[dataInfoFloatIndex++] = dir.x;\n            dataInfoFloat[dataInfoFloatIndex++] = dir.y;\n            dataInfoFloat[dataInfoFloatIndex++] = dir.z;\n            dataInfoFloat[dataInfoFloatIndex++] = 0;\n        }\n\n    }\n\n    getBoundingBox (light: renderer.scene.SphereLight | renderer.scene.SpotLight, clusteredObject: ClusterObject<SphereLight | SpotLight>) {\n        let worldPos = light.node!.worldPosition;\n        geometry.Sphere.set(_sphere, worldPos.x, worldPos.y, worldPos.z, light.range);\n        _sphere.getBoundary(clusteredObject.min, clusteredObject.max);\n        clusteredObject.radius = light.range;\n        clusteredObject.center.set(worldPos);\n    }\n\n    lights = []\n    findObjects () {\n        let lights = this.lights;\n        lights.length = 0;\n        for (let i = 0; i < director.root.scenes.length; i++) {\n            let sphereLights = director.root.scenes[i].sphereLights;\n            for (let ii = 0; ii < sphereLights.length; ii++) {\n                if (sphereLights[ii].node.activeInHierarchy && sphereLights[ii].node.mobility !== MobilityMode.Static) {\n                    lights.push(sphereLights[ii])\n                }\n            }\n            let spotLights = director.root.scenes[i].spotLights;\n            for (let ii = 0; ii < spotLights.length; ii++) {\n                if (spotLights[ii].node.activeInHierarchy && spotLights[ii].node.mobility !== MobilityMode.Static) {\n                    lights.push(spotLights[ii])\n                }\n            }\n        }\n\n        return lights\n    }\n\n    dirty = true;\n\n    @property\n    forceUpdate = false;\n\n    _dirtyTimeout: NodeJS.Timeout | null;\n    update (dt) {\n        if (!this.dirty && !this.forceUpdate) {\n            return;\n        }\n\n        if (EDITOR) {\n            repaintInEditMode()\n        }\n\n        super.update(dt)\n\n        if (!this._dirtyTimeout) {\n            this._dirtyTimeout = setTimeout(() => {\n                this.dirty = false;\n                this._dirtyTimeout = null\n            }, 500)\n        }\n\n    }\n}\n\nglobalThis.LightWorldCluster = LightWorldCluster","\r\nimport { _decorator, Component, Node, SphereLight} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = light_flash\r\n * DateTime = Wed Jan 12 2022 18:59:08 GMT+0800 (China Standard Time)\r\n * Author = canvas\r\n * FileBasename = light-flash.ts\r\n * FileBasenameNoExtension = light-flash\r\n * URL = db://assets/scripts/core/effect/light-flash.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\r\n *\r\n */\r\n \r\n@ccclass('light_flash')\r\nexport class light_flash extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n    \r\n    _light: SphereLight = null;\r\n    _curLuminance: number = 0;\r\n    _range: number = 0;\r\n    _time: number = 0;\r\n\r\n    @property\r\n    min: number = 1;\r\n\r\n    @property\r\n    range: number = 0.5;\r\n\r\n    @property\r\n    speed: number = 10;\r\n\r\n    \r\n\r\n    start () {\r\n        // [3]\r\n        this._light = this.getComponent(SphereLight);\r\n        this._curLuminance = this.min;\r\n    }\r\n\r\n    update (deltaTime: number) {\r\n         // [4]\r\n         /*\r\n         this._curLuminance = this._curLuminance + deltaTime * this.speed;\r\n         if (this._curLuminance > this.max || this._curLuminance < this.min) {\r\n             this.speed *= -1;\r\n         }\r\n         this._light.luminance = this._curLuminance;\r\n         */\r\n         this._time = this._time + deltaTime * this.speed;\r\n         this._range = Math.sin(this._time) * this.range + this.min;\r\n         this._light.range = this._range;\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n","import { _decorator, Component, Node, find, Camera, v3 } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { UtilVec3 } from './util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LightFlowCamera')\nexport class LightFlowCamera extends Component {\n\n    _camera: Node;\n    _pos = v3(0, 0, 0);\n    _waitFind = 1;\n\n    update(deltaTime: number) {\n        if (this._camera === null) {\n            this._waitFind -= deltaTime;\n            if (this._waitFind < 0) {\n                this._waitFind = 1;\n                var camera = find('camera_controller/camera_main');\n                if (camera !== null) {\n                    this._camera = camera;\n                }\n            }\n        } else {\n            UtilVec3.copy(this._pos, this._camera.worldPosition);\n            this.node.setPosition(this._pos);\n        }\n    }\n\n}\n\n","\nexport let css = `\n/* this CSS contains only the basic CSS needed to run the app and use it */\n\n.lgraphcanvas {\n    /*cursor: crosshair;*/\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n\toutline: none;\n    font-family: Tahoma, sans-serif;\n}\n\n.lgraphcanvas * {\n    box-sizing: border-box;\n}\n\n.litegraph.litecontextmenu {\n    font-family: Tahoma, sans-serif;\n    position: fixed;\n    top: 100px;\n    left: 100px;\n    min-width: 100px;\n    color: #aaf;\n    padding: 0;\n    box-shadow: 0 0 10px black !important;\n    background-color: #2e2e2e !important;\n\tz-index: 10;\n}\n\n.litegraph.litecontextmenu.dark {\n    background-color: #000 !important;\n}\n\n.litegraph.litecontextmenu .litemenu-title img {\n    margin-top: 2px;\n    margin-left: 2px;\n    margin-right: 4px;\n}\n\n.litegraph.litecontextmenu .litemenu-entry {\n    margin: 2px;\n    padding: 2px;\n}\n\n.litegraph.litecontextmenu .litemenu-entry.submenu {\n    background-color: #2e2e2e !important;\n}\n\n.litegraph.litecontextmenu.dark .litemenu-entry.submenu {\n    background-color: #000 !important;\n}\n\n.litegraph .litemenubar ul {\n    font-family: Tahoma, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\n.litegraph .litemenubar li {\n    font-size: 14px;\n    color: #999;\n    display: inline-block;\n    min-width: 50px;\n    padding-left: 10px;\n    padding-right: 10px;\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    cursor: pointer;\n}\n\n.litegraph .litemenubar li:hover {\n    background-color: #777;\n    color: #eee;\n}\n\n.litegraph .litegraph .litemenubar-panel {\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    min-width: 100px;\n    background-color: #444;\n    box-shadow: 0 0 3px black;\n    padding: 4px;\n    border-bottom: 2px solid #aaf;\n    z-index: 10;\n}\n\n.litegraph .litemenu-entry,\n.litemenu-title {\n    font-size: 12px;\n    color: #aaa;\n    padding: 0 0 0 4px;\n    margin: 2px;\n    padding-left: 2px;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    user-select: none;\n    cursor: pointer;\n}\n\n.litegraph .litemenu-entry .icon {\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    margin: 2px;\n    vertical-align: top;\n}\n\n.litegraph .litemenu-entry.checked .icon {\n    background-color: #aaf;\n}\n\n.litegraph .litemenu-entry .more {\n    float: right;\n    padding-right: 5px;\n}\n\n.litegraph .litemenu-entry.disabled {\n    opacity: 0.5;\n    cursor: default;\n}\n\n.litegraph .litemenu-entry.separator {\n    display: block;\n    border-top: 1px solid #333;\n    border-bottom: 1px solid #666;\n    width: 100%;\n    height: 0px;\n    margin: 3px 0 2px 0;\n    background-color: transparent;\n    padding: 0 !important;\n    cursor: default !important;\n}\n\n.litegraph .litemenu-entry.has_submenu {\n    border-right: 2px solid cyan;\n}\n\n.litegraph .litemenu-title {\n    color: #dde;\n    background-color: #111;\n    margin: 0;\n    padding: 2px;\n    cursor: default;\n}\n\n.litegraph .litemenu-entry:hover:not(.disabled):not(.separator) {\n    background-color: #444 !important;\n    color: #eee;\n    transition: all 0.2s;\n}\n\n.litegraph .litemenu-entry .property_name {\n    display: inline-block;\n    text-align: left;\n    min-width: 80px;\n    min-height: 1.2em;\n}\n\n.litegraph .litemenu-entry .property_value {\n    display: inline-block;\n    background-color: rgba(0, 0, 0, 0.5);\n    text-align: right;\n    min-width: 80px;\n    min-height: 1.2em;\n    vertical-align: middle;\n    padding-right: 10px;\n}\n\n.litegraph.litesearchbox {\n    font-family: Tahoma, sans-serif;\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding-top: 4px;\n}\n\n.litegraph.litesearchbox input,\n.litegraph.litesearchbox select {\n    margin-top: 3px;\n    min-width: 60px;\n    min-height: 1.5em;\n    background-color: black;\n    border: 0;\n    color: white;\n    padding-left: 10px;\n    margin-right: 5px;\n}\n\n.litegraph.litesearchbox .name {\n    display: inline-block;\n    min-width: 60px;\n    min-height: 1.5em;\n    padding-left: 10px;\n}\n\n.litegraph.litesearchbox .helper {\n    overflow: auto;\n    max-height: 200px;\n    margin-top: 2px;\n}\n\n.litegraph.lite-search-item {\n    font-family: Tahoma, sans-serif;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    padding-top: 2px;\n}\n\n.litegraph.lite-search-item.not_in_filter{\n    /*background-color: rgba(50, 50, 50, 0.5);*/\n    /*color: #999;*/\n    color: #B99;\n    font-style: italic;\n}\n\n.litegraph.lite-search-item.generic_type{\n    /*background-color: rgba(50, 50, 50, 0.5);*/\n    /*color: #DD9;*/\n    color: #999;\n    font-style: italic;\n}\n\n.litegraph.lite-search-item:hover,\n.litegraph.lite-search-item.selected {\n    cursor: pointer;\n    background-color: white;\n    color: black;\n}\n\n/* DIALOGs ******/\n\n.litegraph .dialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: -150px;\n    margin-left: -200px;\n\n    background-color: #2A2A2A;\n\n    min-width: 400px;\n    min-height: 200px;\n\tbox-shadow: 0 0 4px #111;\n    border-radius: 6px;\n}\n\n.litegraph .dialog.settings {\n\tleft: 10px;\n\ttop: 10px;\n\theight: calc( 100% - 20px );\n\tmargin: auto;\n    max-width: 50%;\n}\n\n.litegraph .dialog.centered {\n    top: 50px;\n    left: 50%;\n    position: absolute;\n    transform: translateX(-50%);\n    min-width: 600px;\n    min-height: 300px;\n    height: calc( 100% - 100px );\n\tmargin: auto;\n}\n\n.litegraph .dialog .close {\n    float: right;\n\tmargin: 4px;\n\tmargin-right: 10px;\n\tcursor: pointer;\n\tfont-size: 1.4em;\n}\n\n.litegraph .dialog .close:hover {\n\tcolor: white;\n}\n\n.litegraph .dialog .dialog-header {\n\tcolor: #AAA;\n\tborder-bottom: 1px solid #161616;\n}\n\n.litegraph .dialog .dialog-header { height: 40px; }\n.litegraph .dialog .dialog-footer { height: 50px; padding: 10px; border-top: 1px solid #1a1a1a;}\n\n.litegraph .dialog .dialog-header .dialog-title {\n    font: 20px \"Arial\";\n    margin: 4px;\n    padding: 4px 10px;\n    display: inline-block;\n}\n\n.litegraph .dialog .dialog-content, .litegraph .dialog .dialog-alt-content {\n    height: calc(100% - 90px);\n    width: 100%;\n\tmin-height: 100px;\n    display: inline-block;\n\tcolor: #AAA;\n    /*background-color: black;*/\n    overflow: auto;\n}\n\n.litegraph .dialog .dialog-content h3 {\n\tmargin: 10px;\n}\n\n.litegraph .dialog .dialog-content .connections {\n\tflex-direction: row;\n}\n\n.litegraph .dialog .dialog-content .connections .connections_side {\n\twidth: calc(50% - 5px);\n\tmin-height: 100px;\n\tbackground-color: black;\n\tdisplay: flex;\n}\n\n.litegraph .dialog .node_type {\n\tfont-size: 1.2em;\n\tdisplay: block;\n\tmargin: 10px;\n}\n\n.litegraph .dialog .node_desc {\n\topacity: 0.5;\n\tdisplay: block;\n\tmargin: 10px;\n}\n\n.litegraph .dialog .separator {\n\tdisplay: block;\n\twidth: calc( 100% - 4px );\n\theight: 1px;\n\tborder-top: 1px solid #000;\n\tborder-bottom: 1px solid #333;\n\tmargin: 10px 2px;\n\tpadding: 0;\n}\n\n.litegraph .dialog .property {\n\tmargin-bottom: 2px;\n\tpadding: 4px;\n}\n\n.litegraph .dialog .property:hover {\n\tbackground: #545454;\n}\n\n.litegraph .dialog .property_name {\n\tcolor: #737373;\n    display: inline-block;\n    text-align: left;\n    vertical-align: top;\n    width: 160px;\n\tpadding-left: 4px;\n\toverflow: hidden;\n    margin-right: 6px;\n}\n\n.litegraph .dialog .property:hover .property_name {\n    color: white;\n}\n\n.litegraph .dialog .property_value {\n    display: inline-block;\n    text-align: right;\n\tcolor: #AAA;\n\tbackground-color: #1A1A1A;\n    /*width: calc( 100% - 122px );*/\n    max-width: calc( 100% - 162px );\n    min-width: 200px;\n\tmax-height: 300px;\n    min-height: 20px;\n    padding: 4px;\n\tpadding-right: 12px;\n\toverflow: hidden;\n\tcursor: pointer;\n\tborder-radius: 3px;\n}\n\n.litegraph .dialog .property_value:hover {\n\tcolor: white;\n}\n\n.litegraph .dialog .property.boolean .property_value {\n\tpadding-right: 30px;\n    color: #A88;\n    /*width: auto;\n    float: right;*/\n}\n\n.litegraph .dialog .property.boolean.bool-on .property_name{\n    color: #8A8;\n}\n.litegraph .dialog .property.boolean.bool-on .property_value{\n    color: #8A8;\n}\n\n.litegraph .dialog .btn {\n\tborder: 0;\n\tborder-radius: 4px;\n    padding: 4px 20px;\n    margin-left: 0px;\n    background-color: #060606;\n    color: #8e8e8e;\n}\n\n.litegraph .dialog .btn:hover {\n    background-color: #111;\n    color: #FFF;\n}\n\n.litegraph .dialog .btn.delete:hover {\n    background-color: #F33;\n    color: black;\n}\n\n.litegraph .subgraph_property {\n\tpadding: 4px;\n}\n\n.litegraph .subgraph_property:hover {\n\tbackground-color: #333;\n}\n\n.litegraph .subgraph_property.extra {\n    margin-top: 8px;\n}\n\n.litegraph .subgraph_property span.name {\n\tfont-size: 1.3em;\n\tpadding-left: 4px;\n}\n\n.litegraph .subgraph_property span.type {\n\topacity: 0.5;\n\tmargin-right: 20px;\n\tpadding-left: 4px;\n}\n\n.litegraph .subgraph_property span.label {\n\tdisplay: inline-block;\n\twidth: 60px;\n\tpadding:  0px 10px;\n}\n\n.litegraph .subgraph_property input {\n\twidth: 140px;\n\tcolor: #999;\n\tbackground-color: #1A1A1A;\n\tborder-radius: 4px;\n\tborder: 0;\n\tmargin-right: 10px;\n\tpadding: 4px;\n\tpadding-left: 10px;\n}\n\n.litegraph .subgraph_property button {\n\tbackground-color: #1c1c1c;\n\tcolor: #aaa;\n\tborder: 0;\n\tborder-radius: 2px;\n\tpadding: 4px 10px;\n\tcursor: pointer;\n}\n\n.litegraph .subgraph_property.extra {\n\tcolor: #ccc;\n}\n\n.litegraph .subgraph_property.extra input {\n\tbackground-color: #111;\n}\n\n.litegraph .bullet_icon {\n\tmargin-left: 10px;\n\tborder-radius: 10px;\n\twidth: 12px;\n\theight: 12px;\n\tbackground-color: #666;\n\tdisplay: inline-block;\n\tmargin-top: 2px;\n\tmargin-right: 4px;\n    transition: background-color 0.1s ease 0s;\n    -moz-transition: background-color 0.1s ease 0s;\n}\n\n.litegraph .bullet_icon:hover {\n\tbackground-color: #698;\n\tcursor: pointer;\n} \n\n/* OLD */\n\n.graphcontextmenu {\n    padding: 4px;\n    min-width: 100px;\n}\n\n.graphcontextmenu-title {\n    color: #dde;\n    background-color: #222;\n    margin: 0;\n    padding: 2px;\n    cursor: default;\n}\n\n.graphmenu-entry {\n    box-sizing: border-box;\n    margin: 2px;\n    padding-left: 20px;\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    transition: all linear 0.3s;\n}\n\n.graphmenu-entry.event,\n.litemenu-entry.event {\n    border-left: 8px solid orange;\n    padding-left: 12px;\n}\n\n.graphmenu-entry.disabled {\n    opacity: 0.3;\n}\n\n.graphmenu-entry.submenu {\n    border-right: 2px solid #eee;\n}\n\n.graphmenu-entry:hover {\n    background-color: #555;\n}\n\n.graphmenu-entry.separator {\n    background-color: #111;\n    border-bottom: 1px solid #666;\n    height: 1px;\n    width: calc(100% - 20px);\n    -moz-width: calc(100% - 20px);\n    -webkit-width: calc(100% - 20px);\n}\n\n.graphmenu-entry .property_name {\n    display: inline-block;\n    text-align: left;\n    min-width: 80px;\n    min-height: 1.2em;\n}\n\n.graphmenu-entry .property_value,\n.litemenu-entry .property_value {\n    display: inline-block;\n    background-color: rgba(0, 0, 0, 0.5);\n    text-align: right;\n    min-width: 80px;\n    min-height: 1.2em;\n    vertical-align: middle;\n    padding-right: 10px;\n}\n\n.graphdialog {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    min-height: 2em;\n    background-color: #333;\n    font-size: 1.2em;\n    box-shadow: 0 0 10px black !important;\n\tz-index: 10;\n}\n\n.graphdialog.rounded {\n    border-radius: 12px;\n    padding-right: 2px;\n}\n\n.graphdialog .name {\n    display: inline-block;\n    min-width: 60px;\n    min-height: 1.5em;\n    padding-left: 10px;\n}\n\n.graphdialog input,\n.graphdialog textarea,\n.graphdialog select {\n    margin: 3px;\n    min-width: 60px;\n    min-height: 1.5em;\n    background-color: black;\n    border: 0;\n    color: white;\n    padding-left: 10px;\n    outline: none;\n}\n\n.graphdialog textarea {\n\tmin-height: 150px;\n}\n\n.graphdialog button {\n    margin-top: 3px;\n    vertical-align: top;\n    background-color: #999;\n\tborder: 0;\n}\n\n.graphdialog button.rounded,\n.graphdialog input.rounded {\n    border-radius: 0 12px 12px 0;\n}\n\n.graphdialog .helper {\n    overflow: auto;\n    max-height: 200px;\n}\n\n.graphdialog .help-item {\n    padding-left: 10px;\n}\n\n.graphdialog .help-item:hover,\n.graphdialog .help-item.selected {\n    cursor: pointer;\n    background-color: white;\n    color: black;\n}\n\n.litegraph .dialog {\n    min-height: 0;\n}\n.litegraph .dialog .dialog-content {\ndisplay: block;\n}\n.litegraph .dialog .dialog-content .subgraph_property {\npadding: 5px;\n}\n.litegraph .dialog .dialog-footer {\nmargin: 0;\n}\n.litegraph .dialog .dialog-footer .subgraph_property {\nmargin-top: 0;\ndisplay: flex;\nalign-items: center;\npadding: 5px;\n}\n.litegraph .dialog .dialog-footer .subgraph_property .name {\nflex: 1;\n}\n.litegraph .graphdialog {\ndisplay: flex;\nalign-items: center;\nborder-radius: 20px;\npadding: 4px 10px;\nposition: fixed;\n}\n.litegraph .graphdialog .name {\npadding: 0;\nmin-height: 0;\nfont-size: 16px;\nvertical-align: middle;\n}\n.litegraph .graphdialog .value {\nfont-size: 16px;\nmin-height: 0;\nmargin: 0 10px;\npadding: 2px 5px;\n}\n.litegraph .graphdialog input[type=\"checkbox\"] {\nwidth: 16px;\nheight: 16px;\n}\n.litegraph .graphdialog button {\npadding: 4px 18px;\nborder-radius: 20px;\ncursor: pointer;\n}\n  \n\n`","import { _decorator, Component, Node, Label } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { UtilNode } from '../util/util';\nimport { Local } from './local';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LocalLabel')\nexport class LocalLabel extends Component {\n    \n    label:Label | undefined;\n\n    key:string = '';\n\n    start() {\n        Msg.bind('refresh_local',this.refresh, this);\n        this.label = UtilNode.getComponent(this.node, Label);\n        this.key = this.node.name.slice(6);\n        this.refresh();\n    }\n\n    onDestroy() {\n        Msg.off('refresh_local', this.refresh);\n    }\n\n    refresh() {\n        this.label!.string = Local.Instance.get(this.key);\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { Save } from \"../../logic/data/save\";\nimport { Msg } from \"../msg/msg\";\nimport { Singleton } from \"../pattern/singleton\";\nimport { ResCache } from \"../res/res-cache\";\n\nexport class Local extends Singleton {\n\n    index: number = 1;\n    max: number = 2;\n    _data = Object.create(null);\n    _map = Object.create(null);\n\n    public init (): void {\n\n        this._data = ResCache.Instance.getJson('local').json;\n        this.max = this._data.language.length;\n        this.index = Save.Instance._cur.languageIndex;\n\n        if (this.index === -1) {\n            var sys_language = window.navigator.language.toLocaleLowerCase();\n            sys_language = sys_language.replace('-', '_');\n            console.log(sys_language);\n            for(let i = 0; i < this._data.language.length; i++) {\n                var name = this._data.language[i];\n                if (sys_language.includes(name)) {\n                    this.index = i;\n                    break;\n                }\n            }\n            if (this.index === -1) this.index = 2;\n        }\n\n        Msg.on('next_language', () => {\n            this.index++;\n            if (this.index >= this.max) this.index = 0;\n            Msg.emit('msg_save_set', {key:'languageIndex', value:this.index});\n            Local.Instance.refresh();\n        });\n\n        Msg.on('pre_language', () => {\n            this.index--;\n            if (this.index < 0) this.index = this.max - 1;\n            Msg.emit('msg_save_set', {key:'languageIndex', value:this.index});\n            Local.Instance.refresh();\n        });\n\n        this.refresh();\n\n    }\n\n    public get (name: string): string {\n        const val = this._map[name];\n        if (val) {\n            return val;\n        } else {\n            return name;\n        }\n    }\n\n    public getShowName () {\n        return this._data.show_name[this.index];\n    }\n\n    public refresh (): void {\n        var name = this._data.language[this.index];\n        this._map = ResCache.Instance.getJson(name).json;\n        //refresh\n        Msg.emit('refresh_local');\n\n    }\n\n}\n","export class Log {\r\n\r\n    static Init() {}\r\n\r\n    static info(data: any): void {\r\n        console.info(data);\r\n    }\r\n\r\n    static debug(data: any): void {\r\n        console.log(data);\r\n    }\r\n\r\n    static error(data: any): void {\r\n        console.error(data);\r\n    }\r\n\r\n    static warn(data: any): void {\r\n        console.warn(data);\r\n    }\r\n    \r\n}","import { _decorator, Component } from 'cc';\nimport { Msg } from '../../core/msg/msg';\n\nconst { ccclass, type, property } = _decorator;\n\n@ccclass('logo')\nexport class logo extends Component {\n\n}\n\n","import { _decorator, Vec3, Node, Mat4, Quat, geometry, PhysicsSystem, physics, Vec2, math, director, quat, game } from 'cc';\n//import { ColliderGroup, ControlType, CameraRotateType } from '../scene/define';\nconst { ccclass, property } = _decorator;\n\nlet _tempQuat: Quat = new Quat();\nlet _tempVec3: Vec3 = new Vec3;\nlet _tempVec3_2: Vec3 = new Vec3;\n\nlet _tempMat: Mat4 = new Mat4;\nlet _tempMat_2: Mat4 = new Mat4;\n\nlet _forward: Vec3 = new Vec3(0, 0, 1);\n\nlet _ray: geometry.Ray = new geometry.Ray;\n\n@ccclass('MathUtil')\nexport default class MathUtil {\n    public static degreesToRadians (degValue: number): number {\n        return degValue * (Math.PI / 180.0);\n    }\n\n    public static radiansToDegrees (radValue: number): number {\n        return radValue * (180.0 / Math.PI);\n    }\n\n    public static clamp01 (value: number): number {\n        if (value < 0) return 0;\n        if (value > 1) return 1;\n        return value;\n    }\n\n    public static clampDegrees (value: number, min: number = -180, max: number = 180): number {\n        while (value < min) {\n            value += 360;\n        }\n        while (value > max) {\n            value -= 360;\n        }\n        return value;\n    }\n\n    public static transformDegreesToNear (value: number, target: number) {\n        if (Math.abs(value - target) < 180) return value;\n        if (value < target) {\n            while (value < target) {\n                value += 360;\n            }\n            return value;\n        }\n        while (value > target) {\n            value -= 360;\n        }\n        return value;\n    }\n\n    public static clamp (value: number, min: number, max: number): number {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    }\n\n    public static inverseLerp (a: number, b: number, v: number) {\n        let ba = b - a;\n        if (Math.abs(ba) < 0.000001) return 0;\n        v = (v - a) / ba;\n        return MathUtil.clamp01(v);\n    }\n\n    public static remap (x: number, a: number, b: number, c: number, d: number): number {\n        let remappedValue: number = c + (x - a) / (b - a) * (d - c);\n        return remappedValue;\n    }\n\n    public static convertToNodeSpace (out: Vec3, worldPosition: Vec3, node: Node) {\n        node.getWorldMatrix(_tempMat);\n        Mat4.invert(_tempMat_2, _tempMat);\n        return Vec3.transformMat4(out, worldPosition, _tempMat_2);\n    }\n\n    public static convertToWorldSpace (out: Vec3, localPosition: Vec3, node: Node) {\n        node.getWorldMatrix(_tempMat);\n        return Vec3.transformMat4(out, localPosition, _tempMat);\n    }\n\n    public static randomInt (min: number, max: number) {\n        if (min > max) return -1;\n        return min + Math.round((max - min) * Math.random());\n    }\n\n    public static directionToNodeSpace (out: Vec3, worldDirection: Vec3, node: Node) {\n        node.getWorldPosition(_tempVec3);\n        _tempVec3.add(worldDirection);\n        MathUtil.convertToNodeSpace(out, _tempVec3, node);\n        return out;\n    }\n\n    public static getWorldLine (beginNode: Node, endNode: Node, worldRotation: Quat, worldPosition: Vec3) {\n        beginNode.getWorldPosition(_tempVec3);\n        endNode.getWorldPosition(_tempVec3_2);\n\n        Vec3.lerp(worldPosition, _tempVec3, _tempVec3_2, 0.5);\n\n        _tempVec3_2.subtract(_tempVec3);\n        let length = _tempVec3_2.length();\n        _tempVec3_2.normalize();\n\n        Quat.rotationTo(worldRotation, _forward, _tempVec3_2);\n        return length;\n    }\n\n    public static getWorldLineByPos (beginPos: Vec3, endPos: Vec3, worldRotation: Quat, worldPosition: Vec3) {\n        Vec3.copy(_tempVec3, beginPos);\n        Vec3.copy(_tempVec3_2, endPos);\n\n        Vec3.lerp(worldPosition, _tempVec3, _tempVec3_2, 0.5);\n\n        _tempVec3_2.subtract(_tempVec3);\n        let length = _tempVec3_2.length();\n        _tempVec3_2.normalize();\n\n        Quat.rotationTo(worldRotation, _forward, _tempVec3_2);\n        return length;\n    }\n\n    /*\n    public static getFieldViewPoint (points: Node[], testPoint: Node, resultPoints: Node[], pointMask = ColliderGroup.PathPointAim, resultPointsMap: Map<Node, boolean> | null = null, yEnoughDistance = 99999) {\n        testPoint.getWorldPosition(_tempVec3);\n        resultPoints.length = 0;\n        if (resultPointsMap) {\n            resultPointsMap.clear();\n        }\n\n        for (let i = 0; i < points.length; i++) {\n            let point = points[i];\n            if (testPoint == point) continue;\n\n            point.getWorldPosition(_tempVec3_2);\n\n            let yDistance = Math.abs(_tempVec3.y - _tempVec3_2.y);\n            if (yDistance > yEnoughDistance) continue;\n\n            Vec3.subtract(_tempVec3_2, _tempVec3_2, _tempVec3);\n            _tempVec3_2.normalize();\n            geometry.Ray.set(_ray,\n                _tempVec3.x, _tempVec3.y, _tempVec3.z,\n                _tempVec3_2.x, _tempVec3_2.y, _tempVec3_2.z);\n\n            let hasHit = PhysicsSystem.instance.raycastClosest(_ray, pointMask);\n            if (!hasHit) continue;\n            let hitResult = PhysicsSystem.instance.raycastClosestResult;\n            if (hitResult.collider.node != point) continue;\n\n            (point as any).__distance = hitResult.distance;\n            resultPoints.push(point);\n            if (resultPointsMap) {\n                resultPointsMap.set(point, true);\n            }\n        }\n\n        resultPoints.sort((a, b) => (a as any).__distance - (b as any).__distance);\n        return resultPoints;\n    }\n    */\n\n    public static distance (a: Node, b: Node) {\n        a.getWorldPosition(_tempVec3);\n        b.getWorldPosition(_tempVec3_2);\n        return Vec3.distance(_tempVec3, _tempVec3_2);\n    }\n\n    public static hDistance (a: Vec3, b: Vec3) {\n        Vec3.copy(_tempVec3, a);\n        Vec3.copy(_tempVec3_2, b);\n        _tempVec3.y = 0;\n        _tempVec3_2.y = 0;\n        return Vec3.distance(_tempVec3, _tempVec3_2);\n    }\n\n    public static getMoveDirectionByCameraDirection (out:Vec3, rotateValue: Vec2, rotateVector: Vec3, node: Node) {\n        let x = rotateValue.x;\n        let y = rotateValue.y;\n        let deg = Math.atan2(-y, x) - Math.PI * 0.5;\n\n        Vec3.rotateY(out, rotateVector, Vec3.ZERO, deg);\n        return out;\n    }\n\n    public static getLocalDegree (rotateValue: Vec2, rotateVector: Vec3, node: Node) {\n        // because input is base on engine z and x axis, so it's like\n        /*\n            |\n        ____|_____\\ x\n            |     /\n            |\n           \\ /\n           z\n        */\n        // now we need to handle direction with the camera observe direction, so we need to reversal the z axis, the z is primary movement's y axis\n        // the x and y is zero when beginning, that's mean it point to x axis, but camera point to -z direction, so need to minus 90\n        let x = rotateValue.x;\n        let y = rotateValue.y;\n        let deg = Math.atan2(-y, x) - Math.PI * 0.5;\n\n        Vec3.rotateY(_tempVec3, rotateVector, Vec3.ZERO, deg);\n        node.getWorldPosition(_tempVec3_2);\n        _tempVec3_2.add(_tempVec3);\n        MathUtil.convertToNodeSpace(_tempVec3, _tempVec3_2, node);\n        _tempVec3.y = 0;\n        _tempVec3.normalize();\n        return MathUtil.radiansToDegrees(Math.atan2(_tempVec3.x, _tempVec3.z));\n    }\n\n    public static smoothDamp (current:number, target:number, currentVelocity: {value:number}, smoothTime:number, maxSpeed:number = 100) {\n        smoothTime = Math.max(0.0001, smoothTime);\n        let num1 = 2.0 / smoothTime;\n        let num2 = num1 * game.deltaTime;\n        let num3 = (1.0 / (1.0 + num2 + 0.479999989271164 * num2 * num2 + 0.234999999403954 * num2 * num2 * num2));\n        let num4 = current - target;\n        let num5 = target;\n        let max = maxSpeed * smoothTime;\n        let num6 = MathUtil.clamp(num4, -max, max);\n        target = current - num6;\n        let num7 = (currentVelocity.value + num1 * num6) * game.deltaTime;\n        currentVelocity.value = (currentVelocity.value - num1 * num7) * num3;\n        let num8 = target + (num6 + num7) * num3;\n        if (num5 - current > 0.0 == num8 > num5)\n        {\n            num8 = num5;\n            currentVelocity.value = (num8 - num5) / game.deltaTime;\n        }\n        return num8;\n    }\n\n    // it equal Quat.rotationTo(_tempQuat, fromDir.normalize(), toDir.normalize());\n    public static fromToRotation (out:Quat, fromDir:Vec3, toDir:Vec3) {\n        if (fromDir.equals(Vec3.ZERO) || toDir.equals(Vec3.ZERO)) return Quat.IDENTITY;\n\n        // fromDir normalize by max\n        let max = Math.abs(fromDir.x);\n        max = max > Math.abs(fromDir.y) ? max : Math.abs(fromDir.y);\n        max = (max > Math.abs(fromDir.z)) ? max : Math.abs(fromDir.z);\n        fromDir = fromDir.multiplyScalar(1 / max); //    fromDir = fromDir / max;\n\n        // toDir normalize by max\n        max = Math.abs(toDir.x);\n        max = (max > Math.abs(toDir.y)) ? max : Math.abs(toDir.y);\n        max = (max > Math.abs(toDir.z)) ? max : Math.abs(toDir.z);\n        toDir = toDir.multiplyScalar(1 / max); //         toDir = toDir / max;\n\n        // set miniThreshold\n        let miniThreshold = 0.001;\n        fromDir.x = Math.abs(fromDir.x) <= miniThreshold ? 0 : fromDir.x;\n        fromDir.y = Math.abs(fromDir.y) <= miniThreshold ? 0 : fromDir.y;\n        fromDir.z = Math.abs(fromDir.z) <= miniThreshold ? 0 : fromDir.z;\n        toDir.x = Math.abs(toDir.x) <= miniThreshold ? 0 : toDir.x;\n        toDir.y = Math.abs(toDir.y) <= miniThreshold ? 0 : toDir.y;\n        toDir.z = Math.abs(toDir.z) <= miniThreshold ? 0 : toDir.z;\n\n        Vec3.normalize(_tempVec3, toDir);\n        Vec3.normalize(_tempVec3_2, fromDir);\n        Vec3.add(_tempVec3, _tempVec3, _tempVec3_2);\n\n        let mid:Vec3 = new Vec3();\n        Vec3.normalize(mid, _tempVec3);\n        if (mid.equals(Vec3.ZERO))\n        {\n            // X\n            if (fromDir.x != 0 && fromDir.y == 0 && fromDir.z == 0) { return new Quat(0, 1, 0, 0) }\n            // Y\n            else if (fromDir.x == 0 && fromDir.y != 0 && fromDir.z == 0) { return new Quat(1, 0, 0, 0) }\n            // Z\n            else if (fromDir.x == 0 && fromDir.y == 0 && fromDir.z != 0) { return new Quat(1, 0, 0, 0) }\n            // X\n            else if (fromDir.x == 0 && fromDir.y != 0 && fromDir.z != 0) { return new Quat(1, 0, 0, 0) }\n            // Y\n            else if (fromDir.x != 0 && fromDir.y == 0 && fromDir.z != 0)\n            {\n                Vec3.normalize(_tempVec3, toDir);\n                Vec3.normalize(_tempVec3_2, fromDir);\n                let X = _tempVec3.z;\n                let Z = _tempVec3_2.x;\n\n                if (X + Z < 0 || (X + Z == 0 && X < 0)) { return new Quat(-X, 0, -Z, 0) }\n                else { return new Quat(X, 0, Z, 0) }\n            }\n            // Z\n            else if (fromDir.x != 0 && fromDir.y != 0 && fromDir.z == 0)\n            {\n                Vec3.normalize(_tempVec3, toDir);\n                Vec3.normalize(_tempVec3_2, fromDir);\n                let X = _tempVec3.y;\n                let Y = _tempVec3_2.x;\n\n                if (X + Y < 0 || (X + Y == 0 && X < 0)) { return new Quat(-X, -Y, 0, 0) }\n                else { return new Quat(X, Y, 0, 0) }\n            }\n            else\n            {\n                mid.y = fromDir.z;\n                mid.z = toDir.y;\n                mid.normalize();\n            }\n        }\n        Vec3.normalize(_tempVec3, toDir);\n        Vec3.normalize(_tempVec3_2, mid);\n        Quat.multiply(out, new Quat(-_tempVec3.x, -_tempVec3.y, -_tempVec3.z, 0), new Quat(_tempVec3_2.x, _tempVec3_2.y, _tempVec3_2.z, 0));\n        return out;\n    }\n\n    public static deltaAngle (src:number, tar:number) {\n        src = src % 360;\n        tar = tar % 360;\n        return tar - src > 180 ? (src - tar) : tar - src;\n    }\n\n    // axisAngle = Quat.fromAxisAngle\n    public static axisAngle (out:Quat, a1:Vec3, angle:number) {\n        let s = Math.sin(angle / 2);\n        out = new Quat(a1.x * s, a1.y * s, a1.z * s, Math.cos(angle / 2));\n        return out;\n    }\n\n    // Quat.lerp normalize out\n    public static quatLerp (out: Quat, a: Quat, b: Quat, t: number) {\n        if (Quat.dot(a, b) < 0.0) {\n            _tempQuat.set(-b.x, -b.y, -b.z, -b.w);\n        }\n        else {\n            _tempQuat.set(b);\n        }\n        Quat.lerp(out, a, _tempQuat, MathUtil.clamp01(t));\n        Quat.normalize(out, out);\n        return out;\n    }\n\n    //  Vector sLerp\n    // \tv(t) = k(t)*(v1 + t*(v2-v1))\n    //  k(t) = |v1|/|v(t)|=|v1|/|v1+t*(v2-v1)|\n    public static sLerp (out:Vec3, a: Vec3, b:Vec3, t: number) {\n        Vec3.subtract(_tempVec3, b, a);\n        Vec3.multiplyScalar(_tempVec3, _tempVec3, t);\n        Vec3.add(_tempVec3_2, a, _tempVec3);\n\n        let k = a.length() / _tempVec3_2.length();\n        Vec3.multiplyScalar(out, _tempVec3_2, k);\n        return out;\n    }\n\n\n    public static orthoNormalize (outA:Vec3, outB: Vec3, direction:Vec3, center:Vec3) {\n        Vec3.normalize(_tempVec3, direction);\n        Vec3.rotateY(outA, _tempVec3, center, 90);\n        Vec3.cross(outB, outA, _tempVec3);\n    }\n\n    public static clampVec3 (out:Vec3, minVec:Vec3 | null = null, maxVec:Vec3|null = null) {\n        if (minVec) {\n            if (out.x < minVec.x) {\n                out.x = minVec.x;\n            }\n            if (out.y < minVec.y) {\n                out.y = minVec.z;\n            }\n            if (out.z < minVec.y) {\n                out.z = minVec.z;\n            }\n        }\n\n        if (maxVec) {\n            if (out.x > maxVec.x) {\n                out.x = maxVec.x;\n            }\n            if (out.y > maxVec.y) {\n                out.y = maxVec.z;\n            }\n            if (out.z > maxVec.y) {\n                out.z = maxVec.z;\n            }\n        }\n\n        return out;\n    }\n}\n","import { Vec3, Vec4 } from 'cc';\n\n\nexport function lerp (from: number, to: number, ratio: number, EPLISION = 0.01) {\n    let v = from + (to - from) * ratio;\n    if (Math.abs(to - v) <= EPLISION) {\n        v = to;\n    }\n    return v;\n}\n\nexport function vec3_min (out: Vec3, a: Vec3, b: Vec3) {\n    out.x = Math.min(a.x, b.x);\n    out.y = Math.min(a.y, b.y);\n    out.z = Math.min(a.z, b.z);\n    return out;\n}\n\nexport function vec3_max (out: Vec3, a: Vec3, b: Vec3) {\n    out.x = Math.max(a.x, b.x);\n    out.y = Math.max(a.y, b.y);\n    out.z = Math.max(a.z, b.z);\n    return out;\n}\n\nexport function vec3_floor (out: Vec3, a: Vec3) {\n    out.x = Math.floor(a.x);\n    out.y = Math.floor(a.y);\n    out.z = Math.floor(a.z);\n    return out;\n}\n\nexport function vec3_ceil (out: Vec3, a: Vec3) {\n    out.x = Math.ceil(a.x);\n    out.y = Math.ceil(a.y);\n    out.z = Math.ceil(a.z);\n    return out;\n}\n\nexport function roundUp (numToRound: number, multiple: number) {\n    if (multiple === 0)\n        return numToRound;\n    return Math.ceil(numToRound / multiple) * multiple;\n}\n\nexport function sRGB2Linear (v: number) {\n    v /= 255;\n    v = Math.pow(v, 2.2);\n    return v;\n}\n\nexport function RGBE2Linear (rgbe: Vec4, out: Vec4) {\n    let e = Math.pow(2.0, rgbe.w - 128.0) / 255;\n    out.x *= e;\n    out.y *= e;\n    out.z *= e;\n    out.w = 1;\n}\n\nexport function powerOfTwo (v: number) {\n    let target = 1;\n    while (target < v) {\n        target *= 2;\n    }\n    return target;\n}\n\nexport const toHalf16 = (function () {\n\n    var floatView = new Float32Array(1);\n    var int32View = new Int32Array(floatView.buffer);\n\n    /* This method is faster than the OpenEXR implementation (very often\n     * used, eg. in Ogre), with the additional benefit of rounding, inspired\n     * by James Tursa?s half-precision code. */\n    return function toHalf16 (val: number) {\n\n        floatView[0] = val;\n        var x = int32View[0];\n\n        var bits = (x >> 16) & 0x8000; /* Get the sign */\n        var m = (x >> 12) & 0x07ff; /* Keep one extra bit for rounding */\n        var e = (x >> 23) & 0xff; /* Using int is faster here */\n\n        /* If zero, or denormal, or exponent underflows too much for a denormal\n         * half, return signed zero. */\n        if (e < 103) {\n            return bits;\n        }\n\n        /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n        if (e > 142) {\n            bits |= 0x7c00;\n            /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n             * not Inf, so make sure we set one mantissa bit too. */\n            bits |= ((e == 255) ? 0 : 1) && (x & 0x007fffff);\n            return bits;\n        }\n\n        /* If exponent underflows but not too much, return a denormal */\n        if (e < 113) {\n            m |= 0x0800;\n            /* Extra rounding may overflow and set mantissa to 0 and exponent\n             * to 1, which is OK. */\n            bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1);\n            return bits;\n        }\n\n        bits |= ((e - 112) << 10) | (m >> 1);\n        /* Extra rounding. An overflow will set mantissa to 0 and increment\n         * the exponent, which is OK. */\n        bits += m & 1;\n        return bits;\n    };\n\n}());\n","import { _decorator, Component, Node, input, Input, KeyCode } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('move_camera_x')\nexport class move_camera_x extends Component {\n    @property\n    speed = 1\n\n    _run = false\n    start () {\n        input.on(Input.EventType.KEY_DOWN, (e) => {\n            if (e.keyCode === KeyCode.KEY_M) {\n                this._run = true;\n            }\n        })\n    }\n\n    update (deltaTime: number) {\n        if (!this._run) return;\n\n        let pos = this.node.position;\n        this.node.setPosition(pos.x + deltaTime * this.speed, pos.y, pos.z);\n    }\n}\n\n\n","import { _decorator, Component, Node } from 'cc';\nimport { Msg } from '../msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MsgEvents')\nexport class MsgEvents extends Component {\n\n    @property\n    msg = '';\n\n    start() {\n\n        Msg.bind(this.msg, this.setActive, this);\n\n    }\n\n    public setActive(active:boolean) {\n        this.node.active = active;\n    }\n}\n\n","import { Vec3 } from \"cc\";\n\n/**\n * Msg\n */\nexport class Msg<T> {\n\n    private static _map: { [key: string]: Function[] } = {};\n\n    public static on (key: string, fun: (data: any) => void): void {\n        if (!this._map[key]) {\n            this._map[key] = []\n        }\n        this._map[key].push(fun);\n    }\n\n    public static bind (key: string, fun: (data: any) => void, target:any ): void {\n\n        fun = fun.bind(target);\n\n        if (!this._map[key]) {\n            this._map[key] = []\n        }\n        this._map[key].push(fun);\n    }\n\n\n    public static off (key: string, fun: (data: any) => void): void {\n        if (fun === null) {\n            this._map[key] = []\n        } else {\n            const index: number = this._map[key].indexOf(fun);\n            this._map[key].splice(index, 1);\n        }\n    }\n\n    public static emit (key: string, data?: any): void {\n        const info = this._map[key];\n        if (info) {\n            info.forEach(item => {\n                item(data);\n            })\n        } else {\n            //console.warn('Not register key:' + key);\n        }\n    }\n\n}\n","import { _decorator, Component, Node, Animation, CCString } from 'cc';\nimport { Msg } from '../msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MsgPlayAnimation')\nexport class MsgPlayAnimation extends Component {\n\n    @property\n    animName = 'animation';\n\n    @property(CCString)\n    msg = 'msg_play_animation';\n\n    animation: Animation | undefined;\n\n    start () {\n\n        this.animation = this.getComponent(Animation)!;\n        Msg.on(this.msg, () => {\n            this.animation?.stop();\n            this.animation?.play(this.animName);\n        })\n\n    }\n}\n\n","import { _decorator, Component, Node, AudioClip, AudioSource, random, randomRangeInt, math, CCFloat } from 'cc';\nimport { Sound } from './sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MusicComposeRandom')\nexport class MusicComposeRandom extends Component {\n\n    @property([AudioClip])\n    clips: AudioClip[] = [];\n\n    @property([CCFloat])\n    probability: number[] = [];\n\n    @property\n    time: number = 0;\n\n    @property\n    least_count = 1;\n\n    @property\n    smooth: number = 0.1;\n\n    _selects: number[] = [];\n    _curs: number[] = [];\n    _t: number = 0;\n    _audios: AudioSource[] = [];\n\n    start () {\n\n        for (let i = 0; i < this.clips.length; i++) {\n            var as = this.node.addComponent(AudioSource);\n            as.clip = this.clips[i];\n            as.volume = 0;\n            as.loop = true;\n            as.play();\n            this._audios.push(as);\n            this._curs.push(0);\n            this._selects.push(1);\n        }\n\n        this.randomPlay();\n\n    }\n\n    update (deltaTime: number) {\n\n        if (this._t > this.time) {\n            this._t -= this.time;\n            this.randomPlay();\n        }\n\n        this._t += deltaTime;\n\n        for (let i = 0; i < this._audios.length; i++) {\n            this._curs[i] = math.lerp(this._curs[i], this._selects[i], deltaTime * this.smooth);\n            this._audios[i].volume = this._curs[i] * Sound.volume;\n        }\n    }\n\n    randomPlay () {\n\n        var count = 0;\n        for (let i = 0; i < this.clips.length; i++) {\n            if (Math.random() < this.probability[i]) {\n                this._selects[i] = 1;\n                count++;\n            } else {\n                this._selects[i] = 0;\n            }\n        }\n\n        if (count === 0) {\n            var select_one = randomRangeInt(0, this.clips.length);\n            this._selects[select_one] = 1;\n        }\n\n\n\n    }\n}\n\n","import { _decorator, Component, Node, AudioClip, AudioSource, math, CCFloat } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { Sound } from './sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MusicComposeState')\nexport class MusicComposeState extends Component {\n\n    @property([AudioClip])\n    clips: AudioClip[] = [];\n\n    @property\n    smooth: number = 0.1;\n\n    @property(CCFloat)\n    selects: number[] = [];\n\n    _curs: number[] = [];\n\n    _audios: AudioSource[] = [];\n\n\n    start () {\n\n        for (let i = 0; i < this.clips.length; i++) {\n            var as = this.node.addComponent(AudioSource);\n            as.clip = this.clips[i];\n            as.volume = 0;\n            as.loop = true;\n            as.play();\n            this._audios.push(as);\n            this._curs.push(0);\n        }\n\n    }\n\n    update (deltaTime: number) {\n        for (let i = 0; i < this._audios.length; i++) {\n            this._curs[i] = math.lerp(this._curs[i], this.selects[i], deltaTime * this.smooth);\n            this._audios[i].volume = this._curs[i] * Sound.volume;\n        }\n    }\n}\n\n","import { _decorator, Component, Node, AudioClip, AudioSource, math, CCFloat } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { Sound } from './sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MusicComposeValue')\nexport class MusicComposeValue extends Component {\n\n    @property([AudioClip])\n    clips: AudioClip[] = [];\n\n    @property([CCFloat])\n    weight: number[] = [];\n\n    @property\n    smooth: number = 0.1;\n\n    _selects: number[] = [];\n\n    _curs: number[] = [];\n\n    _audios: AudioSource[] = [];\n\n    _value = 0;\n\n    start () {\n\n        Msg.on('music_level_by_speed', this.setValue.bind(this));\n\n        for (let i = 0; i < this.clips.length; i++) {\n            var as = this.node.addComponent(AudioSource);\n            as.clip = this.clips[i];\n            as.volume = 0;\n            as.loop = true;\n            as.play();\n            this._audios.push(as);\n            this._curs.push(0);\n            this._selects.push(1);\n        }\n\n\n    }\n\n    onDestroy () {\n        Msg.off('music_level_by_speed', this.setValue.bind(this));\n    }\n\n    setValue (speed: number) {\n\n        this._value = speed;\n        for (let i = 0; i < this.clips.length; i++) {\n            if (this.weight[i] <= this._value) this._selects[i] = 1;\n            else this._selects[i] = 0;\n        }\n\n    }\n\n    update (deltaTime: number) {\n        for (let i = 0; i < this._audios.length; i++) {\n            this._curs[i] = math.lerp(this._curs[i], this._selects[i], deltaTime * this.smooth);\n            this._audios[i].volume = this._curs[i] * Sound.volume;\n        }\n    }\n}\n\n","import { _decorator, Component, Node, Camera, v3, Color, renderer, debug, director } from 'cc';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('navigation_debugger')\n@executeInEditMode\nexport class navigation_debugger extends Component {    \n\n    start() {\n        \n    }\n\n    update(deltaTime: number) {\n        if(EDITOR) this.editorUpdate();\n    }\n\n    editorUpdate() {\n        const render = director.root?.pipeline.geometryRenderer;\n        render?.addLine(v3(0, 0, 0), v3(3, 0, 3), Color.GREEN, false);\n    }\n}\n\n","import { _decorator, Component, Node, Renderer, Line, v3, Vec2, Vec3, Graphics, gfx, debug, geometry, randomRangeInt, path, IVec3Like, math } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { DataNavigationInst } from '../data/data-core';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('NavigationMap')\n@executeInEditMode\nexport class NavigationMap extends Component {\n\n    points:Vec3[] = [];\n\n    __preload() {\n        //Navigation.init(this.node);\n    }\n\n    update(deltaTime: number) {\n\n        if (EDITOR) {\n            //this.updateEditModel();\n        } \n    }\n\n    updateEditModel() {\n        console.log('navigation edit');\n        this.linkChildNode(this.node);\n    }\n\n    linkChildNode(root:Node) {\n        const children = root.children;\n        \n        for(let i = 0; i < children.length - 1; i++) {\n            const p0 = children[i];\n            const p1 = children[i + 1];\n            const pos0 = p0.position;\n            const pos1 = p1.position;\n            //let line = new geometry.Line(pos0.x, pos0.y, pos0.z, pos1.x, pos1.y, pos1.z);\n            //const l0 = p0.getComponent(Line);\n            //l0.positions[0] = pos0 as never;\n            //l0.positions[1] = pos1 as never;\n        }\n        \n    }\n}\n\n/*\n\nexport class Navigation {\n\n    public static node:Node;\n\n    public static init(_node:Node) {\n       this.node = _node;\n    }\n\n    static calculateRandomPoint(curPos:Vec3) {\n\n        // find closet point.\n        var closet:Node | undefined = this.findChildren(this.node, curPos);\n\n        if (closet === undefined) {\n            console.error('closet not find', curPos, this.node);\n            return [];\n        }\n\n        // random target node.\n        const target:Node = this.randomChildren();\n\n        // go target node.\n        let paths:Vec3[] = [];\n        paths.push(curPos);\n        paths.push(closet.worldPosition);\n        this.findTargetNode(paths, closet, target);\n\n        return paths;\n\n    }\n\n    static findChildren(node:Node, curPos:Vec3) {\n        let minDistance = Number.MAX_VALUE;\n        const children = node.children;\n        let minNode:Node | undefined = undefined;\n        for(let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (node === child) continue;\n            const distance = Vec3.distance(curPos, child.worldPosition);\n            if (distance < minDistance) {\n                minNode = child;\n                minDistance = distance;\n            }\n        }\n        return minNode;\n    }\n\n    static randomChildren() {\n        const randomIndex = randomRangeInt(0, this.node.children.length);\n        return this.node.children[randomIndex];\n    }\n\n    static findTargetNode(paths:Vec3[], node:Node, target:Node) {\n        const children = node.parent?.children ?? undefined;\n        if (children === undefined) return;\n        for(let i = 0; i < children.length; i++) {\n            paths.push(children[i].worldPosition);\n            if (children[i] === node) {\n                break;\n            }\n        }\n\n    } \n\n}\n\n*/","import { _decorator, Component, Node, debug, Camera, Vec3, v3, PhysicsSystem, geometry, IVec3Like, math, url, CCFloat } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { DebugUtil } from '../../core/util/debug-util';\nimport { Gizmo, UtilVec3 } from '../../core/util/util';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('NavigationPoint')\n@executeInEditMode\nexport class NavigationPoint extends Component {\n\n    @property([Node])\n    linkNodes: Node[] = [];\n\n    @property([CCFloat])\n    weights: number[] = [];\n\n    @property\n    radius = 5;\n\n    @property\n    showRay = false\n\n    @property\n    segment = 20;\n\n    _rays: Array<Vec3> | undefined\n\n    onEnable () {\n        // Calculate radius\n        if (EDITOR) {\n            const segment = this.segment;\n            const ray = new geometry.Ray();\n            let minDistance = 200;\n            this._rays = Array(segment);\n            //Ray test\n            for (let i = 0; i < segment; i++) {\n                const angle = 360 / segment * i;\n                let direction = v3(0, this.node.worldPosition.y, -1);\n                Vec3.rotateY(direction, direction, this.node.worldPosition, math.toRadian(angle));\n                ray.o = this.node.worldPosition;\n                ray.d = direction.subtract(this.node.worldPosition);\n                this._rays[i] = direction;\n                if (PhysicsSystem.instance.raycastClosest(ray, undefined, 100)) {\n                    const result = PhysicsSystem.instance.raycastClosestResult;\n                    const hitPoint = result.hitPoint;\n                    const currentDistance = Vec3.distance(this.node.worldPosition, hitPoint);\n                    if (currentDistance < minDistance) {\n                        minDistance = currentDistance;\n                    }\n                }\n            }\n            this.radius = Number(minDistance.toFixed(3));\n        }\n    }\n\n    update (deltaTime: number) {\n        if (EDITOR) {\n            for (let i = 0; i < this.linkNodes.length; i++) {\n                Gizmo.drawLine(this.node.worldPosition, this.linkNodes[i].worldPosition);\n            }\n            Gizmo.drawCircle(this.node.position, this.radius);\n            if (this.showRay) {\n                for (let i = 0; i < this._rays!.length; i++) {\n                    let target = v3(0, 0, 0);\n                    UtilVec3.copy(target, this._rays![i]);\n                    Gizmo.drawLine(this.node.worldPosition, target.add(this.node.worldPosition));\n                }\n            }\n        }\n    }\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('NavigationPoints')\nexport class navigation_points extends Component {\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Component, Node, v3, Color, geometry, Vec3, PhysicsSystem, math, JsonAsset, IVec3Like, Input, input, EventKeyboard, KeyCode, color, game } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { JsonTool } from '../../core/io/json-tool';\nimport { Gizmo, UtilVec3 } from '../../core/util/util';\nimport { NavigationPoint } from './navigation-point';\nimport { NavSystem } from './navigation-system';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('NavigationRegion')\n@executeInEditMode\nexport class NavigationRegion extends Component {\n\n    @property\n    maxDistance = 15;\n\n    @property\n    height = 0.5;\n\n    @property\n    maxHeight = 3;\n\n    @property\n    slopHeight = 1;\n\n    @property\n    slopDistance = 7;\n\n    @property\n    mapBlockX = 15;\n\n    @property\n    mapBlockY = 3;\n\n    @property\n    mapBlockZ = 15;\n\n    @property\n    testPath = false;\n\n    @property(Node)\n    testNode:Node | undefined;\n\n    findPaths = Array<NavSystem.NavPointType>();\n\n    onEnable() {\n        if(EDITOR) {\n            this.refreshMapPoints();\n        }\n    }\n\n    refreshMapPoints() {\n        const children = this.node.children;\n        let data = {\n            blockX: this.mapBlockX,\n            blockY: this.mapBlockY,\n            blockZ: this.mapBlockZ,\n            count:children.length,\n            nodeMap:{},\n            nodes:[],\n            links:[], \n            weights:[]\n        };\n        for(let i = 0; i < children.length; i++) {\n            const child = children[i];\n            child.name = `point_${i}`;\n            const navigationPoint = child.getComponent(NavigationPoint);\n            if(!navigationPoint) {\n                child.addComponent(NavigationPoint);\n            }\n            const worldPosition = child.worldPosition;\n            const pos = {\n                x:Number(worldPosition.x.toFixed(3)), \n                y:Number(worldPosition.y.toFixed(3)), \n                z:Number(worldPosition.z.toFixed(3)),\n                id:child.getSiblingIndex(),\n                radius:navigationPoint?.radius,\n            };\n            const keyX = Math.floor(pos.x / this.mapBlockX);\n            const keyY = Math.floor(pos.y / this.mapBlockY);\n            const keyZ = Math.floor(pos.z / this.mapBlockZ);\n            const key = `${keyX},${keyY},${keyZ}`;\n            if(data.nodeMap[key] === undefined) data.nodeMap[key] = [];\n            data.nodeMap[key].push(child.getSiblingIndex());\n            data.nodes.push(pos);\n            const linkInfo = this.calculateCircleLink(child);\n            data.links.push(linkInfo.links);\n            data.weights.push(linkInfo.weights);\n        }\n        console.log(JsonTool.toJson(data));\n\n        if(this.testPath) {\n\n            NavSystem.Init(data);\n\n            // Test Random paths.\n            //this.testRandomPath();\n\n            // Test Find paths.\n            const times = 10000;\n            let time = game.totalTime;\n            for(let i = 0; i < times; i++) {\n                this.testFindPath();\n            }\n            console.log('run ', times, ' time:', game.totalTime - time, ' ms');\n\n        }\n    }\n\n    calculateCircleLink(node:Node):{ links:number[], weights:number[]} {\n        const children = this.node.children;\n        const origin = node.worldPosition;\n        const ray = new geometry.Ray();\n        ray.o = node.worldPosition;\n        const position = v3(0, 0, 0);\n        let link:Node[] = [];\n        let weights:number[] = [];\n        let linkIndex:number[] = [];\n        for(let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child === node) continue;\n            UtilVec3.copy(position, child.worldPosition);\n            ray.d = position.subtract(origin).normalize();\n            const distance = Vec3.distance(origin, child.worldPosition);\n            if (distance > this.maxDistance) continue;\n            const heightDifference = Math.abs(origin.y - child.worldPosition.y);\n            if (heightDifference > this.maxHeight) continue;\n            if (heightDifference > this.slopHeight && distance > this.slopDistance) continue;\n            if (!PhysicsSystem.instance.raycastClosest(ray, undefined, distance)){\n                link.push(child);\n                linkIndex.push(child.getSiblingIndex());\n                weights.push(Number(distance.toFixed(3)));\n            }\n        }\n        const navigationPoint = node.getComponent(NavigationPoint);\n        navigationPoint!.linkNodes = link;\n        navigationPoint!.weights = weights;\n        return { links:linkIndex, weights:weights }\n    }\n\n    update(deltaTime:number) {\n\n        if(EDITOR) {\n            this.testFindPaths();\n        }\n\n    }\n\n    testFindPaths() {\n\n        if(this.findPaths.length <= 0) return;\n\n        let p0 = v3(0, 0, 0);\n        let p1 = v3(0, 0, 0);\n\n        //Gizmo.drawBox(p0, v3(10, 1, 10), Color.YELLOW);\n        Gizmo.drawBox(this.findPaths[0] as IVec3Like, Vec3.ONE, Color.WHITE);\n\n        for (let i = 1; i < this.findPaths.length; i++) {\n            const start = this.findPaths![i - 1] as IVec3Like;\n            const end = this.findPaths![i] as IVec3Like;\n            UtilVec3.copy(p0, start);\n            UtilVec3.copy(p1, end);\n            p0.y += 0.1;\n            p1.y += 0.1;\n\n            const isLast = i === (this.findPaths.length - 1);\n            if(isLast) {\n                Gizmo.drawBox(p1, Vec3.ONE, Color.RED);\n            }else{\n                Gizmo.drawCircle(p1, 1, Color.RED);\n            } \n            Gizmo.drawLine(p0, p1, Color.RED);\n        }\n    }\n\n    testRandomPath() {\n        // random point.\n        const point = NavSystem.randomPoint();\n        this.testNode?.setWorldPosition(point.position);\n        NavSystem.randomPaths(this.findPaths, this.testNode!.worldPosition, 20, point.closestNavigationPon);\n    }\n\n    testFindPath() {\n    \n        // random start.\n        const start = NavSystem.randomPoint();\n\n        // random end.\n        const end = NavSystem.randomPoint();\n\n        NavSystem.findPaths(this.findPaths, start.position, -1, end.position);\n\n        //console.log('find paths:', this.findPaths);\n    }\n}\n\n","import { _decorator, Vec3, randomRangeInt, path, IVec3Like, math, v3, randomRange, Line, find } from 'cc';\nimport { KeyAnyType } from '../data/game-type';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n\nexport namespace NavSystem {\n\n    export type NavPointType = {\n        x: number,\n        y: number,\n        z: number,\n        id: number,\n        radius: number,\n    }\n\n    let data: KeyAnyType;\n\n    export function Init (_data: any) {\n        data = _data;\n    }\n\n    export function nodePosition (nodeID: number) {\n        return data.nodes[nodeID];\n    }\n\n    export function randomPoint (size = 0.5) {\n        const randomNode = randomRangeInt(0, data.count);\n        const node = data.nodes[randomNode];\n        const radius = node.radius - size;\n        const position = v3(node.x + randomRange(-radius, radius), node.y, node.z + randomRange(-radius, radius));\n        return { closestNavigationPon: randomNode, position: position };\n\n    }\n\n    export function randomPaths (paths: Array<NavPointType>, position: Vec3, count: number, nearest: number = -1): NavPointType[] {\n\n        paths.length = 0;\n\n        if (nearest === -1) {\n            // find nearest point.\n            nearest = findNearestPoint(position);\n        }\n\n        if (nearest === -1) {\n            return [];\n        }\n\n        // search path.\n        calculateRandomPaths(paths, nearest, count);\n\n        return paths;\n\n    }\n\n    export function randomFirePath (paths: Array<NavPointType>, node: number) {\n\n        paths.length = 0;\n        const length = randomRangeInt(5, 11);\n        const nodeData = data.nodes[node];\n\n        for (let i = 0; i < length; i++) {\n            let point = v3(\n                nodeData.x + randomRange(-nodeData.radius, nodeData.radius),\n                nodeData.y,\n                nodeData.z + randomRange(-nodeData.radius, nodeData.radius)\n            )\n            paths[i] = { x: point.x, y: point.y, z: point.z, id: nodeData.id, radius: nodeData.radius };\n\n        }\n\n        return paths;\n\n    }\n\n    export function findNearest (position: Vec3): number {\n\n        const length = data.nodes.length;\n        let minlength = Number.MAX_VALUE;\n        let index = -1;\n        for (let i = 0; i < length; i++) {\n            const node = data.nodes[i];\n            const curLen = Vec3.distance(position, node);\n            if (curLen < minlength) {\n                index = i;\n                minlength = curLen;\n            }\n        }\n\n        if (index === -1) {\n            throw new Error(`'can not find target node.`);\n        }\n\n        return index;\n\n    }\n\n\n    function findNearestPoint (position: Vec3): number {\n\n        if (data == undefined) {\n            console.warn(' Navigation data not init.');\n            return 0;\n        }\n\n        return findNearest(position);\n\n        /*\n\n        let closestNavigationPon = -1;\n        const x = Math.floor(position.x/data.blockX);\n        const y = Math.floor(position.y/data.blockY);\n        const z = Math.floor(position.z/data.blockZ);\n\n        const key = `${x},${y},${z}`;\n        const blockNodes = data.nodeMap[key];\n        if(blockNodes === undefined) {\n            console.warn(`Can not find block:${key}, position:${position}`)\n            return -1;\n        }\n\n        let minDistance = Number.MAX_VALUE;\n        //console.log(blockNodes);\n        for (let i = 0; i < blockNodes.length; i++) {\n            const nodeID = blockNodes[i]\n            const nodePosition = data.nodes[nodeID];\n            const currentDistance = Vec3.distance(position, nodePosition);\n            if(currentDistance < minDistance) {\n                closestNavigationPon = nodeID;\n            }\n        } \n\n        return closestNavigationPon;\n        */\n    }\n\n    function calculateRandomPaths (paths: Array<IVec3Like>, start: number, count: number) {\n\n        if (data == undefined) {\n            console.warn(' Navigation data not init.');\n            return 0;\n        }\n\n        paths[0] = data.nodes[start];\n        //console.log('start node:', start, paths[0]);\n        let currentNode = start;\n\n        for (let i = 1; i < count; i++) {\n            // random children.\n            const links = data.links[currentNode];\n            const randomLinkIndex = randomRangeInt(0, links.length);\n            currentNode = links[randomLinkIndex]\n            paths[i] = (data.nodes[currentNode]);\n            //console.log('point_', currentNode, links, randomLinkIndex, paths[i]);\n        }\n\n    }\n\n    type PathPoint = {\n        node: number,\n        g: number,\n        h: number,\n        f: number,\n        parent: PathPoint | undefined\n    }\n\n\n    export function findPaths (paths: Array<NavPointType>, start: Vec3, startNearest: number = -1, end: Vec3): NavPointType[] {\n\n        paths.length = 0;\n\n        // open table.\n        let openTable: PathPoint[] = [];\n\n        // close table.\n        let closeTable: PathPoint[] = [];\n\n        if (startNearest === -1) {\n            // find nearest point.\n            startNearest = findNearestPoint(start);\n            openTable.push({ node: startNearest, g: 0, h: 0, f: 0, parent: undefined });\n        }\n\n        // find nearest end point.\n        const endNearest = findNearestPoint(end);\n        //console.log('endNearest id', endNearest);\n\n        // check start equal end.\n        if (startNearest === endNearest) {\n            paths.push(data.nodes[startNearest]);\n            return paths;\n        }\n\n        const findMinCostPoint = function (): number {\n\n            if (openTable.length <= 0) return -1;\n\n            let cost = Number.MAX_VALUE;\n            let minNode = -1;\n            for (let i = 0; i < openTable.length; i++) {\n                const current = openTable[i];\n                if (current.f < cost) {\n                    minNode = i;\n                    cost = current.f;\n                }\n            }\n            return minNode;\n        }\n\n        const checkInOpenTable = function (node: number) {\n            for (let openTableI = 0; openTableI < openTable.length; openTableI++) {\n                if (openTable[openTableI].node === node) return true;\n            }\n            return false;\n        }\n\n        const checkInCloseTable = function (node: number) {\n            for (let closeTableI = 0; closeTableI < closeTable.length; closeTableI++) {\n                if (closeTable[closeTableI].node === node) return true;\n            }\n            return false;\n        }\n\n        const pushOpenTable = function (node: number, parent: PathPoint) {\n\n            const nodeData = data.nodes[node];\n\n            // find target.\n            if (nodeData.id == endNearest) {\n                //console.log('find target.', nodeData.id, ' target id:', endNearest);\n                return { node, g: 0, h: 0, f: 0, parent };\n            }\n\n            //console.log(start, nodeData);\n\n            const g = Vec3.distance(start, nodeData);\n\n            const h = Vec3.distance(nodeData, end);\n\n            const f = g + h;\n\n            //console.log('distances start:', distanceStart, 'distances target:', distanceTarget, 'f:', f);\n\n            openTable.push({ node, f, g, h, parent });\n\n            return undefined\n        }\n\n        const searchNeighbor = function (parent: PathPoint) {\n\n            const links = data.links[parent.node];\n\n            //console.log('node:', node, 'neighbor links', links);\n\n            for (let i = 0; i < links.length; i++) {\n\n                const linkNode = links[i];\n                // find in close table.\n                // console.log('neighbor:', links[i], 'close table:', closeTable, 'state:', inCloseTable);\n                if (checkInCloseTable(linkNode)) continue;\n\n                // find in open table.\n                if (checkInOpenTable(linkNode)) continue;\n\n                // push in open table.\n                const findPathPoint = pushOpenTable(linkNode, parent);\n                if (findPathPoint) return findPathPoint;\n            }\n\n            return false;\n\n        }\n\n        const find = function () {\n\n            // find min cost point.\n            const minNodeIndex = findMinCostPoint();\n\n            if (minNodeIndex == -1) {\n                //console.log('can not find target.');\n                return null;\n            }\n\n            //console.log('open table:', openTable, 'minNode:', minNode);\n\n            // open table.\n            const minNode = openTable[minNodeIndex];\n\n            // remove open table.\n            openTable.splice(minNodeIndex, 1);\n\n            // insert close table.\n            closeTable.push(minNode);\n\n            // search neighbors.\n            const findPathPoint = searchNeighbor(minNode);\n            if (findPathPoint) {\n                //console.log('find node target:', findPathPoint);\n                return findPathPoint;\n            }\n\n            return undefined;\n\n        }\n\n        const calculateParent = function (targetNode: PathPoint) {\n\n            const parent = targetNode.parent;\n            if (parent == undefined) return;\n            const node = data.nodes[parent.node];\n            paths.push(node);\n            calculateParent(parent);\n\n        }\n\n        let index = -1;\n        let max = 112;\n        let findTargetPoint: PathPoint | undefined | null;\n\n        while (true) {\n            index++;\n            //console.log('index:', index, 'close table count:', closeTable.length, 'open table count:', openTable.length);\n            if (index > max) break;\n            findTargetPoint = find();\n            if (findTargetPoint !== undefined) break;\n        }\n\n        //calculate paths\n        if (findTargetPoint) {\n\n            //console.log('find target point:', findTargetPoint);\n\n            // push end node.\n            paths.push(data.nodes[endNearest]);\n\n            // get end to start list.\n            calculateParent(findTargetPoint);\n\n            paths.reverse();\n\n        }\n\n        return paths;\n    }\n\n}","import { LGraphNode } from \"../@types/litegraph\";\nimport { BaseStage } from \"../../stages/base-stage\";\n\nexport function updateNextNodes (node: LGraphNode, stages: BaseStage[], outSlotID = 0, nexts?: LGraphNode[]) {\n    nexts = nexts || node.getOutputNodes(outSlotID);\n    if (!nexts) {\n        return;\n    }\n\n    nexts.sort((a, b) => {\n        return a.pos[1] - b.pos[1]\n    })\n\n    for (let i = 0; i < nexts.length; i++) {\n        let next = nexts[i] as any;\n\n        if (next.onUpdateStage) {\n            next.onUpdateStage(node, stages)\n        }\n    }\n}\n","import { _decorator} from 'cc';\nimport { Game } from '../../logic/data/game';\nimport { Msg } from '../msg/msg';\nimport { Singleton } from '../pattern/singleton';\nimport { Queue } from '../util/data-structure';\n\nexport class Notify extends Singleton {\n\n    queue:Queue<INotify> = new Queue();\n    cur:INotify = null;\n    counter = 0;\n\n    public push(title:string, info:string, fun: ()=>void = null) {\n\n        this.queue.push({\n            'title':title,\n            'info':info,\n            'call':fun\n        });\n        \n        this.counter++;\n        \n        if (Game.Instance._isInit) this.check_notify();\n\n        Msg.on('msg_check_notify', this.check_notify.bind(this));\n    }\n\n    public check_notify() {\n\n        if (this.cur !== null && this.cur.call !== null) {\n            this.cur.call();\n        }\n\n        if (this.counter === 0) return;\n\n        if (this.queue.empty()) {\n            this.counter = 0;\n            this.cur = null;\n        }else{\n            this.cur = this.queue.pop();\n            Msg.emit('push', 'notify');\n        }\n    }\n\n\n}\n\nexport interface INotify {\n    title:string,\n    info:string,\n    call:Function\n}\n","import { Asset, assetManager, resources, path as ccpath } from 'cc';\nimport { EDITOR, PREVIEW } from 'cc/env';\n\nlet useNpm = (EDITOR || globalThis.electron);\n\nexport const GAME_VIEW = (cc as any).GAME_VIEW\nexport const fse = useNpm && globalThis.require('fs-extra');\nexport const path = useNpm && globalThis.require('path');\nexport const Editor = useNpm && globalThis.Editor;\nexport const projectPath = EDITOR && Editor.Project.path;\nexport const projectAssetPath = EDITOR && path.join(projectPath, 'assets');\nexport const globby = useNpm && globalThis.require('globby');\n\nexport const InPlayMode = GAME_VIEW || !EDITOR\n\nexport const resUrl = 'db://pipeline/resources/'\n\nexport function readFile (path) {\n    try {\n        return fse.readFileSync(path, 'utf8');\n    }\n    catch (err) {\n        console.error(err);\n    }\n}\n\nexport async function loadResource (relativePath: string, cb?: Function): Promise<Asset> {\n    let resourcePath = await getAssetPath(relativePath);\n\n    return new Promise((resolve, reject) => {\n        function onLoad (err: Error, asset: Asset) {\n            if (err) {\n                // console.error(err);\n                reject(err);\n                return;\n            }\n\n            if (cb) {\n                cb(asset);\n            }\n            resolve(asset);\n        }\n\n        if (!InPlayMode) {\n            let metaPath = resourcePath + '.meta'\n            try {\n                let json = fse.readFileSync(metaPath, 'utf8');\n                json = JSON.parse(json);\n                assetManager.loadAny([json.uuid], onLoad);\n            }\n            catch (err) {\n                // console.error(err);\n            }\n        }\n        else {\n            relativePath = ccpath.changeExtname(relativePath, '');\n            resources.load(relativePath, onLoad)\n        }\n    })\n}\n\nexport async function getAssetPath (relPath: string) {\n    return await Editor.Message.request('asset-db', 'query-path', resUrl + relPath);\n}\n\nexport async function saveJson (relativeJsonPath: string, json: object) {\n    let jsonPath = await getAssetPath(relativeJsonPath);\n\n    let data = JSON.stringify(json, null, 4);\n\n    fse.ensureDirSync(path.dirname(jsonPath));\n    fse.writeFileSync(jsonPath, data);\n}\n\nexport async function saveString (relativePath: string, str: string) {\n    let dst = await getAssetPath(relativePath);\n\n    fse.ensureDirSync(path.dirname(dst));\n    fse.writeFileSync(dst, str);\n}\n\nexport async function loadResources (relDir: string) {\n    if (!InPlayMode) {\n        let absDir = await getAssetPath(relDir);\n        let metaPaths = globby.sync(absDir + '/**/*.meta');\n        if (metaPaths) {\n            return await Promise.all(metaPaths.map(async metaPath => {\n                return new Promise((resolve, reject) => {\n                    let json = fse.readFileSync(metaPath, 'utf8');\n                    json = JSON.parse(json);\n                    assetManager.loadAny([json.uuid], (err: Error, asset: Asset) => {\n                        if (err) {\n                            return reject(err);\n                        }\n                        resolve(asset);\n                    });\n                })\n            }))\n        }\n    }\n    else {\n        return await new Promise((resolve, reject) => {\n            resources.loadDir(relDir, (err: Error, as: Asset[]) => {\n                if (err) {\n                    return reject(err);\n                }\n\n                resolve(as);\n            })\n        })\n    }\n}\n","import { Component, MeshRenderer, renderer, _decorator } from \"cc\";\n\nconst { ccclass, executeInEditMode } = _decorator;\n\nexport let OpaqueDepth = {\n    models: [] as renderer.scene.Model[]\n}\n\n@ccclass('OpaqueDepthObject')\n@executeInEditMode\nexport class OpaqueDepthObject extends Component {\n    onEnable () {\n        let mr = this.getComponent(MeshRenderer);\n        if (mr && mr.model) {\n            OpaqueDepth.models.push(mr.model);\n        }\n    }\n    onDisable () {\n        let mr = this.getComponent(MeshRenderer);\n        if (mr) {\n            let index = OpaqueDepth.models.indexOf(mr.model);\n            if (index !== -1) {\n                OpaqueDepth.models.splice(index, 1);\n            }\n        }\n    }\n}\n","import { Component, _decorator, Vec3, EventTouch, Touch, Quat, Vec2, Node, EventMouse, lerp, input, Input } from 'cc'\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, type } = _decorator;\n\nlet tempVec3 = new Vec3\nlet tempVec3_2 = new Vec3\nlet tempQuat = new Quat\nconst DeltaFactor = 1 / 200\n\nlet PositiveForward = new Vec3(0, 0, 1);\n\n@ccclass('OrbitCamera')\nexport default class OrbitCamera extends Component {\n\n    @property\n    enableTouch = true;\n\n    @property\n    rotateSpeed = 1;\n    @property\n    xRotationRange = new Vec2(5, 70);\n\n    @property\n    get targetRotation (): Vec3 {\n        if (!EDITOR) {\n            this._startRotation.set(this._targetRotation);\n        }\n        return this._startRotation;\n    }\n    set targetRotation (v: Vec3) {\n        this._targetRotation.set(v);\n        this._startRotation.set(v);\n    }\n\n    @property\n    private _startRotation = new Vec3;\n\n\n    private _touched = false;\n    private _targetRotation = new Vec3;\n    private _rotation = new Quat\n\n    start () {\n        if (this.enableTouch) {\n            input.on(Input.EventType.TOUCH_START, this.onTouchStart, this)\n            input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this)\n            input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this)\n        }\n\n        this._targetRotation.set(this.node.eulerAngles);\n        this._rotation.set(this.node.rotation);\n\n        this.limitRotation()\n    }\n\n    onTouchStart () {\n        this._targetRotation.set(this.node.eulerAngles);\n        this._rotation.set(this.node.rotation);\n        this._touched = true;\n    }\n    onTouchMove (touch: EventTouch) {\n        // if (!this._touched) return;\n        let delta = touch.getDelta()\n\n        Quat.fromEuler(tempQuat, this._targetRotation.x, this._targetRotation.y, this._targetRotation.z);\n\n        Quat.rotateX(tempQuat, tempQuat, delta.y * DeltaFactor);\n        Quat.rotateAround(tempQuat, tempQuat, Vec3.UP, -delta.x * DeltaFactor);\n\n        Quat.toEuler(this._targetRotation, tempQuat);\n\n        this.limitRotation()\n    }\n    onTouchEnd () {\n        this._touched = false;\n    }\n\n    limitRotation () {\n        let rotation = this._targetRotation;\n\n        if (rotation.x < this.xRotationRange.x) {\n            rotation.x = this.xRotationRange.x\n        }\n        else if (rotation.x > this.xRotationRange.y) {\n            rotation.x = this.xRotationRange.y\n        }\n\n        rotation.z = 0;\n    }\n\n\n    update (dt: number) {\n        let targetRotation = this._targetRotation;\n\n        Quat.fromEuler(tempQuat, targetRotation.x, targetRotation.y, targetRotation.z);\n        Quat.slerp(this._rotation, this._rotation, tempQuat, dt * 7 * this.rotateSpeed);\n        this.node.rotation = this._rotation;\n    }\n}\n","import { LGraphNode } from '../@types/litegraph';\nimport { BaseStage } from '../../stages/base-stage';\nimport { liteGraph } from '../graph';\n\nexport function OutputTexture () {\n    let self = this as LGraphNode;\n    self.addInput('RenderTexture', 'RenderTexture');\n\n    self.addProperty('OutputName', '', undefined);\n    self.addWidget(\"text\", 'OutputName', '', 'OutputName');\n\n    this.onUpdateStage = function updateStage (prev: LGraphNode, stages: BaseStage[]) {\n        let stage = (prev as any).stage as BaseStage\n        if (stage) {\n            // stage.outputName = self.properties.OutputName\n        }\n    }\n\n    self.size = self.computeSize();\n}\n\ndelete liteGraph.registered_node_types[`pipeline/OutputTexture`];\nliteGraph.registerNodeType(`pipeline/OutputTexture`, OutputTexture as any);\n","import { gfx, Material, renderer, rendering } from \"cc\";\nimport { EDITOR, JSB } from \"cc/env\";\nimport { settings } from \"../stages/setting\";\n\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n\nclass PassUtils {\n    clearFlag: gfx.ClearFlagBit = gfx.ClearFlagBit.COLOR;\n    clearColor = new gfx.Color()\n    clearDepthColor = new gfx.Color()\n    ppl: rendering.Pipeline | undefined;\n    camera: renderer.scene.Camera | undefined;\n    material: Material | undefined;\n    pass: rendering.RasterPassBuilder | undefined\n    rasterWidth = 0\n    rasterHeight = 0\n    layoutName = ''\n\n    version () {\n        if (!EDITOR) {\n            settings.passPathName += `_${this.pass.name}_${this.layoutName}`;\n            this.pass.setVersion(settings.passPathName, settings.passVersion);\n        }\n    }\n\n    addRasterPass (width: number, height: number, layoutName: string, passName: string) {\n        const pass = this.ppl.addRasterPass(width, height, layoutName);\n        pass.name = passName;\n        this.pass = pass;\n        this.rasterWidth = width;\n        this.rasterHeight = height;\n        this.layoutName = layoutName;\n        return this;\n    }\n    setViewport (x, y, w, h) {\n        this.pass.setViewport(new Viewport(x, y, w, h))\n        return this;\n    }\n\n    addRasterView (name: string, format: gfx.Format, offscreen = true, residency?: rendering.ResourceResidency) {\n        if (!this.ppl.containsResource(name)) {\n            if (format === gfx.Format.DEPTH_STENCIL) {\n                this.ppl.addDepthStencil(name, format, this.rasterWidth, this.rasterHeight, ResourceResidency.MANAGED);\n            }\n            else {\n                if (offscreen) {\n                    this.ppl.addRenderTarget(name, format, this.rasterWidth, this.rasterHeight, residency || ResourceResidency.MANAGED);\n                }\n                else {\n                    this.ppl.addRenderTexture(name, format, this.rasterWidth, this.rasterHeight, this.camera.window);\n                }\n            }\n\n        }\n\n        if (format !== gfx.Format.DEPTH_STENCIL) {\n            if (!offscreen) {\n                this.ppl.updateRenderWindow(name, this.camera.window);\n            }\n            else {\n                this.ppl.updateRenderTarget(name, this.rasterWidth, this.rasterHeight);\n            }\n        }\n        else {\n            this.ppl.updateDepthStencil(name, this.rasterWidth, this.rasterHeight);\n        }\n\n        let clearOp = LoadOp.CLEAR;\n        if (this.clearFlag === ClearFlagBit.NONE) {\n            // if (JSB) {\n            //     clearOp = LoadOp.DISCARD;\n            // }\n            // else {\n            clearOp = LoadOp.LOAD;\n            // }\n        }\n\n        let view: rendering.RasterView;\n        if (format === gfx.Format.DEPTH_STENCIL) {\n            view = new RasterView('_',\n                AccessType.WRITE, AttachmentType.DEPTH_STENCIL,\n                clearOp, StoreOp.STORE,\n                this.clearFlag,\n                this.clearDepthColor\n            );\n        }\n        else {\n            view = new RasterView('_',\n                AccessType.WRITE, AttachmentType.RENDER_TARGET,\n                clearOp,\n                StoreOp.STORE,\n                this.clearFlag,\n                this.clearColor\n            );\n        }\n        this.pass.addRasterView(name, view);\n        return this;\n    }\n    setPassInput (inputName: string, shaderName: string) {\n        if (this.ppl.containsResource(inputName)) {\n            const computeView = new ComputeView();\n            computeView.name = shaderName;\n            this.pass.addComputeView(inputName, computeView);\n        }\n        return this;\n    }\n\n    blitScreen (passIdx = 0) {\n        this.pass.addQueue(QueueHint.RENDER_TRANSPARENT).addCameraQuad(\n            this.camera, this.material, passIdx,\n            SceneFlags.NONE,\n        );\n        return this;\n    }\n}\n\nexport let passUtils = new PassUtils;\n","import { _decorator, Component, Material, path } from 'cc';\nimport { loadGraph } from '../graph/graph';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('PipelineAssets')\n@executeInEditMode\nexport class PipelineAssets extends Component {\n\n    @property(Material)\n    _materials: Material[] = []\n    @property(Material)\n    get materials () {\n        return this._materials\n    }\n    set materials (ms) {\n        this._materials = ms\n        this.updateMaterials();\n    }\n\n    materialNames: string[] = []\n    materialMap: Map<string, Material> = new Map\n\n    getMaterial (name: string) {\n        return this.materialMap.get(name)\n    }\n\n    updateMaterials () {\n        this.materialMap.clear()\n        this.materialNames = this.materials.map(m => {\n            if (!m) {\n                return;\n            }\n            let name = path.basename(m.effectName)\n            this.materialMap.set(name, m)\n            return name\n        });\n\n        this.materials.map(m => {\n        })\n    }\n\n    onEnable () {\n        globalThis.pipelineAssets = this\n        this.updateMaterials();\n\n        try {\n            loadGraph()\n        }\n        catch (err) {\n\n        }\n    }\n    onDisable () {\n        if (globalThis.pipelineAssets === this) {\n            globalThis.pipelineAssets = undefined\n        }\n    }\n}\n","import { Component, sys, _decorator } from 'cc'\nimport { EDITOR } from 'cc/env';\nimport { showGraph } from './graph';\nimport { repaintInEditMode } from '../utils/editor'\n\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('custom.PiepelineGraph')\n@executeInEditMode\nexport class PiepelineGraph extends Component {\n    @property\n    _edit = false;\n\n    @property\n    get edit () {\n        return this._edit;\n    }\n    set edit (v) {\n        this._edit = v;\n\n        this.onEditChanged();\n    }\n\n    start () {\n        this.onEditChanged();\n    }\n\n    onEditChanged () {\n        if (!sys.isBrowser || !EDITOR) {\n            return;\n        }\n        let show = this._edit;\n\n        showGraph(show, () => {\n            this._edit = false;\n\n            if (globalThis.cce) {\n                (globalThis.cce).Node.emit('change', this.node);\n            }\n        })\n    }\n\n    update () {\n        if (EDITOR) {\n            if (this._edit) {\n                repaintInEditMode();\n            }\n        }\n\n    }\n}\n","import { _decorator, renderer, rendering, ReflectionProbeManager, ReflectionProbe, Node, CCObject, game, Game, debug, profiler, Mat4, assetManager, instantiate, Prefab, director, Director } from 'cc';\nimport { BaseStage } from './stages/base-stage';\nimport { CameraSetting } from './camera-setting';\nimport { EDITOR, JSB } from 'cc/env';\nimport { buildDeferred } from './test-custom';\nimport { passUtils } from './utils/pass-utils';\nimport { settings } from './stages/setting';\nimport { HrefSetting } from './settings/href-setting';\nimport { TAAStage } from './stages/taa-stage';\nimport { CustomShadowStage } from './stages/shadow-stage';\nimport { getCameraUniqueID } from './utils/utils';\n\nlet EditorCameras = [\n    // 'scene:material-previewcamera',\n    // 'Scene Gizmo Camera',\n    // 'Editor UIGizmoCamera',\n\n    // 'Main Camera'\n]\n\nexport class CustomPipelineBuilder {\n    static pipelines: Map<string, BaseStage[]> = new Map\n\n    static registerStages (name: string, stages: BaseStage[]) {\n        this.pipelines.set(name, stages);\n    }\n\n    static unregisterStages (name: string) {\n        this.pipelines.set(name, null);\n    }\n\n    private _shadowStage: CustomShadowStage | undefined\n    get shadowStage () {\n        if (!this._shadowStage) {\n            this._shadowStage = new CustomShadowStage()\n        }\n        return this._shadowStage\n    }\n\n    setupReflectionProbe (cameras: renderer.scene.Camera[], ppl: rendering.Pipeline) {\n        if (ReflectionProbeManager === undefined) {\n            return;\n        }\n\n        const probes = ReflectionProbeManager.probeManager.getProbes();\n        for (let i = 0; i < probes.length; i++) {\n            let probe = probes[i];\n\n            if (probe.needRender) {\n                settings.outputRGBE = true;\n                settings.bakingReflection = true;\n\n                let originCameraNode = probe.cameraNode;\n                let originCamera = probe.camera;\n                let originName = originCamera.name;\n                if (!probe.cameras || !probe.cameras.length) {\n                    probe.cameras = []\n                    for (let faceIdx = 0; faceIdx < 6; faceIdx++) {\n                        probe._camera = null;\n                        const tempNode = new Node(probe.node.name + ' Camera ' + faceIdx);\n                        tempNode.hideFlags |= CCObject.Flags.DontSave | CCObject.Flags.HideInHierarchy;\n                        tempNode.parent = probe.node;\n\n                        let camera = probe._createCamera(tempNode);\n                        camera._name = originName + faceIdx;\n                        probe.cameras.push(camera);\n                    }\n                }\n\n                for (let faceIdx = 0; faceIdx < 6; faceIdx++) {\n                    let camera = probe.cameras[faceIdx];\n                    camera.attachToScene(probe.node.scene.renderScene);\n\n                    const window = probe.bakedCubeTextures[faceIdx].window;\n                    camera.changeTargetWindow(window);\n                    camera.setFixedSize(window.width, window.height);\n                    camera.update();\n\n                    passUtils.camera = camera;\n                    probe._camera = camera;\n                    probe.cameraNode = camera.node;\n\n                    //update camera dirction\n                    probe.updateCameraDir(faceIdx);\n\n                    this.renderCamera(camera, ppl, 'reflection-probe')\n\n                    let index = cameras.indexOf(camera);\n                    if (index !== -1) {\n                        cameras.splice(index, 1);\n                    }\n                }\n\n                probe._camera = originCamera;\n                probe.cameraNode = originCameraNode;\n\n                probe.needRender = false;\n                settings.outputRGBE = false;\n                settings.bakingReflection = false;\n            }\n        }\n    }\n\n    public setup (cameras: renderer.scene.Camera[], ppl: rendering.Pipeline): void {\n        if (!globalThis.pipelineAssets) {\n            return;\n        }\n\n        director.root.pipeline.pipelineSceneData.shadingScale = HrefSetting.shadingScale\n        settings.renderProfiler = false;\n\n        passUtils.ppl = ppl;\n\n        this.setupReflectionProbe(cameras, ppl);\n\n        for (let i = 0; i < cameras.length; i++) {\n            const camera = cameras[i];\n            if (!camera.scene) {\n                continue;\n            }\n            if (camera.node.getComponent(ReflectionProbe)) {\n                continue;\n            }\n            // buildDeferred(camera, ppl);\n\n            if (i === cameras.length - 1) {\n                settings.renderProfiler = true;\n            }\n\n            passUtils.camera = camera;\n            this.renderCamera(camera, ppl)\n        }\n    }\n    renderCamera (camera: renderer.scene.Camera, ppl: rendering.Pipeline, pipelineName = '') {\n        // const isGameView = camera.cameraUsage === renderer.scene.CameraUsage.GAME\n        // || camera.cameraUsage === renderer.scene.CameraUsage.GAME_VIEW;\n\n        if (EditorCameras.includes(camera.name)) {\n            return\n        }\n\n        // reset states\n        {\n            settings.tonemapped = false;\n            settings.shadowStage = undefined;\n            settings.gbufferStage = false;\n            settings.passPathName = '';\n\n            // camera._submitInfo = null;\n            // camera.culled = false;\n        }\n\n        let cameraSetting = camera.node.getComponent(CameraSetting);\n\n        if (!pipelineName) {\n            pipelineName = 'forward';\n            if (cameraSetting) {\n                pipelineName = cameraSetting.pipeline;\n            }\n            else if (camera.name === 'Editor Camera') {\n                if (camera.projectionType === renderer.scene.CameraProjection.ORTHO) {\n                    pipelineName = 'forward';\n                }\n                else {\n                    pipelineName = 'main';\n                }\n            }\n        }\n        // else if (EDITOR && !EditorCameras.includes(camera.name)) {\n        //     return;\n        // }\n\n        let stages = CustomPipelineBuilder.pipelines.get(pipelineName);\n        if (!stages) {\n            return;\n        }\n\n        let taaStage = stages.find(s => s instanceof TAAStage) as TAAStage;\n        if (taaStage && taaStage.checkEnable()) {\n            (camera as any)._isProjDirty = true\n            camera.update(true)\n\n            camera.matProj.m12 += globalThis.TAASetting.instance.sampleOffset.x;\n            camera.matProj.m13 += globalThis.TAASetting.instance.sampleOffset.y;\n\n            Mat4.invert(camera.matProjInv, camera.matProj);\n            Mat4.multiply(camera.matViewProj, camera.matProj, camera.matView);\n            Mat4.invert(camera.matViewProjInv, camera.matViewProj);\n            camera.frustum.update(camera.matViewProj, camera.matViewProjInv);\n        }\n\n        settings.passPathName += getCameraUniqueID(camera);\n        let lastStage: BaseStage | undefined = undefined;\n        for (let i = 0; i < stages.length; i++) {\n            let stage = stages[i];\n            if (!stage.checkEnable()) {\n                continue;\n            }\n            stage.lastStage = lastStage;\n            // settings.passPathName += '_' + stage.name;\n            stage.render(camera, ppl);\n\n            lastStage = stage\n        }\n    }\n}\n\n// if (JSB) {\n//     debugger;\n// }\n\n// if (!JSB) {\nrendering.setCustomPipeline('Deferred', new CustomPipelineBuilder)\n// }\n\ngame.on(Game.EVENT_RENDERER_INITED, () => {\n    director.root.pipeline.setMacroInt('CC_PIPELINE_TYPE', 1);\n})\n","import { LGraphNode } from '../@types/litegraph';\nimport { BaseStage, } from '../../stages/base-stage';\nimport { CustomPipelineBuilder, } from '../../pipeline-manager';\nimport { liteGraph } from '../graph';\nimport { updateNextNodes } from '../utils/nodes';\n\nfunction Pipeline () {\n    let self = this as LGraphNode;\n    self.addOutput('Camera Output', 'Camera Output');\n\n    let stages: BaseStage[] = this.stages = [];\n    let name = 'Pipeline_' + Date.now();\n\n    CustomPipelineBuilder.registerStages(name, stages);\n\n    self.addProperty('Name', name, undefined);\n    self.addWidget(\"text\", 'Name', name, 'Name');\n\n    self.addProperty('Enable', true, undefined);\n    self.addWidget(\"toggle\", 'Enable', false, 'Enable');\n\n    self.onPropertyChanged = function (name: string, value: string, prevalue: string) {\n        if (name === 'Name') {\n            CustomPipelineBuilder.unregisterStages(prevalue);\n            CustomPipelineBuilder.registerStages(value, stages);\n        }\n    }\n\n    self.onExecute = function () {\n        stages.length = 0;\n\n        if (!self.properties.Enable) {\n            return;\n        }\n\n        updateNextNodes(self, stages);\n    }\n\n    self.size = self.computeSize();\n}\n\ndelete liteGraph.registered_node_types[`pipeline/Pipeline`];\nliteGraph.registerNodeType(`pipeline/Pipeline`, Pipeline as any);\n","import { Vec3, Vec2, Quat, Mat4, Vec4 } from 'cc';\n\nexport class PrivatePool<T> {\n    _pool: T[] = [];\n    _ctor: new () => T;\n\n    constructor (ctor: new () => T) {\n        this._ctor = ctor;\n    }\n\n    get (): T {\n        let instance = this._pool.pop()! as T;\n        if (!instance) {\n            instance = new this._ctor();\n        }\n        return instance;\n    }\n\n    put (instance: T) {\n        this._pool.push(instance);\n    }\n}\n\nexport let Pool = {\n    Vec2: new PrivatePool(Vec2),\n    Vec3: new PrivatePool(Vec3),\n    Vec4: new PrivatePool(Vec4),\n    Quat: new PrivatePool(Quat),\n    Mat4: new PrivatePool(Mat4),\n}\n","import { _decorator, Component, Node, Prefab, instantiate, game, JsonAsset, director, ProgressBar, Label, UITransform, lerp, setDisplayStats, isDisplayStats, Light, profiler, resources, sys, CCString } from 'cc';\nimport { Game } from '../data/game';\nimport { Save } from '../data/save';\nimport { Msg } from '../../core/msg/msg';\nimport { ResCache } from '../../core/res/res-cache';\nimport { GScene } from '../../core/scene/g-scene';\nconst { ccclass, type, property } = _decorator;\n\n\n@ccclass('Preload')\nexport class Preload extends Component {\n    @property\n    initGame = false\n\n    @type(CCString)\n    prefabToLoad: string[] = []\n    @type(Node)\n    prefabRoot: Node | undefined\n\n    @type(Node)\n    removeWhenLoaded: Node[] = []\n\n    @property(JsonAsset)\n    savejson: JsonAsset\n\n    @type(ProgressBar)\n    progress: ProgressBar | undefined\n\n    @type(Label)\n    progressInfo: Label | undefined\n\n    @property\n    ui = ''\n\n    @type(CCString)\n    inst_actions: string[] = []\n\n    progressTarget = 0\n\n    tasks: any[] = []\n    startTime = 0\n\n    initGameTasks () {\n        if (!this.initGame) return\n\n        this.startTime = performance.now()\n\n        GScene.isPreload = true;\n\n        Game.Instance.preInit(this.savejson);\n\n        this.tasks.push(\n            {\n                name: 'Loading Resources',\n                task: async () => {\n                    console.time('Load Resources');\n\n                    await new Promise((resolve) => {\n                        ResCache.Instance.load(() => {\n                            Game.Instance.init();\n\n                            setDisplayStats(false)\n\n                            console.timeEnd('Load Resources');\n                            resolve(null);\n                        });\n                    })\n                }\n            },\n\n            {\n                name: 'Preload Scene',\n                task: async () => {\n                    await Promise.all(['scene-menu', 'scene-editor', 'scene-map'].map(sceneName => {\n                        return new Promise(resolve => {\n                            director.preloadScene(sceneName, () => {\n                                resolve(null)\n                            })\n                        })\n                    }))\n                }\n            },\n            {\n                name: 'Preload Material',\n                task: async () => {\n                    await new Promise(resolve => {\n                        resources.loadDir('materials', () => {\n                            resolve(null)\n                        })\n                    })\n\n                    await new Promise(resolve => {\n                        resources.loadDir('preload_prefabs', (err, prefabs) => {\n                            prefabs.forEach((p: Prefab) => {\n                                let n = instantiate(p) as Node\n                                n.parent = director.getScene() as any\n                                n.parent = null\n                            })\n\n                            resolve(null)\n                        })\n                    })\n                }\n            }\n        )\n    }\n\n    async load () {\n\n        GScene.isPreload = true;\n\n        if (this.progress) {\n            let ui = this.progress.getComponent(UITransform)\n            this.progress.progress = 0;\n        }\n\n        this.initGameTasks()\n\n        let tasks = this.tasks\n        let lights = []\n\n        await new Promise(resolve => {\n            let i = setInterval(() => {\n                if ((1 - this.progress.progress) < 0.01) {\n                    resolve(null)\n                    clearInterval(i)\n                }\n            })\n        })\n\n        lights.forEach(l => {\n            l.node.active = true\n        })\n\n        for (let i = 0; i < this.removeWhenLoaded.length; i++) {\n            this.removeWhenLoaded[i].active = false;\n        }\n\n        GScene.isPreload = false;\n        GScene.isLoadScene = false;\n\n        await new Promise(resolve => {\n            setTimeout(() => {\n                resolve(null)\n            }, 1000)\n        })\n\n\n        // if (profiler._stats) {\n        //     (profiler._stats as any).fps.counter._accumValue = 120\n        // }\n        // setDisplayStats(Save.Instance._cur && Save.Instance._cur.debugIndex)\n\n        if (this.initGame) {\n            Msg.emit('preload-inited-game', this.startTime)\n        }\n    }\n\n    async start () {\n        await this.load()\n    }\n\n    update (deltaTime: number) {\n\n        if (this.progress) {\n            this.progress.progress = lerp(this.progress.progress, this.progressTarget, deltaTime)\n        }\n\n    }\n}\n\n","import { _decorator, Collider, Component, ITriggerEvent, Node, PhysicsSystem, RigidBody, v3, Vec3, CCFloat } from 'cc';\nimport { calculateDamageNode } from './damage-core';\nimport { Sound } from '../../core/audio/sound';\nimport { Actor } from './actor';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ProjectileGrenade')\nexport class ProjectileGrenade extends Component {\n\n    _data: any;\n\n    _size = v3(1, 1, 1);\n\n    @property(CCFloat)\n    explodeTime = 3;\n\n    @property(Vec3)\n    endSize = v3(6, 6, 6);\n\n    @property(Collider)\n    collider: Collider | undefined;\n\n    @property(RigidBody)\n    rigidbody: RigidBody | undefined;\n\n    updateFunction: Function | undefined;\n\n    actor: Actor | undefined;\n\n    onThrow (weaponData: any, force: Vec3, shootActor: Actor | undefined) {\n        this._data = weaponData;\n        this.actor = shootActor;\n        this.rigidbody?.applyImpulse(force);\n        this.updateFunction = this.waitExplode;\n    }\n\n    onExplode () {\n        this.collider!.isTrigger = true;\n        this.rigidbody!.useGravity = false;\n        this.updateFunction = this.exploding;\n        this.collider!.on('onTriggerEnter', this.onTriggerEnter, this);\n        Sound.on(this._data.sound_explode);\n    }\n\n    onExplodeEnd () {\n        this.updateFunction = undefined;\n        this.collider!.off('onTriggerEnter', this.onTriggerEnter, this);\n        this.node.active = false;\n    }\n\n    onTriggerEnter (event: ITriggerEvent) {\n        const hitPoint = event.otherCollider.node.getWorldPosition();\n        calculateDamageNode(this._data, event.otherCollider.node, hitPoint, this.actor);\n    }\n\n    waitExplode (deltaTime: number) {\n        this.explodeTime -= deltaTime;\n        if (this.explodeTime <= 0) {\n            this.onExplode();\n        }\n    }\n\n    exploding (deltaTime: number) {\n        Vec3.lerp(this._size, this._size, this.endSize, deltaTime * 5);\n        this.node.setWorldScale(this._size);\n        if (Math.abs(this._size.x - this.endSize.x) < 0.1) {\n            this.onExplodeEnd();\n        }\n    }\n\n    update (deltaTime: number) {\n        if (this.updateFunction !== undefined)\n            this.updateFunction(deltaTime);\n    }\n\n}\n\n","\nimport { Mat4, renderer, RenderingSubMesh, Vec3 } from 'cc';\n\nfunction normalizeGPU (v: number[]) {\n    let d = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    d = 1 / Math.sqrt(d);\n    return [v[0] * d, v[1] * d, v[2] * d]\n}\nfunction crossGPU (a: number[], b: number[]) {\n    let ax = a[0], ay = a[1], az = a[2];\n    let bx = b[0], by = b[1], bz = b[2];\n\n    return [\n        ay * bz - az * by,\n        az * bx - ax * bz,\n        ax * by - ay * bx,\n    ]\n}\nfunction dotGPU (a: number[], b: number[]) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nfunction lengthGPU (a: number[]) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n}\n\nfunction newVec3 (x: number, y: number, z: number) {\n    return [x, y, z]\n}\nfunction subtract (a: number[], b: number[]) {\n    return [a[0] - b[0], a[1] - b[1], a[2] - b[2]]\n}\nfunction add (a: number[], b: number[]) {\n    return [a[0] + b[0], a[1] + b[1], a[2] + b[2]]\n}\n\n\n\nfunction rayAABB (o: number[], d: number[], min: number[], max: number[]) {\n    const EPSILON = 10e-6;\n\n    const ix = 1 / d[0]; const iy = 1 / d[1]; const iz = 1 / d[2];\n    const t1 = (min[0] - o[0]) * ix;\n    const t2 = (max[0] - o[0]) * ix;\n    const t3 = (min[1] - o[1]) * iy;\n    const t4 = (max[1] - o[1]) * iy;\n    const t5 = (min[2] - o[2]) * iz;\n    const t6 = (max[2] - o[2]) * iz;\n    const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n    const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6));\n    if (tmax < 0 || tmin > tmax) { return 0; }\n    return tmin > 0 ? tmin : tmax; // ray origin inside aabb\n}\nfunction mul (a: number[], scale: number) {\n    return [a[0] * scale, a[1] * scale, a[2] * scale]\n}\nfunction mulV3 (a: number[], b: number[]) {\n    return [a[0] * b[0], a[1] * b[1], a[2] * b[2]]\n}\n\nfunction rayTriangle (ro: number[], rd: number[], v0: number[], v1: number[], v2: number[]) {\n    const EPSILON = 10e-6;\n\n    var ab = subtract(v1, v0);\n    var ac = subtract(v2, v0);\n\n    var pvec = crossGPU(rd, ac);\n    var det = dotGPU(ab, pvec);\n    if (det < EPSILON && (/*!doubleSided ||*/ det > -EPSILON)) { return 0; }\n\n    var inv_det = 1 / det;\n\n    var tvec = subtract(ro, v0);\n    var u = dotGPU(tvec, pvec) * inv_det;\n    if (u < -EPSILON || u > (1 + EPSILON)) { return 0; }\n\n    var qvec = crossGPU(tvec, ab);\n    var v = dotGPU(rd, qvec) * inv_det;\n    if (v < -EPSILON || u + v > (1 + EPSILON)) { return 0; }\n\n    var t = dotGPU(ac, qvec) * inv_det;\n    return t < 0 ? 0 : t;\n}\nfunction inverseMat4 (\n    a00: number, a01: number, a02: number, a03: number,\n    a10: number, a11: number, a12: number, a13: number,\n    a20: number, a21: number, a22: number, a23: number,\n    a30: number, a31: number, a32: number, a33: number\n) {\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (det === 0) {\n        return createEmptyMat4();\n    }\n    det = 1.0 / det;\n\n    var out = createEmptyMat4();\n    out[0][0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[0][1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[0][2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[0][3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[1][0] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[1][1] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[1][2] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[1][3] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[2][0] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[2][1] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[2][2] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[2][3] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[3][0] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[3][1] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[3][2] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[3][3] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\nfunction createEmptyMat4 () {\n    return [\n        [0, 0, 0, 0,],\n        [0, 0, 0, 0,],\n        [0, 0, 0, 0,],\n        [0, 0, 0, 0,],\n    ];\n}\nfunction initMat4 (m: number[], start: number) {\n    var arr = createEmptyMat4();\n    for (let x = 0; x < 4; x++) {\n        for (let y = 0; y < 4; y++) {\n            arr[x][y] = m[y + x * 4 + start];\n        }\n    }\n    return arr;\n}\nfunction v3_lv3 (v: number[],\n    m00: number, m01: number, m02: number, m03: number,\n    m10: number, m11: number, m12: number, m13: number,\n    m20: number, m21: number, m22: number, m23: number,\n    m30: number, m31: number, m32: number, m33: number) {\n\n    let im = inverseMat4(\n        m00, m01, m02, m03,\n        m10, m11, m12, m13,\n        m20, m21, m22, m23,\n        m30, m31, m32, m33,\n    );\n\n    let x = v[0];\n    let y = v[1];\n    let z = v[2];\n    let rhw = im[0][3] * x + im[1][3] * y + im[2][3] * z + im[3][3];\n    rhw = (rhw !== 0) ? Math.abs(1 / rhw) : 1;\n\n    let out = newVec3(\n        (im[0][0] * x + im[1][0] * y + im[2][0] * z + im[3][0]) * rhw,\n        (im[0][1] * x + im[1][1] * y + im[2][1] * z + im[3][1]) * rhw,\n        (im[0][2] * x + im[1][2] * y + im[2][2] * z + im[3][2]) * rhw\n    );\n    return out;\n\n}\n\nlet _gpu: any;\nfunction getGPU () {\n    if (!_gpu) {\n        // @ts-ignore\n        _gpu = new GPU({\n            // mode: 'dev'\n            // mode: 'gpu'\n            // mode: 'webgl'\n            // mode: 'webgl2'\n        })\n\n        _gpu.addFunction(newVec3)\n        _gpu.addFunction(subtract)\n        _gpu.addFunction(add)\n        _gpu.addFunction(createEmptyMat4)\n        _gpu.addFunction(initMat4)\n        _gpu.addFunction(inverseMat4)\n        _gpu.addFunction(v3_lv3)\n        _gpu.addFunction(rayTriangle)\n        _gpu.addFunction(mul)\n        _gpu.addFunction(mulV3)\n        _gpu.addFunction(rayAABB)\n\n        _gpu.addFunction(dotGPU)\n        _gpu.addFunction(normalizeGPU)\n        _gpu.addFunction(lengthGPU)\n        _gpu.addFunction(crossGPU)\n    }\n\n    return _gpu;\n}\n\nlet _kernel: any;\nlet _meshBuffer: Float32Array | undefined;\nlet _subModelCount = 0;\n\nexport default {\n    createKernel (models: renderer.scene.Model[], maxDirection: number, cornersCount: number) {\n        let subModels: renderer.scene.SubModel[] = []\n        for (let mi = 0; mi < models.length; mi++) {\n            let m = models[mi];\n\n            for (let smi = 0; smi < m.subModels.length; ++smi) {\n                subModels.push(m.subModels[smi]);\n            }\n        }\n        _subModelCount = subModels.length;\n\n        let directionSize = (Math.floor(Math.sqrt(maxDirection)) + 1);\n        let threadSize = [directionSize, directionSize, cornersCount]\n\n        // @ts-ignore\n        let gpu = getGPU();\n\n        // @ts-ignore\n        _kernel = gpu.createKernel(function (buffer, norners, points, subModelCount) {\n            // @ts-ignore\n            var nornerOffset = this.thread.z * 3;\n            var ro = newVec3(norners[nornerOffset + 0], norners[nornerOffset + 1], norners[nornerOffset + 2]);\n\n            // @ts-ignore\n            var pointsOffset = (this.thread.x + this.thread.y * this.constants.threadXCount) * 3;\n            var point = newVec3(points[pointsOffset], points[pointsOffset + 1], points[pointsOffset + 2]);\n\n            var rd = subtract(point, ro);\n            rd = normalizeGPU(rd);\n\n            var closedDistance = 10e6;\n            var closedModelIndex = -1;\n\n            var subModelOffset = 0;\n\n            var testResult = -1;\n            var subModelIndex = 0;\n\n            var maxIBCount = -1;\n            var loopCount = 0;\n            var ibIndex = 0;\n            while (subModelIndex < subModelCount) {\n                while (subModelIndex < subModelCount) {\n\n                    var vbOffset = buffer[subModelOffset++];\n                    var vbCount = buffer[subModelOffset++];\n                    var ibOffset = buffer[subModelOffset++];\n                    var ibCount = buffer[subModelOffset++];\n                    var modelIndex = buffer[subModelOffset++];\n\n                    // model info\n                    var modelOffset = buffer[subModelOffset++];\n\n                    var mat = initMat4(buffer, modelOffset);\n                    modelOffset += 16;\n\n                    var worldScale = newVec3(buffer[modelOffset++], buffer[modelOffset++], buffer[modelOffset++]);\n\n                    // broad phase\n                    var worldBoundCenter = newVec3(buffer[modelOffset++], buffer[modelOffset++], buffer[modelOffset++]);\n                    var worldBoundHalfE = newVec3(buffer[modelOffset++], buffer[modelOffset++], buffer[modelOffset++]);\n                    var broadPhaseDistance = rayAABB(ro, rd, subtract(worldBoundCenter, worldBoundHalfE), add(worldBoundCenter, worldBoundHalfE));\n                    if (broadPhaseDistance <= 0) {\n                        subModelIndex++;\n                        continue;\n                    }\n\n                    testResult = -2;\n\n                    // narraw phase\n                    var lro = v3_lv3(\n                        ro,\n                        mat[0][0], mat[0][1], mat[0][2], mat[0][3],\n                        mat[1][0], mat[1][1], mat[1][2], mat[1][3],\n                        mat[2][0], mat[2][1], mat[2][2], mat[2][3],\n                        mat[3][0], mat[3][1], mat[3][2], mat[3][3],\n                    );\n                    var lrd = v3_lv3(\n                        point,\n                        mat[0][0], mat[0][1], mat[0][2], mat[0][3],\n                        mat[1][0], mat[1][1], mat[1][2], mat[1][3],\n                        mat[2][0], mat[2][1], mat[2][2], mat[2][3],\n                        mat[3][0], mat[3][1], mat[3][2], mat[3][3],\n                    );\n                    lrd = subtract(lrd, lro);\n                    lrd = normalizeGPU(lrd);\n\n                    var distanceScale = lengthGPU(mulV3(lrd, worldScale));\n\n                    maxIBCount = Math.max(maxIBCount, ibCount);\n\n                    ibIndex = 0;\n                    while (ibIndex < ibCount) {\n                        while (ibIndex < ibCount) {\n                            var v1 = buffer[ibOffset + ibIndex] * 3;\n                            var v2 = buffer[ibOffset + ibIndex + 1] * 3;\n                            var v3 = buffer[ibOffset + ibIndex + 2] * 3;\n\n                            var a = newVec3(buffer[vbOffset + v1], buffer[vbOffset + v1 + 1], buffer[vbOffset + v1 + 2]);\n                            var b = newVec3(buffer[vbOffset + v2], buffer[vbOffset + v2 + 1], buffer[vbOffset + v2 + 2]);\n                            var c = newVec3(buffer[vbOffset + v3], buffer[vbOffset + v3 + 1], buffer[vbOffset + v3 + 2]);\n\n                            var distance = rayTriangle(lro, lrd, a, b, c);\n                            distance *= distanceScale;\n                            if (distance > 0) {\n                                testResult = -3;\n                                if (distance < closedDistance) {\n                                    closedDistance = distance;\n                                    closedModelIndex = modelIndex;\n                                }\n                            }\n\n                            ibIndex += 3;\n                            loopCount++;\n                        }\n                    }\n\n                    subModelIndex++;\n                }\n            }\n\n            testResult = -maxIBCount;\n\n            if (closedModelIndex < 0) {\n                closedModelIndex = testResult;\n            }\n            return closedModelIndex;\n        }, {\n            constants: { threadXCount: threadSize[0], threadYCount: threadSize[1], cornersCount },\n            output: threadSize,\n            // output: [maxDirection, cornersCount],\n        })\n\n        this.createMeshBuffer(models);\n\n\n        if (!_gpu._hacked) {\n            _gpu._hacked = true;\n\n            for (let name in _gpu.context) {\n                if (typeof _gpu.context[name] === 'function') {\n                    let _ori = _gpu.context[name]\n                    _gpu.context[name] = function () {\n                        // if (name === 'texStorage2D') {\n                        //     var b = 1;\n                        // }\n                        // if (name === 'bufferSubData') {\n                        //     var b = 1;\n                        // }\n                        // if (name === 'bufferData') {\n                        //     var b = 1;\n                        // }\n                        // if (name === 'useProgram') {\n                        //     var b = 1;\n                        // }\n                        // if (name === 'uniform1f') {\n                        //     var b = 1;\n                        //     if (arguments[1] === 1) {\n                        //         debugger;\n                        //     }\n                        // }\n\n                        // let args = '';//'   : '\n                        // // for (var i = 0; i < arguments.length; i++) {\n                        // //     args += arguments[i] + ', '\n                        // // }\n\n                        // console.time('--- gl.' + name + args)\n                        var ret = _ori.apply(_gpu.context, arguments)\n                        // console.timeEnd('--- gl.' + name + args)\n                        return ret;\n                    }\n                }\n            }\n        }\n\n\n        // console.time('_kernel.build');\n        // _kernel.build(_meshBuffer, new Array(cornersCount * 3).fill(0), new Array(maxDirection * 3).fill(0))\n        // console.timeEnd('_kernel.build');\n\n    },\n\n    createMeshBuffer (models: renderer.scene.Model[]) {\n        console.time('prepare buffers');\n\n        let subModels: renderer.scene.SubModel[] = []\n        let meshes: RenderingSubMesh[] = [];\n        let bufferCount = 0;\n        let submodelBuffers: number[] = []\n        let modelBuffers: number[] = [];\n        for (let mi = 0; mi < models.length; mi++) {\n            let m = models[mi];\n\n            for (let smi = 0; smi < m.subModels.length; ++smi) {\n                subModels.push(m.subModels[smi]);\n\n                const subMesh = m.subModels[smi].subMesh;\n                const subMeshAny = subMesh as any;\n                let meshIndex = meshes.indexOf(subMesh);\n                if (meshIndex === -1) {\n                    meshIndex = meshes.length;\n                    meshes.push(subMesh);\n\n\n                    subMeshAny._vbOffset = bufferCount;\n                    subMeshAny._vbCount = subMesh.geometricInfo.positions!.length;\n                    bufferCount += subMesh.geometricInfo.positions.length;\n\n                    subMeshAny._ibOffset = bufferCount;\n                    subMeshAny._ibCount = subMesh.geometricInfo.indices!.length;\n                    bufferCount += subMesh.geometricInfo.indices!.length;\n                }\n\n                submodelBuffers.push(subMeshAny._vbOffset)\n                submodelBuffers.push(subMeshAny._vbCount)\n                submodelBuffers.push(subMeshAny._ibOffset)\n                submodelBuffers.push(subMeshAny._ibCount)\n                submodelBuffers.push(mi);\n                submodelBuffers.push(modelBuffers.length);\n            }\n\n            Mat4.toArray(modelBuffers, m.node.worldMatrix, modelBuffers.length);\n\n            let worldScale = m.node.worldScale;\n            modelBuffers.push(worldScale.x, worldScale.y, worldScale.z);\n\n            let center = m.worldBounds.center;\n            let halfExtents = m.worldBounds.halfExtents;\n            modelBuffers.push(center.x, center.y, center.z);\n            modelBuffers.push(halfExtents.x, halfExtents.y, halfExtents.z);\n\n        }\n\n        const extraInfoCount = 1;\n\n        _meshBuffer = new Float32Array(extraInfoCount + bufferCount + modelBuffers.length + submodelBuffers.length);\n        for (let i = 0; i < submodelBuffers.length; i += 6) {\n            submodelBuffers[i] += submodelBuffers.length + modelBuffers.length;\n            submodelBuffers[i + 2] += submodelBuffers.length + modelBuffers.length;\n            submodelBuffers[i + 5] += submodelBuffers.length;\n        }\n        _meshBuffer.set(submodelBuffers);\n        _meshBuffer.set(modelBuffers, submodelBuffers.length);\n\n        let triangleCount = 0;\n\n        let bufferOffset = 0;\n        meshes.forEach(m => {\n            _meshBuffer!.set(m.geometricInfo.positions, bufferOffset + submodelBuffers.length + modelBuffers.length);\n            bufferOffset += m.geometricInfo.positions.length;\n\n            _meshBuffer!.set(m.geometricInfo.indices!, bufferOffset + submodelBuffers.length + modelBuffers.length);\n            bufferOffset += m.geometricInfo.indices!.length;\n\n            triangleCount += m.geometricInfo.indices!.length / 3;\n        })\n        console.timeEnd('prepare buffers');\n\n        console.log('submodelBuffers.length : ' + submodelBuffers.length);\n        console.log('modelBuffers.length : ' + modelBuffers.length);\n        console.log('_meshBuffer.length : ' + _meshBuffer.length);\n    },\n\n    raycastModels (models: renderer.scene.Model[], froms: Vec3[], points: Vec3[]) {\n        let resultModels: renderer.scene.Model[] = []\n        if (!_kernel) {\n            return resultModels;\n        }\n\n        let pointsBuffer: number[] = []\n        points.forEach(d => pointsBuffer.push(d.x, d.y, d.z))\n        let fromsBuffer: number[] = []\n        froms.forEach(f => fromsBuffer.push(f.x, f.y, f.z))\n\n        // console.time('build _kernel');\n        // _kernel.build.apply(_kernel, [_meshBuffer, fromsBuffer, pointsBuffer, _subModelCount]);\n        // console.timeEnd('build _kernel');\n\n        // console.time('do _kernel');\n        let raycastResults = _kernel(_meshBuffer, fromsBuffer, pointsBuffer, _subModelCount) as Float32Array[][];\n        // console.timeEnd('do _kernel');\n\n        raycastResults.forEach(results => {\n            results.forEach(results => {\n                results.forEach(index => {\n                    let model = models[index];\n                    if (model && resultModels.indexOf(model) === -1) {\n                        resultModels.push(model);\n                    }\n                })\n            })\n        })\n\n        return resultModels;\n    },\n}\n","import { geometry, Layers, renderer, Mat4, Vec3, Node, gfx } from 'cc'\nconst { intersect, Ray, Triangle } = geometry;\n\ntype IBArray = Uint8Array | Uint16Array | Uint32Array;\n\nlet resultModels: any[] = [];\nlet m4 = new Mat4;\nlet modelRay = new Ray();\nlet tri = Triangle.create();\nlet v3 = new Vec3();\n\nlet narrowDis = Infinity;\n\nconst narrowphase = (vb: Float32Array, ib: IBArray, pm: gfx.PrimitiveMode, sides: boolean, distance = Infinity) => {\n    narrowDis = distance;\n    if (pm === gfx.PrimitiveMode.TRIANGLE_LIST) {\n        const cnt = ib.length;\n        for (let j = 0; j < cnt; j += 3) {\n            const i0 = ib[j] * 3;\n            const i1 = ib[j + 1] * 3;\n            const i2 = ib[j + 2] * 3;\n            Vec3.set(tri.a, vb[i0], vb[i0 + 1], vb[i0 + 2]);\n            Vec3.set(tri.b, vb[i1], vb[i1 + 1], vb[i1 + 2]);\n            Vec3.set(tri.c, vb[i2], vb[i2 + 1], vb[i2 + 2]);\n            const dist = intersect.rayTriangle(modelRay, tri, sides);\n            if (dist <= 0 || dist >= narrowDis) { continue; }\n            narrowDis = dist;\n        }\n    } else if (pm === gfx.PrimitiveMode.TRIANGLE_STRIP) {\n        const cnt = ib.length - 2;\n        let rev = 0;\n        for (let j = 0; j < cnt; j += 1) {\n            const i0 = ib[j - rev] * 3;\n            const i1 = ib[j + rev + 1] * 3;\n            const i2 = ib[j + 2] * 3;\n            Vec3.set(tri.a, vb[i0], vb[i0 + 1], vb[i0 + 2]);\n            Vec3.set(tri.b, vb[i1], vb[i1 + 1], vb[i1 + 2]);\n            Vec3.set(tri.c, vb[i2], vb[i2 + 1], vb[i2 + 2]);\n            rev = ~rev;\n            const dist = intersect.rayTriangle(modelRay, tri, sides);\n            if (dist <= 0 || dist >= narrowDis) { continue; }\n            narrowDis = dist;\n        }\n    } else if (pm === gfx.PrimitiveMode.TRIANGLE_FAN) {\n        const cnt = ib.length - 1;\n        const i0 = ib[0] * 3;\n        Vec3.set(tri.a, vb[i0], vb[i0 + 1], vb[i0 + 2]);\n        for (let j = 1; j < cnt; j += 1) {\n            const i1 = ib[j] * 3;\n            const i2 = ib[j + 1] * 3;\n            Vec3.set(tri.b, vb[i1], vb[i1 + 1], vb[i1 + 2]);\n            Vec3.set(tri.c, vb[i2], vb[i2 + 1], vb[i2 + 2]);\n            const dist = intersect.rayTriangle(modelRay, tri, sides);\n            if (dist <= 0 || dist >= narrowDis) { continue; }\n            narrowDis = dist;\n        }\n    }\n};\n\nexport default {\n    raycastAllModels (renderScene: renderer.scene.RenderScene, worldRay: geometry.Ray, mask = Layers.Enum.DEFAULT, distance = Infinity): { node: Node, distance: number }[] {\n        resultModels.length = 0;\n\n        for (const m of renderScene.models) {\n            const transform = m.transform;\n            if (!transform || !m.enabled || !(m.node.layer & mask) || !m.worldBounds) { continue; }\n            // broadphase\n            let d = intersect.rayAABB(worldRay, m.worldBounds);\n            if (d <= 0 || d >= distance) { continue; }\n            if (m.type === renderer.scene.ModelType.DEFAULT) {\n                // transform ray back to model space\n                Mat4.invert(m4, transform.getWorldMatrix(m4));\n                Vec3.transformMat4(modelRay.o, worldRay.o, m4);\n                Vec3.normalize(modelRay.d, Vec3.transformMat4Normal(modelRay.d, worldRay.d, m4));\n                d = Infinity;\n                for (let i = 0; i < m.subModels.length; ++i) {\n                    const subModel = m.subModels[i].subMesh;\n                    if (subModel && subModel.geometricInfo) {\n                        const { positions: vb, indices: ib, doubleSided: sides } = subModel.geometricInfo;\n                        narrowphase(vb, ib!, subModel.primitiveMode, sides!, distance);\n                        d = Math.min(d, narrowDis * Vec3.multiply(v3, modelRay.d, transform.worldScale).length());\n                    }\n                }\n            }\n            if (d < distance) {\n                resultModels.push({\n                    node: m.node,\n                    distance: d\n                });\n            }\n        }\n        resultModels.sort((a, b) => {\n            return a.distance - b.distance;\n        })\n        return resultModels;\n    },\n\n    raycastModels (models: renderer.scene.Model[], worldRay: geometry.Ray, mask = Layers.Enum.DEFAULT, distance = Infinity, ignoreEnable = false): { node: Node, distance: number }[] {\n        resultModels.length = 0;\n\n        for (const m of models) {\n            const transform = m.transform;\n            if (!transform || (!ignoreEnable && !m.enabled) || !(m.node.layer & mask) || !m.worldBounds) { continue; }\n            // broadphase\n            let d = intersect.rayAABB(worldRay, m.worldBounds);\n            if (d <= 0 || d >= distance) { continue; }\n            if (m.type === renderer.scene.ModelType.DEFAULT) {\n                // transform ray back to model space\n                Mat4.invert(m4, transform.getWorldMatrix(m4));\n                Vec3.transformMat4(modelRay.o, worldRay.o, m4);\n                Vec3.normalize(modelRay.d, Vec3.transformMat4Normal(modelRay.d, worldRay.d, m4));\n                d = Infinity;\n                for (let i = 0; i < m.subModels.length; ++i) {\n                    const subModel = m.subModels[i].subMesh;\n                    if (subModel && subModel.geometricInfo) {\n                        const { positions: vb, indices: ib, doubleSided: sides } = subModel.geometricInfo;\n                        narrowphase(vb, ib!, subModel.primitiveMode, sides!, distance);\n                        d = Math.min(d, narrowDis * Vec3.multiply(v3, modelRay.d, transform.worldScale).length());\n                    }\n                }\n            }\n            if (d < distance) {\n                resultModels.push({\n                    node: m.node,\n                    distance: d\n                });\n            }\n        }\n        resultModels.sort((a, b) => {\n            return a.distance - b.distance;\n        })\n        return resultModels;\n    },\n\n    raycastModel (m: renderer.scene.Model, worldRay: geometry.Ray, distance = Infinity): { node: Node, distance: number } | null {\n        const transform = m.transform;\n        // broadphase\n        let d = intersect.rayAABB(worldRay, m.worldBounds!);\n        if (d <= 0 || d >= distance) {\n            return null;\n        }\n        if (m.type === renderer.scene.ModelType.DEFAULT) {\n            // transform ray back to model space\n            Mat4.invert(m4, transform.getWorldMatrix(m4));\n            Vec3.transformMat4(modelRay.o, worldRay.o, m4);\n            Vec3.normalize(modelRay.d, Vec3.transformMat4Normal(modelRay.d, worldRay.d, m4));\n            d = Infinity;\n            for (let i = 0; i < m.subModels.length; ++i) {\n                const subModel = m.subModels[i].subMesh;\n                if (subModel && subModel.geometricInfo) {\n                    const { positions: vb, indices: ib, doubleSided: sides } = subModel.geometricInfo;\n                    narrowphase(vb, ib!, subModel.primitiveMode, sides!, distance);\n                    d = Math.min(d, narrowDis * Vec3.multiply(v3, modelRay.d, transform.worldScale).length());\n                }\n            }\n        }\n        if (d < distance) {\n            return {\n                node: m.node,\n                distance: d\n            };\n        }\n        return null;\n    }\n}\n","import { director, gfx, math, ReflectionProbe, Vec3, _decorator } from \"cc\";\nimport { ClusterCubemapAtlas, packCubemapAtlas } from \"./utils\";\nimport { ClusterObject, WorldCluster } from \"./world-cluster\";\n\nconst { ccclass, property } = _decorator\n\nlet tempVec3 = new Vec3\n\n@ccclass('sync.ReflectionWorldCluster')\nexport class ReflectionWorldCluster extends WorldCluster<ReflectionProbe> {\n    _atlas: ClusterCubemapAtlas | undefined;\n\n    // 0: pos.x, pos.y, pos.z, radius\n    // 1: offset.xyzw\n    // 2: x: averageBrightness, yzw: waste\n    pixelsPerObjectFloat = 3;\n\n    @property\n    forceUpdateAtlas = false;\n\n    dirty = true\n\n    probes: ReflectionProbe[] = []\n    findObjects () {\n        this.probes = director.getScene().getComponentsInChildren(ReflectionProbe);\n\n        if (!this._atlas || this.forceUpdateAtlas) {\n            let cubemaps = this.probes.map(probe => {\n                return probe._cubemap;\n            })\n            this._atlas = packCubemapAtlas(cubemaps);\n            this.forceUpdateAtlas = false;\n        }\n\n        return this.probes;\n    }\n\n    update (dt) {\n        if (!this.dirty) {\n            return;\n        }\n        this.dirty = false;\n\n        super.update(dt);\n    }\n\n    updateClusters () {\n\n        // clear clusters\n        this.clustersCounts!.fill(0);\n        this.clustersData!.fill(0);\n        this.clustersDistances!.fill(Infinity);\n\n        // local accessors\n        const divX = this._cells.x;\n        const divY = this._cells.y;\n        const divZ = this._cells.z;\n        const counts = this.clustersCounts!;\n        const distances = this.clustersDistances!;\n        const limit = this._maxCellObjectCount;\n        const clusters = this.clustersData!;\n        const pixelsPerCellCount = this._pixelsPerCellCount;\n        let tooManyObjects = false;\n\n        const usedObjects = this._usedObjects;\n        // started from index 1, zero is \"no-light\" index\n        for (let i = 1; i < usedObjects.length; i++) {\n            const clusteredObject = usedObjects[i];\n            const object = clusteredObject.object;\n\n            // add light data into textures\n            if (object) {\n                this.addObjectData(object, i);\n            }\n        }\n\n        for (let y = 0; y < divY; y++) {\n            for (let z = 0; z < divZ; z++) {\n                for (let x = 0; x < divX; x++) {\n\n                    const clusterIndex = x + divX * (z + y * divZ);\n                    const center = (tempVec3.set(this.boundsDelta) as Vec3).multiply3f((x + 0.5) / divX, (y + 0.5) / divY, (z + 0.5) / divZ).add(this.boundsMin);\n\n                    let count = counts[clusterIndex];\n                    for (let i = 1; i < usedObjects.length; i++) {\n                        const clusteredObject = usedObjects[i];\n                        let dist = Vec3.squaredDistance(center, clusteredObject.center);\n\n                        if (count < limit) {\n                            clusters[pixelsPerCellCount * clusterIndex * 4 + count] = usedObjects.indexOf(clusteredObject);\n                            counts[clusterIndex] = count;\n                            distances[clusterIndex] = dist;\n                            count++;\n                        }\n                        else {\n                            for (let i = limit; i >= 0; i--) {\n                                let testIndex = pixelsPerCellCount * clusterIndex * 4 + i;\n                                if (dist < distances[testIndex]) {\n                                    clusters[testIndex] = usedObjects.indexOf(clusteredObject);\n                                    distances[testIndex] = dist;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // #if _DEBUG\n        // if (tooManyObjects) {\n        //     const reportLimit = 5;\n        //     if (this.reportCount < reportLimit) {\n        //         console.warn(`Too many objects in cluster ${this.name}, please adjust parameters. ${this.reportCount == reportLimit - 1 ? \" Giving up on reporting it.\" : \"\"}`);\n        //         this.reportCount++;\n        //     }\n        // }\n        // #endif\n    }\n\n    addObjectData (obj: ReflectionProbe, index: number) {\n        const dataInfoFloat = this.dataInfoFloat!;\n        let dataInfoFloatIndex = index * this.dataInfoTextureFloat!.width * 4;\n\n        // pos and radius\n        let pos = obj.node.worldPosition;\n        let radius = Math.max(obj.size.x, obj.size.y, obj.size.z);\n        dataInfoFloat[dataInfoFloatIndex++] = pos.x;\n        dataInfoFloat[dataInfoFloatIndex++] = pos.y;\n        dataInfoFloat[dataInfoFloatIndex++] = pos.z;\n        dataInfoFloat[dataInfoFloatIndex++] = radius;\n\n        // offsets\n        let indexInAtlas = this._atlas!.cubemaps.indexOf(obj.cubemap);\n        let offsets = this._atlas!.offsets[indexInAtlas];\n        if (offsets) {\n            dataInfoFloat[dataInfoFloatIndex++] = offsets[0];\n            dataInfoFloat[dataInfoFloatIndex++] = offsets[1];\n            dataInfoFloat[dataInfoFloatIndex++] = offsets[2];\n            dataInfoFloat[dataInfoFloatIndex++] = offsets[3];\n        }\n\n        //\n        // dataInfoFloat[dataInfoFloatIndex++] = obj.averageBrightness;\n        // dataInfoFloat[dataInfoFloatIndex++] = obj.brightness;\n    }\n\n    getBoundingBox (obj: ReflectionProbe, clusteredObject: ClusterObject<ReflectionProbe>) {\n        let radius = Math.max(obj.size.x, obj.size.y, obj.size.z);\n        let pos = obj.node.worldPosition;\n        clusteredObject.min.set(pos.x - radius, pos.y - radius, pos.z - radius)\n        clusteredObject.max.set(pos.x + radius, pos.y + radius, pos.z + radius)\n\n        clusteredObject.radius = radius;\n        clusteredObject.center.set(pos);\n    }\n\n    drawObjects () {\n        // this._usedObjects.forEach(obj => {\n        //     if (obj.object) {\n        //         obj.object.drawDebug(this._drawer!)\n        //     }\n        // })\n    }\n\n}\n","import { Component, ReflectionProbe, _decorator } from \"cc\";\n\nconst { ccclass, property, executeInEditMode } = _decorator\n\nexport let ReflectionProbes = {\n    probes: [] as ReflectionProbe[]\n}\n\n@ccclass('ReflectionProbeUtils')\n@executeInEditMode\nexport class ReflectionProbeUtils extends Component {\n    probe: ReflectionProbe | undefined\n    onEnable () {\n        this.probe = this.getComponent(ReflectionProbe)\n        if (ReflectionProbes.probes.indexOf(this.probe) === -1) {\n            ReflectionProbes.probes.push(this.probe);\n        }\n    }\n    onDisable () {\n        let index = ReflectionProbes.probes.indexOf(this.probe)\n        if (index !== -1) {\n            ReflectionProbes.probes.splice(index, 1);\n        }\n    }\n\n    capturing = false;\n    runtimeCapture (capturing = true) {\n        this.capturing = capturing;\n\n        if (capturing) {\n            if (!this.probe) {\n                return;\n            }\n\n            if (!this.probe.probe) {\n                this.probe._createProbe()\n            }\n            this.probe.probe.captureCubemap()\n        }\n    }\n\n    update () {\n        if (this.capturing) {\n            this.probe.probe._needRender = true;\n        }\n    }\n}\n","\nimport { RenderQulity } from '../../settings/gpu';\nimport { renderSetting } from '../../settings/render-setting';\nimport { BaseStage } from '../../stages/base-stage';\nimport { LGraphNode } from '../@types/litegraph';\nimport { liteGraph } from '../graph';\nimport { updateNextNodes } from '../utils/nodes';\n\nexport function RenderQulityNode () {\n    let self = this as LGraphNode;\n\n    self.properties = {\n        High: false,\n        Medium: false,\n        Low: false\n    }\n\n    self.addWidget('toggle', 'High', false, 'High')\n    self.addWidget('toggle', 'Medium', false, 'Medium')\n    self.addWidget('toggle', 'Low', false, 'Low')\n\n    self.addInput('RenderTexture', 'RenderTexture');\n    self.addOutput('Output', 'RenderTexture');\n\n\n    this.stage = null\n\n    this.onUpdateStage = function updateStage (prev: LGraphNode, stages: BaseStage[]) {\n        (self as any).stage = (prev as any).stage\n\n        if (renderSetting.quality === RenderQulity.High && self.properties.High ||\n            renderSetting.quality === RenderQulity.Medium && self.properties.Medium ||\n            renderSetting.quality === RenderQulity.Low && self.properties.Low) {\n            updateNextNodes(self, stages)\n        }\n\n    }\n\n    self.size = self.computeSize();\n}\n\ndelete liteGraph.registered_node_types[`input/RenderQulity`];\nliteGraph.registerNodeType(`input/RenderQulity`, RenderQulityNode as any);\n","\nimport { RenderQulity } from \"./gpu\";\n\nexport let renderSetting = {\n    get quality () {\n        return RenderQulity.High;\n    },\n};\n","import { LGraphNode } from '../@types/litegraph';\nimport { BaseStage } from '../../stages/base-stage';\nimport { liteGraph } from '../graph';\n\nexport function RenderToScreen () {\n    let self = this as LGraphNode;\n    self.addInput('RenderTexture', 'RenderTexture');\n\n    this.onUpdateStage = function updateStage (prev: LGraphNode) {\n        let stage = (prev as any).stage as BaseStage\n        if (stage) {\n            stage.renderToScreen = true\n        }\n    }\n\n    self.size = self.computeSize();\n}\n\ndelete liteGraph.registered_node_types[`pipeline/RenderToScreen`];\nliteGraph.registerNodeType(`pipeline/RenderToScreen`, RenderToScreen as any);\n","\r\nimport { _decorator, Component, Material, EffectAsset } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('RenderTool')\r\nexport class RenderTool extends Component {\r\n\r\n    /**\r\n     * Create material.\r\n     */\r\n    public static createMat(name: string): Material {\r\n        const effect = EffectAsset.get(name);\r\n        const mat = new Material();\r\n        mat.initialize({effectName : name});\r\n        return mat; \r\n    }\r\n\r\n    /**\r\n     * Change material\r\n     */\r\n    public static changeEffect(name: string, mat:Material) {\r\n        const effect = EffectAsset.get(name)\r\n        mat.initialize({effectName: name});\r\n    }\r\n\r\n}\r\n","\nimport { _decorator, JsonAsset, Prefab, TextAsset, SpriteFrame, AudioClip, v3, Vec3 } from 'cc';\nimport { Singleton } from '../pattern/singleton';\nimport { Res } from './res';\nimport { ILoadMsg } from '../../logic/ui/ui-loading';\nimport { Msg } from '../msg/msg';\nimport { FxAutoRemove } from '../effect/fx-auto-remove';\nimport { loadTextures } from './res-texture';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResCache')\nexport class ResCache extends Singleton {\n\n    private _json: { [name: string]: JsonAsset } = {};\n    private _prefab: { [name: string]: Prefab } = {};\n    private _txt: { [name: string]: TextAsset } = {};\n    private _sprite: { [name: string]: SpriteFrame } = {};\n    private _sound: { [name: string]: AudioClip } = {};\n    private _callback: Function | undefined;\n\n    msg: ILoadMsg | undefined;\n\n    public async load (callback: Function) {\n\n        this._callback = callback;\n\n        Msg.on('msg_check_res_cache_end', this.checkEnd.bind(this));\n\n        Res.loadJson('data/data-res-cache', async (err, asset) => {\n            if (err) {\n                console.error('Load cache res error:', err);\n                return;\n            }\n            this.msg = {\n                id: 1,\n                action: 'load cache',\n                current: 'resource',\n                wait_count: 1,\n                count: 1\n            }\n\n            if (!asset || !asset.json) {\n                console.error('resource cache data is null', asset)\n                return;\n            }\n\n            const jsonPrefab = asset.json['prefab'];\n            if (jsonPrefab) ResCache.Instance.loadPrefab(jsonPrefab);\n            ResCache.Instance.loadJson(asset.json['json']);\n            ResCache.Instance.loadSprite(asset.json['sprite']);\n            ResCache.Instance.loadSound(asset.json['sound']);\n\n            Msg.emit('msg_loading', this.msg);\n        });\n    }\n\n    public addLoad () {\n        this.msg!.wait_count++;\n        this.msg!.count++;\n        //console.log('add load count:', this.msg?.count, 'wait count:', this.msg?.wait_count,);\n    }\n\n    public removeLoad () {\n        this.msg!.wait_count--;\n        //console.log('remove load wait count:', this.msg?.wait_count, ' count:', this.msg?.count);\n    }\n\n    public getJson (name: string) {\n        const ret = this._json[name];\n        if (ret) {\n            return ret;\n        } else {\n            console.error('Res cache not find json res:', name);\n            return null;\n        }\n    }\n\n    public getPrefab (name: string) {\n        const ret = this._prefab[name];\n        if (ret) {\n            return ret;\n        } else {\n            console.error('Res cache not find prefab res:', name);\n            return undefined;\n        }\n    }\n\n    public getTxt (name: string) {\n        const ret = this._txt[name];\n        if (ret) {\n            return ret;\n        } else {\n            console.error('Res cache not find text res:', name);\n        }\n    }\n\n    public getSprite (name: string) {\n        const ret = this._sprite[name];\n        if (ret !== undefined) {\n            return ret;\n        } else {\n            console.error('Res cache not find sprite res:', name);\n        }\n    }\n\n    public getSound (name: string) {\n        const ret = this._sound[name];\n        if (ret !== undefined) {\n            return ret;\n        } else {\n            console.error('Res cache not find sound res:', name);\n        }\n    }\n\n    public setJson (asset: any[]) {\n        asset.forEach(element => {\n            this._json[element.name] = element;\n        });\n    }\n\n    public preloadFxShader (prefab: Prefab) {\n\n        if (prefab.name.includes('fx_')) {\n            const preload = Res.inst(prefab, undefined, Vec3.ZERO);\n            preload.addComponent(FxAutoRemove);\n        }\n\n    }\n\n    public setPrefab (asset: any[]) {\n        asset.forEach(element => {\n            this.preloadFxShader(element);\n            this._prefab[element.name] = element;\n        });\n    }\n\n    public setText (asset: any[]) {\n        asset.forEach(element => {\n            this._txt[element.name] = element;\n        });\n    }\n\n    public setSprite (asset: any[]) {\n        asset.forEach(element => {\n            this._sprite[element.name] = element;\n        });\n    }\n\n    public setSound (asset: any[]) {\n        asset.forEach(element => {\n            this._sound[element.name] = element;\n        });\n    }\n\n    public loadJson (paths: string[]) {\n        paths.forEach(element => {\n            this.addLoad();\n            Res.loadDirJson(element, (err, asset) => {\n                if (asset) {\n                    ResCache.Instance.setJson(asset);\n                    this.removeLoad();\n                }\n            });\n        });\n    }\n\n    public loadPrefab (paths: string[]) {\n        paths.forEach(element => {\n            this.addLoad();\n            Res.loadDirPrefab(element, (err, asset) => {\n                if (asset) {\n                    ResCache.Instance.setPrefab(asset);\n                    this.removeLoad();\n                }\n            });\n        });\n    }\n\n    public loadText (paths: string[]) {\n        paths.forEach(element => {\n            this.addLoad();\n            Res.loadDirText(element, (err, asset) => {\n                if (asset) {\n                    ResCache.Instance.setText(asset);\n                    this.removeLoad();\n                }\n            })\n        });\n    }\n\n    public loadSprite (paths: string[]) {\n        paths.forEach(element => {\n            this.addLoad();\n            Res.loadDirSprite(element, (err, asset) => {\n                if (asset) {\n                    ResCache.Instance.setSprite(asset);\n                    this.removeLoad();\n                }\n            })\n        });\n    }\n\n    public loadSound (paths: string[]) {\n        paths.forEach(element => {\n            this.addLoad();\n            Res.loadDirSound(element, (err, asset) => {\n                if (asset) {\n                    ResCache.Instance.setSprite(asset);\n                    this.removeLoad();\n                }\n            })\n        });\n    }\n\n    public checkEnd (): void {\n        if (this._callback) {\n            if (Res.count <= 0) {\n                this._callback();\n                this._callback = undefined;\n            }\n        }\n    }\n\n}\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { ILoadMsg } from '../../logic/ui/ui-loading';\nimport { Level } from '../../logic/level/level';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResDestroy')\nexport class ResDestroy extends Component {\n\n    isDestroy = false;\n    msg:ILoadMsg | undefined;\n\n    start() {\n        Msg.bind('msg_destroy_res', ()=>{\n            this.isDestroy = true;\n            const length = this.node.children.length - 1;\n            this.msg = {\n                id:0,\n                action:'destroy',\n                current:' objects node. ',\n                wait_count:length,\n                count:length,\n            }\n            Msg.emit('msg_loading', this.msg);\n\n            if ((globalThis as any).ppSettings) {\n                (globalThis as any).ppSettings.passVersion++;\n\n                console.log('msg_destroy_res: passVersion - ' + (globalThis as any).ppSettings.passVersion)\n            }\n\n        }, this);\n    }\n\n    update(deltaTime: number) {\n        if(this.isDestroy) {\n            const length = this.node.children.length - 1;\n            this.msg!.wait_count = length;\n            //this.msg!.current = this.node.children[length].name;\n            if(length <= -1) {\n                this.isDestroy = false;\n                console.log('res is destroy');\n                return;\n            }\n            this.node.children[length].destroy();\n        }\n    }\n}\n\n","import { _decorator, Component, Node, JsonAsset, Prefab } from 'cc';\nimport { ResCache } from './res-cache';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResEditorCache')\nexport class ResEditorCache extends Component {\n\n    @property(JsonAsset)\n    jsonAssets: JsonAsset[] | null = [];\n\n    @property(Prefab)\n    prefabs: Prefab[] = [];\n\n    init() {\n        ResCache.Instance.setJson(this.jsonAssets);\n        ResCache.Instance.setPrefab(this.prefabs);\n    }\n\n}\n\n","import { _decorator, Component, Node, Prefab, Pool } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { Singleton } from '../pattern/singleton';\nimport { Res } from './res';\nimport { ResCache } from './res-cache';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ResPool')\nexport class ResPool extends Singleton {\n\n    _root:Node = null;\n\n    _pool = new Map<string, pool>();\n\n    public init() {\n    }\n\n    public initPool(root:Node) {\n        this._root = root;\n        Msg.on('pool_recycle', this.pool_recycle.bind(this));\n    }\n\n    pool_recycle() {\n        this._pool.forEach(element => {\n            element.recycle();\n        });\n    }\n\n    public pop(name:string)  {\n        if (!this._pool.has(name)) {\n            this.newPool(name);\n        }\n        return this._pool.get(name).pop();\n    }\n\n    public push(obj:Node) {\n        console.log(obj.name);\n        this._pool.get(obj.name).push(obj);\n    }\n\n    public pushByName(name:string, obj:Node) {\n        console.log(name, obj);\n        this._pool.get(name).push(obj);\n    }\n\n    public newPool(name:string) {\n        var newpool = new pool(name, this._root);\n        this._pool.set(name, newpool);\n    }\n\n}\n\nexport class pool {\n\n    _index:number = 0;\n\n    _items:Node[] = [];\n\n    _state:number[] = [];\n\n    _max:number = 0;\n\n    _realMax:number = 0;\n\n    _name:string = '';\n\n    _prefab:Prefab = null;\n\n    _root:Node = null;\n\n    public constructor(name:string, root:Node) {\n        this.IncreaseSize();\n        this._name = name;\n        this._prefab = ResCache.Instance.getPrefab(this._name);\n        this._root = root;\n    }\n\n    recycle() {\n\n        for(let i = 0; i < this._max; i++) {\n            this._state[i] = 1;\n            this._items[i].active = false;\n            this._items[i].setPosition(10000, 10000, 10000);\n        }\n    }\n\n    public pop():Node {\n        \n        for(let i = 0; i < this._max; i++) {\n            var state = this._state[this._index];\n            if (state === 1) {\n                var n = this._items[this._index];\n                this._state[this._index] = 2;\n                n.active = true;\n                this.next();\n                return n;\n            }\n            this.next();\n        }\n\n        // Not find res.\n        // Create new one.\n        return this.newRes();\n        \n    }\n\n    public next() {\n        this._index++;\n        if (this._index >= this._max) this._index = 0;\n    }\n\n    public push(obj:Node) {\n        \n        obj.active = false;\n        var poolindex = obj['pool_index'];\n        this._state[poolindex] = 1;\n    }\n\n    public newRes() {        \n\n        // Check & Increase pool size\n        this.checkAndIncreaseSize();\n\n        // Inst new node.\n        const newNode = Res.inst(this._prefab, this._root);\n        this._index = this._max;\n        this._max++;\n        if (newNode['pool_index'] !== undefined) {\n            console.log('pool create error.');\n        }\n        newNode['pool_index'] = this._index;\n        this._items[this._index] = newNode;\n        this._state[this._index] = 2;\n        return newnode;\n\n    }\n\n    public checkAndIncreaseSize() {\n\n        // Check the size is full.\n        // Judge last items is not null.\n        var last = this._items.length - 1;\n        if (this._items[last] === null)\n            return;\n\n        // Increase size.\n        this.IncreaseSize();\n    }\n\n    public IncreaseSize() {\n        this._realMax += 8;\n        this._items.push(null, null, null, null, null, null, null, null);\n        this._state.push(0, 0, 0, 0, 0, 0, 0, 0)\n    }\n\n}\n\n","import { assetManager, loader } from \"cc\";\n\nconst ParallelMaxTextures = 10\n\nlet allTextures: string[] = [\n    \"CyborgEnemy01_BC\", \"CyborgEnemy01_N\", \"CyborgEnemy01_ORM\", \"CyborgEnemy02_BC\", \"CyborgEnemy02_N\", \"CyborgEnemy02_ORM\", \"DefaultMaterial_BaseColor\", \"DefaultMaterial_MetallicRoughness\", \"DefaultMaterial_Normal\", \"MI_AirConditioners01_BaseColor\", \"MI_AirConditioners01_MetallicRoughness\", \"MI_AirConditioners01_Normal\", \"MI_AirConditioners01_Occlusion\", \"MI_AirConditioner_Decal01_BaseColor\", \"MI_AirConditioner_Decal01_MetallicRoughness\", \"MI_AirConditioner_Decal01_Normal\", \"MI_AirConditioningPipe_01_BaseColor\", \"MI_AirConditioningPipe_01_MetallicRoughness\", \"MI_AirConditioningPipe_01_Normal\", \"MI_AirConditioningPipe_01_Occlusion\", \"MI_AirConditioning_01_BaseColor\", \"MI_AirConditioning_01_MetallicRoughness\", \"MI_AirConditioning_01_Normal\", \"MI_AirConditioning_01_Occlusion\", \"MI_CarsEmissive_Emissive\", \"MI_ContainerP4_01_BaseColor\", \"MI_ContainerP4_01_MetallicRoughness\", \"MI_ContainerP4_01_Normal\", \"MI_ContainerP4_01_Occlusion\", \"MI_EnvirAssets_01_Emissive\", \"MI_Fence_01_BaseColor\", \"MI_Fence_01_MetallicRoughness\", \"MI_Fence_01_Normal\", \"MI_Fence_01_Occlusion\", \"MI_FrontConcrete01_BaseColor\", \"MI_FrontConcrete01_MetallicRoughness\", \"MI_FrontConcrete01_Normal\", \"MI_FrontConcrete02_BaseColor\", \"MI_FrontConcrete02_MetallicRoughness\", \"MI_FrontConcrete02_Normal\", \"MI_FrontConDec03_BaseColor\", \"MI_FrontConDec03_MetallicRoughness\", \"MI_FrontConDec04_BaseColor\", \"MI_Glass03_BaseColor\", \"MI_Glass_02_BaseColor\", \"MI_LampSet02_Emissive\", \"MI_MetalBeam01_BaseColor\", \"MI_MetalBeam01_MetallicRoughness\", \"MI_MetalBeam01_Normal\", \"MI_MetalBeam01_Occlusion\", \"MI_MetalBeam_Painted01_BaseColor\", \"MI_MetalBumpers_BaseColor\", \"MI_MetalBumpers_MetallicRoughness\", \"MI_MetalBumpers_Normal\", \"MI_MetalBumpers_Occlusion\", \"MI_MetalWallPart_01_BaseColor\", \"MI_MetalWallPart_01_MetallicRoughness\", \"MI_MetalWallPart_01_Normal\", \"MI_MetalWallPart_01_Occlusion\", \"MI_MetalWallPart_Painted_01_BaseColor\", \"MI_PaperBoxes_01_BaseColor\", \"MI_PaperBoxes_02_BaseColor\", \"MI_PillarWithBreckets_BaseColor\", \"MI_PillarWithBreckets_MetallicRoughness\", \"MI_PillarWithBreckets_Normal\", \"MI_PillarWithBreckets_Occlusion\", \"MI_Pipes_square_01_BaseColor\", \"MI_Pipes_square_01_MetallicRoughness\", \"MI_Pipes_square_01_Normal\", \"MI_Pipes_square_01_Occlusion\", \"MI_Platform01_BaseColor\", \"MI_Platform01_MetallicRoughness\", \"MI_Platform01_Normal\", \"MI_Platform01_Occlusion\", \"MI_Platform02_BaseColor\", \"MI_Platform02_MetallicRoughness\", \"MI_Platform02_Normal\", \"MI_Platform02_Occlusion\", \"MI_PlatformRailing_01_BaseColor\", \"MI_PlatformRailing_01_MetallicRoughness\", \"MI_PlatformRailing_01_Normal\", \"MI_PlatformRailing_01_Occlusion\", \"MI_Platform_01_BaseColor\", \"MI_Platform_01_MetallicRoughness\", \"MI_Platform_01_Normal\", \"MI_Platform_01_Occlusion\", \"MI_PowderStorage_01_BaseColor\", \"MI_PowderStorage_01_MetallicRoughness\", \"MI_PowderStorage_01_Normal\", \"MI_PowderStorage_01_Occlusion\", \"MI_PropsSetEm01_BaseColor\", \"MI_PropsSetEm01_Emissive\", \"MI_PropsSetEm01_MetallicRoughness\", \"MI_PropsSetEm01_Normal\", \"MI_PropsSetEm01_Occlusion\", \"MI_Round_Pipes_01_BaseColor\", \"MI_Round_Pipes_01_MetallicRoughness\", \"MI_Round_Pipes_01_Normal\", \"MI_Round_Pipes_01_Occlusion\", \"MI_Signboards02_Emissive\", \"MI_SignboardText02_Emissive\", \"MI_Stair_01_Painted_BaseColor\", \"MI_Stair_02_BaseColor\", \"MI_Stair_02_MetallicRoughness\", \"MI_Stair_02_Normal\", \"MI_Stair_02_Occlusion\", \"MI_WGS_01_Emissive\", \"MI_WGS_03_Emissive\", \"M_AnimBoard01_BaseColor\", \"M_AnimBoard01_Emissive\", \"M_Building08_Emissive\", \"M_Hair_Alpha_BaseColor\", \"M_LampSet_01_Emissive\", \"M_Signboards01_Emissive\", \"M_SignboardsAnim03_Emissive\", \"M_Sky_Panning_Clouds2_Inst_Sky_BaseColor\", \"M_WindowsEmissive01_Emissive\", \"T_Asphalt03_BC\", \"T_Asphalt03_Normal\", \"T_Asphalt03_ORM\", \"T_Asphalt_BC\", \"T_Asphalt_Normal\", \"T_Asphalt_ORM\", \"T_BackgroundBuildingTrim01_BC\", \"T_BackgroundBuildingTrim01_N\", \"T_BackgroundBuildingTrim01_ORM\", \"T_BrokenAsphalt_BC\", \"T_BrokenAsphalt_N\", \"T_BrokenAsphalt_ORM\", \"T_Building05_BC\", \"T_Building05_N\", \"T_Building05_ORM\", \"T_Building07_BC\", \"T_Building07_BC_1\", \"T_Building07_N\", \"T_Building07_N_1\", \"T_Building07_ORM\", \"T_Building07_ORM_1\", \"T_Building08_BC\", \"T_Building08_N\", \"T_Building08_ORM\", \"T_Building09_BC\", \"T_Building09_N\", \"T_Building09_ORM\", \"T_Building10_BC\", \"T_Building10_N\", \"T_Building10_ORM\", \"T_Building12_BC\", \"T_Building12_N\", \"T_Building12_ORM\", \"T_Building13_BC\", \"T_Building13_N\", \"T_Building13_ORM\", \"T_Building4_BC\", \"T_Building4_N\", \"T_Building4_ORM\", \"T_car_BC\", \"T_car_Emiss\", \"T_car_N\", \"T_car_ORM\", \"T_Concrete_Poured_D\", \"T_Concrete_Poured_N\", \"T_CornerBuilding01_BC\", \"T_CornerBuilding01_N\", \"T_CornerBuilding01_ORM\", \"T_CyberSignBoards_BC_sRGB\", \"T_CyberSignBoards_N\", \"T_CyberSignBoards_ORM\", \"T_EnvirAssets01_BC_sRGB\", \"T_EnvirAssets01_N\", \"T_EnvirAssets01_ORM\", \"T_FactoryConcreteFloor01_BC\", \"T_FloorMats01_BC\", \"T_FloorMats01_N\", \"T_FloorMats01_ORM\", \"T_GarbageBag02_BC\", \"T_GarbageBag02_N\", \"T_GarbageBag02_ORM\", \"T_gun01_BC_sRGB\", \"T_gun01_N\", \"T_gun01_ORM\", \"T_gun03_BC\", \"T_gun03_N\", \"T_gun03_ORM\", \"T_Hair_BC\", \"T_Hair_N\", \"T_Hair_ORM\", \"T_Hero_Body_BC\", \"T_Hero_Body_N\", \"T_Hero_Body_ORM\", \"T_Hero_Head_BC\", \"T_Hero_Head_N\", \"T_Hero_Head_ORM\", \"T_LampSet02_BC\", \"T_LampSet02_N\", \"T_LampSet02_ORM\", \"T_LampSet_01_BC\", \"T_LampSet_01_N\", \"T_LampSet_01_ORM\", \"T_Metalbeam01_N\", \"T_Metalbeam01_ORM\", \"T_NeonSign02_BC\", \"T_NeonSign02_N\", \"T_NeonSign02_ORM\", \"T_PaperBoxes_01_N\", \"T_PaperBoxes_01_ORM\", \"T_PaperBoxes_02_N\", \"T_PaperBoxes_02_ORM\", \"T_PaperBoxes_03_BC\", \"T_PaperBoxes_03_N\", \"T_PaperBoxes_03_ORM\", \"T_Pavement01_BC\", \"T_Pavement01_N\", \"T_Pavement01_ORM\", \"T_PavementDetails01_BC\", \"T_PavementDetails01_N\", \"T_PavementDetails01_ORM\", \"T_PropsSet01_BC\", \"T_PropsSet01_N\", \"T_PropsSet01_ORM\", \"T_Roof01_BC\", \"T_Roof01_N\", \"T_Roof01_ORM\", \"T_SignboardText01_BC\", \"T_SignboardText01_N\", \"T_SignboardText01_ORM\", \"T_Stairs_02_N\", \"T_Stairs_02_ORM\", \"T_TiledGexGround01_BC\", \"T_TiledGexGround01_N\", \"T_TiledGexGround01_ORM\", \"T_TrashBox01_BC\", \"T_TrashBox01_N\", \"T_TrashBox01_ORM\", \"T_TrimSet02_BC\", \"T_TrimSet02_N\", \"T_TrimSet02_ORM\", \"T_TrimSheet01_BC\", \"T_TrimSheet01_N\", \"T_TrimSheet01_ORM\", \"T_WallTile01_BC\", \"T_WallTile01_N\", \"T_WallTile01_ORM\", \"T_Wall_01_N\", \"T_Wall_01_ORM\", \"T_WGS_01_BC_sRGB\", \"T_WGS_01_N\", \"T_WGS_01_ORM\", \"T_WGS_02_BC_sRGB\", \"T_WGS_02_N\", \"T_WGS_02_ORM\", \"T_WGS_03_BC_sRGB\", \"T_WGS_03_N\", \"T_WGS_03_ORM\", \"T_WGS_04_BC_sRGB\", \"T_WGS_04_N\", \"T_WGS_04_ORM\", \"T_WindowsSet01_BC\", \"T_WindowsSet01_N\", \"T_WindowsSet01_ORM\", \"Wall03_BC\", \"Wall03_Normal\", \"Wall03_ORM\", \"WorldGridMaterial_BaseColor\", \"WorldGridMaterial_MetallicRoughness\", \"WorldGridMaterial_Normal\",\n]\n\nexport async function loadTextures () {\n    let some = allTextures.splice(0, ParallelMaxTextures);\n\n    await Promise.all(some.map(async u => {\n        u = 'textures/' + u\n        new Promise(resolve => {\n            loader.loadRes(u, (err, a) => {\n                resolve(null)\n            })\n        })\n    }))\n\n    if (allTextures.length) {\n        await new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(null)\n            }, 60)\n        })\n\n        await loadTextures()\n    }\n}\n","import { _decorator, resources, Node, Asset, error, Constructor, Prefab, instantiate, TextAsset, JsonAsset, Texture2D, EffectAsset, AudioClip, AnimationClip, ImageAsset, SpriteFrame, SpriteAtlas, Mesh, Material, Skeleton, SceneAsset, Vec3, director } from 'cc';\nimport { Msg } from '../msg/msg';\n\nexport class Res {\n\n    public static count: number = 0;\n\n    public static load<T extends Asset>(path: string, type: Constructor<T> | null, cb?: (err: Error | null, asset?: T | null)=>void) {\n        this.count++;\n        resources.load(path, type, function(err, res){\n            if (err){\n                error(path,err.message || err);\n                Msg.emit('msg_res_error');\n            }\n            if (cb) {\n                cb(err, res);\n            }\n            Res.count--;\n            Msg.emit('msg_check_res_cache_end');\n        });\n    }\n\n    public static loadJson(path: string, cb?: (err: Error | null, asset?: JsonAsset | null)=>void) {\n        this.load(path, JsonAsset, cb);\n    }\n\n    public static loadTxt(path: string, cb?: (err: Error | null, asset?: TextAsset | null)=>void) {\n        this.load(path, TextAsset, cb);\n    }\n\n    public static loadPrefab(path: string, cb?: (err: Error | null, asset?: Prefab | null)=>void) {\n        this.load(path, Prefab, cb);\n    }\n\n    public static loadTex2D(path: string, cb?: (err: Error | null, asset?: Texture2D | null)=>void) {\n        this.load(path, Texture2D, cb);\n    }\n    \n    public static loadImage(path: string, cb?: (err: Error | null, asset?: ImageAsset | null)=>void) {\n        this.load(path, ImageAsset, cb);\n    }\n\n    public static loadSprite(path: string, cb?: (err: Error | null, asset?: SpriteFrame | null)=>void) {\n        this.load(path, SpriteFrame, cb);\n    }\n\n    public static loadSpriteAtlas(path: string, cb?: (err: Error | null, asset?: SpriteAtlas | null)=>void) {\n        this.load(path, SpriteAtlas, cb);\n    }\n\n    public static loadEffect(path: string, cb?: (err: Error | null, asset?: EffectAsset | null)=>void) {\n        this.load(path, EffectAsset, cb);\n    }\n\n    public static loadAudio(path: string, cb?: (err: Error | null, asset?: AudioClip | null)=>void) {\n        this.load(path, AudioClip, cb);\n    }\n\n    public static loadAnimationClip(path: string, cb?: (err: Error | null, asset?: AnimationClip | null)=>void) {\n        this.load(path, AnimationClip, cb);\n    }\n\n    public static loadMesh(path: string, cb?: (err: Error | null, asset?: Mesh | null)=>void) {\n        this.load(path, Mesh, cb);\n    }\n\n    public static loadMateiral(path: string, cb?: (err: Error | null, asset?: Material | null)=>void) {\n        this.load(path, Material, cb);\n    }\n\n    public static loadSkeleton(path: string, cb?: (err: Error | null, asset?: Skeleton | null)=>void) {\n        this.load(path, Skeleton, cb);\n    }\n\n    public static loadScene(path: string, cb?: (err: Error | null, asset?: SceneAsset | null)=>void) {\n        this.load(path, SceneAsset, cb);\n    }\n\n\n    public static inst(asset: Prefab, root:Node | undefined = undefined,  pos:Vec3 = Vec3.ZERO) : Node {\n        const instObj = instantiate(asset);\n        if (root === undefined) {\n            director.getScene()?.addChild(instObj);\n        }else{\n            instObj.setParent(root);\n        }\n        instObj.setPosition(pos);\n        instObj.setScale(Vec3.ONE);\n        return instObj;\n    }\n\n    public static instNode(node:Node, root:Node | undefined = undefined, pos:Vec3 = Vec3.ZERO) : Node {\n        const instObj = instantiate(node);\n        if (root === undefined) {\n            director.getScene()?.addChild(instObj);\n        }else{\n            instObj.setParent(root);\n        }\n        instObj.setPosition(pos);\n        instObj.setScale(Vec3.ONE);\n        return instObj;\n    }\n\n    public static loadDir<T extends Asset>(path: string, type: Constructor<T> | null, cb?: (err: Error | null, asset?: T[] | null)=>void) {\n        this.count++;\n        resources.loadDir(path, type, function(err, res){\n            if (err){\n                error(err.message || err);\n                Msg.emit('msg_res_error');\n            }\n            if (cb) {\n                cb(err, res);\n            }\n            Res.count--;\n            Msg.emit('msg_check_res_cache_end');\n        });\n    }\n\n    public static loadDirJson(path:string, cb?: (err: Error | null, asset?: JsonAsset[] | null)=>void) {\n        this.loadDir(path, JsonAsset, cb);\n    }\n\n    public static loadDirPrefab(path:string, cb?: (err: Error | null, asset?: Prefab[] | null)=>void) {\n        this.loadDir(path, Prefab, cb);\n    }\n\n    public static loadDirText(path:string, cb?: (err: Error | null, asset?: TextAsset[] | null)=>void) {\n        this.loadDir(path, TextAsset, cb);\n    }\n\n    public static loadDirSprite(path:string, cb?: (err: Error | null, asset?: SpriteFrame[] | null)=>void) {\n        this.loadDir(path, SpriteFrame, cb);\n    }\n\n    public static loadDirSound(path:string, cb?: (err:Error | null, asset?: AudioClip[] | null)=>void) {\n        this.loadDir(path, AudioClip, cb);\n    }\n\n}\n","import { LGraphNode } from '../@types/litegraph';\nimport { BaseStage } from '../../stages/base-stage';\nimport { liteGraph } from '../graph';\nimport { updateNextNodes } from '../utils/nodes';\n\nexport function Router () {\n    let self = this as LGraphNode;\n\n    self.addInput('RenderTexture 1', 'RenderTexture');\n    self.addInput('RenderTexture 2', 'RenderTexture');\n    self.addInput('RenderTexture 3', 'RenderTexture');\n\n    self.addOutput('Output', 'RenderTexture');\n\n    this.onUpdateStage = function updateStage (prev: LGraphNode, stages: BaseStage[]) {\n        (self as any).stage = (prev as any).stage\n        updateNextNodes(self, stages);\n    }\n\n    self.size = self.computeSize();\n}\n\ndelete liteGraph.registered_node_types[`input/Router`];\nliteGraph.registerNodeType(`input/Router`, Router as any);\n","import { Asset, assetManager, Mesh, Vec3 } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { base642arraybuffer } from \"../../utils/editor\";\nimport { Editor, fse, path } from \"../../utils/npm\";\n\ninterface AttrDefine {\n    attr: string,\n    componentType: number,\n    count: number,\n    bytesPerElement: number,\n    type: string\n}\n\nconst _attributes = {\n    vertices: {\n        attr: 'POSITION',\n        componentType: 5126,\n        count: 3,\n        bytesPerElement: 4,\n        type: \"VEC3\"\n    },\n    normals: {\n        attr: 'NORMAL',\n        componentType: 5126,\n        count: 3,\n        bytesPerElement: 4,\n        type: \"VEC3\"\n    },\n    colors: {\n        attr: 'COLOR_0',\n        componentType: 5126,\n        count: 4,\n        bytesPerElement: 4,\n        type: \"VEC4\"\n    },\n    uv: {\n        attr: 'TEXCOORD_0',\n        componentType: 5126,\n        count: 2,\n        bytesPerElement: 4,\n        type: \"VEC2\"\n    },\n    uv1: {\n        attr: 'TEXCOORD_1',\n        componentType: 5126,\n        count: 2,\n        bytesPerElement: 4,\n        type: \"VEC2\"\n    },\n    boneWeights: {\n        attr: 'WEIGHTS_0',\n        componentType: 5126,\n        count: 4,\n        bytesPerElement: 4,\n        type: \"VEC4\"\n    },\n    joints: {\n        attr: 'JOINTS_0',\n        componentType: 5126,\n        count: 4,\n        bytesPerElement: 4,\n        type: \"VEC4\"\n    },\n    indices: {\n        componentType: 5123,\n        count: 1,\n        bytesPerElement: 2,\n        type: \"SCALAR\"\n    }\n};\n\nexport class MeshData {\n    vertices: number[] = [];\n    uv: number[] = [];\n    uv1: number[] = [];\n    normals: number[] = [];\n    colors: number[] = [];\n    boneWeights: number[] = [];\n    tangents: number[] = [];\n    joints: number[] = [];\n\n    indices: number[] = [];\n\n    min = new Vec3(Infinity, Infinity, Infinity);\n    max = new Vec3(-Infinity, -Infinity, -Infinity);\n}\n\nexport function toGltfMesh (name: string, mesh: MeshData) {\n    let gltf = {\n        \"asset\": {\n            \"generator\": \"Khronos glTF Blender I/O v1.2.75\",\n            \"version\": \"2.0\"\n        },\n        \"scene\": 0,\n        \"scenes\": [\n            {\n                \"name\": \"Scene\",\n                \"nodes\": [\n                    0\n                ]\n            }\n        ],\n        \"nodes\": [\n            {\n                \"mesh\": 0,\n                \"name\": \"Mesh\"\n            }\n        ],\n        \"meshes\": [\n            {\n                \"name\": name,\n                \"primitives\": [] as any[]\n            }\n        ],\n        \"accessors\": [] as any[],\n        \"bufferViews\": [] as any[],\n        \"buffers\": [] as any[]\n    }\n\n    let gltfMesh = gltf.meshes[0];\n\n    let bufferIndex = 0;\n    let subMesh = mesh;\n\n    let primitive = {\n        indices: -1,\n        attributes: {} as any,\n        mode: 4\n    }\n\n    gltfMesh.primitives.push(primitive);\n\n    let byteOffset = 0;\n    let bufferViews = gltf.bufferViews;\n\n\n    for (let attrName in _attributes) {\n        let values = (subMesh as any)[attrName] as number[];\n        if (!values || !values.length) {\n            continue;\n        }\n\n        // primitive\n        let attrDef = (_attributes as any)[attrName] as AttrDefine;\n\n        if (attrDef === _attributes.indices) {\n            primitive.indices = bufferIndex;\n        }\n        else {\n            primitive.attributes[attrDef.attr] = bufferIndex;\n        }\n\n        // accessor\n        let accessor: any = {\n            bufferView: bufferIndex,\n            componentType: attrDef.componentType,\n            count: values.length / attrDef.count,\n            type: attrDef.type,\n        };\n\n        if (attrDef === _attributes.vertices) {\n            accessor.min = Vec3.toArray([], mesh.min);\n            accessor.max = Vec3.toArray([], mesh.max);\n        }\n\n        gltf.accessors.push(accessor)\n\n        // bufferView \n        let byteLength = values.length * attrDef.bytesPerElement;\n        bufferViews.push({\n            buffer: 0,\n            byteOffset: byteOffset,\n            byteLength: byteLength\n        })\n\n\n        byteOffset += byteLength;\n        bufferIndex++;\n    }\n\n    let buffer = new ArrayBuffer(byteOffset);\n    let float32Buffer = new Float32Array(buffer, 0, bufferViews[primitive.indices].byteOffset / 4);\n    let uint16Buffer = new Uint16Array(buffer);\n\n    for (let attrName in _attributes) {\n        let values = (subMesh as any)[attrName] as number[];\n        if (!values || !values.length) {\n            continue;\n        }\n\n        let attrDef = (_attributes as any)[attrName] as AttrDefine;\n\n        let bufferIndex;\n        if (attrDef === _attributes.indices) {\n            bufferIndex = primitive.indices;\n        }\n        else {\n            bufferIndex = primitive.attributes[attrDef.attr];\n        }\n\n        if (attrDef.bytesPerElement === 2) {\n            uint16Buffer.set(values, bufferViews[bufferIndex].byteOffset / 2);\n        }\n        else if (attrDef.bytesPerElement === 4) {\n            float32Buffer.set(values, bufferViews[bufferIndex].byteOffset / 4);\n        }\n    }\n\n    gltf.buffers.push({\n        byteLength: byteOffset,\n        uri: 'data:application/octet-stream;base64,' + base642arraybuffer.encode(buffer)\n    })\n\n    return gltf;\n}\n\nasync function loadAssetByUrl (url: string, delay = 10) {\n    let assetUid = await Editor.Message.request('asset-db', 'query-uuid', url);\n    return new Promise((resolve, reject) => {\n\n        if (!assetUid) {\n            console.error(`Can not find uuid for : ` + url)\n            return resolve(null)\n        }\n\n        setTimeout(() => {\n            assetManager.loadAny(assetUid, (err: any, asset: Asset) => {\n                if (err) {\n                    console.error(err)\n                    return resolve(null)\n                }\n                resolve(asset);\n            });\n        }, delay);\n    })\n}\n\nexport async function saveGltf (gltf, gltfUrl, meshUrl) {\n    const gltfPath = await Editor.Message.request('asset-db', 'query-path', gltfUrl);\n\n    fse.ensureDirSync(path.dirname(gltfPath));\n    fse.writeJSONSync(gltfPath, gltf);\n\n    await Editor.Message.request('asset-db', 'refresh-asset', gltfUrl);\n\n    return await loadAssetByUrl(meshUrl, 100) as Mesh;\n}","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { Singleton } from \"../../core/pattern/singleton\"\nimport { GMath } from '../../core/util/g-math';\nimport { IO } from \"../../core/io/io\";\nimport { UtilArray } from \"../../core/util/util\";\nimport { JsonTool } from \"../../core/io/json-tool\";\nimport { Msg } from \"../../core/msg/msg\";\nimport { ResCache } from \"../../core/res/res-cache\";\n\nconst max_history_statistics = 30;\n\ninterface key_any {\n    [key: string]: any\n}\n\nexport class Save extends Singleton {\n\n    _uuid = '';\n    _cur: key_any = {};\n    _uuidKey = 'uuid';\n    _archiveKey = 'archive_list';\n    _archiveList: string[] | undefined;\n\n    _saveJson:any;\n    _backup_counter = 0;\n\n    _currentStatistics:key_any = {};\n\n    get PlayerID() {\n        if (this._cur.player_id === undefined) this._cur.player_id = 27;\n        return this._cur.player_id;\n    }\n\n    public init (): void {\n\n        this._saveJson = ResCache.Instance.getJson('data-save').json;\n        if (!IO.exist(this._archiveKey + '.json')) { \n            this._archiveList = [];\n            this.newArchive();\n        } else {\n            this._archiveList = JsonTool.toIOObject(this._archiveKey);\n            this._uuid = this._archiveList![0];\n            this.loadArchive(this._uuid);\n            this._uuid = IO.read(this._uuidKey + '.json');\n        }\n\n        Msg.on('msg_save_set', (data:{key:string, value:number})=>{\n            this.set(data.key, data.value);\n        });\n\n        Msg.on('msg_stat_times', this.statisticsTimes.bind(this));\n        Msg.on('msg_stat_time', this.statisticsTime.bind(this));\n        Msg.on('msg_stat_distance', this.statisticsDistance.bind(this));\n        Msg.on('msg_save_archive', this.saveArchive.bind(this));\n\n    }\n\n    public backup() {\n\n        this._backup_counter--;\n        if (this._backup_counter > 0) return;\n        this._backup_counter = 5;\n\n    }\n\n    public saveArchiveList () {\n        IO.write(this._archiveKey + '.json', JsonTool.toJson(this._archiveList));\n    }\n\n    public saveArchive () {\n        try {\n            //Achievement.Instance.updateData();\n            var data = JsonTool.toJson(this._cur);\n            IO.write(this._uuid + '.json', data);\n            this.backup();\n        }catch(error){\n            console.error('save archive error.');\n        }\n\n    }\n\n    public hasArchive (): boolean {\n        return this._archiveList!.length > 0;\n    }\n\n    public newArchive () {\n        this._cur = this._saveJson;\n        this._uuid = GMath.uuid();\n        this._archiveList!.push(this._uuid);\n        IO.write(this._uuidKey + '.json', this._uuid);\n        this.saveArchive();\n        this.saveArchiveList();\n    }\n\n    public loadArchive (name: string) {\n        this._uuid = name;\n        IO.write(this._uuidKey + '.json', this._uuid);\n        let read_data = IO.read(name + '.json');\n        //console.log(name, read_data);\n        if (read_data === undefined) {\n            console.error('can not read data uuid key:', this._uuid);\n            this._cur = Object.assign(this._saveJson);\n        }else{\n            this._cur = JsonTool.toObject(read_data) as IArchive;\n        }\n        \n        // Add new data input index.\n        if (this._cur.input_index === undefined) this._cur.input_index = 0;\n    }\n\n    public loadBackup (name: string) {\n        this._uuid = name;\n        var data = IO.read(name + '_b0.json');\n        this._cur = JsonTool.toObject(data) as IArchive; \n    }\n\n    public deleteArchive (name: string) {\n        UtilArray.remove(this._archiveList!, name);\n        this.saveArchiveList();\n        IO.delete(name + '.json');\n    }\n\n    public deleteAllArchive () {\n        if (this._archiveList) {\n            this._archiveList.forEach(element => {\n                IO.delete(element + '.json');\n            });\n            this._archiveList = undefined;\n        }\n        IO.delete(this._archiveKey + '.json');\n        IO.delete(this._uuid + '.json');\n    }\n\n    public get<T> (name: string): T {\n        try {\n            return this._cur[name];\n        } catch {\n            throw new Error(`Save not find key's value. The key is : ${name}`);\n        }\n\n    }\n\n    public set<T> (name: string, value: T) {\n        this._cur[name] = value;\n        this.saveArchive();\n    }\n\n    setValue(name:string, value:any) {\n        this._cur[name] = value;\n    }\n\n    public setStatistics(name:string, value:number) {\n        this._currentStatistics[name] = value;\n    }\n\n    public getStatistics(name: string) {\n        const value = this._currentStatistics[name];\n        return value === undefined ? 0 : value;\n    }\n\n    public saveGameOver () {\n        this.statisticsFinalScore();\n    }\n\n    public clearByKey(key:string) {\n        this._cur[key] = {};\n        this.saveArchive();\n    }\n\n    public statisticsTimes(key:string) {\n        var statKey = key + 'Times'\n        if (this._currentStatistics[statKey] === undefined) this._currentStatistics[statKey] = 0;\n        this._currentStatistics[statKey] += 1;\n    }\n\n    public statisticsTime(data:{key:string, time:number}) {\n        var statKey = data.key + 'Time';\n        if (this._currentStatistics[statKey] === undefined) this._currentStatistics[statKey] = 0; \n        this._currentStatistics[statKey] += data.time;\n    }\n\n    public statisticsDistance(data:{key:string, distance:number}) {\n        var statKey = data.key + 'Distance';\n        if (this._currentStatistics[statKey] === undefined) this._currentStatistics[statKey] = 0; \n        this._currentStatistics[statKey] += data.distance;\n    }\n\n    public statisticsValue(key:string): number {\n        return this._currentStatistics[key];\n    }\n\n    public statisticsFinalScore() {\n        for(let k in this._currentStatistics) {\n            this._cur.statistics[k] += this._currentStatistics[k];\n        }\n    }\n\n    public nextStatistics() {\n        if(this._cur.history_index === undefined) this._cur.history_index = -1;\n\n        this._cur.history_index++;\n\n        console.log('history index:', this._cur.history_index);\n\n        if(this._cur.history_index > max_history_statistics)\n            this._cur.history_index = 0;\n\n        if(this._cur.history === undefined) this._cur.history = [];\n\n        if(this._cur.history_index >= this._cur.history.length) {\n            this._cur.history.push({});\n        }\n\n        this._currentStatistics = this._cur.history[this._cur.history_index];\n\n    }\n\n}\n\nexport interface IArchive {\n\n    totalTime: number;\n    playTimes: 0;\n    language: string;\n    name: string;\n    nickname: string;\n    money: number;\n    guideIndex: 0;\n    mapAutoIndex: 10;\n}","import { CCClass, Component, _decorator } from \"cc\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { ccclass } = _decorator\n\n@ccclass('SceneParticles')\nexport class SceneParticles extends Component {\n    start () {\n        if (!HrefSetting.sceneParticles) {\n            this.node.removeFromParent()\n        }\n    }\n}\n","\r\nimport { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SensorActions')\r\nexport class SensorActions extends Component {\r\n    start () {\r\n    }\r\n}","import { _decorator, Component, Collider, ITriggerEvent, ICollisionEvent, animation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorAnig')\nexport class SensorAnig extends Component {\n\n    _collider: Collider = null;\n\n    @property(animation.AnimationController)\n    graph: animation.AnimationController = null\n\n    @property\n    key:string = '';\n\n    start () {\n        // [3]\n        this._collider = this.getComponent(Collider);\n        this._collider.on('onTriggerEnter', this.onTriggerEnter, this);\n        this._collider.on('onCollisionEnter', this.onCollisionEnter, this);\n    }\n\n    onTriggerEnter (event: ITriggerEvent) {\n        this.play(this.key, true);\n    }\n\n    onCollisionEnter (event: ICollisionEvent) {\n        this.play(this.key, true);\n    }\n\n    play (key: string, value: boolean | number) {\n        this.graph?.setValue(key, value);\n    }\n}\n\n","\r\nimport { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('SensorAudio')\r\nexport class SensorAudio extends Component {\r\n\r\n    start () {\r\n    }\r\n}","\r\nimport { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SensorEffect')\r\nexport class SensorEffect extends Component {\r\n    start () {\r\n    }\r\n}","import { _decorator, Component, Collider, ICollisionEvent, geometry, Node, PhysicsSystem, Vec3, v3, Color, RigidBody, CCFloat } from 'cc';\nimport { Actor } from '../../logic/actor/actor';\nimport { SubstanceCore } from '../../logic/item/substance-core';\nimport { Gizmo, UtilVec3 } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorGround')\nexport class SensorGround extends Component {\n\n    _collider: Collider | undefined | null;\n    _actor: Actor | undefined | null;\n    _isGround = false;\n    _ray: geometry.Ray = new geometry.Ray();\n    _velocity: Vec3 = v3(0, 0, 0);\n\n    _rigid: RigidBody | undefined;\n\n    @property(CCFloat)\n    checkDistance = 0.2;\n\n    @property([Vec3])\n    original = []\n\n    @property([CCFloat])\n    masks = [];\n\n    _mask = 0\n\n    pos = v3(0, 0, 0);\n\n    start () {\n\n        this._collider = this.getComponent(Collider);\n        this._ray.d.x = 0;\n        this._ray.d.y = -1;\n        this._ray.d.z = 0;\n        this._actor = this.node.getComponent(Actor);\n\n        for (let i = 0; i < this.masks.length; i++)\n            this._mask = this._mask | 1 << this.masks[i];\n    }\n\n    update (deltaTime: number) {\n        this.checkGroundRays();\n    }\n\n    checkGroundRays () {\n\n        for (let i = 0; i < this.original.length; i++) {\n            UtilVec3.copy(this._ray.o, this.node.worldPosition);\n            this._ray.o.add(this.original[i]);\n            if (PhysicsSystem.instance.raycastClosest(this._ray, this._mask, this.checkDistance)) {\n                const res = PhysicsSystem.instance.raycastClosestResult;\n                //this._actor!._data.walk_in_type = SubstanceCore.Instance.checkNodeType(res.collider.node);\n                if (!this._isGround) this._actor?.onGround();\n                this._isGround = true;\n                return;\n            }\n        }\n\n        if (this._isGround) this._actor?.offGround();\n        this._isGround = false;\n\n    }\n\n}","import { _decorator, Component, Node, Collider, ITriggerEvent, ICollisionEvent, director, game, CCString } from 'cc';\nimport { Msg } from '../msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorMsg')\nexport class SensorMsg extends Component {\n\n    _collider: Collider = null;\n\n    @property\n    msg = '';\n\n    @property\n    data = '';\n\n    @property\n    exit_msg = '';\n\n    @property\n    exit_data = '';\n\n    @property\n    isHitRemove = false;\n\n    @property([CCString])\n    filter: string[] = [];\n\n    _safeTime: number = 500;\n    _curTime: number = 0;\n\n    onEnable () {\n        this._collider = this.getComponent(Collider);\n        this.init();\n    }\n\n    onDisable () {\n        this._collider.off('onTriggerEnter', this.onCollisionEnter, this);\n        this._collider.off('onCollisionEnter', this.onCollisionEnter, this);\n        if (this.exit_msg.length > 0) {\n            this._collider.off('onTriggerExit', this.onTriggerExit, this);\n            this._collider.off('onCollisionExit', this.onCollisionExit, this);\n        }\n    }\n\n    init () {\n        if (this.msg === '') {\n            const array = this.node.name.split('#');\n            this.msg = array[0];\n            if (array.length >= 2) this.data = array[1];\n        }\n        this._collider.on('onTriggerEnter', this.onTriggerEnter, this);\n        this._collider.on('onCollisionEnter', this.onCollisionEnter, this);\n\n        if (this.exit_msg.length > 0) {\n            this._collider.on('onTriggerExit', this.onTriggerExit, this);\n            this._collider.on('onCollisionExit', this.onCollisionExit, this);\n        }\n\n        this._curTime = game.totalTime;\n    }\n\n    onTriggerEnter (event: ITriggerEvent) {\n\n        if (this.checkFilter(event.otherCollider.name)) return;\n\n        if (this.msg === \"actor_event\") {\n            event.otherCollider.node.emit('do', this.data);\n        } else {\n            Msg.emit(this.msg, this.data);\n            event.otherCollider.emit('do', this.data);\n        }\n        if (this.isHitRemove) {\n            this.node.active = false;\n        }\n    }\n\n    onTriggerExit (event: ITriggerEvent) {\n\n        if (this.checkFilter(event.otherCollider.name)) return;\n\n        if (this.exit_msg === \"actor_event\") {\n            event.otherCollider.node.emit('do', this.exit_data);\n        } else {\n            Msg.emit(this.exit_msg, this.exit_data);\n            event.otherCollider.emit('do', this.exit_data);\n        }\n    }\n\n    onCollisionEnter (event: ICollisionEvent) {\n\n        if (this.checkFilter(event.otherCollider.name)) return;\n\n        if (this.msg === \"actor_event\") {\n            event.otherCollider.node.emit('do', this.data);\n        } else {\n            Msg.emit(this.msg, this.data);\n        }\n        if (this.isHitRemove) {\n            this.node.active = false;\n        }\n    }\n\n    onCollisionExit (event: ICollisionEvent) {\n\n        if (this.checkFilter(event.otherCollider.name)) return;\n\n        if (this.exit_msg === \"actor_event\") {\n            event.otherCollider.node.emit('do', this.exit_data);\n        } else {\n            Msg.emit(this.exit_msg, this.exit_data);\n        }\n    }\n\n    unSafeEnter (): boolean {\n        const deltaTime = game.totalTime - this._curTime;\n        if (game.totalTime - this._curTime > this._safeTime) {\n\n            this._curTime = game.totalTime;\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    checkFilter (hit: string): boolean {\n\n        for (let i = 0; i < this.filter.length; i++) {\n            var f = this.filter[i];\n            if (hit.includes(f)) return true;\n        }\n\n        return false;\n\n    }\n\n}","\nimport { _decorator, Component, Node, ITriggerEvent, ICollisionEvent, Collider } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorProbe')\nexport class SensorProbe extends Component {\n    _collider:Collider | undefined | null;\n\n    start() {\n        this._collider = this.getComponent(Collider);\n        this._collider!.on('onCollisionEnter', this.onCollisionEnter, this);\n    }\n    \n    onCollisionEnter(event: ICollisionEvent) {\n        console.log('on collision enter:', event.otherCollider.name);\n        this.node.emit('onHit', event.otherCollider.name);\n    }\n\n}\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, geometry, Node, PhysicsSystem, v3, Vec3, CCFloat } from 'cc';\nimport { UtilVec3 } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorRayNodeToNode')\nexport class SensorRayNodeToNode extends Component {\n\n    @property(Node)\n    startNode: Node | undefined\n\n    @property(Node)\n    endNode: Node | undefined\n\n    @property([CCFloat])\n    masks = [];\n\n    @property\n    check_time = 0.5;\n\n    _mask: number = 0;\n\n    _time = 0;\n\n    _direction = v3(0, 0, 0);\n\n    _ray: geometry.Ray = new geometry.Ray();\n\n    hitPoint = v3(0, 0, 0);\n\n    start () {\n\n        for (let i = 0; i < this.masks.length; i++)\n            this._mask = this._mask | 1 << this.masks[i];\n\n    }\n\n    update (deltaTime: number) {\n\n        this._time -= deltaTime;\n        if (this._time < 0) {\n            UtilVec3.copy(this._ray.o, this.startNode!.worldPosition);\n            UtilVec3.copy(this._direction, this.endNode!.worldPosition);\n            this._direction.subtract(this.startNode!.worldPosition)\n            const distance = this._direction.length();\n\n            this._direction.normalize();\n            UtilVec3.copy(this._ray.d, this._direction);\n\n            if (PhysicsSystem.instance.raycastClosest(this._ray, this._mask, distance)) {\n                UtilVec3.copy(this.hitPoint, PhysicsSystem.instance.raycastClosestResult.hitPoint);\n                this.hitPoint?.subtract(this._direction);\n\n                //\n                const hitDistance = this.hitPoint.clone().subtract(this.startNode!.worldPosition).length();\n\n            } else {\n                UtilVec3.copy(this.hitPoint, Vec3.ZERO);\n            }\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node, PhysicsSystem, Vec3, geometry, debug, Graphics, RenderPipeline, v3, math, Color, Quat, randomRangeInt, CCFloat } from 'cc';\nimport { Gizmo, UtilNode, UtilVec3 } from '../util/util';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('SensorRaysAngle')\n@executeInEditMode\nexport class SensorRaysAngle extends Component {\n\n    @property([Vec3])\n    dir: Vec3[] = [];\n\n    @property(CCFloat)\n    angle = 30;\n\n    @property(CCFloat)\n    segment = 10;\n\n    @property([CCFloat])\n    masks = [];\n\n    @property\n    check_time = 0.5;\n\n    @property\n    distance = 2;\n\n    _ray: geometry.Ray = new geometry.Ray();\n\n    checked = false;\n    checkedNode: Node | undefined;\n\n    hitPoint: Vec3 = v3(0, 0, 0);\n    _time = 0;\n    _mask = 0;\n    _curDir = v3(0, 0, 0);\n    _dirs: Array<Vec3> | undefined;\n\n    hitStates: Array<boolean> | undefined;\n\n    notHitCount = 0;\n\n    onEnable () {\n\n        for (let i = 0; i < this.masks.length; i++)\n            this._mask = this._mask | 1 << this.masks[i];\n\n        const count = this.dir.length * this.segment;\n        this._dirs = new Array(count);\n\n        this.hitStates = new Array(count);\n        const eachAngle = this.angle / this.segment;\n\n        const rotationOrigins = v3(0, 0, 0);\n        for (let i = 0; i < this.dir.length; i++) {\n            const d = this.dir[i];\n            let curAngle = -this.angle / 2;\n            for (let j = 0; j < this.segment; j++) {\n                curAngle += eachAngle;\n                let newDir = v3(d.x, d.y, d.z);\n                Vec3.rotateY(newDir, newDir, rotationOrigins, math.toRadian(curAngle));\n                const index = i * this.segment + j;\n                this._dirs![index] = newDir;\n            }\n        }\n    }\n\n    update (deltaTime: number) {\n        this._time -= deltaTime;\n        if (this._time < 0) {\n            this._time = this.check_time;\n            UtilVec3.copy(this._ray.o, this.node.worldPosition);\n\n            const worldEulerAngles = UtilNode.getWorldEulerAngles(this.node);\n            const rotationY = math.toRadian(worldEulerAngles.y);\n\n            for (let i = 0; i < this._dirs!.length; i++) {\n                UtilVec3.copy(this._curDir, this._dirs![i]);\n\n                Vec3.rotateY(this._curDir, this._curDir, Vec3.ZERO, rotationY);\n                UtilVec3.copy(this._ray.d, this._curDir);\n\n                if (EDITOR) {\n                    const endPosition = v3(0, 0, 0);\n                    const direction = v3(0, 0, 0);\n                    UtilVec3.copy(direction, this._ray.d);\n                    direction.multiplyScalar(this.distance);\n                    UtilVec3.copy(endPosition, this._ray.o);\n                    endPosition.add(direction);\n                    endPosition.y = this.node.position.y;\n                    Gizmo.drawLine(this._ray.o, endPosition, Color.YELLOW);\n                }\n\n                this.hitStates![i] = PhysicsSystem.instance.raycastClosest(this._ray, this._mask, this.distance);\n                this.notHitCount = 0;\n                if (this.hitStates![i]) {\n                    var res = PhysicsSystem.instance.raycastClosestResult;\n                    UtilVec3.copy(this.hitPoint, res.hitPoint);\n                    this.checked = true;\n                    this.checkedNode = res.collider.node;\n                } else {\n                    this.checkedNode = undefined;\n                    this.checked = false;\n                    this.notHitCount++;\n                }\n            }\n        }\n    }\n\n    getRandomWalkableDirection (): Vec3 | undefined {\n\n        const randomIndex = randomRangeInt(0, this.notHitCount);\n\n        // Find walkable direction index.\n        let walkableIndex = -1;\n        for (let i = 0; i < this.hitStates!.length; i++) {\n            if (this.hitStates![i] == false) walkableIndex++;\n            if (walkableIndex === randomIndex) break;\n        }\n\n        if (walkableIndex === -1) return undefined;\n\n        this._curDir = this.dir[walkableIndex];\n\n        const worldEulerAngles = UtilNode.getWorldEulerAngles(this.node);\n        const rotationY = math.toRadian(worldEulerAngles.y);\n\n        return Vec3.rotateY(this._curDir, this._curDir, Vec3.ZERO, rotationY);\n\n    }\n}\n\n","import { _decorator, Component, Node, PhysicsSystem, Vec3, geometry, debug, Graphics, RenderPipeline, v3, CCFloat } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorRays')\nexport class SensorRays extends Component {\n\n    @property([Vec3])\n    dir = []\n\n    @property([Vec3])\n    origin = []\n\n    @property([CCFloat])\n    masks = [];\n\n    @property\n    check_time = 0.5;\n\n    @property\n    distance = 2;\n\n    _ray: geometry.Ray = new geometry.Ray();\n\n    checked = false;\n\n    checkedNode: Node | undefined;\n\n    _time = 0;\n\n    _mask: number = 0;\n\n    _curDir = v3(0, 0, 0);\n\n    start () {\n        for (let i = 0; i < this.masks.length; i++)\n            this._mask = this._mask | 1 << this.masks[i];\n    }\n\n    update (deltaTime: number) {\n        this._time -= deltaTime;\n        if (this._time < 0) {\n            this._time = this.check_time;\n\n            for (let i = 0; i < this.dir.length; i++) {\n\n                Vec3.transformMat4(this._curDir, this.dir[i], this.node.worldMatrix);\n                this._curDir = this._curDir.subtract(this.node.worldPosition).normalize();\n\n                this._ray.d.x = this._curDir.x;//this.node.forward.x;//this.dir[i].x;\n                this._ray.d.y = this._curDir.y;//this.node.forward.y;//this.dir[i].y;\n                this._ray.d.z = this._curDir.z;//this.node.forward.z;//this.dir[i].z;\n\n                this._ray.o.x = this.origin[i].x + this.node.worldPosition.x;\n                this._ray.o.y = this.origin[i].y + this.node.worldPosition.y;\n                this._ray.o.z = this.origin[i].z + this.node.worldPosition.z;\n\n                if (PhysicsSystem.instance.raycastClosest(this._ray, this._mask, this.distance)) {\n                    const res = PhysicsSystem.instance.raycastClosestResult;\n                    this.checked = true;\n                    this.checkedNode = res.collider.node;\n                    return;\n                } else {\n                    this.checkedNode = undefined;\n                }\n            }\n            this.checked = false;\n        }\n    }\n}\n\n","import { _decorator, Component, geometry, Node, PhysicsSystem, v3, Vec3, CCFloat } from 'cc';\nimport { UtilVec3 } from '../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SensorSlope')\nexport class SensorSlope extends Component {\n\n    @property([CCFloat])\n    masks = [];\n\n    @property(CCFloat)\n    distance = 1;\n\n    @property(Vec3)\n    direction = v3(0, 0, 1);\n\n    _mask: number = 0;\n    _ray: geometry.Ray = new geometry.Ray();\n    hitPoint = v3(0.5, 0, 0.5);\n\n    @property(Vec3)\n    vectorSlop = v3(0, 0, 0);\n\n    start () {\n        for (let i = 0; i < this.masks.length; i++)\n            this._mask = this._mask | 1 << this.masks[i];\n    }\n\n    checkSlope (direction: Vec3) {\n\n        UtilVec3.copy(this.direction, direction);\n        this.direction.y = 0;\n        this.direction.normalize();\n\n        UtilVec3.copy(this._ray.o, this.direction);\n        this._ray.o.multiplyScalar(0.1);\n        this._ray.o.add(this.node.worldPosition);\n        this._ray.o.y += 0.3;\n        this._ray.d.y = -1;\n        this._ray.d.x = 0;\n        this._ray.d.z = 0;\n\n        if (PhysicsSystem.instance.raycastClosest(this._ray, this._mask, this.distance)) {\n            UtilVec3.copy(this.hitPoint, PhysicsSystem.instance.raycastClosestResult.hitPoint);\n            const heightDifference = Math.abs(this.hitPoint.y - this.node.worldPosition.y);\n            if (heightDifference > 0.05) {\n                //console.log(heightDifference);\n                UtilVec3.copy(this.vectorSlop, this.hitPoint);\n                this.vectorSlop.subtract(this.node.worldPosition);\n                return true;\n            }\n            return false;\n        } else {\n            UtilVec3.copy(this.hitPoint, Vec3.ZERO);\n            UtilVec3.copy(this.vectorSlop, Vec3.ZERO);\n            return false;\n        }\n\n    }\n}\n\n","\nexport let settings = {\n    bakingReflection: false,\n    outputRGBE: false,\n    tonemapped: false,\n\n    shadowStage: undefined,\n    gbufferStage: undefined,\n\n    renderProfiler: false,\n\n    passPathName: '',\n\n    passVersion: 0\n}\n\nglobalThis.ppSettings = settings;\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, AudioSource, Component, math, Node } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { Level } from '../level/level';\nimport { Sound } from '../../core/audio/sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SfxHeart')\nexport class SfxHeart extends Component {\n    \n    _sfxAudio: AudioSource | undefined\n\n    volume = 0;\n    currentVolume = 0;\n\n    sceneVolume = 1;\n    currentSceneVolume = 1;\n\n    isLow = false;\n    \n\n    start() {\n        this._sfxAudio = this.getComponent(AudioSource)!;\n        this._sfxAudio.volume = 0;\n        this._sfxAudio.loop = true;\n        this._sfxAudio.play();\n    }\n\n    update(deltaTime: number) {\n\n        const player = Level.Instance._player;\n\n        if(!player) return;\n\n        if(player && player?._data?.is_low_hp && !player.is_dead) {\n            if(this.isLow == false) {\n                this.isLow = true;\n                Msg.emit('msg_ui_fx_open', 'effect_low_hp');\n            }\n            this.currentVolume = Sound.volumeSound;\n            this.currentSceneVolume = 0.1;\n        }else{\n            if(this.isLow){\n                this.isLow = false;\n                Msg.emit('msg_ui_fx_close', 'effect_low_hp');\n            }\n            this.currentVolume = 0;\n            this.currentSceneVolume = 1;\n        }\n        this.volume = math.lerp(this.volume, this.currentVolume, deltaTime);\n        this.sceneVolume = math.lerp(this.sceneVolume, this.currentSceneVolume, deltaTime);\n        this._sfxAudio!.volume = this.volume;\n        Sound.sceneMusicPercent = this.sceneVolume;\n        Sound.updateBGM();\n        \n    }\n}\n\n","import { BaseStage, } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, pipeline, CCString } from \"cc\";\nimport { CameraInfo, getCameraUniqueID, getLoadOpOfClearFlag, getRenderArea, validPunctualLightsCulling } from \"../utils/utils\";\nimport { EDITOR } from \"cc/env\";\nimport { settings } from \"./setting\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { supportsR32FloatTexture } = pipeline\nconst { ShadowType, LightType, SKYBOX_FLAG, CSMLevel } = renderer.scene\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\n\nconst { ccclass, property } = _decorator\n\n@ccclass('CustomShadowStage')\nexport class CustomShadowStage extends BaseStage {\n    _materialName = 'blit-screen';\n\n    @property({ override: true })\n    name = 'CustomShadowStage'\n\n    @property\n    textureFormat = gfx.Format.RGBA8\n\n    mainLightShadows: string[] = []\n\n    buildShadowPass (passName: Readonly<string>,\n        ppl: rendering.Pipeline,\n        camera: renderer.scene.Camera, light: renderer.scene.Light, level: number,\n        width: Readonly<number>, height: Readonly<number>) {\n        const device = ppl.device;\n        const shadowMapName = passName;\n        if (!ppl.containsResource(shadowMapName)) {\n            const format = supportsR32FloatTexture(device) ? Format.R32F : Format.RGBA8;\n            ppl.addRenderTarget(shadowMapName, format, width, height, ResourceResidency.MANAGED);\n            ppl.addDepthStencil(`${shadowMapName}Depth`, Format.DEPTH_STENCIL, width, height, ResourceResidency.MANAGED);\n        }\n        const pass = ppl.addRasterPass(width, height, 'default');\n        pass.name = passName;\n\n        pass.addRasterView(shadowMapName, new RasterView('_',\n            AccessType.WRITE, AttachmentType.RENDER_TARGET,\n            LoadOp.CLEAR, StoreOp.STORE,\n            ClearFlagBit.COLOR,\n            new Color(1, 1, 1, camera.clearColor.w)));\n        pass.addRasterView(`${shadowMapName}Depth`, new RasterView('_',\n            AccessType.WRITE, AttachmentType.DEPTH_STENCIL,\n            LoadOp.CLEAR, StoreOp.DISCARD,\n            ClearFlagBit.DEPTH_STENCIL,\n            new Color(camera.clearDepth, camera.clearStencil, 0, 0)));\n        const rect = getRenderArea(new gfx.Rect, camera, width, height, light, level);\n        pass.setViewport(new Viewport(rect.x, rect.y, rect.width, rect.height));\n        const queue = pass.addQueue(QueueHint.RENDER_OPAQUE);\n        queue.addSceneOfCamera(camera, new LightInfo(light, level),\n            SceneFlags.SHADOW_CASTER);\n\n        if (!EDITOR) {\n            settings.passPathName += passName\n            pass.setVersion(settings.passPathName, 0);\n        }\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        if (!HrefSetting.shadow) {\n            return;\n        }\n\n        settings.shadowStage = this;\n\n        // validPunctualLightsCulling(ppl, camera);\n        const pipeline = ppl;\n        const shadowInfo = pipeline.pipelineSceneData.shadows;\n        // const validPunctualLights = ppl.pipelineSceneData.validPunctualLights;\n        const shadows = ppl.pipelineSceneData.shadows;\n        if (!shadowInfo.enabled || shadowInfo.type !== ShadowType.ShadowMap) {\n            return;\n        }\n\n        // const _validLights: renderer.scene.Light[] = [];\n        // let n = 0;\n        // let m = 0;\n        // for (; n < shadowInfo.maxReceived && m < validPunctualLights.length;) {\n        //     const light = validPunctualLights[m];\n        //     if (light.type === LightType.SPOT) {\n        //         const spotLight = light as renderer.scene.SpotLight;\n        //         if (spotLight.shadowEnabled) {\n        //             _validLights.push(light);\n        //             n++;\n        //         }\n        //     }\n        //     m++;\n        // }\n\n        this.mainLightShadows.length = 0;\n\n        const cameraID = getCameraUniqueID(camera);\n        const mainLight = camera.scene.mainLight;\n\n        // build shadow map\n        const mapWidth = shadows.size.x;\n        const mapHeight = shadows.size.y;\n        if (mainLight && mainLight.shadowEnabled) {\n            let mainShadowName = `MainLightShadow${cameraID}`\n            this.mainLightShadows[0] = mainShadowName;\n            if (mainLight.shadowFixedArea) {\n                this.buildShadowPass(this.mainLightShadows[0], ppl,\n                    camera, mainLight, 0, mapWidth, mapHeight);\n            } else {\n                const csmLevel = pipeline.pipelineSceneData.csmSupported ? mainLight.csmLevel : 1;\n                for (let i = 0; i < csmLevel; i++) {\n                    this.mainLightShadows[i] = mainShadowName;\n                    this.buildShadowPass(this.mainLightShadows[i], ppl,\n                        camera, mainLight, i, mapWidth, mapHeight);\n                }\n            }\n        }\n\n        // for (let l = 0; l < _validLights.length; l++) {\n        //     const light = _validLights[l];\n        //     const passName = `SpotLightShadow${l.toString()}${cameraName}`;\n        //     cameraInfo.spotLightShadowNames[l] = passName;\n        //     this.buildShadowPass(passName, ppl,\n        //         camera, light, 0, mapWidth, mapHeight);\n        // }\n    }\n}\n","\r\nexport class Singleton {\r\n\r\n    private static _instance: any = null;\r\n\r\n    public static get Instance() {\r\n        if (!this._instance) {\r\n            this._instance = new this();\r\n            \r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public init() {}\r\n\r\n    public clear() {\r\n        Singleton._instance = null;\r\n    }\r\n\r\n}","import { Component, director, MeshRenderer, _decorator } from \"cc\";\n\nconst { ccclass, executeInEditMode } = _decorator\n\n@ccclass('custom.Sky')\n@executeInEditMode\nexport class Sky extends Component {\n    start () {\n        let mr = this.getComponent(MeshRenderer);\n\n        let skybox = director.getScene().globals.skybox;\n        mr.material.setProperty('envMap', skybox.reflectionMap || skybox.envmap)\n    }\n}\n","import { _decorator, Component, Node, Vec3, v3, v2, Vec2, UITransform, EventTouch, random, math } from 'cc';\nimport { type_x_y } from '../../logic/data/game-type';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Slider2D')\nexport class Slider2D extends Component {\n    pos: Vec3 = v3(0, 0, 0);\n    uipos: Vec2 = v2(0, 0);\n    point: Node = Object.create(null);\n    uitran: UITransform = Object.create(null);\n\n    size: Vec2 = v2(0, 0);\n    halfx: number = 0;\n    halfy: number = 0;\n\n    px: number = 0;\n    py: number = 0;\n\n    children: Node[] = Object.create(null);\n\n    start() {\n\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMove, this);\n        this.point = this.node.children[0].children[0];\n        this.children = this.point.children;\n        this.uitran = this.node.getComponent(UITransform);\n        this.size.x = this.uitran.contentSize.x;\n        this.size.y = this.uitran.contentSize.y;\n\n        this.halfx = this.size.x / 2;\n        this.halfy = this.size.y / 2;\n\n        this.set({ x: Math.random(), y: Math.random() });\n    }\n\n    set(value: type_x_y) {\n        this.pos.x = this.size.x * value.x - this.halfx;\n        this.pos.y = this.size.y * value.y - this.halfy;\n        this.point.setPosition(this.pos);\n    }\n\n    onMove(event: EventTouch) {\n\n        var delta = event.getUIDelta();\n        var dx = delta.x;\n        var dy = delta.y;\n\n        this.pos.x += dx;\n        this.pos.y += dy;\n\n        this.pos.x += this.halfx;\n        this.pos.y += this.halfy;\n        this.pos.x %= this.size.x;\n        this.pos.y %= this.size.y;\n\n        this.px = this.pos.x / this.size.x;\n        this.py = this.pos.y / this.size.y;\n\n        this.px = this.px < 0 ? 1 + this.px : this.px;\n        this.py = this.py < 0 ? 1 + this.py : this.py;\n\n        this.pos.x -= this.halfx;\n        this.pos.y -= this.halfy;\n        this.point.setPosition(this.pos);\n    }\n\n    getPercent(): type_x_y {\n        return { x: this.px, y: this.py }\n    }\n}\n\n","import { _decorator, Component, Node, Vec3, v3 } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { UtilVec3 } from '../../core/util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SmoothLocalZ')\nexport class SmoothLocalZ extends Component {\n\n    @property\n    smooth: number = 0.5;\n\n    @property\n    wait: number = 1;\n\n    pos: Vec3 = v3(0, 0, 0);\n\n    cur: Vec3 = v3(0, 0, 0);\n\n    offset: number = 0;\n\n    offset_x: number = 0;\n\n    original: Vec3 = v3(0, 0, 0);\n\n    /*\n    start () {\n        UtilVec3.copy(this.pos, this.node.position);\n        UtilVec3.copy(this.original, this.pos);\n        this.pos.z = this.offset + this.original.z;\n        UtilVec3.copy(this.cur, this.pos);\n        this.cur.z = 30;\n        this.node.setPosition(this.cur);\n        Msg.on('set_offset_x', this.setOffsetX.bind(this));\n    }\n    */\n\n    init() {\n        UtilVec3.copy(this.pos, this.node.position);\n        UtilVec3.copy(this.original, this.pos);\n        this.pos.z = this.offset + this.original.z;\n        UtilVec3.copy(this.cur, this.pos);\n        this.cur.z = 30;\n        this.pos.z = 30;\n        this.node.setPosition(this.cur);\n        Msg.on('set_offset_x', this.setOffsetX.bind(this)); \n    }\n\n    onDestroy () {\n        Msg.off('set_offset_x', this.setOffset.bind(this));\n    }\n\n    setOffset (offset: number) {\n        this.offset = offset;\n        this.pos.z = this.offset + this.original.z;\n        \n    }\n\n    setOffsetX (offset: number) {\n        this.pos.x = offset + this.original.x;\n    }\n\n    lateUpdate (deltaTime: number) {\n        if (this.wait > 0) {\n            this.wait -= deltaTime;\n            return;\n        }\n        this.smoothLerp(deltaTime);\n    }\n\n    smoothLerp (deltaTime: number) {\n        Vec3.lerp(this.cur, this.cur, this.pos, deltaTime * this.smooth);\n        this.node.setPosition(this.cur);\n    }\n}\n\n","import { _decorator, Component, Node, CCString } from 'cc';\nimport { Sound } from './sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SoundActor')\nexport class SoundActor extends Component {\n\n    @property(CCString)\n    sfx_name: string | undefined;\n\n    onEnable () {\n        Sound.addSfx(this.node, this.sfx_name!);\n    }\n}\n","import { _decorator, Component, Node, find, AudioSource, Vec3, CCString } from 'cc';\nimport { Msg } from '../msg/msg';\nimport { Sound } from './sound';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SoundEnablePlay')\nexport class SoundEnablePlay extends Component {\n\n    @property(CCString)\n    sfx_name: string | undefined;\n\n    @property\n    enable_distance: boolean = false;\n\n    @property\n    max_distance = 6;\n\n    @property\n    max_sound = 1.0;\n\n    @property\n    min_sound = 0.5;\n\n    @property\n    relate_height: boolean = false;\n\n    @property\n    max_height = 10;\n\n    _audioSource: AudioSource = Object.create(null);\n\n    _distance_percent = 1;\n\n    _volume = 1;\n\n    __preload () {\n        this._audioSource = this.node.addComponent(AudioSource);\n        Sound.addSfx(this.node, this.sfx_name!);\n        if (this.relate_height) {\n            var height = this.node.worldPosition.y;\n            if (height > this.max_height) height = this.max_height;\n            this._volume = height / this.max_height;\n            if (this._volume > this.max_sound) this._volume = this.max_sound;\n            if (this._volume < this.min_sound) this._volume = this.min_sound;\n        }\n    }\n\n    onEnable () {\n        this._audioSource.play();\n    }\n\n    onDisable () {\n        this._audioSource.stop();\n    }\n\n    update (deltaTime: number) {\n\n        /*\n        if (actor_main.target && actor_main.target.worldPosition) {\n            var dis = Vec3.distance(this.node.worldPosition, actor_main.target.worldPosition);\n            if (dis >= this.max_distance) dis = this.max_distance;\n            this._audioSource.volume = Sound.volume * (1 - dis / this.max_distance) * this._volume * Sound.volume_load;\n        }\n        */\n\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { Node, AudioSource } from \"cc\";\nimport { Save } from \"../../logic/data/save\";\nimport { Msg } from \"../msg/msg\";\nimport { Res } from \"../res/res\";\nimport { Game } from \"../../logic/data/game\";\nimport { ResCache } from \"../res/res-cache\";\n\nexport class Sound {\n\n    private static _sfxAudio: AudioSource;\n    private static _bgmAudio: AudioSource;\n\n    public static volumeSound: number = 0.5;\n\n    public static volumeMusic: number = 1;\n\n    public static sceneMusicPercent: number = 1;\n\n    public static _volumeLoad = 1;\n    public static _sourcePoolCount = 30;\n    public static _pool: AudioSource[] = [];\n\n    private static _templateSource: Node;\n    private static _poolRoot: Node;\n\n    private static currentBGMName = '';\n\n    public static init (): void {\n\n        // Initialize sound prefab.\n        const prefab = ResCache.Instance.getPrefab('sound');\n\n        const soundNode = Res.inst(prefab, Game.Instance._poolNode);\n        this._sfxAudio = soundNode.getChildByName('sfx')?.getComponent(AudioSource)!;\n        this._bgmAudio = soundNode.getChildByName('bgm')?.getComponent(AudioSource)!;\n\n        // Init pool.\n        this._poolRoot = soundNode.getChildByName('pool_root')!;\n        this._templateSource = soundNode.getChildByName('template')!;\n        for (let i = 0; i < this._sourcePoolCount; i++) this.addPool();\n\n        // Init sound volume.\n        let volume = Save.Instance.get('sfx_volume');\n        if (volume === undefined) volume = 1;\n        this.volumeSound = volume;\n\n        // Init sound music.\n        let volumeMusic = Save.Instance.get('sfx_volume_music');\n        if (volumeMusic === undefined) volumeMusic = 1;\n        this.volumeMusic = volumeMusic;\n\n        this.Refresh();\n\n        Msg.on('sli_sound', this.setVolume.bind(this));\n        Msg.on('sli_music', this.setVolumeMusic.bind(this));\n\n        Msg.bind('sound_load', this.onLoad, this);\n        Msg.bind('sound_load_end', this.onLoadEnd, this);\n    }\n\n    private static addPool () {\n        var newNode = Res.instNode(this._templateSource, this._poolRoot);\n        this._pool.push(newNode.getComponent(AudioSource)!);\n    }\n\n    public static setVolume (volume: number) {\n        this.volumeSound = volume;\n        this._sfxAudio.volume = this.volumeSound;\n        Save.Instance.set('sfx_volume', volume);\n    }\n\n    public static setVolumeMusic (volume: number) {\n        this.volumeMusic = volume;\n        this._bgmAudio.volume = this.volumeMusic;\n        Save.Instance.set('sfx_volume_music', volume);\n    }\n\n    private static Refresh () {\n        this._sfxAudio.volume = this.volumeSound;\n        this._bgmAudio.volume = this.volumeMusic;\n    }\n\n    public static playLoop (key: string, volumeMultiply: number = 1): number {\n\n        //find unused.\n        let index = -1;\n        for (let i = 0; i < this._pool.length; i++) {\n            if (this._pool[i].clip === null) {\n                index = i;\n                break;\n            }\n        }\n\n        // add new one.\n        if (index === -1) {\n            this.addPool();\n            index = this._pool.length - 1;\n        }\n\n        Res.loadAudio(`sound/${key}`, (err, asset) => {\n            if (err) {\n                throw new Error(`Can not find sound resource : sound/${key}`);\n            }\n            if (asset) {\n                this._pool[index].clip = asset;\n                this._pool[index].volume = this.volumeSound * volumeMultiply;\n                this._pool[index].loop = true;\n                this._pool[index].play();\n            }\n        });\n\n        return index;\n\n    }\n\n    public static offing (index: number): void {\n        this._pool[index].stop();\n        this._pool[index].loop = false;\n        this._pool[index].clip = null;\n    }\n\n    public static on (key: string, volumeMultiply: number = 1): void {\n        Res.loadAudio(`sound/${key}`, (err, asset) => {\n            if (asset) {\n                this._sfxAudio.playOneShot(asset, this.volumeSound * volumeMultiply * this.sceneMusicPercent);\n            }\n        });\n    }\n\n    public static addSfx (node: Node, key: string, volume: number = 1) {\n        Res.loadAudio(`sound/${key}`, (err, asset) => {\n            if (err) {\n                throw new Error(`Can not find sound resource : sound/${key}`);\n            }\n            if (asset) {\n                if (!node.isValid) return;\n                let source = node.getComponent(AudioSource)!;\n                source.clip = asset;\n                source.loop = true;\n                source.volume = volume * this._volumeLoad;\n            }\n        });\n    }\n\n    public static off (key: string) {\n\n    }\n\n    public static onBGM (key: string): void {\n\n        if (this.currentBGMName == key) return;\n        this.currentBGMName = key;\n\n        Res.loadAudio(`sound/${key}`, (err, asset) => {\n            if (err) {\n                throw new Error(`Can not find sound resource : sound/${key}`);\n            }\n            if (asset) {\n                this._bgmAudio.stop();\n                this._bgmAudio.clip = asset;\n                this._bgmAudio.loop = true;\n                this._bgmAudio.volume = this.volumeMusic;\n                this._bgmAudio.play();\n            }\n        });\n    }\n\n    public static offBGM (key: string): void {\n        this._bgmAudio.stop();\n        this._bgmAudio.clip = null;\n        this._bgmAudio.loop = false;\n        this.currentBGMName = '';\n\n    }\n\n    public static updateBGM () {\n        this._bgmAudio.volume = this.volumeMusic * this.sceneMusicPercent;\n    }\n\n    public static pauseBGM (): void {\n        this._bgmAudio.pause();\n    }\n\n    public static onLoad () {\n        this._volumeLoad = 0;\n    }\n\n    public static onLoadEnd () {\n        this._volumeLoad = 1;\n    }\n\n}\n","import { EventKeyboard, Game, game, Input, input, KeyCode } from 'cc';\nimport { EDITOR, JSB } from 'cc/env';\nimport { InPlayMode } from '../utils/npm';\nimport { HrefSetting } from './href-setting';\n\n// if (true) {\nif (!EDITOR && !JSB && HrefSetting.spector) {\n\n    let SPECTORTOOLS: any;\n    (function (SPECTORTOOLS) {\n        let Loader: any = (function () {\n            let useDist: any;\n            let queue: any;\n            let callback: any;\n\n            // useDist = true\n\n            let host = 'http://' + location.host.split(':')[0]\n            if (EDITOR) {\n                host = 'http://127.0.0.1'\n            }\n\n            function Loader () {\n                queue = [];\n                // useDist = (document.location.href.toLowerCase().indexOf('dist=true') > 0);\n                callback = null;\n            }\n\n            Loader.prototype.dequeue = function () {\n                if (queue.length == 0) {\n                    if (callback) {\n                        callback();\n                    }\n                    console.log('Scripts loaded');\n                    return;\n                }\n\n                let url: any = queue.shift();\n\n                let head: any = document.getElementsByTagName('head')[0];\n                let script: any = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = url;\n\n                let self: any = this;\n                script.onload = function () {\n                    self.dequeue();\n                };\n                head.appendChild(script);\n            }\n\n            Loader.prototype.loadScript = function (url: string) {\n                queue.push(url);\n            }\n\n            Loader.prototype.loadSPECTORScripts = function () {\n                if (useDist) {\n                    this.loadScript(`${host}:1337/dist/spector.bundle.js`);\n                }\n                else {\n                    this.loadScript(`${host}:1337/.temp/spector.bundle.js`);\n                }\n            }\n\n            Loader.prototype.onReady = function (newCallback: Function) {\n                callback = newCallback;\n                return this;\n            }\n\n            Loader.prototype.load = function (scriptPaths: string[]) {\n                let self: any = this;\n\n                self.loadScript(`${host}:35729/livereload.js?snipver=1`);\n                self.loadSPECTORScripts();\n\n                if (scriptPaths) {\n                    for (let i: any = 0; i < scriptPaths.length; i++) {\n                        let scriptPath: any = scriptPaths[i];\n                        self.loadScript(scriptPath);\n                    }\n                }\n\n                self.dequeue();\n            };\n\n            return Loader;\n        }());\n\n        let loader: any = new Loader();\n        SPECTORTOOLS.Loader = loader;\n\n    })(SPECTORTOOLS || (SPECTORTOOLS = {}))\n\n    SPECTORTOOLS.Loader.load();\n\n    async function init () {\n        await Promise.all([\n            new Promise(resolve => {\n                SPECTORTOOLS.Loader.onReady(function () {\n                    resolve(null)\n                })\n            }),\n            new Promise(resolve => {\n                game.on(Game.EVENT_GAME_INITED, () => {\n                    resolve(null)\n                })\n            })\n        ])\n\n        let fullCapture = true\n\n        let spector: any = new globalThis.SPECTOR.Spector();\n        spector.fullCapture = fullCapture;\n        spector.timeSpy.spyRequestAnimationFrame('requestAnimationFrame', window);\n        spector.displayUI(undefined, undefined, false, false);\n        spector.spyCanvas(game.canvas);\n        globalThis.SPECTOR.Spector.getFirstAvailable3dContext(game.canvas)\n\n        globalThis.spector = spector;\n        globalThis.rAF = window.requestAnimationFrame;\n        (game as any)._pacer._rAF = globalThis.rAF\n\n        spector.capture = function () {\n            let frameRate = game.frameRate\n            game.frameRate = 60\n            spector.captureCanvas(game.canvas, undefined, undefined, fullCapture);\n            // game.frameRate = frameRate\n        }\n\n        input.on(Input.EventType.KEY_DOWN, (e) => {\n            if (e.keyCode === KeyCode.KEY_H) {\n                spector.capture()\n            }\n        })\n    }\n\n    init()\n}\n","import { _decorator, Component, Node, Camera, director, game, MeshRenderer } from 'cc';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SpawnsGroup')\nexport class SpawnsGroup extends Component {\n\n    onEnable() {\n        this.node.children.forEach(child => {\n            const meshRender = child.getComponent(MeshRenderer);\n            if (meshRender) meshRender.enabled = false;\n        });\n    }\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n\n}\n\n","import { gfx, js, Material, path, Vec2 } from 'cc';\nimport { LGraphNode } from '../@types/litegraph';\nimport { BaseStage, } from '../../stages/base-stage';\nimport { BlitStage } from '../../stages/blit-stage';\nimport { liteGraph } from '../graph';\nimport { readPixels } from '../../utils/utils';\nimport { updateNextNodes } from '../utils/nodes';\nimport { loadResources } from '../../utils/npm';\nimport { ForwardStage } from '../../stages/forward-stage';\nimport { DeferredGBufferStage } from '../../stages/deferred-gbuffer-stage';\nimport { DeferredLightingStage } from '../../stages/deferred-lighting-stage';\nimport { DeferredPostStage } from '../../stages/deferred-post-stage';\nimport { BloomStage } from '../../stages/bloom-stage';\nimport { TAAStage } from '../../stages/taa-stage';\nimport { FSRStage } from '../../stages/fsr-stage';\nimport { ForwardPostStage } from '../../stages/forward-post-stage';\nimport { ZoomScreenStage } from '../../stages/zoom-screen-stage';\nimport { CustomShadowStage } from '../../stages/shadow-stage';\n\nexport function createStageGraph (sclass: typeof BaseStage) {\n    let name = js.getClassName(sclass);\n\n    function Stage () {\n        let self = this as LGraphNode;\n\n        // input slots\n        self.addInput('Camera Output', 'Camera Output');\n        self.addInput('RenderTexture', 'RenderTexture');\n\n        self.addInput('Custom Size', 'vec2');\n\n        // output slots\n        self.addOutput('RenderTexture', 'RenderTexture');\n\n        let onPropertyChanges: Map<string, Function> = new Map;\n\n        let stage = new sclass();\n        this.stage = stage;\n\n        self.addProperty('showResult', false, 'bool');\n\n        function updateSize () {\n            let originHeight = self.computeSize()[1];\n            self.size[1] = originHeight;\n            if (stage.outputTexture) {\n                let width = self.size[0];\n                let height = width * stage.outputTexture.height / stage.outputTexture.width;\n\n                height *= stage.outputTexture.window.framebuffer.colorTextures.length;\n\n                if (self.properties.showResult) {\n                    self.size[1] = originHeight + height + 5;\n                }\n            }\n        }\n\n        onPropertyChanges.set('material', (v: string) => {\n        })\n\n        // if (globalThis.pipelineAssets) {\n        //     let names = globalThis.pipelineAssets.materialNames;\n\n        //     function setMaterial (effectName: string) {\n        //         stage.material = globalThis.pipelineAssets.materialMap.get(effectName)\n        //     }\n\n        //     let name = 'material';\n        //     let value = this.properties.material || stage.materialName || names[0];\n\n        //     let widget = self.addWidget(\"combo\", name, value, name, { values: names });\n        //     self.addProperty(name, widget.value, widget.type);\n\n        //     setMaterial(value);\n\n        //     onPropertyChanges.set('material', (v: string) => {\n        //         setMaterial(v);\n        //     })\n\n        //     self.addWidget('button', 'show result', null, () => {\n        //         self.properties.showResult = !self.properties.showResult;\n        //     });\n        // }\n\n        let props = (sclass as any).__props__;\n        let attrs = (sclass as any).__attrs__;\n        props.forEach(p => {\n            if (p.startsWith('_')) {\n                return;\n            }\n            if (p === 'inputType' || p === 'renderToScreen') {\n                return;\n            }\n\n            let value = stage[p];\n            let type = attrs[p + '$_$type'];\n            let widget\n            if (type === 'Enum') {\n                let enumList = attrs[p + '$_$enumList'].map((e: any) => e.name);\n                self.addWidget(\"combo\", p, enumList[value], p, { values: enumList });\n\n                onPropertyChanges.set(p, (v: string) => {\n                    stage[p] = enumList.indexOf(v);\n                })\n            }\n            else if (typeof value === 'string') {\n                widget = self.addWidget(\"text\", p, value, p);\n            }\n            else if (typeof value === 'number') {\n                widget = self.addWidget(\"number\", p, value, p);\n            }\n            else if (typeof value === 'boolean') {\n                widget = self.addWidget(\"toggle\", p, value, p);\n            }\n\n            if (widget) {\n                self.addProperty(p, widget.value, widget.type);\n            }\n        })\n\n        self.onPropertyChanged = function (name: string, value: string, prevalue: string) {\n            let func = onPropertyChanges.get(name);\n            if (func) {\n                func(value, prevalue);\n            }\n            else {\n                stage[name] = value;\n            }\n        }\n\n        this.onUpdateStage = function updateStage (prev: LGraphNode, stages: BaseStage[]) {\n            stage.renderToScreen = false;\n            // stage.outputName = ''\n\n            if (stage.checkEnable()) {\n                let customSize = self.getInputData(2);\n                if (customSize) {\n                    stage.useCustomSize = true;\n                    stage.customSize.x = customSize[0];\n                    stage.customSize.y = customSize[1];\n                }\n                else {\n                    stage.useCustomSize = false;\n                }\n\n                stages.push(stage);\n                updateNextNodes(self, stages);\n            }\n            else {\n                updateNextNodes(prev, stages, 0, self.getOutputNodes(0));\n            }\n\n        }\n\n        function createDrawFunc (index = 0) {\n            let imgData: ImageData;\n            let imgCanvas: HTMLCanvasElement;\n            let imgCtx: CanvasRenderingContext2D;\n            let buffer32f: Float32Array;\n\n            return function draw (ctx: CanvasRenderingContext2D, tex: gfx.Texture) {\n                let imgWidth = self.size[0];\n                let imgHeight = imgWidth * stage.outputTexture.height / stage.outputTexture.width;\n\n                let width = stage.outputTexture.width;\n                let height = stage.outputTexture.height;\n\n                if (!imgData) {\n                    imgCanvas = document.createElement('canvas') as HTMLCanvasElement;\n                    imgCanvas.width = width;\n                    imgCanvas.height = height;\n\n                    imgCtx = imgCanvas.getContext('2d');\n                    imgData = imgCtx.getImageData(0, 0, width, height);\n                }\n\n                if (tex.format === gfx.Format.R32F) {\n                    if (!buffer32f) {\n                        buffer32f = new Float32Array(width * height);\n                    }\n\n                    readPixels(stage.outputTexture, buffer32f, index);\n\n                    for (let x = 0; x < width; x++) {\n                        for (let y = 0; y < height; y++) {\n\n                            let dstIdx = (x + y * width) * 4;\n                            imgData.data[dstIdx] = buffer32f[x + y * width] * 255;\n                            imgData.data[dstIdx + 1] = 0\n                            imgData.data[dstIdx + 2] = 0\n                            imgData.data[dstIdx + 3] = 255\n                        }\n                    }\n                }\n                else if (tex.format === gfx.Format.RGBA32F) {\n                    if (!buffer32f) {\n                        buffer32f = new Float32Array(width * height * 4);\n                    }\n\n                    readPixels(stage.outputTexture, buffer32f, index);\n\n                    for (let x = 0; x < width; x++) {\n                        for (let y = 0; y < height; y++) {\n\n                            let dstIdx = (x + y * width) * 4;\n                            imgData.data[dstIdx] = buffer32f[dstIdx] * 255;\n                            imgData.data[dstIdx + 1] = buffer32f[dstIdx + 1] * 255\n                            imgData.data[dstIdx + 2] = buffer32f[dstIdx + 2] * 255\n                            imgData.data[dstIdx + 3] = buffer32f[dstIdx + 3] * 255\n                        }\n                    }\n                }\n                else {\n                    readPixels(stage.outputTexture, imgData.data as any, index);\n                }\n\n                imgCtx.putImageData(imgData, 0, 0);\n\n                let colorTextures = stage.outputTexture.window.framebuffer.colorTextures;\n\n                ctx.save();\n                ctx.scale(1, -1);\n                ctx.drawImage(imgCanvas, 0, 0, width, height, 0, -self.size[1] + imgHeight * (colorTextures.length - 1 - index), imgWidth, imgHeight);\n                ctx.restore();\n            }\n        }\n\n        self.onDrawBackground = (ctx, canvas) => {\n            updateSize()\n\n            if (self.properties.showResult && stage.outputTexture) {\n                let colorTextures = stage.outputTexture.window.framebuffer.colorTextures;\n\n                for (let i = 0; i < colorTextures.length; i++) {\n                    let funcName = 'draw_color_' + i;\n                    if (!self[funcName]) {\n                        self[funcName] = createDrawFunc(i);\n                    }\n\n                    self[funcName](ctx, colorTextures[i]);\n                }\n            }\n        }\n\n        self.onRemoved = () => {\n            stage.destroy();\n        }\n\n        self.size = self.computeSize();\n    }\n    Stage.title = name;\n\n    delete liteGraph.registered_node_types[`pipeline/${name}`];\n    liteGraph.registerNodeType(`pipeline/${name}`, Stage as any);\n}\n\n\ncreateStageGraph(BaseStage);\ncreateStageGraph(BlitStage);\ncreateStageGraph(ForwardStage);\ncreateStageGraph(ForwardPostStage);\ncreateStageGraph(DeferredGBufferStage);\ncreateStageGraph(DeferredLightingStage);\ncreateStageGraph(DeferredPostStage);\ncreateStageGraph(BloomStage);\ncreateStageGraph(TAAStage);\ncreateStageGraph(FSRStage);\ncreateStageGraph(ZoomScreenStage);\ncreateStageGraph(CustomShadowStage);\n","import { Game, game, sys } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { HrefSetting } from '../settings/href-setting';\nimport { loadGraph, showGraph } from './graph';\n\n// if (!EDITOR) {\n//     game.on(Game.EVENT_GAME_INITED, () => {\n//         loadGraph();\n//     })\n// }\n\n// 运行时环境中添加按钮来切换图的显示\nif (!EDITOR && sys.isBrowser) {\n    game.on(Game.EVENT_GAME_INITED, () => {\n        if (HrefSetting.graph) {\n            let showing = false;\n            let btn = document.createElement('button');\n            btn.innerHTML = 'show';\n\n            btn.onclick = function () {\n                showing = !showing;\n                btn.innerHTML = showing ? 'hide' : 'show';\n                showGraph(showing);\n            };\n\n            (btn as any).style = `\n                position:absolute;\n                top: 0px;\n                right: 0px;\n                z-index: 999;\n            `;\n            document.body.appendChild(btn);\n        }\n    })\n}\n","import { BatchingUtility, Component, director, geometry, gfx, Mat4, Material, Mesh, MeshRenderer, Node, renderer, utils, Vec3, Vec4, _decorator } from \"cc\";\nimport { powerOfTwo } from \"../../utils/math\";\nimport { MeshData, saveGltf, toGltfMesh } from \"./save-gltf\";\nimport { StaticBatchComp } from \"./static-batch-comp\";\n\nconst { ccclass, executeInEditMode, property } = _decorator\n\n@ccclass('SubMeshRenderer')\nclass SubMeshRenderer {\n    index: number;\n    mr: MeshRenderer\n\n    constructor (index: number, mr: MeshRenderer) {\n        this.index = index;\n        this.mr = mr\n    }\n}\n\n@ccclass('StaticAreaBatchBlock')\nclass StaticAreaBatchBlock {\n    name = ''\n    aabb = new geometry.AABB\n    renderers: Map<Material, SubMeshRenderer[]> = new Map\n\n    @property\n    _totalCount = 0;\n    @property\n    get totalCount () {\n        return this._totalCount;\n    }\n\n    _materialCount = 0\n    @property\n    get materialCount () {\n        return this._materialCount;\n    }\n}\n\nlet tempVec3 = new Vec3\n\n\n@ccclass('StaticAreaBatch')\n@executeInEditMode\nexport class StaticAreaBatch extends Component {\n    @property(Node)\n    root: Node | undefined\n\n    @property\n    get merge () {\n        return false\n    }\n    set merge (v) {\n        this.doMerge()\n    }\n\n    @property\n    get search () {\n        return false\n    }\n    set search (v) {\n        this.doSearch()\n    }\n\n    @property\n    get revert () {\n        return false\n    }\n    set revert (v) {\n        this.doRevert()\n    }\n\n    @property\n    get clear () {\n        return false\n    }\n    set clear (v) {\n        this.doClear()\n    }\n\n    @property\n    blockSize = new Vec3(30, 30, 30)\n    @property\n    offset = new Vec3(-15, -15, -15)\n\n    @property\n    maxLightMapSize = 1024\n\n\n    @property\n    get totalBatch () {\n        let count = 0\n        this.blocks.forEach(b => {\n            count += b.materialCount\n        })\n        return count\n    }\n\n    blockMap: Map<string, StaticAreaBatchBlock> = new Map\n\n    @property(StaticAreaBatchBlock)\n    blocks: StaticAreaBatchBlock[] = []\n\n    doClear () {\n        this.root.active = true;\n        this.node.removeAllChildren()\n        this.blocks.length = 0;\n        this.blockMap.clear()\n    }\n    doRevert () {\n        this.root.active = !this.root.active;\n        let children = this.node.children;\n        for (let i = 0; i < children.length; i++) {\n            children[i].active = !this.root.active\n        }\n    }\n\n    totalRenderers: MeshRenderer[] = []\n\n    @property\n    _totalCount = 0;\n    @property\n    get totalCount () {\n        return this._totalCount;\n    }\n\n    async doMerge () {\n        await this.doSearch();\n\n        let processedCount = 0;\n        let toProcessCount = this._totalCount;\n\n        let startTime = Date.now()\n\n\n        let tempMin = new Vec3\n        let tempMax = new Vec3\n        let tempNormal = new Vec4\n        let tempMat4 = new Mat4\n\n        this.node.removeAllChildren();\n        for (let blockPair of this.blockMap) {\n            let block = blockPair[1];\n            let center = block.aabb.center;\n            let node = new Node(block.name)\n            node.parent = this.node;\n            node.position = center;\n            node.active = false\n\n            for (let rendPair of block.renderers) {\n                let renderers = rendPair[1]\n\n                let countPerRow = Math.ceil(Math.pow(renderers.length, 0.5));\n\n                let startVerticeIdx = 0\n                let meshData = new MeshData\n                let min = new Vec3(Infinity, Infinity, Infinity)\n                let max = new Vec3(-Infinity, -Infinity, -Infinity)\n                let lightMapSize = 0;\n\n                let subfix = 0;\n                let end = async () => {\n                    meshData.min.set(min).subtract(center);\n                    meshData.max.set(max).subtract(center);\n\n                    let mat = rendPair[0]\n                    let name = block.name + '_' + mat.name;\n                    let gltf = toGltfMesh(name, meshData);\n                    let gltfUrl = `db://assets/${director.getScene().name}/merged-meshes/${name}.gltf`;\n                    let meshUrl = gltfUrl + `/${name}.mesh`\n                    let mesh = await saveGltf(gltf, gltfUrl, meshUrl)\n\n                    let sub = new Node(mat.name + (subfix++));\n\n                    let mr = sub.addComponent(MeshRenderer);\n                    mr.mesh = mesh\n                    mr.material = mat\n\n                    sub.addComponent(StaticBatchComp);\n\n                    mr.bakeSettings.bakeable = true;\n                    mr.bakeSettings.castShadow = true;\n                    mr.bakeSettings.receiveShadow = true;\n                    mr.bakeSettings.lightmapSize = Math.min(this.maxLightMapSize, powerOfTwo(lightMapSize));\n\n                    sub.parent = node;\n                }\n\n                for (let i = 0; i < renderers.length; i++) {\n                    let mr = renderers[i].mr\n                    let idx = renderers[i].index\n\n                    let pos = mr.mesh.readAttribute(idx, gfx.AttributeName.ATTR_POSITION);\n                    let mergedVertexCount = (meshData.vertices.length + pos.length) / 3\n                    if (mergedVertexCount > 65535) {\n                        console.warn(`${block.name}-${rendPair[0].name} vertex count overflow 65535`)\n\n                        await end();\n\n                        startVerticeIdx = 0\n                        meshData = new MeshData\n                        min = new Vec3(Infinity, Infinity, Infinity)\n                        max = new Vec3(-Infinity, -Infinity, -Infinity)\n                    }\n                    for (let pi = 0; pi < pos.length; pi += 3) {\n                        tempVec3.set(pos[pi], pos[pi + 1], pos[pi + 2])\n                        Vec3.transformMat4(tempVec3, tempVec3, mr.node.worldMatrix)\n                        meshData.vertices.push(tempVec3.x - center.x, tempVec3.y - center.y, tempVec3.z - center.z);\n                    }\n\n                    let uv0 = mr.mesh.readAttribute(idx, gfx.AttributeName.ATTR_TEX_COORD);\n                    meshData.uv.push(...uv0);\n\n                    Mat4.inverseTranspose(tempMat4, mr.node.worldMatrix);\n                    let normals = mr.mesh.readAttribute(idx, gfx.AttributeName.ATTR_NORMAL);\n                    for (let ni = 0; ni < normals.length; ni += 3) {\n                        tempNormal.set(normals[ni], normals[ni + 1], normals[ni + 2], 0)\n                        Vec4.transformMat4(tempNormal, tempNormal, tempMat4)\n                        tempNormal.normalize();\n                        meshData.normals.push(tempNormal.x, tempNormal.y, tempNormal.z)\n                    }\n\n                    mr.model.worldBounds.getBoundary(tempMin, tempMax);\n                    Vec3.min(min, min, tempMin)\n                    Vec3.max(max, max, tempMax)\n\n                    let uv1 = mr.mesh.readAttribute(idx, gfx.AttributeName.ATTR_TEX_COORD1);\n                    let uv1OffsetX = i % countPerRow;\n                    let uv1OffsetY = Math.floor(i / countPerRow);\n                    for (let uvi = 0; uvi < uv1.length; uvi += 2) {\n                        meshData.uv1.push(\n                            (uv1OffsetX + uv1[uvi]) / countPerRow,\n                            (uv1OffsetY + uv1[uvi + 1]) / countPerRow\n                        );\n                    }\n\n\n                    let indices = mr.mesh.readIndices(idx);\n                    for (let i = 0; i < indices.length; i++) {\n                        meshData.indices.push(indices[i] + startVerticeIdx);\n                    }\n\n                    startVerticeIdx += pos.length / 3;\n\n                    lightMapSize += mr.bakeSettings.lightmapSize;\n\n                    let totalProcess = ++processedCount / toProcessCount;\n                    let costTime = (Date.now() - startTime) / 1000;\n                    let leftTime = Math.floor((costTime / totalProcess) * (1 - totalProcess));\n\n                    console.log(`static merge progress : ${totalProcess}, leftTime: ${leftTime}s`)\n                }\n\n                await end();\n\n            }\n        }\n\n        this.doRevert()\n\n        console.log(`finished static merge progress.`)\n    }\n\n    async doSearch () {\n        if (!this.root) {\n            return\n        }\n\n        this.root.active = true;\n        globalThis.cce.Engine.repaintInEditMode()\n        await new Promise((resolve) => {\n            setTimeout(resolve, 500);\n        })\n\n        let mrs = this.root.getComponentsInChildren(MeshRenderer);\n        mrs = mrs.filter(mr => {\n            return mr.enabledInHierarchy;\n        })\n\n        this.totalRenderers = mrs;\n\n        let blockSize = this.blockSize\n        let blockMap = this.blockMap\n        blockMap.clear()\n        let blocks = this.blocks;\n        blocks.length = 0\n        mrs.forEach(mr => {\n            let pos = mr.model.worldBounds.center;\n            let x = Math.floor((pos.x + this.offset.x) / blockSize.x);\n            let y = Math.floor((pos.y + this.offset.y) / blockSize.y);\n            let z = Math.floor((pos.z + this.offset.z) / blockSize.z);\n\n            let name = `${x}_${y}_${z}`\n            let block = blockMap.get(name)\n            if (!block) {\n                block = new StaticAreaBatchBlock\n                block.aabb.halfExtents.multiply(blockSize).multiplyScalar(0.5);\n                block.aabb.center.set(x, y, z).multiply(blockSize)\n                block.aabb.center.add(block.aabb.halfExtents)\n                block.aabb.center.subtract(this.offset)\n                block.name = name;\n\n                blockMap.set(name, block)\n                blocks.push(block)\n            }\n\n            mr.sharedMaterials.forEach((mat, idx) => {\n                let smr = new SubMeshRenderer(idx, mr)\n                if (!mat) {\n                    console.warn(`${mr.model.node.name} material ${idx} is empty`)\n                    return;\n                }\n                if (!mr.model.subModels[idx]) {\n                    return;\n                }\n                let renderers = block.renderers.get(mat)\n                if (!renderers) {\n                    renderers = []\n                    block._materialCount++;\n                    block.renderers.set(mat, renderers);\n                }\n                block._totalCount++;\n                this._totalCount++;\n                renderers.push(smr);\n            })\n        })\n    }\n}\n\n","import { Component, MeshRenderer, renderer, _decorator } from \"cc\";\n\nconst { ccclass, property, executeInEditMode } = _decorator\n\n@ccclass('StaticBatchComp')\nexport class StaticBatchComp extends Component {\n    start () {\n        let mr = this.getComponent(MeshRenderer);\n\n        let material = new renderer.MaterialInstance({\n            parent: mr.material,\n        })\n        material.recompileShaders({ USE_INSTANCING: false })\n        mr.material = material\n    }\n}\n","import { Component, director, MeshRenderer, _decorator } from \"cc\";\n\nconst { ccclass, executeInEditMode } = _decorator;\n\n@ccclass('StaticCulling')\n// @executeInEditMode\nexport class StaticCulling extends Component {\n    start () {\n        setTimeout(() => {\n            this.hack()\n        }, 1500);\n    }\n    hack () {\n        let mrs = this.node.getComponentsInChildren(MeshRenderer);\n        mrs.forEach(mr => {\n            mr.model.updateUBOs = () => { }\n        })\n    }\n}\n","import { Component, geometry, Vec3, _decorator } from \"cc\";\nimport { CullingBlock } from \"./static-occlusion-block\";\nimport { StaticOcclusionCulling } from \"./static-occlusion-culling\";\nconst { ccclass, type, property } = _decorator\n\n@ccclass('sync.StaticOcclusionArea')\nexport class StaticOcclusionArea extends Component {\n    culling: StaticOcclusionCulling | null = null;\n\n    @property\n    blockCells = new Vec3();\n\n    @property(CullingBlock)\n    blocks: CullingBlock[] = []\n\n    @property\n    get blockCount () {\n        return this.blocks.length;\n    }\n\n    @property\n    get bake () {\n        return false\n    }\n    set bake (v) {\n        if (this.culling) {\n            let index = this.culling.areas.indexOf(this)\n            if (index !== -1) {\n                this.culling._startBake(index, index + 1)\n            }\n        }\n    }\n\n    @property\n    blockSize = 3\n    @property\n    useSelfBlockSize = false\n\n    @property\n    discardCulling = false\n\n    initBlocks () {\n        let culling = this.culling;\n        let blockSize = culling.blockSize;\n        if (this.useSelfBlockSize) {\n            blockSize = this.blockSize;\n        }\n        let halfBlockSize = blockSize / 2;\n        let blocks = this.blocks;\n        blocks.length = 0;\n\n        let wolrdPos = this.node.worldPosition;\n        let worldScale = this.node.getWorldScale();\n\n        let xCount = Math.floor(worldScale.x / blockSize);\n        let yCount = Math.floor(worldScale.y / blockSize);\n        let zCount = Math.floor(worldScale.z / blockSize);\n\n        this.blockCells.set(xCount, yCount, zCount);\n\n        for (let x = 0; x < xCount; x++) {\n            for (let y = 0; y < yCount; y++) {\n                for (let z = 0; z < zCount; z++) {\n                    let blockIdx = x * yCount * zCount + y * zCount + z;\n\n                    let block = blocks[blockIdx] = new CullingBlock;\n                    block.blockIdx = blockIdx;\n                    block.center\n                        .set(wolrdPos)\n                        .add3f(x * blockSize, y * blockSize, z * blockSize)\n                        .add3f(halfBlockSize, halfBlockSize, halfBlockSize)\n                        .subtract3f(worldScale.x / 2, worldScale.y / 2, worldScale.z / 2);\n                    block.halfExtents.set(halfBlockSize, halfBlockSize, halfBlockSize);\n                }\n            }\n        }\n    }\n}\n","import { InstancedBuffer, MeshRenderer, Vec3, _decorator } from \"cc\"\n\nconst { ccclass, property } = _decorator\n\n@ccclass('sync.CullingBlock')\nexport class CullingBlock {\n    @property\n    center = new Vec3\n    @property\n    halfExtents = new Vec3\n\n    @property({ visible: false })\n    modelIndices: number[] = []\n\n    renderers: MeshRenderer[] = []\n    @property\n    get rendererCount () {\n        return this.modelIndices.length;\n    }\n\n    get bakingProcess () {\n        if (this.bakingTotalCount === 0) {\n            return this.modelIndices.length ? 1 : 0;\n        }\n        return (this.bakingTotalCount - this.bakingDirections.length) / this.bakingTotalCount;\n    }\n\n    bakedInstances = false\n    instances: Set<InstancedBuffer> = new Set\n    bakeInstances () {\n        if (this.bakedInstances) {\n            return;\n        }\n\n        let instances = this.instances;\n        instances.clear();\n\n        let renderers = this.renderers;\n        for (let i = 0; i < renderers.length; i++) {\n            let renderer = renderers[i];\n            if (!renderer) continue;\n\n            let originState = renderer.enabled\n            renderer.enabled = true;\n\n            renderer.node.updateWorldTransform();\n            (renderer.model as any)._localDataUpdated = true;\n            renderer.model.updateUBOs(0)\n\n            let subs = renderer.model.subModels;\n            for (let j = 0; j < subs.length; j++) {\n                let passes = subs[j].passes;\n                for (let pi = 0; pi < passes.length; pi++) {\n                    let buffer = passes[pi].getInstancedBuffer(1000 + this.blockIdx);\n                    buffer.merge(subs[j], pi);\n                    instances.add(buffer)\n                }\n            }\n\n            renderer.enabled = originState;\n            this.bakedInstances = true;\n        }\n\n        for (let i of instances) {\n            i.originClear = i.clear\n            i.clear = function () { }\n\n            let originUpload = i.uploadBuffers\n            i.uploadBuffers = function (cmdBuffer) {\n                if (this.uploaded) {\n                    return;\n                }\n                this.uploaded = true;\n                originUpload.call(this, cmdBuffer)\n            }\n        }\n    }\n\n    @property\n    blockIdx = 0;\n\n    bakingTotalCount = 0;\n    bakingDirections: Vec3[] = [];\n}\n","import { Camera, Component, director, geometry, gfx, MeshRenderer, Node, Quat, renderer, Vec2, Vec3, _decorator, ccenum, Color, Mat4, InstancedBuffer } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { Pool } from './utils/pool';\nimport raycast from './utils/raycast';\nimport raycastGpu from './utils/raycast-gpu';\nimport { StaticOcclusionArea } from './static-occlusion-area';\nimport { CullingBlock } from './static-occlusion-block';\nimport { modelPoints, sphereDirections } from './utils/utils';\nimport { getGeometryRenderer } from '../../../utils/debug';\n\nconst { ccclass, property, type, executeInEditMode } = _decorator;\n\nlet _tempOBB = new geometry.OBB();\nlet _tempRay = new geometry.Ray();\n\nlet _cornerResults: Map<string, renderer.scene.Model[]> = new Map\n\nenum CornerType {\n    Center,\n    Corner8_Center,\n    Seprate_Corner8_Center,\n}\nccenum(CornerType);\n\n@ccclass('sync.StaticOcclusionCulling')\n@executeInEditMode\nexport class StaticOcclusionCulling extends Component {\n    static instance: StaticOcclusionCulling | undefined;\n\n    @type(Node)\n    root: Node | null = null;\n\n    @type(Camera)\n    camera: Camera | null = null;\n\n    @property\n    _blockSize = 3;\n    @property\n    get blockSize () {\n        return this._blockSize;\n    }\n    set blockSize (v) {\n        this._blockSize = v;\n        this.initBlocks();\n    }\n\n    @property\n    updateModelNames = true;\n\n    @property({ visible: false })\n    modelNames: string[] = []\n\n    @property\n    rendererCount = 0;\n\n    @property\n    get bake () {\n        return false;\n    }\n    set bake (v) {\n        this._startBake();\n    }\n\n    @property\n    get stop () {\n        return false;\n    }\n    set stop (v) {\n        this._isBaking = false;\n    }\n\n    @property\n    shouldFastBack = false;\n\n    @property\n    sphereBakeCount = 6000;\n\n    @property\n    renderBlocks = false;\n    @property\n    renderRaycast = false;\n    @property\n    renderRaycastLength = 3;\n\n    @property\n    _enabledCulling = true;\n    @property\n    get enabledCulling () {\n        return this._enabledCulling;\n    }\n    set enabledCulling (v) {\n        this._enabledCulling = v;\n\n        if (!v) {\n            let renderers = this.renderers;\n            for (let i = 0; i < renderers.length; i++) {\n                renderers[i].model!.enabled = true;\n            }\n        }\n\n        this._lastLocatedBlock = null;\n    }\n    @property\n    useGpu = true;\n\n    _cornerType = CornerType.Corner8_Center;\n    @type(CornerType)\n    get cornerType () {\n        return this._cornerType;\n    }\n    set cornerType (v) {\n        this._cornerType = v;\n        this._gpuKernelDirty = true;\n    }\n\n    @property\n    bakeInstances = false;\n\n    renderers: MeshRenderer[] = []\n    models: renderer.scene.Model[] = []\n\n    _loadCompeleted = false;\n    _currentLocatedBlock: CullingBlock | null = null\n    _lastLocatedBlock: CullingBlock | null = null\n\n    areas: StaticOcclusionArea[] = []\n    _updateAreas () {\n        this.areas = this.getComponentsInChildren(StaticOcclusionArea);\n        for (let i = 0; i < this.areas.length; i++) {\n            this.areas[i].culling = this;\n        }\n    }\n\n    onEnable () {\n        StaticOcclusionCulling.instance = this;\n    }\n\n    onDisable () {\n        let renderers = this.renderers;\n        for (let i = 0; i < renderers.length; i++) {\n            if (renderers[i].model) {\n                renderers[i].model.enabled = true;\n            }\n        }\n        this._lastLocatedBlock = null;\n\n        if (StaticOcclusionCulling.instance === this) {\n            StaticOcclusionCulling.instance = undefined;\n        }\n    }\n\n    start () {\n        this._init();\n    }\n    _init () {\n        this._updateAreas();\n\n        if (this.root) {\n            this.renderers = this.root!.getComponentsInChildren(MeshRenderer);\n            this.renderers = this.renderers.filter(r => r.enabledInHierarchy);\n            this.models = this.renderers.map(r => r.model!);\n\n            let map: Map<string, MeshRenderer> = new Map\n            this.renderers.forEach(r => {\n                map.set(r.node.name, r);\n            })\n\n            let modelNames = this.modelNames;\n            this.areas.forEach(area => {\n                area.blocks.forEach(block => {\n                    block.renderers = block.modelIndices.map(index => map.get(modelNames[index])!)\n                })\n            })\n\n        }\n\n        let renderers = this.renderers;\n        if (this._enabledCulling && this.bakeInstances) {\n            for (let i = 0; i < renderers.length; i++) {\n                let model = renderers[i].model;\n                if (model) {\n                    model.enabled = false;\n                }\n            }\n        }\n\n        renderers.forEach(r => {\n            if (r.model && !r.model._originUpdateUBOs) {\n                r.model._originUpdateUBOs = r.model.updateUBOs\n                r.model._uboDirty = true\n                r.model.updateUBOs = function (stamp: number) {\n                    if (r.model && !r.model._uboDirty) {\n                        return;\n                    }\n                    this._originUpdateUBOs(stamp)\n\n                    if (r.model) {\n                        r.model._uboDirty = false;\n                    }\n                }\n            }\n\n        })\n\n        this._loadCompeleted = true;\n    }\n\n    instances: Set<InstancedBuffer> | undefined;\n\n    calcCulling () {\n        if (!this.camera || !this._loadCompeleted || this._isBaking || !this.camera.node) {\n            return\n        }\n\n        this._currentLocatedBlock = null;\n\n        let renderers = this.renderers;\n        let worldPos = this.camera.node.worldPosition;\n        let areas = this.areas;\n        for (let i = 0; i < areas.length; i++) {\n            let area = areas[i];\n            _tempOBB.center.set(area.node.worldPosition);\n            let worldScale = area.node.getWorldScale();\n            _tempOBB.halfExtents.set(worldScale.x / 2, worldScale.y / 2, worldScale.z / 2);\n\n            if (!geometry.intersect.obbPoint(_tempOBB, worldPos as Vec3)) {\n                continue;\n            }\n\n            if (area.discardCulling) {\n                this._currentLocatedBlock = null;\n                for (let i = 0; i < renderers.length; i++) {\n                    let model = renderers[i].model;\n                    if (model) {\n                        model.enabled = true;\n                    }\n                }\n                return;\n            }\n\n            let blockSize = this.blockSize;\n            if (area.useSelfBlockSize) {\n                blockSize = area.blockSize;\n            }\n            let x = Math.floor((worldPos.x - (_tempOBB.center.x - _tempOBB.halfExtents.x)) / blockSize);\n            let y = Math.floor((worldPos.y - (_tempOBB.center.y - _tempOBB.halfExtents.y)) / blockSize);\n            let z = Math.floor((worldPos.z - (_tempOBB.center.z - _tempOBB.halfExtents.z)) / blockSize);\n\n            let xCount = Math.floor(worldScale.x / blockSize);\n            let yCount = Math.floor(worldScale.y / blockSize);\n            let zCount = Math.floor(worldScale.z / blockSize);\n\n            let blocks = area.blocks;\n            let index = x * yCount * zCount + y * zCount + z;\n            let block = blocks[index];\n            if (!block) {\n                continue;\n            }\n\n            this._currentLocatedBlock = block;\n\n            break;\n        }\n\n        if (this._lastLocatedBlock === this._currentLocatedBlock) {\n            return;\n        }\n\n        if (!this._currentLocatedBlock) {\n            for (let i = 0; i < renderers.length; i++) {\n                let model = renderers[i] && renderers[i].model;\n                if (model) {\n                    model.enabled = true;\n                }\n            }\n        }\n        else {\n            let block = this._currentLocatedBlock;\n\n            if (this.bakeInstances) {\n                block.bakeInstances();\n                this.instances = block.instances;\n\n                (this.camera.camera as any).instances = this.instances;\n            }\n            else {\n                for (let i = 0; i < renderers.length; i++) {\n                    let model = renderers[i].model;\n                    if (model) {\n                        model.enabled = false;\n                    }\n                }\n                for (let i = 0; i < block.renderers.length; i++) {\n                    let model = block.renderers[i] && block.renderers[i].model;\n                    if (model) {\n                        if (!model.enabled) {\n                            model._uboDirty = true\n                        }\n                        model.enabled = true;\n                    }\n                }\n            }\n\n        }\n\n        this._lastLocatedBlock = this._currentLocatedBlock;\n    }\n\n    update () {\n        this._updateAreas();\n\n        if (this._enabledCulling) {\n            this.calcCulling();\n        }\n\n        if (EDITOR) {\n            if (this._isBaking) {\n                this._bake();\n            }\n            if (this.renderBlocks) {\n                this.debugDraw();\n            }\n        }\n    }\n\n    _isBaking = false;\n    _bakingAreaIndex = 0;\n    _bakingAreaEndIndex = 0;\n    _bakingBlockIndex = new Vec3;\n    _bakingDirections: Vec3[] = [];\n\n    @property\n    _maxDirectionsOneFrame = 10000;\n    @property\n    get maxDirectionsOneFrame () {\n        return this._maxDirectionsOneFrame;\n    }\n    set maxDirectionsOneFrame (v) {\n        this._maxDirectionsOneFrame = v;\n        this._gpuKernelDirty = true;\n    }\n\n    @property\n    _maxModelCount = 10000;\n    @property\n    get maxModelCount () {\n        return this._maxModelCount;\n    }\n    set maxModelCount (v) {\n        this._maxModelCount = v;\n        this._gpuKernelDirty = true;\n    }\n\n    @property\n    _modelRange = new Vec2(0, 100000);\n    @property\n    get modelRange () {\n        return this._modelRange;\n    }\n    set modelRange (v) {\n        this._modelRange = v;\n        this._gpuKernelDirty = true;\n    }\n\n    _gpuKernelDirty = true;\n\n    _startTime = 0;\n\n    _startBake (areaStartIndex = 0, areaEndIndex = Infinity) {\n        if (this._isBaking) {\n            return;\n        }\n\n        this._startTime = Date.now();\n\n        _cornerResults.clear();\n\n        this._isBaking = true;\n        this._bakingAreaIndex = areaStartIndex;\n        this._bakingAreaEndIndex = Math.min(areaEndIndex, this.areas.length);\n        this._bakingBlockIndex = new Vec3;\n\n        this.renderers = this.root!.getComponentsInChildren(MeshRenderer);\n        this.renderers = this.renderers.filter(r => { return r.enabledInHierarchy; });\n        this.renderers.sort((a, b) => {\n            return a.name.localeCompare(b.name)\n        })\n\n        this.models = this.renderers.map(r => r.model!);\n\n        let modelNames = this.renderers.map(r => r.node.name);\n        if (!this.modelNames || !this.modelNames.length) {\n            this.modelNames = modelNames;\n        }\n        else {\n            let oldModelNames = this.modelNames\n            let shouldReIndex = false;\n            for (let i = 0; i < modelNames.length; i++) {\n                if (modelNames[i] !== oldModelNames[i]) {\n                    shouldReIndex = true;\n                }\n            }\n\n            if (shouldReIndex) {\n                this.areas.forEach(a => {\n                    a.blocks.forEach(b => {\n                        let newIndices = []\n                        b.modelIndices.forEach(i => {\n                            let newI = modelNames.indexOf(oldModelNames[i])\n                            if (newI !== -1) {\n                                newIndices.push(newI);\n                            }\n\n                        })\n                        b.modelIndices = newIndices\n                    })\n                })\n                this.modelNames = modelNames\n            }\n\n        }\n\n        let newArray = []\n        for (let i = Math.max(0, this._modelRange.x), l = Math.min(this._modelRange.y, this.models.length); i < l; i++) {\n            newArray.push(this.models[i]);\n        }\n        this.models = newArray;\n        this.models.length = Math.min(this.models.length, this.maxModelCount);\n        this.rendererCount = this.renderers.length;\n\n        for (let i = this._bakingAreaIndex; i < this._bakingAreaEndIndex; i++) {\n            this.areas[i].initBlocks();\n        }\n\n        console.log('--------------------------------');\n\n\n        console.time('create bakingDirections')\n\n        if (this.shouldFastBack) {\n            this._bakingDirections = sphereDirections(this.sphereBakeCount);\n        }\n        else {\n            this._bakingDirections = modelPoints(this.models);\n        }\n\n        console.timeEnd('create bakingDirections')\n\n        if (this.useGpu) {\n            console.time('raycastGpu.createKernel')\n\n            let cornersCount = 1;\n            if (this._cornerType === CornerType.Corner8_Center) {\n                cornersCount = 2 * 2 * 2 + 1\n            }\n\n            if (this._gpuKernelDirty) {\n                let maxDirectionsOneFrame = Math.min(this.maxDirectionsOneFrame, this._bakingDirections.length);\n                raycastGpu.createKernel(this.models, maxDirectionsOneFrame, cornersCount);\n                this._gpuKernelDirty = false;\n            }\n\n            console.timeEnd('raycastGpu.createKernel')\n        }\n    }\n\n    initBlocks () {\n        for (let i = 0; i < this.areas.length; i++) {\n            let area = this.areas[i];\n            area.initBlocks();\n        }\n    }\n\n    _bake () {\n        if (!this.root) {\n            return;\n        }\n\n\n        if (EDITOR) {\n            setTimeout(() => {\n                (window as any).cce.Engine.repaintInEditMode();\n            }, 0)\n        }\n\n        const maxBakeBlockCountPerFrame = 1;\n        let bakedBlockCount = 0;\n\n        for (let i = this._bakingAreaIndex; i < this._bakingAreaEndIndex;) {\n            let area = this.areas[i];\n            let blocks = area.blocks;\n\n            let xCount = area.blockCells.x;\n            let yCount = area.blockCells.y;\n            let zCount = area.blockCells.z;\n\n            let totalCount = area.blockCount;\n\n            for (let x = this._bakingBlockIndex.x; x < xCount;) {\n                for (let y = this._bakingBlockIndex.y; y < yCount;) {\n                    for (let z = this._bakingBlockIndex.z; z < zCount;) {\n                        if (bakedBlockCount >= maxBakeBlockCountPerFrame) {\n                            return;\n                        }\n\n                        let index = x * yCount * zCount + y * zCount + z;\n\n                        let block = blocks[index];\n\n                        if (!block.bakingProcess) {\n                            block.bakingDirections = this._bakingDirections.concat();\n                            block.bakingTotalCount = block.bakingDirections.length;\n                        }\n\n                        console.time('do raycasting')\n\n                        let directions = block.bakingDirections.splice(0, this.maxDirectionsOneFrame);\n                        if (this.shouldFastBack) {\n                            this._raycastDirections(block, directions);\n                        }\n                        else {\n                            this._raycastPoints(block, directions);\n                        }\n\n                        console.timeEnd('do raycasting')\n\n                        let totalProcess = (index + block.bakingProcess) / totalCount;\n                        console.log(`baking process : area - ${i},  block ${index} - ${block.bakingProcess}, total - ${totalProcess}`)\n\n                        let costTime = (Date.now() - this._startTime) / 1000;\n                        let leftTime = (costTime / totalProcess) * (1 - totalProcess);\n                        console.log(`left time : ${leftTime} s`)\n\n                        // recycle\n                        for (let i = 0; i < directions.length; i++) {\n                            Pool.Vec3.put(directions[i]);\n                        }\n\n                        if (block.bakingDirections.length) {\n                            return;\n                        }\n\n                        this._bakingBlockIndex.z = ++z;\n                        bakedBlockCount++;\n                    }\n                    this._bakingBlockIndex.z = 0;\n                    this._bakingBlockIndex.y = ++y;\n                }\n                this._bakingBlockIndex.y = 0;\n                this._bakingBlockIndex.z = 0;\n                this._bakingBlockIndex.x = ++x;\n            }\n\n            this._bakingAreaIndex = ++i;\n            this._bakingBlockIndex.set(0, 0, 0);\n        }\n\n        this._isBaking = false;\n\n        console.log(`bake static culling : ${(Date.now() - this._startTime) / 1000} s`)\n    }\n\n    _raycastDirections (block: CullingBlock, directions: Vec3[]) {\n        let models = this.models;\n\n        _tempRay.o.set(block.center);\n        for (let i = 0; i < directions.length; i++) {\n            _tempRay.d.set(directions[i]);\n            let results = raycast.raycastModels(models, _tempRay, undefined, undefined, true);\n            if (results.length > 0) {\n                let r = results[0].node.getComponent(MeshRenderer)!;\n                if (r && block.renderers.indexOf(r) === -1) {\n                    block.renderers.push(r);\n                }\n            }\n        }\n\n        block.modelIndices = block.renderers.map(r => {\n            return this.models.indexOf(r.model!);\n        })\n    }\n\n    _forEachCorner (block: CullingBlock, func: Function) {\n        let corners: Vec3[] = [block.center];\n        for (let x = -1; x <= 1; x += 2) {\n            for (let y = -1; y <= 1; y += 2) {\n                for (let z = -1; z <= 1; z += 2) {\n                    corners.push(new Vec3(block.center).add3f(block.halfExtents.x * x, block.halfExtents.y * y, block.halfExtents.z * z));\n                }\n            }\n        }\n\n        for (let i = 0; i < corners.length; i++) {\n            func(corners[i]);\n        }\n    }\n\n    _raycastPoints (block: CullingBlock, points: Vec3[]) {\n        let models = this.models;\n\n        let corners: Vec3[] = [block.center];\n        if (this._cornerType === CornerType.Corner8_Center || this._cornerType === CornerType.Seprate_Corner8_Center) {\n            for (let x = -1; x <= 1; x += 2) {\n                for (let y = -1; y <= 1; y += 2) {\n                    for (let z = -1; z <= 1; z += 2) {\n                        corners.push(new Vec3(block.center).add3f(block.halfExtents.x * x, block.halfExtents.y * y, block.halfExtents.z * z));\n                    }\n                }\n            }\n        }\n\n        if (!this.useGpu) {\n            for (let i = 0; i < corners.length; i++) {\n                for (let j = 0; j < points.length; j++) {\n                    _tempRay.o.set(corners[i]);\n                    (_tempRay.d.set(points[j]) as Vec3).subtract(_tempRay.o).normalize();\n\n                    let results = raycast.raycastModels(models, _tempRay, undefined, undefined, true);\n\n                    if (results.length > 0) {\n                        let r = results[0].node.getComponent(MeshRenderer)!;\n                        if (r && block.renderers.indexOf(r) === -1) {\n                            block.renderers.push(r);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (this._cornerType === CornerType.Seprate_Corner8_Center) {\n                for (let i = 0; i < corners.length; i++) {\n                    let corner = corners[i];\n                    let key = `${corner.x}_${corner.y}_${corner.z}`;\n                    let bakedResults = _cornerResults.get(key);\n\n                    let finalResults: renderer.scene.Model[]\n                    if (!bakedResults || !(bakedResults as any)._baked) {\n                        if (!bakedResults) {\n                            bakedResults = [];\n                            _cornerResults.set(key, bakedResults);\n                        }\n                        if (block.bakingProcess >= 1) {\n                            (bakedResults as any)._baked = true;\n                        }\n                        finalResults = raycastGpu.raycastModels(models, [corner], points);\n                        for (let i = 0; i < finalResults.length; i++) {\n                            if (bakedResults!.indexOf(finalResults[i]) === -1) {\n                                bakedResults!.push(finalResults[i]);\n                            }\n                        }\n                    }\n                    else {\n                        finalResults = bakedResults;\n                    }\n                    finalResults.forEach(m => {\n                        let r = m.node.getComponent(MeshRenderer);\n                        if (r && block.renderers.indexOf(r) === -1) {\n                            block.renderers.push(r);\n                        }\n                    })\n                }\n            }\n            else {\n                let finalResults = raycastGpu.raycastModels(models, corners, points);\n                finalResults.forEach(m => {\n                    let r = m.node.getComponent(MeshRenderer);\n                    if (r && block.renderers.indexOf(r) === -1) {\n                        block.renderers.push(r);\n                    }\n                })\n            }\n        }\n\n        block.modelIndices = block.renderers.map(r => {\n            return this.models.indexOf(r.model!);\n        })\n    }\n\n    debugDraw () {\n        let geometryRenderer = getGeometryRenderer();\n        if (!geometryRenderer) {\n            return;\n        }\n\n        let areaColor = new Color(0, 0, 0, 100);\n        let blockColor = new Color(255, 0, 0, 20);\n        let locateBlockColor = new Color(0, 0, 255, 20);\n        let tempMatrix = new Mat4();\n        let identityAABB = new geometry.AABB(0, 0, 0, 0.5, 0.5, 0.5);\n\n        for (let i = 0; i < this.areas.length; i++) {\n            let area = this.areas[i];\n            if (!area.enabledInHierarchy) continue;\n            geometryRenderer.addBoundingBox(identityAABB, areaColor, false, false, undefined, true, area.node.worldMatrix);\n        }\n\n        // this.areas.forEach(area => {\n        //     let blocks = area.blocks;\n        //     for (let i = 0; i < blocks.length; i++) {\n        //         let block = blocks[i];\n\n        //         let tempScale = Pool.Vec3.get().set(block.halfExtents.x * 2, block.halfExtents.y * 2, block.halfExtents.z * 2 * block.bakingProcess);\n        //         tempMatrix.fromRTS(Quat.IDENTITY as Quat, block.center as Vec3, tempScale);\n        //         Pool.Vec3.put(tempScale);\n\n        //         let color = blockColor;\n        //         if (block === this._currentLocatedBlock) {\n        //             color = locateBlockColor;\n        //         }\n\n        //         geometryRenderer.addBoundingBox(identityAABB, color, false, false, undefined, true, tempMatrix);\n\n        //         // if (this.renderRaycast /*&& block === this._currentLocatedBlock*/) {\n        //         //     drawer.type = DrawType.Line;\n        //         //     drawer.matrix.fromRTS(Quat.IDENTITY as Quat, Vec3.ZERO as Vec3, Vec3.ONE as Vec3);\n\n        //         //     let lines: Vec3[][] = []\n        //         //     if (this.shouldFastBack) {\n        //         //         let directions = sphereDirections(this.sphereBakeCount)\n        //         //         for (let i = 0; i < directions.length; i++) {\n        //         //             directions[i].multiplyScalar(this.renderRaycastLength).add(block.center)\n        //         //             lines.push([block.center, directions[i]])\n        //         //         }\n        //         //     }\n        //         //     else {\n        //         //         let corners: Vec3[] = [block.center];\n        //         //         // for (let x = -1; x <= 1; x += 2) {\n        //         //         //     for (let y = -1; y <= 1; y += 2) {\n        //         //         //         for (let z = -1; z <= 1; z += 2) {\n        //         //         //             corners.push(new Vec3(block.center).add3f(block.halfExtents.x * x, block.halfExtents.y * y, block.halfExtents.z * z));\n        //         //         //         }\n        //         //         //     }\n        //         //         // }\n\n        //         //         if (!this.useGpu) {\n        //         //             for (let i = 0; i < corners.length; i++) {\n        //         //                 let points = modelPoints(this.models);\n        //         //                 points.forEach(p => {\n        //         //                     lines.push([corners[i], p])\n        //         //                 })\n        //         //             }\n        //         //         }\n        //         //         else {\n        //         //             // let results = raycastGpu.raycastModels(models, corners, points);\n        //         //             // results.forEach(m => {\n        //         //             //     let r = m.node.getComponent(MeshRenderer);\n        //         //             //     if (r && block.renderers.indexOf(r) === -1) {\n        //         //             //         block.renderers.push(r);\n        //         //             //     }\n        //         //             // })\n        //         //         }\n        //         //     }\n\n        //         //     drawer.line(...lines)\n        //         // }\n        //     }\n        // })\n    }\n}\n","import { _decorator, Component, Node, v3, Vec3 } from 'cc';\nimport { UtilVec3 } from '../../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SteeringBasic')\nexport class SteeringBasic extends Component {\n\n    moveVelocity = v3(0, 0, 0);\n    desiredVelocity = v3(0, 0, 0);\n\n    target:Node | undefined;\n\n\n\n}","import { _decorator, Component, Node, v3, Vec3 } from 'cc';\nimport { UtilVec3 } from '../../util/util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SteeringBehaviors')\nexport class SteeringBehaviors extends Component {\n\n    moveVelocity = v3(0, 0, 0);\n    desiredVelocity = v3(0, 0, 0);\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    Seek(targetPos:Vec3) {\n        UtilVec3.copy(this.desiredVelocity, targetPos);\n        this.desiredVelocity.subtract(this.node.worldPosition);\n        return this.desiredVelocity.subtract(this.moveVelocity);\n\n    }\n}\n\n","import { _decorator, Component, Node, v3, Vec3 } from 'cc';\nimport { UtilVec3 } from '../../util/util';\nimport { SteeringBasic } from './steering-basic';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SteeringSeek')\nexport class SteeringSeek extends Component {\n\n    moveVelocity = v3(0, 0, 0);\n    desiredVelocity = v3(0, 0, 0);\n\n    steeringBasic:SteeringBasic | undefined;\n\n    start() {\n\n        this.steeringBasic = this.getComponent(SteeringBasic)!;\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    SeekToward() {\n        \n    }\n\n    Seek(targetPos:Vec3) {\n        \n        const target = this.steeringBasic?.target!;\n        UtilVec3.copy(this.desiredVelocity, target.position);\n\n        this.desiredVelocity.subtract(this.node.worldPosition);\n        return this.desiredVelocity.subtract(this.moveVelocity);\n    }\n}\n\n","import { _decorator, Camera, Component, Node } from 'cc';\nimport { CameraSetting } from '../../../../extensions/pipeline/pipeline/camera-setting';\nimport { GMath } from './g-math';\nconst { ccclass, property } = _decorator;\n\n@ccclass('StretchedBillboard')\nexport class StretchedBillboard extends Component {\n\n    target:Node|undefined;\n\n    update(deltaTime: number) {\n\n        if(this.target === undefined) {\n            this.target = CameraSetting.main?.camera?.node;\n        }\n\n        if(this.target !== undefined) {\n            const billboardAngle = GMath.StretchedBillboardAngle(this.node!.up, this.node!.worldPosition, this.target!.worldPosition, this.node!.forward);\n\n            if(billboardAngle) {\n                const angle = this.node.eulerAngles;\n                this.node!.setRotationFromEuler(angle.x, angle.y, billboardAngle);\n            } \n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { Singleton } from '../../core/pattern/singleton';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SubstanceCore')\nexport class SubstanceCore extends Singleton {\n\n    public checkNodeType(node:Node):string {\n        for (let substanceType in SubstanceType) {\n            if(node.name.includes(substanceType)) {\n                return substanceType;\n            }\n        }\n        return SubstanceType.GROUND;\n\n    }\n\n}\n\n\nexport enum SubstanceType {\n\n    None = 'none',\n    GROUND = 'ground',\n    METAL = 'metal',\n    WALL = 'wall',\n    WATER = 'water'\n\n}\n","import { Component, director, MeshRenderer, ReflectionProbeType, _decorator } from \"cc\";\n\nconst { ccclass, executeInEditMode, property } = _decorator;\n\n@ccclass('SwitchProbe')\n@executeInEditMode\nexport class SwitchProbe extends Component {\n    @property\n    _useProbe = true;\n    @property\n    get useProbe () {\n        return this._useProbe;\n    }\n    set useProbe (v) {\n        this._useProbe = v;\n\n        let children = this.node.children;\n        for (let i = 0; i < children.length; i++) {\n            children[i].getComponents\n        }\n\n        let mrs = this.node.getComponentsInChildren(MeshRenderer);\n        mrs.forEach(mr => {\n            if (v) {\n                mr.reflectionProbe = ReflectionProbeType.BAKED_CUBEMAP;\n            }\n            else {\n                mr.reflectionProbe = ReflectionProbeType.NONE;\n            }\n        })\n    }\n\n}\n","import { Camera, CCString, game, gfx, Mat4, Material, renderer, rendering, Vec2, Vec4, _decorator } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { CameraSetting } from \"../camera-setting\";\nimport { TAASetting } from \"../components/taa\";\nimport { HrefSetting } from \"../settings/href-setting\";\nimport { Editor } from \"../utils/npm\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { getCameraUniqueID, getRenderArea } from \"../utils/utils\";\nimport { BaseStage } from \"./base-stage\";\nimport { settings } from \"./setting\";\n\nconst { ccclass, property } = _decorator\n\nlet tempVec4 = new Vec4\nconst slotNames = ['TAA_First', 'TAA_Second']\n\n@ccclass('TAAStage')\nexport class TAAStage extends BaseStage {\n    _materialName = 'deferred-taa';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    prevMatViewProj = new Mat4;\n\n    @property({ override: true })\n    name = 'TAAStage'\n\n    checkEnable (): boolean {\n        return this.enable &&\n            globalThis.TAASetting && globalThis.TAASetting.instance && globalThis.TAASetting.instance.enable &&\n            !!HrefSetting.taa;\n    }\n\n    slotName (camera: renderer.scene.Camera, index = 0) {\n        if (!this.checkEnable()) {\n            return this.lastStage.slotName(camera, index);\n        }\n\n        let taa = globalThis.TAASetting.instance;\n\n        if (taa.taaTextureIndex < 0) {\n            return slotNames[0];\n        }\n\n        return slotNames[(taa.taaTextureIndex + 1) % 2];\n    }\n\n    // public onResize () {\n    //     this.taaTextureIndex = -1;\n    //     this.sampleIndex = -1;\n    // }\n\n    firstRender = true;\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        if (!this.checkEnable()) {\n            return;\n        }\n        let taa = globalThis.TAASetting.instance;\n\n        const cameraID = getCameraUniqueID(camera);\n        const area = this.getRenderArea(camera);\n        const width = area.width;\n        const height = area.height;\n\n        passUtils.clearFlag = gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        // material\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== this.material) {\n            material = new renderer.MaterialInstance({\n                parent: this.material\n            })\n            this.materialMap.set(camera, material);\n        }\n\n        passUtils.material = material;\n\n        // material.setProperty('inputViewPort',\n        //     new Vec4(\n        //         width / game.canvas.width, height / game.canvas.height,\n        //         0, 0\n        //     )\n        // );\n\n        let firstRender = this.firstRender\n        if (firstRender) {\n            this.prevMatViewProj.set(camera.matViewProj);\n            this.firstRender = false;\n        }\n        material.setProperty('taaParams1', tempVec4.set(taa.sampleOffset.x, taa.sampleOffset.y, taa.feedback, 0))\n        material.setProperty('taaTextureSize', tempVec4.set(1 / width, 1 / height, 1 / width, 1 / height))\n        material.setProperty('taaPrevViewProj', this.prevMatViewProj);\n        this.prevMatViewProj.set(camera.matViewProj);\n\n        // input output\n        let input0 = this.lastStage.slotName(camera, 0);\n        let historyTexture = slotNames[taa.taaTextureIndex % 2];\n\n        if (firstRender) {\n            historyTexture = input0;\n        }\n\n        let slot0 = this.slotName(camera, 0);\n\n        let posTex = 'gBufferPosition'\n        if (settings.gbufferStage) {\n            posTex = settings.gbufferStage.slotName(camera, 3);\n        }\n\n        passUtils.addRasterPass(width, height, 'DeferredTAA' + (taa.taaTextureIndex < 0 ? -1 : (taa.taaTextureIndex % 2)), `CameraTAAPass${cameraID}`)\n            .setViewport(area.x, area.y, width, height)\n            .setPassInput(input0, 'inputTexture')\n            .setPassInput(posTex, 'posTex')\n            .setPassInput(historyTexture, 'taaPrevTexture')\n            .addRasterView(slot0, gfx.Format.RGBA16F, true, rendering.ResourceResidency.PERSISTENT)\n            .blitScreen(0)\n            .version()\n    }\n}\n\n","import { Component, game, Mat4, Vec2, _decorator } from \"cc\";\n\nconst { ccclass, property, executeInEditMode } = _decorator\n\n\nlet halton8 = [\n    new Vec2(0.5, 1.0 / 3),\n    new Vec2(0.25, 2.0 / 3),\n    new Vec2(0.75, 1.0 / 9),\n    new Vec2(0.125, 4.0 / 9),\n    new Vec2(0.625, 7.0 / 9),\n    new Vec2(0.375, 2.0 / 9),\n    new Vec2(0.875, 5.0 / 9),\n    new Vec2(0.0625, 8.0 / 9),\n]\nhalton8.forEach(v => {\n    v.x -= 0.5;\n    v.y -= 0.5;\n})\n\nlet SampleOffsets = {\n    // 2xMSAA\n    // Pattern docs: http://msdn.microsoft.com/en-us/library/windows/desktop/ff476218(v=vs.85).aspx\n    //   N.\n    //   .S\n    x2: [\n        new Vec2(-4.0 / 16.0, -4.0 / 16.0),\n        new Vec2(4.0 / 16.0, 4.0 / 16.0),\n    ],\n\n    // 3xMSAA\n    //   A..\n    //   ..B\n    //   .C.\n    // Rolling circle pattern (A,B,C).\n    x3: [\n        new Vec2(-2.0 / 3.0, -2.0 / 3.0),\n        new Vec2(2 / 3, 0 / 3),\n        new Vec2(0 / 3, 2 / 3),\n    ],\n\n    // 4xMSAA\n    // Pattern docs: http://msdn.microsoft.com/en-us/library/windows/desktop/ff476218(v=vs.85).aspx\n    //   .N..\n    //   ...E\n    //   W...\n    //   ..S.\n    // Rolling circle pattern (N,E,S,W).\n    x4: [\n        new Vec2(-2 / 16, -6 / 16),\n        new Vec2(6 / 16, -2 / 16),\n        new Vec2(2 / 16, 6 / 16),\n        new Vec2(-6 / 16, 2 / 16),\n    ],\n\n    x5: [\n        // Compressed 4 sample pattern on same vertical and horizontal line (less temporal flicker).\n        // Compressed 1/2 works better than correct 2/3 (reduced temporal flicker).\n        //   . N .\n        //   W . E\n        //   . S .\n        // Rolling circle pattern (N,E,S,W).\n        new Vec2(0, -1 / 2),\n        new Vec2(1 / 2, 0),\n        new Vec2(0, 1 / 2),\n        new Vec2(-1 / 2, 0),\n    ],\n\n    halton8,\n}\n\n\n@ccclass('TAASetting')\n@executeInEditMode\nexport class TAASetting extends Component {\n    static instance: TAASetting | undefined\n\n    @property\n    enable = true\n\n    @property\n    sampleScale = 1;\n    @property\n    feedback = 0.95;\n\n    @property\n    shaowHistoryTexture = false;\n    @property\n    clampHistoryTexture = true;\n\n    @property\n    forceRender = false;\n    @property\n    dirty = false;\n\n    sampleOffset = new Vec2;\n\n    taaTextureIndex = -2;\n    samples = SampleOffsets.halton8;\n    sampleIndex = -1;\n\n    onEnable () {\n        globalThis.TAASetting.instance = this\n    }\n    onDisable () {\n        if (globalThis.TAASetting.instance === this) {\n            globalThis.TAASetting.instance = undefined;\n        }\n    }\n\n    updateSample (width, height) {\n        if (this.dirty || this.forceRender) {\n            this.sampleIndex++;\n            this.taaTextureIndex++;\n            this.dirty = false;\n        }\n\n        let offset = this.samples[this.sampleIndex % this.samples.length];\n\n        if (this.sampleIndex === -1) {\n            offset = Vec2.ZERO;\n        }\n\n        this.sampleOffset.x = offset.x * this.sampleScale / width;\n        this.sampleOffset.y = offset.y * this.sampleScale / height;\n    }\n\n    lateUpdate (dt) {\n        this.updateSample(game.canvas.width, game.canvas.height);\n\n    }\n}\nglobalThis.TAASetting = TAASetting;\n","import { _decorator, Component, Node, input, Input, EventKeyboard, KeyCode, game, director, Scene } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TapPlay')\nexport class TapPlay extends Component {\n\n    start() {\n\n        game.pause();\n\n        input.on(Input.EventType.KEY_UP, (event:EventKeyboard)=>{\n\n            if (event.keyCode === KeyCode.SPACE) {\n                game.resume();\n            }\n\n            if (event.keyCode === KeyCode.KEY_R) {\n                \n            }\n\n        }, this)\n\n    }\n}\n\n","import { Singleton } from \"../pattern/singleton\";\r\n\r\ntype Task<T> = {\r\n    name?: string;\r\n    fun: ()=>Promise<T>;\r\n}\r\n\r\nexport class TaskRuner {\r\n\r\n    private _queue: Task<any>[] = [];\r\n    private _active: number = 0;\r\n\r\n}\r\n","import { _decorator, clamp, Component, EventKeyboard, EventMouse, Input, input, KeyCode, Node, v3, Vec3 } from 'cc';\nimport { ActorMove } from '../logic/actor/actor-move';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestActorMove')\nexport class TestActorMove extends Component {\n\n    @property( {type:ActorMove, tooltip:' Reference Actor Move Slope.'} )\n    actorMove:ActorMove | undefined;\n\n    _dir:Vec3 = v3(0, 0, 0);\n\n    direction_up = 0;\n    direction_down = 0;\n    direction_left = 0;\n    direction_right = 0;\n\n    start() {\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\n\n        input.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\n        input.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n    }\n\n\n    onKeyDown(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.KEY_W || event.keyCode === KeyCode.ARROW_UP) this.direction_up = -1;\n        if (event.keyCode === KeyCode.KEY_S || event.keyCode === KeyCode.ARROW_DOWN) this.direction_down = 1; \n        if (event.keyCode === KeyCode.KEY_A || event.keyCode === KeyCode.ARROW_LEFT) this.direction_left = -1;\n        if (event.keyCode === KeyCode.KEY_D || event.keyCode === KeyCode.ARROW_RIGHT) this.direction_right = 1;\n        if (event.keyCode == KeyCode.SPACE) this.actorMove?.jump();\n        this.onMove(); \n    }\n\n    onKeyUp(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.KEY_W || event.keyCode === KeyCode.ARROW_UP)  this.direction_up = 0;\n        if (event.keyCode === KeyCode.KEY_S || event.keyCode === KeyCode.ARROW_DOWN)  this.direction_down = 0; \n        if (event.keyCode === KeyCode.KEY_A || event.keyCode === KeyCode.ARROW_LEFT) this.direction_left = 0;\n        if (event.keyCode === KeyCode.KEY_D || event.keyCode === KeyCode.ARROW_RIGHT) this.direction_right = 0;\n        this.onMove();\n    }\n\n    onMouseDown(event: EventMouse) {\n        \n    }\n\n    onMouseMove(event: EventMouse) {\n        this.actorMove?.onRotation(event.movementX / 5, event.movementY / 10);\n    }\n\n\n    onMove() {\n        this._dir.x = this.direction_left + this.direction_right;\n        this._dir.z = this.direction_up + this.direction_down;\n        this._dir.y = 0;\n        //console.log('dir:', this._dir);\n        this.actorMove?.moveDirection(this._dir.normalize());\n    }\n\n}\n\n","import { _decorator, Component, EventKeyboard, EventMouse, Input, input, KeyCode, math, Node, RigidBody, v3, Vec3 } from 'cc';\nimport { ActorAnimationGraph } from '../logic/actor/actor-animation-graph';\nimport { Msg } from '../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestAmoyAnimation')\nexport class TestAmoyAnimation extends Component {\n\n    _animationGraph:ActorAnimationGraph | undefined;\n\n    bool_crouch = false;\n\n    bool_iron_sights = false;\n\n    direction_up = 0;\n    direction_down = 0;\n    direction_left = 0;\n    direction_right = 0;\n\n    cameraTargetIndex = 0;\n\n    @property\n    moveSpeedRate = 0.7;\n\n    @property\n    angleSpeedRate = 0.3;\n\n    angleVelocity = v3(0, 0, 0);\n\n    linearVelocity = v3(0, 0, 0);\n    moveSpeed = 1;\n\n    @property(Node)\n    view:Node | undefined;\n\n    @property(RigidBody)\n    targetRigid:RigidBody | undefined;\n\n    start() {\n        this._animationGraph = this.view?.getComponent(ActorAnimationGraph)!;\n        input.on(Input.EventType.KEY_DOWN, this.keyDown, this);\n        input.on(Input.EventType.KEY_UP, this.keyUp, this);\n\n        input.on(Input.EventType.MOUSE_DOWN, this.onMouseDown, this);\n    }\n\n    lateUpdate(deltaTime: number) {\n        this.updateMove();\n    }\n\n    keyDown(event: EventKeyboard) {\n\n        if (event.keyCode === KeyCode.KEY_W || event.keyCode === KeyCode.ARROW_UP) this.direction_up = -1;\n        if (event.keyCode === KeyCode.KEY_S || event.keyCode === KeyCode.ARROW_DOWN) this.direction_down = 1; \n        if (event.keyCode === KeyCode.KEY_A || event.keyCode === KeyCode.ARROW_LEFT) this.direction_left = -1;\n        if (event.keyCode === KeyCode.KEY_D || event.keyCode === KeyCode.ARROW_RIGHT) this.direction_right = 1;\n        \n        if(event.keyCode == KeyCode.KEY_I) {\n            this.bool_iron_sights = this.bool_iron_sights ? false : true;\n            console.log(this.bool_iron_sights);\n            this._animationGraph?.play('bool_iron_sights', this.bool_iron_sights);\n            this.cameraTargetIndex = this.bool_iron_sights? 1 : 0;\n            Msg.emit('msg_change_tps_camera_target', this.cameraTargetIndex);\n        }\n\n        if(event.keyCode == KeyCode.KEY_C) {\n            this.bool_crouch = this.bool_crouch ? false : true;\n            this._animationGraph?.play('bool_crouch', this.bool_crouch);\n            Msg.emit('msg_change_tps_camera_height', this.bool_crouch ? 1 : 1.377);\n        }\n\n        if(event.keyCode == KeyCode.SPACE) {\n            this._animationGraph?.play('trigger_jump', true);\n            this._animationGraph?.setValue('num_jump_speed', 0.8);\n        }\n\n        if(event.keyCode === KeyCode.KEY_D) {\n            this._animationGraph?.play('trigger_draw', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_R) {\n            this._animationGraph?.play('trigger_reload', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_E) {\n            this._animationGraph?.play('trigger_reload_empty', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_H) {\n            this._animationGraph?.play('trigger_hit', true);\n        }\n\n        if (event.keyCode == KeyCode.KEY_Z) {\n\n            if(this.cameraTargetIndex === 1) return;\n\n            this.cameraTargetIndex = this.cameraTargetIndex === 0 ? 2 : 0;\n            \n            Msg.emit('msg_change_tps_camera_target', this.cameraTargetIndex);\n        }\n\n        //this.updateMove();\n\n    }\n\n    onMouseDown(event: EventMouse) {\n        this._animationGraph?.play('trigger_fire', true);\n    }\n\n    keyUp(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.KEY_W || event.keyCode === KeyCode.ARROW_UP)  this.direction_up = 0;\n        if (event.keyCode === KeyCode.KEY_S || event.keyCode === KeyCode.ARROW_DOWN)  this.direction_down = 0; \n        if (event.keyCode === KeyCode.KEY_A || event.keyCode === KeyCode.ARROW_LEFT) this.direction_left = 0;\n        if (event.keyCode === KeyCode.KEY_D || event.keyCode === KeyCode.ARROW_RIGHT) this.direction_right = 0;\n        //this.updateMove();\n    }\n\n    updateMove() {\n\n        this.targetRigid!.getLinearVelocity(this.linearVelocity);\n        this.targetRigid!.getAngularVelocity(this.angleVelocity);\n\n        this.linearVelocity.y = 0;\n        const linearVelocityLength = this.linearVelocity.length();\n\n        const eulerAnglesY = this.targetRigid!.node.eulerAngles.y;\n\n        //rotate y.\n        Vec3.rotateY(this.linearVelocity, this.linearVelocity, Vec3.ZERO, math.toRadian(-eulerAnglesY));\n\n        let num_velocity_x = this.linearVelocity.x;\n        let num_velocity_y = this.linearVelocity.z;\n\n        this.moveSpeed = linearVelocityLength * this.moveSpeedRate;\n\n        // Check rotation.\n        if((this.direction_up + this.direction_left + this.direction_right + this.direction_down) == 0 && Math.abs(this.angleVelocity.y) > 1) {\n            this.moveSpeed = this.angleVelocity.y * this.angleSpeedRate;\n            num_velocity_x = this.angleVelocity.y / 10;\n        }\n        \n        this._animationGraph?.setValue('num_velocity_x', num_velocity_x);\n        this._animationGraph?.setValue('num_velocity_y', -num_velocity_y);\n        this._animationGraph?.setValue('num_move_speed', this.moveSpeed);\n    }\n\n}\n\n","import { _decorator, Component, Node, input, Input, EventKeyboard, KeyCode } from 'cc';\nimport { ActorAnimationGraphGroup } from '../logic/actor/actor-animation-graph-group';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestAnimationGraph')\nexport class TestAnimationGraph extends Component {\n\n    _animationGraph:ActorAnimationGraphGroup | undefined;\n\n    start() {\n\n        const view = this.node.getChildByName('view');\n        this._animationGraph = view.addComponent(ActorAnimationGraphGroup);\n        input.on(Input.EventType.KEY_DOWN, this.keyDown, this);\n\n    }\n\n    keyDown(event: EventKeyboard) {\n\n        if(event.keyCode === KeyCode.KEY_D) {\n            this._animationGraph?.play('trigger_draw', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_F) {\n            this._animationGraph?.play('trigger_fire', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_R) {\n            this._animationGraph?.play('trigger_reload', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_E) {\n            this._animationGraph?.play('trigger_reload_empty', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_H) {\n            this._animationGraph?.play('trigger_holster', true);\n        }\n        \n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('test_camera_debug')\nexport class test_camera_debug extends Component {\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        console.log(this.node.worldPosition);\n    }\n}\n\n","import { _decorator, Component, MeshRenderer } from 'cc';\nimport { DataGameInst } from '../logic/data/data-core';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestColliderMeshSwitch')\nexport class TestColliderMeshSwitch extends Component {\n\n    @property\n    meshRenderState:boolean = false;\n\n    start() {\n        this.meshRenderState = DataGameInst._data.show_collider;\n        console.log(\"meshRenderState:\", this.meshRenderState);\n        const meshRenders = this.getComponentsInChildren(MeshRenderer);\n        for (let i = 0; i < meshRenders.length; i++) {\n            meshRenders[i].enabled = this.meshRenderState;\n        }\n    }\n}\n","import { gfx, Material, renderer, rendering } from \"cc\";\nimport { EDITOR } from \"cc/env\";\nimport { getCameraUniqueID, getLoadOpOfClearFlag, getRenderArea, SRGBToLinear } from \"./utils/utils\";\n\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\n\nexport class GBufferInfo {\n    color!: string;\n    normal!: string;\n    emissive!: string;\n    ds!: string;\n}\n// deferred passes\nexport function buildGBufferPass (camera: renderer.scene.Camera,\n    ppl: rendering.Pipeline) {\n    const cameraID = getCameraUniqueID(camera);\n    const area = getRenderArea(camera, camera.window.width, camera.window.height);\n    const width = area.width;\n    const height = area.height;\n    const gBufferPassRTName = `gBufferPassColorCamera`;\n    const gBufferPassNormal = `gBufferPassNormal`;\n    const gBufferPassEmissive = `gBufferPassEmissive`;\n    const gBufferPassDSName = `gBufferPassDSCamera`;\n    if (!ppl.containsResource(gBufferPassRTName)) {\n        const colFormat = Format.RGBA16F;\n        ppl.addRenderTarget(gBufferPassRTName, colFormat, width, height, ResourceResidency.MANAGED);\n        ppl.addRenderTarget(gBufferPassNormal, colFormat, width, height, ResourceResidency.MANAGED);\n        ppl.addRenderTarget(gBufferPassEmissive, colFormat, width, height, ResourceResidency.MANAGED);\n        ppl.addDepthStencil(gBufferPassDSName, Format.DEPTH_STENCIL, width, height, ResourceResidency.MANAGED);\n    }\n    // gbuffer pass\n    const gBufferPass = ppl.addRasterPass(width, height, 'Geometry');\n    gBufferPass.name = `CameraGBufferPass${cameraID}`;\n    gBufferPass.setViewport(new Viewport(area.x, area.y, area.width, area.height));\n    const rtColor = new Color(0, 0, 0, 0);\n    if (camera.clearFlag & ClearFlagBit.COLOR) {\n        if (ppl.pipelineSceneData.isHDR) {\n            SRGBToLinear(rtColor, camera.clearColor);\n        } else {\n            rtColor.x = camera.clearColor.x;\n            rtColor.y = camera.clearColor.y;\n            rtColor.z = camera.clearColor.z;\n        }\n    }\n    const passColorView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.RENDER_TARGET,\n        LoadOp.CLEAR, StoreOp.STORE,\n        camera.clearFlag,\n        rtColor);\n    const passNormalView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.RENDER_TARGET,\n        LoadOp.CLEAR, StoreOp.STORE,\n        camera.clearFlag,\n        new Color(0, 0, 0, 0));\n    const passEmissiveView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.RENDER_TARGET,\n        LoadOp.CLEAR, StoreOp.STORE,\n        camera.clearFlag,\n        new Color(0, 0, 0, 0));\n    const passDSView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.DEPTH_STENCIL,\n        LoadOp.CLEAR, StoreOp.STORE,\n        camera.clearFlag,\n        new Color(camera.clearDepth, camera.clearStencil, 0, 0));\n    gBufferPass.addRasterView(gBufferPassRTName, passColorView);\n    gBufferPass.addRasterView(gBufferPassNormal, passNormalView);\n    gBufferPass.addRasterView(gBufferPassEmissive, passEmissiveView);\n    gBufferPass.addRasterView(gBufferPassDSName, passDSView);\n    gBufferPass\n        .addQueue(QueueHint.RENDER_OPAQUE)\n        .addSceneOfCamera(camera, new LightInfo(), SceneFlags.OPAQUE_OBJECT | SceneFlags.CUTOUT_OBJECT | SceneFlags.DRAW_INSTANCING);\n    const gBufferInfo = new GBufferInfo();\n    gBufferInfo.color = gBufferPassRTName;\n    gBufferInfo.normal = gBufferPassNormal;\n    gBufferInfo.emissive = gBufferPassEmissive;\n    gBufferInfo.ds = gBufferPassDSName;\n    return gBufferInfo;\n}\n\n\nclass LightingInfo {\n    declare deferredLightingMaterial: Material;\n    private _init () {\n        this.deferredLightingMaterial = new Material();\n        this.deferredLightingMaterial.name = 'builtin-deferred-material';\n        this.deferredLightingMaterial.initialize({\n            effectName: 'pipeline/deferred-lighting',\n            defines: { CC_RECEIVE_SHADOW: 1 },\n        });\n        for (let i = 0; i < this.deferredLightingMaterial.passes.length; ++i) {\n            this.deferredLightingMaterial.passes[i].tryCompile();\n        }\n    }\n    constructor () {\n        this._init();\n    }\n}\n\nlet lightingInfo: LightingInfo | null = null;\nlet clearMat: Material | undefined;\nlet EditorCameras = [\n    'Main Camera',\n    'scene:material-previewcamera',\n    'Scene Gizmo Camera',\n    'Editor UIGizmoCamera'\n]\n\n// deferred lighting pass\nexport function buildLightingPass (camera: renderer.scene.Camera, ppl: rendering.Pipeline, gBuffer: GBufferInfo) {\n    if (!lightingInfo) {\n        lightingInfo = new LightingInfo();\n    }\n    const cameraID = getCameraUniqueID(camera);\n    const cameraName = `Camera${cameraID}`;\n    // const cameraInfo = buildShadowPasses(cameraName, camera, ppl);\n    const area = getRenderArea(camera, camera.window.width, camera.window.height);\n    const width = area.width;\n    const height = area.height;\n\n    const deferredLightingPassRTName = `deferredLightingPassRTName`;\n    const deferredLightingPassDS = `deferredLightingPassDS`;\n    if (!ppl.containsResource(deferredLightingPassRTName)) {\n        ppl.addRenderTarget(deferredLightingPassRTName, Format.RGBA8, width, height, ResourceResidency.MANAGED);\n        ppl.addDepthStencil(deferredLightingPassDS, Format.DEPTH_STENCIL, width, height, ResourceResidency.MANAGED);\n    }\n    // lighting pass\n    const lightingPass = ppl.addRasterPass(width, height, 'Lighting');\n    lightingPass.name = `CameraLightingPass${cameraID}`;\n    lightingPass.setViewport(new Viewport(area.x, area.y, width, height));\n    // for (const dirShadowName of cameraInfo.mainLightShadowNames) {\n    //     if (ppl.containsResource(dirShadowName)) {\n    //         const computeView = new ComputeView();\n    //         lightingPass.addComputeView(dirShadowName, computeView);\n    //     }\n    // }\n    // for (const spotShadowName of cameraInfo.spotLightShadowNames) {\n    //     if (ppl.containsResource(spotShadowName)) {\n    //         const computeView = new ComputeView();\n    //         lightingPass.addComputeView(spotShadowName, computeView);\n    //     }\n    // }\n    if (ppl.containsResource(gBuffer.color)) {\n        const computeView = new ComputeView();\n        computeView.name = 'gbuffer_albedoMap';\n        lightingPass.addComputeView(gBuffer.color, computeView);\n\n        const computeNormalView = new ComputeView();\n        computeNormalView.name = 'gbuffer_normalMap';\n        lightingPass.addComputeView(gBuffer.normal, computeNormalView);\n\n        const computeEmissiveView = new ComputeView();\n        computeEmissiveView.name = 'gbuffer_emissiveMap';\n        lightingPass.addComputeView(gBuffer.emissive, computeEmissiveView);\n\n        const computeDepthView = new ComputeView();\n        computeDepthView.name = 'depth_stencil';\n        lightingPass.addComputeView(gBuffer.ds, computeDepthView);\n    }\n    const lightingClearColor = new Color(0, 0, 0, 0);\n    if (camera.clearFlag & ClearFlagBit.COLOR) {\n        lightingClearColor.x = camera.clearColor.x;\n        lightingClearColor.y = camera.clearColor.y;\n        lightingClearColor.z = camera.clearColor.z;\n    }\n    lightingClearColor.w = 0;\n    const lightingPassView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.RENDER_TARGET,\n        LoadOp.CLEAR, StoreOp.STORE,\n        camera.clearFlag,\n        lightingClearColor);\n    lightingPass.addRasterView(deferredLightingPassRTName, lightingPassView);\n\n    let material = globalThis.pipelineAssets.getMaterial('deferred-lighting') || lightingInfo.deferredLightingMaterial\n    if (EDITOR && EditorCameras.includes(camera.name)) {\n        if (!clearMat) {\n            clearMat = new renderer.MaterialInstance({\n                parent: material,\n            })\n            clearMat.recompileShaders({ CLEAR_LIGHTING: true })\n        }\n        material = clearMat;\n    }\n\n    lightingPass.addQueue(QueueHint.RENDER_TRANSPARENT).addCameraQuad(\n        camera, material, 0,\n        SceneFlags.VOLUMETRIC_LIGHTING,\n    );\n    lightingPass.addQueue(QueueHint.RENDER_TRANSPARENT).addSceneOfCamera(camera, new LightInfo(),\n        SceneFlags.TRANSPARENT_OBJECT | SceneFlags.PLANAR_SHADOW | SceneFlags.GEOMETRY);\n    return { rtName: deferredLightingPassRTName, dsName: deferredLightingPassDS };\n}\n\nclass PostInfo {\n    declare postMaterial: Material;\n    private _init () {\n        this.postMaterial = new Material();\n        this.postMaterial.name = 'builtin-post-process-material';\n\n        this.postMaterial.initialize({\n            effectName: 'pipeline/post-process',\n            defines: {\n                // Anti-aliasing type, currently only fxaa, so 1 means fxaa\n                ANTIALIAS_TYPE: 0,\n            },\n        });\n        for (let i = 0; i < this.postMaterial.passes.length; ++i) {\n            this.postMaterial.passes[i].tryCompile();\n        }\n    }\n    constructor () {\n        this._init();\n    }\n}\n\nlet postInfo: PostInfo | null = null;\n\nexport function buildPostprocessPass (camera: renderer.scene.Camera,\n    ppl: rendering.Pipeline,\n    inputTex: string) {\n    if (!postInfo) {\n        postInfo = new PostInfo();\n    }\n    const cameraID = getCameraUniqueID(camera);\n    const area = getRenderArea(camera, camera.window.width, camera.window.height);\n    const width = area.width;\n    const height = area.height;\n    const postprocessPassRTName = `postprocessPassRTName${cameraID}`;\n    const postprocessPassDS = `postprocessPassDS${cameraID}`;\n    if (!ppl.containsResource(postprocessPassRTName)) {\n        ppl.addRenderTexture(postprocessPassRTName, Format.RGBA8, width, height, camera.window);\n        ppl.addDepthStencil(postprocessPassDS, Format.DEPTH_STENCIL, width, height, ResourceResidency.MANAGED);\n    }\n    ppl.updateRenderWindow(postprocessPassRTName, camera.window);\n    const postprocessPass = ppl.addRasterPass(width, height, 'Postprocess');\n    postprocessPass.name = `CameraPostprocessPass${cameraID}`;\n    postprocessPass.setViewport(new Viewport(area.x, area.y, area.width, area.height));\n    if (ppl.containsResource(inputTex)) {\n        const computeView = new ComputeView();\n        computeView.name = 'outputResultMap';\n        postprocessPass.addComputeView(inputTex, computeView);\n    }\n    const postClearColor = new Color(0, 0, 0, camera.clearColor.w);\n    if (camera.clearFlag & ClearFlagBit.COLOR) {\n        postClearColor.x = camera.clearColor.x;\n        postClearColor.y = camera.clearColor.y;\n        postClearColor.z = camera.clearColor.z;\n    }\n    const postprocessPassView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.RENDER_TARGET,\n        getLoadOpOfClearFlag(camera.clearFlag, AttachmentType.RENDER_TARGET),\n        StoreOp.STORE,\n        camera.clearFlag,\n        postClearColor);\n    const postprocessPassDSView = new RasterView('_',\n        AccessType.WRITE, AttachmentType.DEPTH_STENCIL,\n        getLoadOpOfClearFlag(camera.clearFlag, AttachmentType.DEPTH_STENCIL),\n        StoreOp.STORE,\n        camera.clearFlag,\n        new Color(camera.clearDepth, camera.clearStencil, 0, 0));\n    postprocessPass.addRasterView(postprocessPassRTName, postprocessPassView);\n    postprocessPass.addRasterView(postprocessPassDS, postprocessPassDSView);\n    postprocessPass.addQueue(QueueHint.NONE).addFullscreenQuad(\n        postInfo.postMaterial, 0, SceneFlags.NONE,\n    );\n    postprocessPass.addQueue(QueueHint.RENDER_TRANSPARENT).addSceneOfCamera(camera, new LightInfo(),\n        SceneFlags.UI | SceneFlags.PROFILER);\n    return { rtName: postprocessPassRTName, dsName: postprocessPassDS };\n}\n\nexport function buildDeferred (camera: renderer.scene.Camera, ppl: rendering.Pipeline) {\n    if (!camera.scene) {\n        return;\n    }\n    // GBuffer Pass\n    const gBufferInfo = buildGBufferPass(camera, ppl);\n    // Lighting Pass\n    const lightInfo = buildLightingPass(camera, ppl, gBufferInfo);\n    // Postprocess\n    buildPostprocessPass(camera, ppl, lightInfo.rtName);\n}\n","import { _decorator, Component, geometry, Node, v3 } from 'cc';\nimport { Gizmo, UtilVec3 } from '../core/util/util';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('test_forward')\n@executeInEditMode\nexport class test_forward extends Component {\n\n    onEnable() {\n\n    }\n\n    update(deltaTime: number) {\n        \n        if(EDITOR) {\n            let endPosition = v3(0, 0, 0);\n            UtilVec3.copy(endPosition, this.node.worldPosition);\n            endPosition.add(this.node.forward);\n            Gizmo.drawLine(this.node.worldPosition, endPosition);\n        }\n        \n    }\n}\n\n","import { _decorator, Component, Material, SkinnedMeshRenderer, Vec3, Vec4, v4, v3, clamp01, EventKeyboard, KeyCode, input, Input } from 'cc';\nconst { ccclass, executeInEditMode } = _decorator;\n\n@ccclass('SolderController')\nexport class SolderController extends Component {\n    private materials: Array<Material> = [];\n\n    private directionUniform = v4();\n    private direction: Vec3 = v3();\n\n    private currentPosition = v3(0, 0, 0);\n    private lastPosition = v3(0, 0, 0);\n\n    private t = 0;\n    private xAxis = 0;\n    private zAxis = 0;\n    private speed = 10;\n\n    start () {\n        this.currentPosition = this.node.position.clone();\n        this.lastPosition = this.currentPosition.clone();\n\n        let components = this.node.getComponentsInChildren(SkinnedMeshRenderer);\n        components.forEach(\n            (comp) => {\n                this.materials.push(comp.material);\n            }\n        );\n\n        input.on(\n            Input.EventType.KEY_DOWN,\n            this.onKeyDown,\n            this\n        );\n\n        input.on(\n            Input.EventType.KEY_UP,\n            this.onKeyUp,\n            this\n        );\n    }\n\n    update (dt: number) {\n        this.currentPosition.x += this.speed * dt * this.xAxis;\n        this.currentPosition.z += this.speed * dt * this.zAxis;\n        this.node.setPosition(this.currentPosition);\n\n        if (this.currentPosition.equals(this.lastPosition)) {\n            this.t = 0;\n        }\n\n        this.t += dt;\n        this.t = clamp01(this.t);\n        Vec3.lerp(this.lastPosition, this.lastPosition, this.currentPosition, this.t);\n        Vec3.subtract(this.direction, this.lastPosition, this.currentPosition);\n\n        this.materials.forEach(\n            (material: Material) => {\n                let handle = material.passes[0].getHandle(\"direction\")\n                material.passes[0].getUniform(handle, this.directionUniform);\n                this.directionUniform.set(\n                    this.direction.x,\n                    this.direction.y,\n                    this.direction.z,\n                    this.directionUniform.w,\n                );\n                material.passes[0].setUniform(handle, this.directionUniform);\n            }\n        );\n    }\n\n    private onKeyDown (event: EventKeyboard) {\n        let code = event.keyCode;\n        switch (code) {\n            case KeyCode.KEY_A:\n                this.xAxis = -1;\n                break;\n            case KeyCode.KEY_D:\n                this.xAxis = 1;\n                break;\n            case KeyCode.KEY_W:\n                this.zAxis = -1;\n                break;\n            case KeyCode.KEY_S:\n                this.zAxis = 1;\n                break;\n        }\n    }\n\n    private onKeyUp (event: EventKeyboard) {\n        let code = event.keyCode;\n        switch (code) {\n            case KeyCode.KEY_A:\n                this.xAxis = 0;\n                break;\n            case KeyCode.KEY_D:\n                this.xAxis = 0;\n                break;\n            case KeyCode.KEY_W:\n                this.zAxis = 0;\n                break;\n            case KeyCode.KEY_S:\n                this.zAxis = 0;\n                break;\n        }\n    }\n}","import { _decorator, Component, Node } from 'cc';\nimport { ActorEquipBase } from '../logic/actor/actor-equip-base';\nimport { TestAnimationGraph } from './test-anig';\nconst { ccclass, property } = _decorator;\n\n@ccclass('test_gun_fire')\nexport class test_gun_fire extends Component {\n    start() {\n\n        for(let i = 0 ;i < this.node.children.length; i++) {\n            const child = this.node.children[i];\n            //child.getComponent(ActorEquipBase)!.enabled = false;\n            child.addComponent(TestAnimationGraph);\n        }\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Component, EventKeyboard, input, Input, KeyCode, randomRange, v3, Vec3 } from 'cc';\nimport { Msg } from '../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestGunTracer')\nexport class TestGunTracer extends Component {\n\n    start() {\n        input.on(Input.EventType.KEY_DOWN, this.keyDown, this);\n    }\n\n\n    keyDown(event: EventKeyboard) {\n        if (event.keyCode === KeyCode.KEY_R) {\n            const start = Vec3.ZERO;\n            const end = v3(randomRange(0, 30), 1, randomRange(0, 30));\n            Msg.emit('msg_set_tracer', {start, end});\n        }\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Component, EventKeyboard, Input, input, KeyCode, Node } from 'cc';\nimport { ActorAnimationGraphGroup } from '../logic/actor/actor-animation-graph-group';\nimport { ActorAnimationGraph } from '../logic/actor/actor-animation-graph';\nimport AimControl from '../core/ik/aim-control';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestIk')\nexport class TestIk extends Component {\n\n    @property(Node)\n    anim:Node | undefined;\n\n    @property(Node)\n    targetRoot:Node | undefined;\n\n    @property(Node)\n    ikNode:Node | undefined;\n\n    @property(Node)\n    target:Node | undefined;\n\n    aimControl:AimControl | undefined;\n\n    animationGraph:ActorAnimationGraph | undefined | null;\n\n    targetIndex = 0;\n\n    bool_iron_sights = false;\n    \n\n    start() {\n\n        this.aimControl = this.ikNode?.getComponent(AimControl)!;\n\n        this.animationGraph = this.anim?.getComponent(ActorAnimationGraph);\n\n        input.on(Input.EventType.KEY_DOWN, this.keyDown, this);\n    }\n\n    keyDown(event: EventKeyboard) {\n\n        if(event.keyCode === KeyCode.KEY_I) {\n            this.bool_iron_sights = this.bool_iron_sights ? false : true;\n            this.animationGraph?.play('bool_iron_sights', this.bool_iron_sights);\n            console.log('bool_iron_sights:', this.bool_iron_sights);\n        }\n\n        if (event.keyCode === KeyCode.KEY_F) {\n            this.animationGraph?.play('trigger_fire', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_N) {\n            this.nextTarget();\n        }\n\n        if (event.keyCode === KeyCode.KEY_R) {\n            this.animationGraph!.play('trigger_reload', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_E) {\n            this.animationGraph!.play('trigger_reload_empty', true);\n        }\n\n        if (event.keyCode === KeyCode.KEY_H) {\n            this.animationGraph!.play('trigger_holster', true);\n        }\n\n        if (event.keyCode === KeyCode.SPACE) {\n            this.animationGraph!.play('trigger_jump', true);\n        }\n        \n    }\n\n    nextTarget() {\n        const worldPosition = this.targetRoot!.children[this.targetIndex].getWorldPosition();\n        this.aimControl!.target?.setWorldPosition(worldPosition);\n        this.target?.setWorldPosition(worldPosition);\n        console.log('current target index:', this.targetIndex);\n        this.targetIndex++;\n        if(this.targetIndex >= this.targetRoot!.children.length) this.targetIndex = 0;\n    }\n\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { ActorBrain } from '../../logic/actor/actor-brain';\nconst { ccclass, property } = _decorator;\n\n@ccclass('test_move_target')\nexport class test_move_target extends Component {\n\n    @property( { type:ActorBrain } )\n    brain:ActorBrain | undefined;\n\n    start() {\n\n    }\n\n    lateUpdate(deltaTime: number) {\n\n        this.node.setWorldPosition(this.brain!.targetPosition);\n        \n    }\n}\n\n","import { _decorator, Component, geometry, PhysicsSystem, Node, v3, Color, Vec3, color } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { Gizmo, UtilVec3 } from '../core/util/util';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('TestNormal')\n@executeInEditMode\nexport class TestNormal extends Component {\n\n    direction = v3(0, 0, 0);\n    normal = v3(0, 0, 0);\n    startPos = v3(0, 0, 0);\n\n    @property\n    moveDirection = v3(0, 0, 0);\n\n    ray = new geometry.Ray();\n\n    p0 = v3(0, 0, 0);\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n        if(EDITOR) {\n            this.calculateSlopDirection();\n        }\n        \n    }\n\n    calculateSlopeDirection() {\n        const ray = this.ray;\n        const mask = 0;\n        const distance = 0.4\n\n        const p0 = v3(0, 0, 0);\n        const p1 = v3(0, 0, 0);\n\n        let dir = v3(0, -1, 0);\n\n        const position = this.node.position.clone();\n\n        position.add(dir);\n\n        UtilVec3.copy(ray.o, this.node.position);\n        ray.d = v3(0, -1, 0);\n\n        Gizmo.drawLine(ray.o, position);\n\n        if (PhysicsSystem.instance.raycastClosest(ray, undefined, distance)) {\n            const hit1 = PhysicsSystem.instance.raycastClosestResult;\n            const pos = hit1.hitPoint.clone();\n            const p0 = hit1.hitPoint.clone();\n            console.log(hit1.hitNormal);\n            Gizmo.drawLine(hit1.hitPoint, pos.add(hit1.hitNormal).multiplyScalar(2), Color.RED);\n\n            Gizmo.drawLine(this.node.worldPosition, p0, Color.GREEN);\n            ray.o.z = 0.03;\n            ray.o.x = 0.03\n            const o1 = ray.o.clone();\n            Gizmo.drawLine(ray.o, o1.add(dir));\n            if(PhysicsSystem.instance.raycastClosest(ray, undefined, distance)) {\n                const hit2 = PhysicsSystem.instance.raycastClosestResult;\n                const pos2 = hit2.hitPoint.clone();\n                const p1 = hit2.hitPoint.clone();\n                Gizmo.drawLine(this.node.worldPosition, p1, Color.YELLOW);\n                UtilVec3.copy(this.direction, p1);\n                this.direction.subtract(p0).normalize();\n\n                Vec3.cross(this.normal, p0.subtract(this.node.worldPosition), p1.subtract(this.node.worldPosition))\n\n                const n = v3(0, 0, 0);\n                UtilVec3.copy(n, this.node.worldPosition);\n                n.add(this.normal);\n                Gizmo.drawLine(this.node.worldPosition, n, Color.CYAN);\n            }\n            \n        } \n    }\n\n    calculateSlopNormal() {\n        const ray = this.ray\n        const mask = 0;\n        const distance = 0.4\n\n        const p0 = v3(0, 0, 0);\n        const p1 = v3(0, 0, 0);\n        const p2 = v3(0, 0, 0);\n\n        let dir = v3(0, -1, 0);\n\n        const position = this.node.position.clone();\n\n        position.add(dir);\n\n        UtilVec3.copy(ray.o, this.node.position);\n        ray.d = v3(0, -1, 0);\n\n        Gizmo.drawLine(ray.o, position);\n\n        if (PhysicsSystem.instance.raycastClosest(ray, undefined, distance)) {\n            const hit1 = PhysicsSystem.instance.raycastClosestResult;\n            const p0 = hit1.hitPoint.clone();\n            Gizmo.drawLine(this.node.worldPosition, p0, Color.GREEN);\n            ray.o.z = 0.03;\n            ray.o.x = 0.03\n            const o1 = ray.o.clone();\n\n            if(PhysicsSystem.instance.raycastClosest(ray, undefined, distance)) {\n                const hit2 = PhysicsSystem.instance.raycastClosestResult;\n                Gizmo.drawLine(ray.o, hit2.hitPoint);\n                UtilVec3.copy(p1, hit2.hitPoint);\n                Gizmo.drawLine(this.node.worldPosition, ray.o, Color.YELLOW);\n                //UtilVec3.copy(this.direction, p1);\n                //this.direction.subtract(p0).normalize();\n            }\n            \n\n            ray.o.z = -0.03;\n            ray.o.x = -0.03\n            if(PhysicsSystem.instance.raycastClosest(ray, undefined, distance)) {\n                const hit3 = PhysicsSystem.instance.raycastClosestResult;\n                UtilVec3.copy(p2, hit3.hitPoint);\n                Gizmo.drawLine(ray.o, hit3.hitPoint);\n                Gizmo.drawLine(this.node.worldPosition, ray.o, Color.YELLOW);\n\n                Gizmo.drawLine(p0, p1, Color.RED);\n                Gizmo.drawLine(p0, p2, Color.RED);\n\n                \n                Vec3.cross(this.normal, p1.subtract(p0), p2.subtract(p0));\n\n                const n = v3(0, 0, 0);\n                UtilVec3.copy(n, p0);\n                n.add(this.normal);\n                Gizmo.drawLine(p0, n, Color.RED);\n\n                UtilVec3.copy(this.startPos, p0);\n                \n                \n            }\n            \n        }\n    }\n\n    calculateSlopDirection() {\n\n        const moveLength = this.moveDirection.length();\n\n        console.log(moveLength);\n        \n        if(this.ray === undefined) this.ray = new geometry.Ray();\n\n        UtilVec3.copy(this.ray.o, this.node.worldPosition);\n        UtilVec3.copy(this.direction, this.moveDirection);\n\n        this.ray.d = v3(0, -1, 0);\n        \n        if (PhysicsSystem.instance.raycastClosest(this.ray, undefined, 1)) {\n            const hit1 = PhysicsSystem.instance.raycastClosestResult;\n            UtilVec3.copy(this.p0, hit1.hitPoint);\n            Gizmo.drawLine(this.ray.o, this.p0, Color.YELLOW);\n            this.ray.o.add(this.moveDirection);\n            Gizmo.drawLine(this.p0, this.p0.clone().add(this.moveDirection), Color.YELLOW);\n            if (PhysicsSystem.instance.raycastClosest(this.ray, undefined, 1)) { \n                const hit2 = PhysicsSystem.instance.raycastClosestResult;\n                Gizmo.drawLine(this.ray.o, hit2.hitPoint, Color.GREEN);\n                UtilVec3.copy(this.direction, hit2.hitPoint);\n                this.direction.subtract(this.p0).normalize().multiplyScalar(moveLength);\n                Gizmo.drawLine(this.p0, this.p0.clone().add(this.direction), Color.GREEN);\n            }\n        }\n\n    }\n}","import { _decorator, Component, Node, ReflectionProbe, TextureCube, Material, MeshRenderer, renderer } from 'cc';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('test_reflect')\n@executeInEditMode\nexport class test_reflect extends Component {\n    @property(ReflectionProbe)\n    _probe: ReflectionProbe | undefined;\n    @property(ReflectionProbe)\n    get probe () {\n        return this._probe;\n    }\n    set probe (v) {\n        this._probe = v;\n        this.refresh();\n    }\n\n    @property(Material)\n    _material: Material | undefined\n    @property(Material)\n    get material () {\n        return this._material\n    }\n    set material (v) {\n        this._material = v;\n        this.refresh();\n    }\n\n    refresh () {\n        if (!this.material || !this.probe) {\n            return;\n        }\n        let mr = this.getComponent(MeshRenderer)\n\n        let mat = new renderer.MaterialInstance({ parent: this.material })\n        mat.setProperty('mainTexture', mr.bakeSettings._probeCubemap);\n\n        mr.setMaterialInstance(mat, 0)\n    }\n\n    start () {\n        this.refresh();\n    }\n\n    create () {\n        // let probe = this.probe\n        // probe._createProbe();\n\n        // probe.probe.initBakedTextures()\n        // probe.probe._renderObjects = [];\n        // probe.probe._resetCameraParams();\n        // probe.probe._attachCameraToScene();\n        // probe.probe._needRender = true;\n\n        // let textures = probe.probe.bakedCubeTextures;\n\n        // let cube = new TextureCube()\n        // cube.mipmaps = [{\n        //     front: textures[0].,\n        // }]\n    }\n\n    update (deltaTime: number) {\n\n    }\n}\n\n\n","import { _decorator, Component, Node, RigidBody, v3, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestRigidBodyVector')\nexport class TestRigidBodyVector extends Component {\n\n    @property(RigidBody)\n    rigid:RigidBody | undefined;\n\n    @property(Vec3)\n    velocity:Vec3 = v3(0, 0, 0);\n\n    start() {\n\n    }\n\n    lateUpdate(deltaTime: number) {\n\n        this.node.setWorldPosition(this.rigid!.node.worldPosition);\n        this.rigid!.getLinearVelocity(this.velocity);\n        if(this.velocity.length() > 0.5) {\n            this.velocity.add(this.node.worldPosition);\n            this.node.lookAt(this.velocity);\n        }\n    }\n}\n\n","import { _decorator, Color, Component, Node, Quat, v3, Vec3 } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { Gizmo, UtilVec3 } from '../core/util/util';\nimport { TestNormal } from './test-normal';\nimport { TestSlopeVector } from './test-slope-vector';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('TestSlopeDirection')\n@executeInEditMode\nexport class TestSlopeDirection extends Component {\n\n    @property(TestNormal)\n    playerNode:TestNormal | undefined | null;\n\n    @property(Vec3)\n    moveDirection:Vec3 = v3(0, 0, 0);\n\n    @property(TestSlopeVector)\n    slopeDirection:TestSlopeVector | undefined | null;\n\n    endPosition = v3(0, 0, 0);\n\n    update(deltaTime: number) {\n\n        if(EDITOR) {\n\n            UtilVec3.copy(this.endPosition, this.node.worldPosition);\n\n            this.endPosition.add(this.moveDirection);\n\n            Gizmo.drawLine(this.node.worldPosition, this.endPosition, Color.MAGENTA);\n\n            UtilVec3.copy(this.slopeDirection!.direction, this.moveDirection);\n\n            //const direction = this.playerNode!.direction;\n            //const planeNormal = this.playerNode!.normal;\n            //let project = v3(0, 0, 0);\n            //Vec3.projectOnPlane(project, project, planeNormal);\n\n            UtilVec3.copy(this.endPosition, this.node.worldPosition);\n\n            this.endPosition.add(this.slopeDirection!.vectorSlop);\n\n            Gizmo.drawLine(this.node.worldPosition, this.endPosition, Color.YELLOW);\n\n        }\n        \n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestSlopeMove')\nexport class TestSlopeMove extends Component {\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Color, Component, geometry, Node, PhysicsSystem, v3, Vec3, CCFloat } from 'cc';\nimport { Gizmo, UtilVec3 } from '../core/util/util';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('TestSlopeVector')\n@executeInEditMode\nexport class TestSlopeVector extends Component {\n\n    @property([CCFloat])\n    masks = [];\n\n    @property(CCFloat)\n    distance = 0.5;\n\n    @property(Vec3)\n    direction = v3(0, 0, 1);\n\n    _mask: number = 0;\n    _ray: geometry.Ray = new geometry.Ray();\n    hitPoint = v3(0.5, 0, 0.5);\n\n    @property(Vec3)\n    vectorSlop = v3(0, 0, 0);\n\n\n    start () {\n        for (let i = 0; i < this.masks.length; i++)\n            this._mask = this._mask | 1 << this.masks[i];\n    }\n\n    update (deltaTime: number) {\n\n        if (EDITOR) {\n\n            UtilVec3.copy(this._ray.o, this.direction);\n            this._ray.o.multiplyScalar(0.1);\n            this._ray.o.add(this.node.worldPosition);\n            this._ray.o.y += 0.1;\n            this._ray.d.y = -1;\n            this._ray.d.x = 0;\n            this._ray.d.z = 0;\n            this._mask = 1 << 0;\n\n            if (PhysicsSystem.instance.raycastClosest(this._ray, undefined, this.distance)) {\n                UtilVec3.copy(this.hitPoint, PhysicsSystem.instance.raycastClosestResult.hitPoint);\n                UtilVec3.copy(this.vectorSlop, this.hitPoint);\n                this.vectorSlop.subtract(this.node.worldPosition);\n            } else {\n                UtilVec3.copy(this.hitPoint, Vec3.ZERO);\n                UtilVec3.copy(this.vectorSlop, Vec3.ZERO);\n                console.log('no hit ');\n            }\n\n            Gizmo.drawBox(this._ray.o, v3(0.1, 0.1, 0.1), Color.YELLOW);\n\n            Gizmo.drawLine(this._ray.o, this._ray.d.add(this._ray.o), Color.BLUE);\n\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node, v3, Vec3 } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { UtilVec3 } from '../core/util/util';\nimport { Res } from '../core/res/res';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('TestStairs')\n@executeInEditMode\nexport class TestStairs extends Component {\n\n    @property\n    count = 10;\n\n    @property\n    height = 10;\n\n    @property\n    angle = 45;\n\n    @property(Vec3)\n    vector = v3(0, 0, 0);\n\n    onEnable() {\n\n        if(EDITOR) {\n\n            if(this.node.children.length > 1) return;\n\n            let position = v3(0, 0, 0);\n\n            const board = this.node.children[0];\n\n            UtilVec3.copy(position, board.position);\n\n            for(let i = 10; i < this.count; i++) {\n                position.add(this.vector);\n                const newBoard = Res.instNode(board, this.node, position);\n                newBoard.setScale(board.scale);\n            }\n\n        }\n\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, JsonAsset, Node } from 'cc';\nimport { NavSystem } from '../../logic/navigation/navigation-system';\nimport { ResCache } from '../../core/res/res-cache';\n\nimport * as dataCore from \"../../logic/data/data-core\";\nimport { Level } from '../../logic/level/level';\nimport { Actor } from '../../logic/actor/actor';\nimport { Sound } from '../../core/audio/sound';\nimport { Save } from '../../logic/data/save';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestSteeringInit')\nexport class TestSteeringInit extends Component {\n\n    @property(JsonAsset)\n    jsonAsset:JsonAsset | undefined;\n\n    @property(Node)\n    enemiesNode:Node | undefined;\n\n    //@property( { type:[Actor] } )\n    //actors:Actor[] = [];\n\n    @property( {type : Actor } )\n    player:Actor | undefined;\n\n    start() {\n\n        NavSystem.Init(this.jsonAsset?.json);\n\n        ResCache.Instance.load(()=>{\n\n            const playerNode = this.node.getChildByName('player-tps');\n\n            this.player = playerNode?.getComponent(Actor)!;\n\n            dataCore.Init();\n\n            Save.Instance.init();\n\n            \n\n            // Init player\n            this.player?.init('data-player');\n\n            // Set level player.\n            Level.Instance._player = this.player;\n\n            // Init sound.\n            Sound.init();  \n\n            // Init enemy actors.\n            const enemies = this.enemiesNode?.getComponentsInChildren(Actor)!;\n            for(let i = 0; i < enemies.length; i++) {\n                enemies[i].init('data-enemy_0');\n                enemies[i].isReady = true;\n            }\n\n            Level.Instance.stop = false;\n        });\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Component, math, Node } from 'cc';\nimport { EDITOR } from 'cc/env';\nimport { GMath } from '../core/util/g-math';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('TestStretchedBillboard')\n@executeInEditMode\nexport class TestStretchedBillboard extends Component {\n\n    @property(Node)\n    target:Node | undefined;\n\n    @property(Node)\n    current:Node | undefined;\n\n    @property\n    updateTime:number = 3;\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n\n        if(EDITOR) {\n\n            const billboardAngle = GMath.StretchedBillboardAngle(this.current!.up, this.current!.worldPosition, this.target!.worldPosition, this.current!.forward);\n\n            if(billboardAngle) {\n                const angle = this.node.eulerAngles;\n                this.current!.setRotationFromEuler(angle.x, angle.y, billboardAngle);\n            }\n\n        }\n        \n    }\n\n}\n\n","import { _decorator, Component, Node, instantiate } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('test_taa')\nexport class test_taa extends Component {\n    @property(Node)\n    temp: Node | undefined\n\n    start () {\n        if (!this.temp) return;\n        globalThis.test_taa = this;\n\n    }\n\n    create () {\n        let temp = instantiate(this.temp)!\n        temp.parent = this.node.parent\n        this.node.active = false\n    }\n}\n\n\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('test_ui')\nexport class test_ui extends Component {\n\n    start() {\n\n        console.log(this.node.name, this.node.position, this.node.worldPosition);\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n","import { _decorator, Component, EventTouch, Input, Touch } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TouchCancel')\nexport class TouchCancel extends Component {\n\n    onDisable () {\n\n        const touch = new Touch(0, 0, 0);\n\n        const cancelEvent = new EventTouch([touch], true, Input.EventType.TOUCH_CANCEL);\n\n        cancelEvent.touch = touch;\n\n        this.node.dispatchEvent(cancelEvent);\n\n    }\n\n}\n\n","import { Component, MeshRenderer, ParticleSystem, renderer, _decorator } from \"cc\";\n\nconst { ccclass, executeInEditMode, property } = _decorator;\n\nexport let TransparentDepth = {\n    objects: [] as TransparentDepthObject[]\n}\n\n@ccclass('TransparentDepthObject')\n@executeInEditMode\nexport class TransparentDepthObject extends Component {\n    @property\n    priority = 0;\n\n    model: renderer.scene.Model;\n\n    onEnable () {\n        let mr = this.getComponent(MeshRenderer);\n\n        let model;\n        if (mr) {\n            model = mr.model;\n        }\n\n        let particle = this.getComponent(ParticleSystem);\n        if (particle) {\n            model = particle.processor.getModel();\n        }\n\n        this.model = model;\n\n        if (model) {\n            TransparentDepth.objects.push(this);\n            this.resort();\n        }\n    }\n    onDisable () {\n        let index = TransparentDepth.objects.indexOf(this);\n        if (index !== -1) {\n            TransparentDepth.objects.splice(index, 1);\n            this.resort();\n        }\n    }\n\n    resort () {\n        TransparentDepth.objects.sort((a, b) => {\n            return a.priority - b.priority;\n        })\n    }\n\n}\n","\nexport class UBOBase {\n    static NAME = '';\n    static BINDING = 0;\n    static LAYOUT: gfx.UniformBlock | undefined;\n    static DESCRIPTOR: gfx.DescriptorSetLayoutBinding | undefined;\n\n    static ubo_index = 0;\n    static increaseIndex(count: number) {\n        let ret = this.ubo_index;\n        this.ubo_index += count;\n        return ret;\n    }\n\n    static get COUNT() {\n        return this.ubo_index;\n    };\n    static get SIZE() {\n        return this.COUNT * 4;\n    }\n}\n\n\n// import { builtinResMgr, Director, director, ForwardPipeline, Game, game, gfx, pipeline, RenderTexture, sys, Texture2D, TextureCube } from \"cc\";\n\n// const { PipelineGlobalBindings, globalDescriptorSetLayout, bindingMappingInfo } = pipeline;\n\n// let BindingStart = PipelineGlobalBindings.COUNT;\n// let BindingIndex = 0;\n\n\n// // UBOCustomGlobal\n// export class UBOCustomGlobal extends UBOBase {\n//     /////////////////// water sdf /////////////////\n//     static water_sdf = this.increaseIndex(4);        // xy: range, z: uv scale\n//     static water_sdf2 = this.increaseIndex(4);        // xy: sdf center\n//     /////////////////// water  /////////////////\n//     static water = this.increaseIndex(4);        // x: water height\n//     /////////////////// actor  /////////////////\n//     static actor_pos = this.increaseIndex(4);\n//     static actor_proj_pos = this.increaseIndex(4);\n//     static actor_view_pos = this.increaseIndex(4);\n//     /////////////////// render setting  /////////////////\n//     static render_setting = this.increaseIndex(4);\n//     /////////////////// sky  /////////////////\n//     static sky_camera_pos = this.increaseIndex(4);\n//     /////////////////// screen  /////////////////\n//     static window_size = this.increaseIndex(4);\n\n//     //\n//     static readonly NAME = 'CCCustomGlobal';\n//     static readonly BINDING = BindingStart + BindingIndex++;\n//     static readonly DESCRIPTOR = new gfx.DescriptorSetLayoutBinding(this.BINDING, gfx.DescriptorType.UNIFORM_BUFFER, 1, gfx.ShaderStageFlagBit.ALL);\n\n//     static readonly LAYOUT = new gfx.UniformBlock(pipeline.SetIndex.GLOBAL, this.BINDING, this.NAME, [\n//         /////////////////// global /////////////////\n//         new gfx.Uniform('cc_water_sdf', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_water_sdf2', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_water', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_actor_pos', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_actor_proj_pos', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_actor_view_pos', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_render_setting', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_sky_camera_pos', gfx.Type.FLOAT4, 1),\n//         new gfx.Uniform('cc_window_size', gfx.Type.FLOAT4, 1),\n//     ], 1)\n// }\n\n\n// export function registerUBO (ubo: typeof UBOBase) {\n//     globalDescriptorSetLayout.layouts[ubo.NAME] = ubo.LAYOUT;\n//     globalDescriptorSetLayout.bindings[ubo.BINDING] = ubo.DESCRIPTOR;\n\n//     if (director.root) {\n//         director.root.pipeline.descriptorSetLayout.bindings[ubo.BINDING] = ubo.DESCRIPTOR;\n//         director.root.pipeline.descriptorSetLayout.bindingIndices[ubo.BINDING] = ubo.BINDING;\n//         director.root.pipeline.descriptorSetLayout.descriptorIndices[ubo.BINDING] = ubo.BINDING;\n//     }\n// }\n\n// export function registerTexture (name: string, type: gfx.Type, binding: number) {\n//     try {\n//         const UNIFORM_LAYOUT = new gfx.UniformSamplerTexture(pipeline.SetIndex.GLOBAL, binding, name, type, 1);\n//         const UNIFORM_DESCRIPTOR = new gfx.DescriptorSetLayoutBinding(binding, gfx.DescriptorType.SAMPLER_TEXTURE, 1, gfx.ShaderStageFlagBit.FRAGMENT);\n\n//         globalDescriptorSetLayout.layouts[name] = UNIFORM_LAYOUT;\n//         globalDescriptorSetLayout.bindings[binding] = UNIFORM_DESCRIPTOR;\n\n//         // director.root.pipeline.descriptorSetLayout.bindings[binding] = UNIFORM_DESCRIPTOR;\n//         // director.root.pipeline.descriptorSetLayout.bindingIndices[binding] = binding;\n//         // director.root.pipeline.descriptorSetLayout.descriptorIndices[binding] = binding;\n\n//         // bindingMappingInfo.samplerOffsets[1]++;\n//         // bindingMappingInfo.samplerOffsets[2]++;\n//     }\n//     catch (err) {\n//         console.error(err)\n//     }\n\n//     return binding;\n// }\n\n// export let UBOCustomGlobalBuffer: gfx.Buffer | null = null;\n// export const UBOCustomGlobalBufferArray = new Float32Array(UBOCustomGlobal.COUNT);\n\n\n// // ssao\n// export const UNIFORM_SSAO_BINDING = BindingStart + BindingIndex++;\n// // scene depth\n// export const UNIFORM_SCENE_DEPTH_BINDING = BindingStart + BindingIndex++;\n// // scene color\n// export const UNIFORM_SCENE_COLOR_BINDING = BindingStart + BindingIndex++;\n// // water sdf\n// export const UNIFORM_WATER_SDF_BINDING = BindingStart + BindingIndex++;\n// // grass texture\n// export const UNIFORM_GRASS_BINDING = BindingStart + BindingIndex++;\n\n// export function bindTexture (binding: number, texture: Texture2D | TextureCube | RenderTexture, descriptorSet?: gfx.DescriptorSet) {\n//     const pipeline = director.root!.pipeline as ForwardPipeline;\n//     descriptorSet = descriptorSet || pipeline.descriptorSet;\n//     descriptorSet.bindSampler(binding, texture.getGFXSampler());\n//     descriptorSet.bindTexture(binding, texture.getGFXTexture()!);\n// }\n// export function bindGFXTexture (binding: number, texture: gfx.Texture, descriptorSet?: gfx.DescriptorSet, sampler?: gfx.Sampler) {\n//     const pipeline = director.root!.pipeline as ForwardPipeline;\n//     descriptorSet = descriptorSet || pipeline.descriptorSet;\n//     sampler = sampler || director.root.pipeline.globalDSManager.linearSampler;\n//     descriptorSet.bindTexture(binding, texture);\n//     descriptorSet.bindSampler(binding, sampler);\n// }\n\n// export function getOrCreateBuffer (ubo: typeof UBOBase) {\n//     let pipeline = director.root!.pipeline as ForwardPipeline;\n//     let device = pipeline.device;\n//     let buffer = pipeline.descriptorSet.getBuffer(ubo.BINDING);\n//     if (!buffer) {\n//         buffer = device.createBuffer(new gfx.BufferInfo(\n//             gfx.BufferUsageBit.UNIFORM | gfx.BufferUsageBit.TRANSFER_DST,\n//             gfx.MemoryUsageBit.HOST | gfx.MemoryUsageBit.DEVICE,\n//             ubo.SIZE,\n//         ));\n//         pipeline.descriptorSet.bindBuffer(ubo.BINDING, buffer);\n//     }\n//     return buffer;\n// }\n\n// export function resetUBO () {\n//     registerUBO(UBOCustomGlobal);\n\n//     registerTexture('cc_ssao_map', gfx.Type.SAMPLER2D, UNIFORM_SSAO_BINDING);\n//     registerTexture('cc_scene_depth', gfx.Type.SAMPLER2D, UNIFORM_SCENE_DEPTH_BINDING);\n//     registerTexture('cc_scene_color', gfx.Type.SAMPLER2D, UNIFORM_SCENE_COLOR_BINDING);\n//     registerTexture('cc_water_sdf_map', gfx.Type.SAMPLER2D, UNIFORM_WATER_SDF_BINDING);\n//     registerTexture('cc_grass_map', gfx.Type.SAMPLER2D, UNIFORM_GRASS_BINDING);\n\n//     let pipAny = director.root.pipeline as any;\n//     let pipForward = director.root.pipeline as ForwardPipeline;\n//     if (pipAny.globalDSManager.regenLayout) {\n//         pipAny.globalDSManager.regenLayout();\n\n//         pipAny._descriptorSet = pipAny.globalDSManager.globalDescriptorSet;\n//         pipForward.pipelineUBO.activate(pipForward.device, pipForward);\n\n//     }\n\n//     // ubo\n//     UBOCustomGlobalBuffer = getOrCreateBuffer(UBOCustomGlobal);\n//     UBOCustomGlobalBuffer.update(UBOCustomGlobalBufferArray);\n\n//     // texture\n//     const black = builtinResMgr.get('black-texture') as Texture2D;\n//     const white = builtinResMgr.get('white-texture') as Texture2D;\n//     const defaultTex = builtinResMgr.get<Texture2D>('default-texture');\n\n//     bindTexture(UNIFORM_SSAO_BINDING, black);\n//     bindTexture(UNIFORM_SCENE_DEPTH_BINDING, white);\n//     bindTexture(UNIFORM_SCENE_COLOR_BINDING, black);\n//     bindTexture(UNIFORM_WATER_SDF_BINDING, black);\n//     bindTexture(UNIFORM_GRASS_BINDING, black);\n\n\n//     // 需要重新绑定 sampler\n//     // 华为 p40 上必须绑定为 point filter\n//     let sampler = pipForward.globalDSManager.linearSampler\n//     if (sys.isMobile) {\n//         sampler = pipForward.globalDSManager.pointSampler\n//     }\n//     pipForward.descriptorSet.bindSampler(pipeline.UNIFORM_SHADOWMAP_BINDING, sampler)\n//     pipForward.descriptorSet.bindTexture(pipeline.UNIFORM_SHADOWMAP_BINDING, defaultTex.getGFXTexture())\n\n//     // bindTexture(pipeline.UNIFORM_SHADOWMAP_BINDING, defaultTex);\n// }\n\n// game.on(Game.EVENT_GAME_INITED, () => {\n//     resetUBO();\n// });\n","import { _decorator, Component, Node, SpriteComponent, v3 } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIAimRange')\nexport class UIAimRange extends Component {\n\n    sprite:SpriteComponent | undefined | null;\n\n    dirs = [[1,0],[0,1],[-1,0],[0,-1]];\n\n    baseSize = 40;\n\n    start() {\n        this.sprite = this.getComponent(SpriteComponent);\n\n        if (this.sprite === undefined) {\n            throw new Error(`${this.node.name} node UIAimRange can not find sprite component.`);\n        }\n\n        Msg.bind('msg_update_aim', this.updateAim, this);\n        this.updateAim(0);\n    }\n  \n    updateAim(size:number) {\n        const currentSize = size * this.baseSize;\n        for(let i = 0; i < this.node.children.length; i++) {\n            const child = this.node.children[i];\n            const dir = this.dirs[i];\n            child.setPosition(dir[0] * currentSize, dir[1] * currentSize, 0);\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node, animation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIAnimation')\nexport class ui_animation extends Component {\n\n    _graph: animation.AnimationController | undefined | null;\n\n    onEnable () {\n        this._graph = this.getComponent(animation.AnimationController);\n        \n        if (this._graph === null) {\n            throw new Error(`${this.node.name} node can not find AnimationController.`);\n        }\n\n        this.node.on('set_anim', this.play, this);\n    }\n\n    play (key: string, value: boolean | number) {\n        this._graph!.setValue(key, value);\n    }\n}\n\n","import { _decorator, Component, Node, Color, Sprite, SpriteComponent, math, CCFloat } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UiAutoHidden')\nexport class UiAutoHidden extends Component {\n    _color_a = 0;\n\n    _color: Color = new Color(255, 255, 255, 0);\n\n    @property(CCFloat)\n    smooth: number = 5;\n\n    @property(CCFloat)\n    wait: number = 3;\n\n    _sprite: Sprite;\n    _wait: number = 3;\n\n    __preload () {\n\n        this._sprite = this.getComponent(SpriteComponent);\n        this._sprite.color = this._color;\n\n    }\n\n    onEnable () {\n        this.setDisplay(255);\n    }\n\n    setDisplay (value: number) {\n\n        if (value === 255) {\n            this._color.a = value;\n            this._sprite.color = this._color;\n            this._color_a = 0;\n        }\n\n        this._wait = this.wait;\n    }\n\n    update (deltaTime: number) {\n\n        this._wait -= deltaTime;\n        if (this._wait > 0) return;\n\n        this._color.a = math.lerp(this._color.a, this._color_a, deltaTime * this.smooth);\n        this._sprite.color = this._color;\n\n        if (this._color.a <= 0.01) {\n            this.node.active = false;\n        }\n\n    }\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport {\n    _decorator, Node, Button, Toggle, EditBox,\n    Label, Sprite, Slider, math, SpriteFrame, v3, v2, Vec2,\n} from 'cc';\nimport { GM } from '../../gm/gm';\nimport { BagItem } from '../../logic/actor/actor-bag';\nimport { Bind } from '../../logic/data/bind';\nimport { Level } from '../../logic/level/level';\nimport { Sound } from '../audio/sound';\nimport { Local } from '../localization/local';\nimport { Msg } from '../msg/msg';\nimport { Res } from '../res/res';\nimport { ResCache } from '../res/res-cache';\nimport { Queue } from '../util/data-structure';\nimport { GMath } from '../util/g-math';\nimport { UtilNode, UtilVec3 } from '../util/util';\nimport { FilSmooth } from './fil-smooth';\nimport { DataGameInst } from '../../logic/data/data-core';\nimport { LocalLabel } from '../localization/local-label';\n\nexport class UIBase {\n\n    public node: Node;\n\n    public isOn = false;\n\n    public _map: UICom[] = Object.create(null);\n\n    constructor (node: Node) {\n        this.node = node;\n        this._map = BindUI.get(this.node);\n    }\n\n    public refresh (): void {\n        if (!this.isOn) return;\n        for (let i = 0; i < this._map.length; i++)\n            this._map[i].refresh();\n    }\n\n    public on (): void {\n        this.isOn = true;\n        for (let i = 0; i < this._map.length; i++)\n            this._map[i].on();\n        this.node.active = true;\n    }\n\n    public off (): void {\n        this.isOn = false;\n        for (let i = 0; i < this._map.length; i++)\n            this._map[i].off();\n        this.node.active = false;\n    }\n\n    public destroy (): void { }\n}\n\nexport class UICom {\n\n    protected _node: Node;\n\n    constructor (node: Node) {\n        this._node = node;\n    }\n\n    public on (): void { }\n\n    public off (): void { }\n\n    public refresh (): void { }\n\n}\n\n\nexport class BindUI {\n\n    // User interface binding mapping.\n    private static _map: { [com: string]: (node: Node) => UICom } = {};\n\n    /**\n     * Initialize the user interface binder.\n     */\n    public static init () {\n\n        // Bind button game object node.\n        this._map['btn'] = (node: Node) => new BtnBase(node);\n\n        // Bind label game object node.\n        this._map['txt'] = (node: Node) => new TxtBase(node);\n\n        // Bind group game object node.\n        this._map['grp'] = (node: Node) => new GrpBase(node);\n\n        // Bind sprite game object node.\n        this._map['spr'] = (node: Node) => new SprBase(node);\n\n        // Bind toggle game object node.\n        this._map['tgl'] = (node: Node) => new TglBase(node);\n\n        // Bind group game manager object node.\n        this._map['grp_gm'] = (node: Node) => new GrpGM(node);\n\n        // Bind slider game object node.\n        this._map['sli'] = (node: Node) => new SliBase(node);\n\n        // Bind fill sprite game object node.\n        this._map['fil'] = (node: Node) => new FilBase(node);\n\n        // Bind group Picked Tips game object node.\n        this._map['grp_picked_tips'] = (node: Node) => new GrpPickedTips(node);\n\n        // Bind group select equips game object node.\n        this._map['grp_select_equips'] = (node: Node) => new GrpSelectEquips(node);\n\n        // Bind group equip info game object node.\n        this._map['grp_equip_info'] = (node: Node) => new GrpEquipInfo(node);\n\n        // Bind group bag game object node.\n        this._map['grp_bag'] = (node: Node) => new GrpBag(node);\n\n        // Bind group map game object node.\n        this._map['grp_map'] = (node: Node) => new GrpMap(node);\n\n    }\n\n    /**\n     * This method is used to detect and bind the nodes of the user interface.\n     * @param node Binding nodes need to be detected.\n     * @returns Array of components that have been bound.\n     */\n    public static get (node: Node): UICom[] {\n\n        var children = UtilNode.getChildren(node);\n        var comList: UICom[] = [];\n\n        for (let i = 0; i < children.length; i++) {\n            const tempi = children[i];\n\n            // Bind local key.\n            if (tempi.name.includes('local_')) {\n                tempi.addComponent(LocalLabel);\n            }\n\n            if (this._map[tempi.name]) {\n                // Bind key\n                const key = tempi.name;\n                const com = this._map[key];\n                if (com !== undefined) {\n                    comList.push(this._map[key](tempi));\n                    continue;\n                }\n            }\n            if (Bind.Instance.hasBind(tempi.name)) {\n                // Bind type\n                const type = tempi.name.slice(0, 3);\n                const comType = this._map[type];\n                if (comType) {\n                    comList.push(comType(tempi));\n                }\n            }\n        }\n\n        return comList;\n    }\n\n}\n\nexport class BtnBase extends UICom {\n    private _name: string = '';\n    private _btn: Button | null | undefined;\n    constructor (node: Node) {\n        super(node);\n        let self = this;\n        this._name = node.name;\n        this._btn = self._node?.getComponent(Button);\n        this._node?.on(Button.EventType.CLICK, () => {\n            Bind.Instance.on(self._name);\n            Sound.on('sfx_click');\n        }, this);\n    }\n}\n\nexport class TxtBase extends UICom {\n    text: Label;\n    constructor (node: Node) {\n        super(node);\n        this.text = UtilNode.getComponent(this._node, Label);\n        this.text.string = Bind.Instance.get(this._node?.name);\n    }\n\n    public on (): void {\n        super.on();\n        this.refresh();\n    }\n\n    public refresh (): void {\n        super.refresh();\n        this.text!.string = Bind.Instance.get(this._node!.name);\n    }\n}\n\nexport class SliBase extends UICom {\n    slider: Slider;\n    fill: Sprite;\n    constructor (node: Node) {\n        super(node);\n        this.slider = UtilNode.getComponent(this._node, Slider);\n        this.fill = UtilNode.getChildComponent(this._node, 'fill', Sprite);\n        if (this.fill.type !== Sprite.Type.FILLED) throw new Error(`${this._node.name} node Sprite not set Sprite.Type.FILLED`);\n        var defaultValue = Bind.Instance.get(this._node.name);\n        this.slider.progress = defaultValue;\n        this.fill!.fillRange = defaultValue;\n        this.slider?.node.on('slide', () => {\n            this.fill!.fillRange = GMath.range(1, 0, this.slider!.progress);\n            Msg.emit(this._node.name, this.slider?.progress);\n        }, this);\n    }\n\n    public on (): void {\n        super.on();\n        var defaultValue = Bind.Instance.get(this._node.name);\n        this.slider!.progress = defaultValue;\n        this.fill!.fillRange = defaultValue;\n    }\n}\n\nexport class FilBase extends UICom {\n    fil_value: Sprite;\n    fil_smooth: FilSmooth;\n    constructor (node: Node) {\n        super(node);\n        this.fil_value = UtilNode.getComponent(this._node, Sprite);\n        this.fil_value.fillRange = 0;\n        this.fil_smooth = this._node.addComponent(FilSmooth);\n        Msg.on(this._node.name, (value: number) => {\n            this.fil_smooth.setValue(value);\n        });\n    }\n\n    public on (): void {\n        this.fil_value!.fillRange = 0;\n    }\n}\n\nexport class SprBase extends UICom {\n    sprite: Sprite;\n    constructor (node: Node) {\n        super(node);\n        this.sprite = UtilNode.getComponent(this._node, Sprite);\n        Msg.on(this._node.name, (value: SpriteFrame) => {\n            this.sprite!.spriteFrame = value;\n        })\n    }\n\n    public on (): void {\n        super.on();\n        const src = Bind.Instance.get(this._node.name);\n        this.sprite.spriteFrame = src;\n    }\n}\n\nexport class GrpBase extends UICom {\n    constructor (node: Node) {\n        super(node);\n    }\n}\n\nexport class GrpGM extends GrpBase {\n    btn_gm: Node;\n    inp_gm: EditBox;\n    constructor (node: Node) {\n        super(node);\n        this.btn_gm = UtilNode.getChildByName(this._node, 'btn_gm');\n        this.inp_gm = UtilNode.getChildComponent(this._node, 'inp_gm', EditBox);\n        this.btn_gm!.on(Button.EventType.CLICK, () => {\n            GM.run(this.inp_gm!.string);\n        })\n    }\n}\n\nexport class TglBase extends UICom {\n    private _toggle: Toggle;\n    constructor (node: Node) {\n        super(node);\n        this._toggle = UtilNode.getComponent(this._node, Toggle);\n        this._node.on(Toggle.EventType.TOGGLE, () => {\n\n            Bind.Instance.on(this._node.name);\n        })\n    }\n}\n\nexport class GrpSelectEquips extends UICom {\n\n    list: Array<GrpSelectItem>;\n    img_select_highlight: Node;\n    _curIndex = -1;\n\n    constructor (node: Node) {\n        super(node);\n        //Init circle items.\n        const count = DataGameInst._data.count_bag_count;\n        this.list = new Array<GrpSelectItem>(count);\n        const angle = 360 / count;\n        this.img_select_highlight = UtilNode.getChildByName(this._node, 'img_select_highlight');\n        this.img_select_highlight.setPosition(100000, 0, 0);\n        const item = UtilNode.getChildByName(this._node, 'img_items');\n        const radius = item.position.x;\n        const offset = angle / 2;\n        const V2FORWARD = v2(1, 0);\n\n        const getPosFromAngle = (angle: number) => {\n            const x = Math.cos(angle) * radius;\n            const y = Math.sin(angle) * radius;\n            return { x: x, y: y };\n        }\n\n        for (let i = 0; i < count; i++) {\n            const currentAngle = angle * i + offset;\n            const iAngle = math.toRadian(currentAngle);\n            const pos = getPosFromAngle(iAngle);\n            const newItem = Res.instNode(item, this._node, v3(pos.x, pos.y, 0));\n            this.list[i] = new GrpSelectItem(newItem, currentAngle - 90);\n        }\n\n        item.active = false;\n\n        Msg.on('msg_select_equip', (dir: Vec2) => {\n\n            //if (dir.length() <= DataGameInst._data.sensitivity_select_weapon) return;\n\n            let curAngle = math.toDegree(Vec2.angle(dir, V2FORWARD));\n            const projOrigin = v2(0, 1);\n            const dot = Vec2.dot(projOrigin, dir);\n\n            if (dot < 0) curAngle = 360 - curAngle;\n            this._curIndex = Math.round(curAngle / angle);\n\n            if (this._curIndex >= DataGameInst._data.count_bag_count) {\n                //console.error(` Calculate equip error current index: ${this._curIndex}, current Angle: ${curAngle}, dir: ${dir}`);\n                this._curIndex = DataGameInst._data.count_bag_count - 1;\n            }\n\n            const selectAngle = math.toRadian(this._curIndex * angle + offset)\n            const pos = getPosFromAngle(selectAngle);\n            this.img_select_highlight!.setPosition(pos.x, pos.y, 0);\n            this.img_select_highlight.setRotationFromEuler(0, 0, this.list[this._curIndex]._angle);\n\n        })\n    }\n\n    public on (): void {\n        const _player = Level.Instance._player;\n        if (!_player) return;\n        // set equip info.\n        const data = _player._data.items;\n        const itemsName = _player._data.equipment_name_list;\n        for (let i = 0; i < this.list.length; i++) {\n            const itemName = itemsName[i];\n            const itemObj = this.list[i];\n            const hasItem = itemName.length > 0;\n            itemObj.setDisplay(hasItem);\n            if (hasItem) {\n                const item = data[itemName];\n                itemObj.setInfo(item);\n            }\n        }\n    }\n\n    public off (): void {\n        // off ui panel then.\n        if (Level.Instance._player)\n            Level.Instance._player.onEquip(this._curIndex);\n    }\n\n}\n\nclass GrpSelectItem {\n    txt_nun: Label;\n    img_icon: Sprite;\n    _node: Node;\n    _angle: number;\n    constructor (node: Node, angle: number) {\n        this._angle = angle;\n        this._node = node;\n        const img_bg = UtilNode.getChildByName(this._node, 'img_bg');\n        img_bg.setRotationFromEuler(0, 0, angle);\n        this.txt_nun = UtilNode.getChildComponent(this._node, 'txt_num', Label);\n        this.img_icon = UtilNode.getChildComponent(this._node, 'img_icon', Sprite);\n    }\n\n    setDisplay (isShow: boolean) {\n        this.txt_nun!.node.active = isShow;\n        this.img_icon!.node.active = isShow;\n    }\n\n    setInfo (item: BagItem) {\n        this.txt_nun!.string = item.count.toString();\n        this.img_icon!.spriteFrame = ResCache.Instance.getSprite(`img_icon_${item.name}`);\n    }\n}\n\nexport class GrpEquipInfo extends UICom {\n\n    txt_equip_info: Label | undefined | null;\n\n    constructor (node: Node) {\n        super(node);\n        this.txt_equip_info = UtilNode.getChildComponent(this._node, 'txt_equip_info', Label);\n        Msg.on('msg_update_equip_info', () => {\n            const _player = Level.Instance._player;\n            if (!_player) return;\n            const items = _player._data.items;\n            const equipment_name_list = _player._data.equipment_name_list;\n            const current_equipment_index = _player._data.current_equipment_index;\n            const hasHighLight = current_equipment_index !== -1;\n            if (hasHighLight) {\n                // Get current data.\n                const itemName = equipment_name_list[current_equipment_index];\n                const itemData = items[itemName];\n                if (itemName !== '') {\n                    const isShow = itemData.data.bullet_count > 1;\n                    Msg.emit('msg_grp_equip_info', isShow ? 255 : 0);\n                    if (isShow) {\n                        let showNum = itemData.bulletCount;\n                        if (showNum < 0) showNum = 0;\n                        this.txt_equip_info!.string = `${Local.Instance.get('reload')}\\n(${showNum}/${_player.bulletBox})`;\n                    }\n                }\n            }\n        })\n    }\n}\n\nexport class GrpBag extends UICom {\n    list: Array<GrpBagItem>;\n    img_highlight: Node;\n    constructor (node: Node) {\n        super(node);\n        this.img_highlight = UtilNode.getChildByName(this._node, 'img_highlight');\n        if (this.img_highlight == undefined && this.img_highlight === null) throw new Error(`${this._node.name}`)\n        const count = DataGameInst._data.count_bag_count;\n        this.list = new Array<GrpBagItem>(count);\n        const itemRoot = UtilNode.getChildByName(this._node, 'items_root');\n        this.img_highlight.active = false;\n        for (let i = 0; i < itemRoot.children.length; i++) {\n            this.list[i] = new GrpBagItem(itemRoot.children[i], i + 1);\n        }\n        Msg.on('msg_update_bag', () => {\n            const _player = Level.Instance._player;\n            if (!_player) return;\n            // set equip info.\n            const data = _player._data.items;\n            const itemsName = _player._data.equipment_name_list;\n            for (let i = 0; i < this.list.length; i++) {\n                const itemName = itemsName[i];\n                const itemObj = this.list[i];\n                const hasItem = itemName.length > 0;\n                itemObj.setDisplay(hasItem);\n                if (hasItem) {\n                    const item = data[itemName];\n                    itemObj.setInfo(item);\n                }\n            }\n            Msg.emit('msg_grp_bag', 255);\n        })\n\n        Msg.on('msg_change_equip', () => {\n            const _player = Level.Instance._player;\n            if (!_player) return;\n            const current_equipment_index = _player._data.current_equipment_index;\n            const hasHighLight = current_equipment_index !== -1;\n            this.img_highlight.active = hasHighLight;\n            if (hasHighLight) {\n                const highPos = this.list[current_equipment_index]._node.position\n                this.img_highlight.setPosition(highPos.x, highPos.y, highPos.z);\n            }\n            Msg.emit('msg_grp_bag', 255);\n        })\n\n    }\n}\n\nclass GrpBagItem {\n    txt_nun: Label;\n    img_icon: Sprite;\n    _node: Node;\n    index: number;\n    constructor (node: Node, index: number) {\n        this._node = node;\n        this.index = index;\n        this.txt_nun = UtilNode.getChildComponent(this._node, 'txt_num', Label);\n        this.txt_nun.string = `${this.index}`;\n        this.img_icon = UtilNode.getChildComponent(this._node, 'img_icon', Sprite);\n        this.setDisplay(false);\n    }\n\n    setDisplay (isShow: boolean) {\n        this.img_icon.node.active = isShow;\n    }\n\n    setInfo (item: BagItem) {\n        this.img_icon.spriteFrame = ResCache.Instance.getSprite(`img_icon_${item.name}`);\n    }\n}\n\nexport class GrpPickedTips extends UICom {\n\n    list: Array<GrpPickedTipsItem>;\n    msgs: Queue<MsgPicked>;\n\n    index = 0;\n\n    constructor (node: Node) {\n        super(node);\n        // Init deep default 10.\n        const count = DataGameInst._data.count_picked_info;\n        this.list = new Array<GrpPickedTipsItem>(count);\n        this.msgs = new Queue(count);\n        const item = this._node.children[0];\n\n        for (let i = 0; i < count; i++) {\n            const newItem = Res.instNode(item, this._node);\n            this.list[i] = new GrpPickedTipsItem(newItem);\n        }\n\n        item.active = false;\n        Msg.on('msg_tips', (msg: string) => {\n            this._node.children[0].setSiblingIndex(count);\n            this.list[this.index].refresh(msg);\n            this.index++;\n            if (this.index >= count) this.index = 0;\n        })\n    }\n\n}\n\nexport class GrpMap extends UICom {\n\n    list: Array<Node>;\n\n    map: Node;\n\n    constructor (node: Node) {\n        super(node);\n\n        this.map = UtilNode.find(this._node, 'map');\n        const img_enemy_point = UtilNode.find(this._node, 'img_enemy_point');\n        const count = 20;\n        this.list = new Array(count);\n        this.list[0] = img_enemy_point;\n\n        for (let i = 1; i < count; i++) {\n            let newPoint = Res.instNode(img_enemy_point, img_enemy_point.parent!, v3(10000, 0, 0));\n            this.list[i] = newPoint;\n        }\n\n        let position = v3(0, 0, 0);\n\n        const map_width = 1158;\n        const map_height = 1172;\n\n        const world_map_width = 110;\n        const world_map_height = 110;\n\n        const offset_x = 61.846;\n        const offset_y = 95.363;\n\n        const scale_x = map_width / world_map_width;\n        const scale_y = map_height / world_map_height;\n\n        Msg.on('msg_update_map', () => {\n\n            const player = Level.Instance._player;\n            if (player !== undefined && player.node) {\n                UtilVec3.copy(position, player.node.position);\n                const y = position.x * scale_x;\n                const x = position.z * scale_y;\n                position.z = 0;\n                position.x = -x;\n                position.y = -y;\n                this.map.setPosition(position);\n            }\n\n            const enemies = Level.Instance._enemies;\n            const enemyCount = enemies.length;\n            for (let i = 0; i < count; i++) {\n                const hasEnemy = i < enemyCount\n                const currentNode = this.list[i];\n                if (!hasEnemy) {\n                    currentNode.setPosition(10000, 0, 0);\n                    continue;\n                }\n                UtilVec3.copy(position, enemies[i].position);\n                const y = position.x * scale_x;\n                const x = position.z * scale_y;\n                position.z = 0;\n                position.x = x;\n                position.y = y;\n                this.list[i].setPosition(position.x, position.y, position.z);\n            }\n\n        });\n    }\n\n}\n\ninterface MsgPicked {\n    name: string,\n    num: number,\n    time: number,\n}\n\nclass GrpPickedTipsItem {\n\n    txt_info: Label;\n    _node: Node;\n\n    constructor (node: Node) {\n        this._node = node;\n        this.txt_info = UtilNode.getChildComponent(this._node, 'txt_info', Label);\n        this.setDisplay(false);\n    }\n\n    refresh (msg: string) {\n        this.txt_info.string = msg;\n        this.setDisplay(true);\n    }\n\n    setDisplay (isShow: boolean) {\n        this._node.active = isShow;\n    }\n\n}","import { _decorator, Component, Node } from 'cc';\nimport { UIDisplayByState } from './ui-display-by-state';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIDisplayByStateAutoHidden')\nexport class UIDisplayByStateAutoHidden extends UIDisplayByState {\n    \n    @property\n    hiddenTime = 5;\n\n    _hiddenTime = 5;\n\n    onChangeState(value:number) {\n        super.onChangeState(value);\n        this._hiddenTime = this.hiddenTime;\n    }\n\n    update(deltaTime: number) {\n\n        super.update(deltaTime);\n\n        if (this._hiddenTime < 0) return;\n\n        this._hiddenTime -= deltaTime;\n\n        if (this._hiddenTime < 0) {\n            this._color_a = 0;\n        }\n\n    }\n}\n\n","import { _decorator, Component, Node, Color, math, Sprite, SpriteComponent, CCFloat } from 'cc';\nimport { Msg } from '../msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIDisplayByState')\nexport class UIDisplayByState extends Component {\n\n    _color_a = 0;\n    _color: Color = new Color(0, 0, 0, 0);\n\n    @property(CCFloat)\n    smooth: number = 5.0;\n\n    _sprite: Sprite | undefined;\n\n    start () {\n\n        this._sprite = this.getComponent(SpriteComponent)!;\n        Msg.bind(`msg_${this.node.name}`, this.onChangeState, this);\n\n    }\n\n    onDestroy () {\n        Msg.off(`msg_${this.node.name}`, this.onChangeState);\n    }\n\n    onChangeState (value: number) {\n        this._color_a = value;\n    }\n\n    update (deltaTime: number) {\n\n        this._color.a = math.lerp(this._color.a, this._color_a, deltaTime * this.smooth);\n\n        this._sprite!.color = this._color;\n\n    }\n}\n\n","import { _decorator, Component, Node, animation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIEnablePlayAnimation')\nexport class UIEnablePlayAnimation extends Component {\n\n    _animationGraph: animation.AnimationController;\n\n    onEnable () {\n\n        if (!this._animationGraph) {\n            this._animationGraph = this.getComponent(animation.AnimationController);\n        }\n\n        this._animationGraph?.setValue('trigger_replay', true);\n\n    }\n\n}\n\n","import { _decorator, Component, Animation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIEnablePlayAnimation')\nexport class UIEnablePlayAnimation extends Component {\n\n    _anim: Animation | undefined | null\n\n    onEnable () {\n\n        if (!this._anim) {\n            this._anim = this.getComponent(Animation);\n        }\n\n        this._anim?.stop();\n        this._anim?.play();\n    }\n\n}\n","import { _decorator, Component, Node, Animation, Sprite, SpriteComponent, Color, Button, Tween } from 'cc';\nimport { fun } from '../util/fun';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIEnablePlay')\nexport class UIEnablePlay extends Component {\n\n    @property\n    speed = 1;\n\n    @property\n    delay_time = 0;\n\n    @property\n    enable_opacity = true;\n\n    animation: Animation | undefined;\n\n    btn: Button | undefined;\n\n    onEnable () {\n\n        if (this.animation === undefined)\n            this.animation = this.getComponent(Animation)!;\n\n        this.animation.stop();\n\n        if (this.enable_opacity)\n            this.node.getComponent(SpriteComponent)!.color = new Color(1, 1, 1, 0);\n\n        if (this.btn === undefined)\n            this.btn = this.getComponent(Button)!;\n\n        if (this.btn) this.btn.enabled = false;\n\n        fun.delay(() => {\n            if(this.animation && this.animation?.defaultClip) {\n                this.animation.defaultClip.speed = this.speed;\n                this.animation.stop();\n                this.animation.play();\n            }\n        }, this.delay_time);\n\n        fun.delay(() => {\n            if (this.btn) this.btn.enabled = true;\n        }, 2);\n\n    }\n\n}\n\n","import { _decorator, Component, Node, tween, Color, SpriteComponent } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIFadeIn')\nexport class UIFadeIn extends Component {\n\n    @property\n    time = 1;\n\n    @property\n    startColor: Color = new Color();\n\n    @property(Color)\n    endColor: Color = new Color();\n\n    _sprite: SpriteComponent = Object.create(null);\n\n    onEnable () {\n        this.tweenUpdateColor();\n    }\n\n    tweenUpdateColor () {\n        if (this._sprite === null)\n            this._sprite = this.getComponent(SpriteComponent);\n\n        let bindTarget = new BindTarget();\n\n        this._sprite.color = this.startColor;\n\n        tween(bindTarget).by(this.time, { color: this.endColor }, {\n            onUpdate (target: Color) {\n                this._sprite.color = target;\n            }\n        }).start();\n    }\n\n    update (deltaTime: number) {\n\n    }\n}\n\nclass BindTarget {\n    color: Color\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIFx')\nexport class UIFx extends Component {\n\n    map:Record<string, Node> = {};\n\n    start() {\n\n        for(let i = 0; i < this.node.children.length; i++) {\n            const child = this.node.children[i];\n            this.map[child.name] = child;\n        }\n\n        Msg.on('msg_ui_fx_open', this.open.bind(this));\n        Msg.on('msg_ui_fx_close', this.close.bind(this));\n\n    }\n\n    open(name:string) {\n        const effect = this.map[name];\n        if(effect !== undefined) effect.active = true;\n    }\n\n    close(name:string) {\n        const effect = this.map[name];\n        if(effect !== undefined) effect.active = false;\n    }\n\n}\n\n","// import { _decorator, Node, Label, game } from 'cc';\n// import { Game } from '../../core/data/game';\n// import { Local } from '../../core/local/local';\n// import { Msg } from '../../core/msg/msg';\n// import { Res } from '../../core/res/res';\n// import { UICom } from '../../core/ui/ui-base';\n// import { Queue } from '../../core/util/data-structure';\n\n// export class GrpPickedTips extends UICom {\n\n//     list:Array<GrpPickedTipsItem>;\n//     msgs:Queue<MsgPicked>;\n\n//     index = 0;\n\n//     constructor (node:Node) {\n//         super(node);\n//         // Init deep default 10.\n//         const count = DataGameInst._data.count_picked_info;\n\n//         this.list = new Array<GrpPickedTipsItem>(count);\n\n//         this.msgs = new Queue(count);\n\n//         const item = this._node.children[0];\n\n//         this.list[0] = new GrpPickedTipsItem(item);\n\n//         for(let i = 1; i < count; i++) {\n//             const newItem = Res.instNode(item, this._node);\n//             this.list[i] = new GrpPickedTipsItem(newItem);\n//             this.list[i].setDisplay(false);\n//         }\n        \n//         Msg.on('msg_picked', (info:MsgPicked)=>{\n//             this._node.children[0].setSiblingIndex(count);\n//             this.list[this.index].refresh(info);\n//         })\n//     }\n\n// }\n\n// interface MsgPicked {\n//     name:string,\n//     num:number,\n//     time:number,\n// }\n\n// class GrpPickedTipsItem {\n\n//     txt_info:Label;\n//     _node:Node;\n\n//     constructor(node:Node) {\n//         this._node = node;\n//     }\n\n//     refresh(info:MsgPicked) {\n//         this.txt_info.string = `${Local.Instance.get('picked')}  ${info.name}  x${info.num}`;\n//         this.setDisplay(true);\n//     }\n\n//     setDisplay(isShow:boolean) {\n//         this._node.emit('setDisplay', isShow ? 255 : 0);\n//     }\n    \n// }","import { _decorator, Component, Node, Sprite, SpriteFrame, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIGuidePlatform')\nexport class UIGuidePlatform extends Component {\n\n    @property( { type:[SpriteFrame] } )\n    guideSprites:SpriteFrame[] = [];\n\n    @property( { type : Sprite } )\n    sprite:Sprite | undefined;\n\n    start() {\n\n        if(sys.platform === sys.Platform.MOBILE_BROWSER || \n            sys.platform === sys.Platform.ANDROID || \n            sys.platform === sys.Platform.IOS ) {\n            this.sprite!.spriteFrame = this.guideSprites[1];\n        }else {\n            this.sprite!.spriteFrame = this.guideSprites[0];\n        }\n\n    }\n\n}\n\n","/*\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport { _decorator, Component, Node, Label, math, Sprite } from 'cc';\nimport { Msg } from '../../core/msg/msg';\nimport { Game } from '../data/game';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UILoading')\nexport class UILoading extends Component {\n\n    @property(Label)\n    txtLoading: Label | undefined;\n\n    @property(Sprite)\n    img_loading_bar: Sprite | undefined;\n\n    _percent = 0;\n    _realPercent = 0;\n    waitList: Record<number, ILoadMsg> = {};\n    viewNode: Node | undefined;\n\n    count = 0;\n    wait_count = 0;\n    current_msg = '';\n\n    isLoading = false;\n\n    start () {\n        Msg.on('msg_loading', this.onWaitList.bind(this));\n        this.viewNode = this.node.children[0];\n    }\n\n    onWaitList (data: ILoadMsg) {\n        this.waitList[data.id] = data;\n        this.isLoading = true;\n        this.viewNode!.active = true;\n        this._percent = 0;\n    }\n\n    update (deltaTime: number) {\n\n        if (!this.isLoading) return;\n\n        this.calculateLoading();\n        this._percent = math.lerp(this._percent, this._realPercent, deltaTime);\n        this.txtLoading!.string = this.current_msg;\n        this.img_loading_bar!.fillRange = this._percent;\n\n        if (this._percent >= 0.9999) {\n            this.onLoadFinished();\n        }\n\n    }\n\n    onLoadFinished () {\n        this.isLoading = false;\n        this.viewNode!.active = false;\n\n        // If current is menu replay animation.\n        if (Game.Instance._currentGameNodeName === 'menu')\n            Msg.emit('msg_play_animation');\n\n    }\n\n    calculateLoading () {\n        this.count = 0;\n        this.wait_count = 0;\n        //this.current_msg = '';\n        for (let k in this.waitList) {\n            const waitMsg = this.waitList[k];\n            this.count += waitMsg.count;\n            this.wait_count += waitMsg.wait_count;\n            /*\n            if (this.wait_count > 0) {\n                this.current_msg = `${waitMsg.action} ${waitMsg.current}`;\n            }\n            */\n        }\n        this._realPercent = (this.count - this.wait_count) / this.count;\n    }\n\n}\n\nexport interface ILoadMsg {\n    id: number,\n    action: string,\n    current: string,\n    wait_count: number,\n    count: number,\n}\n","import { _decorator, Component, input, Input, EventMouse, SpriteComponent, Color, Button, EventTouch } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIMoveShow')\nexport class UIMoveShow extends Component {\n\n    @property\n    hiddenTime:number = 1;\n\n    @property\n    showSpeed:number = 0.3;\n\n    @property\n    hiddenSpeed:number = 0.3;\n\n    _curTime = 0;\n\n    _sprite:SpriteComponent | undefined | null;\n\n    _color:Color = new Color(255, 255, 255, 0);\n\n    _a:number = 0;\n\n    _btn:Button | undefined | null;\n    \n    start() {\n\n        input.on(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n\n        this._sprite = this.getComponent(SpriteComponent);\n        this._sprite!.color = this._color;\n        this._curTime = this.hiddenTime;\n        this._btn = this.getComponent(Button);\n\n    }\n\n    onDestroy() {\n        input.off(Input.EventType.MOUSE_MOVE, this.onMouseMove, this);\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n\n    onMouseMove(event: EventMouse) {\n        this._curTime = 0;\n    }\n    \n    onTouchMove(event: EventTouch) {\n        this._curTime = 0;\n    }\n\n    update(deltaTime: number) {\n\n        this._curTime += deltaTime;\n\n        if (this._curTime > this.hiddenTime) {\n            if (this._color.a > 0) {\n                var delta = deltaTime * this.hiddenSpeed;\n                this._color.a -= delta;\n                this._sprite!.color = this._color.clone();\n                this._btn!.enabled = false;\n            }\n        }else{\n            if (this._color.a < 255) {\n                var delta = deltaTime * this.showSpeed;\n                this._color.a += delta;\n                this._sprite!.color = this._color.clone();\n                this._btn!.enabled = true;\n            }\n            \n        }\n        \n    }\n}\n","import { _decorator, Component, Node, Vec3, v3 } from 'cc';\nimport { UtilVec3 } from './util';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ui_roller')\nexport class ui_roller extends Component {\n\n    _orignal:Vec3;\n\n    @property\n    final:Vec3 = v3(0, 0, 0);\n\n    @property\n    speed:number = 10;\n\n    _pos:Vec3 = v3(0, 0, 0);\n\n    start() {\n\n    }\n\n    onEnable() {\n        if (this._orignal === undefined) {\n            this._orignal = this.node.position.clone();\n        }\n\n        this.node.setPosition(this._orignal.x, this._orignal.y, this._orignal.z);\n        UtilVec3.copy(this._pos, this._orignal);\n    }\n\n    update(deltaTime: number) {\n\n        if (this._pos.y < this.final.y) {\n            this._pos.y += deltaTime * this.speed;\n            this.node.setPosition(this._pos.x, this._pos.y, this._pos.z);\n        }\n        \n    }\n\n}\n\n","import { _decorator, Component, Node, UITransform, Layout } from 'cc';\nimport { fun } from '../../core/util/fun';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIScrollViewResetPos')\nexport class UIScrollViewResetPos extends Component {\n\n    @property\n    delay = 0.3;\n\n    onEnable() {\n        fun.delay(()=>{\n            //var reset_pos = this.node.position.y;\n            \n            //this.node.setPosition(0, reset_pos, 0);\n            var layout = this.node.getComponent(Layout);\n            layout.enabled = false;\n            layout.enabled = true;\n        },this.delay);\n    }\n}\n\n","/*\r\n Copyright (c) 2020-2023 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { _decorator, Node, director, Camera, find } from 'cc';\r\nimport { Singleton } from \"../pattern/singleton\";\r\nimport { Log } from \"../io/log\";\r\nimport { UIBase } from \"./ui-base\";\r\nimport { Res } from \"../res/res\";\r\nimport { Msg } from '../msg/msg';\r\nimport { UtilNode } from '../util/util';\r\nimport { DataGameInst } from '../../logic/data/data-core';\r\nimport { ResCache } from '../res/res-cache';\r\nimport { fun } from '../util/fun';\r\n\r\nexport class UI extends Singleton {\r\n    private _map: { [name: string]: UIBase } = {};\r\n    public node: Node | undefined | null;\r\n    public panelRoot: Node | undefined;\r\n    public camera: Camera | undefined;\r\n\r\n    public init () {\r\n        this.node = find('init/canvas');\r\n\r\n        this.panelRoot = UtilNode.getChildByName(this.node!, 'panels');\r\n        if (this.node === undefined || this.node == null) {\r\n            throw new Error(`can not find canvas ui root.`);\r\n        }\r\n        director.addPersistRootNode(this.node!);\r\n        Msg.on('refresh_ui', this.refresh.bind(this));\r\n\r\n        const cacheList = ['ui_level', 'ui_level_end', 'ui_logo', 'ui_menu', 'ui_select_equips', 'ui_settings'];\r\n\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            this.load(cacheList[i]);\r\n        }\r\n\r\n        this.camera = this.node?.getChildByName('Camera')?.getComponent(Camera)!;\r\n    }\r\n\r\n    public refresh () {\r\n        for (let key in this._map) {\r\n            this._map[key].refresh();\r\n        }\r\n    }\r\n\r\n    public load (name: string) {\r\n        const asset = ResCache.Instance.getPrefab(name);\r\n        if (asset) {\r\n            const panel = Res.inst(asset, UI.Instance.panelRoot);\r\n            const order = DataGameInst._data.ui_order[name];\r\n            panel.setPosition(0, 0, order);\r\n            let set = false;\r\n            var count = UI.Instance.panelRoot.children.length;\r\n            for (let i = 1; i < count; i++) {\r\n                let child = this.panelRoot!.children[i];\r\n                if (child.position.z > order) {\r\n                    let ui_order = i;\r\n                    panel.setSiblingIndex(ui_order);\r\n                    set = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!set) panel.setSiblingIndex(count);\r\n            const uiBase = new UIBase(panel);\r\n            uiBase.on();\r\n            this._map[name] = uiBase;\r\n            uiBase.off();\r\n            //fun.delay(() => { uiBase.off() }, 0.2);\r\n        } else {\r\n            Log.warn('Can not load res : ' + name);\r\n        }\r\n    }\r\n\r\n    public on (name: string) {\r\n\r\n        var load = async () => {\r\n            const panel = this._map[name];\r\n            if (panel) {\r\n                panel.on();\r\n            } else {\r\n                Res.loadPrefab('ui/' + name, (err, asset) => {\r\n                    if (asset) {\r\n                        const panel = Res.inst(asset, UI.Instance.panelRoot);\r\n                        const order = DataGameInst._data.ui_order[name];\r\n                        panel.setPosition(0, 0, order);\r\n                        let set = false;\r\n                        var count = UI.Instance.panelRoot.children.length;\r\n                        for (let i = 1; i < count; i++) {\r\n                            let child = this.panelRoot!.children[i];\r\n                            if (child.position.z > order) {\r\n                                let ui_order = i;\r\n                                panel.setSiblingIndex(ui_order);\r\n                                set = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!set) panel.setSiblingIndex(count);\r\n                        const uiBase = new UIBase(panel);\r\n                        uiBase.on();\r\n                        this._map[name] = uiBase;\r\n                    } else {\r\n                        Log.warn('Can not load res : ' + name);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        load();\r\n    }\r\n\r\n    public off (name: string) {\r\n        const panel = this._map[name];\r\n        if (panel) {\r\n            panel.off();\r\n        } else {\r\n            Log.warn('You want off a ui object that does not exist : ' + name);\r\n        }\r\n    }\r\n\r\n    public destroy (name: string) {\r\n        const panel = this._map[name];\r\n        if (panel) {\r\n            panel.destroy();\r\n            this._map[name] = undefined;\r\n        } else {\r\n            Log.warn('You want destroy a ui object that does not exist. - ' + name);\r\n        }\r\n    }\r\n\r\n}","import { _decorator, Node, Vec3, Vec2, Color, MeshRenderer, randomRangeInt, tween, Tween, v3, director, Sprite, Component, geometry, GeometryRenderer, IVec3, Quat, IVec3Like } from 'cc';\nimport { fun } from './fun';\nimport { GRandom } from './grandom';\nimport { CameraSetting } from '../../../../extensions/pipeline/pipeline/camera-setting';\nconst { ccclass, property } = _decorator;\n\nexport class Util {\n\n    public static deltaLimit (value: number, delta: number, speed: number, min: number, max: number): number {\n\n        value += delta * speed;\n        if (value < min) value = min;\n        if (value > max) value = max;\n        return value;\n\n    }\n\n\n    public static calculateMaxBounders (renders: MeshRenderer[]) {\n\n        var max_x = 0;\n        var max_y = 0;\n        var max = 0;\n\n        for (let i = 0; i < renders.length; i++) {\n            if (!renders[i].node.active) continue;\n            let x = renders[i].model!.worldBounds.halfExtents.x * renders[i].node.scale.x;\n            if (x > max_x) {\n                max_x = x;\n            }\n\n            let y = renders[i].model!.worldBounds.halfExtents.y * renders[i].node.scale.y;\n            if (y > max_y) {\n                max_y = y;\n            }\n        }\n\n        max = max_x > max_y ? max_x : max_y;\n\n        return { x: max_x, y: max_y, max: max };\n    }\n\n    public static calculateMask(masks:number[]):number {\n        let mask = 0;\n        for(let i = 0; i < masks.length; i++)\n            mask = mask | 1 << masks[i];\n        \n        return mask;\n    }\n\n}\n\nexport class UtilStr {\n\n    public static equal (str: string, items: string[]): boolean {\n        const count = items.length;\n        for (let i = 0; i < count; i++) {\n            var t = items[i]\n            if (str === t) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static include (str: string, items: string[]): boolean {\n        const count = items.length;\n        for (let i = 0; i < count; i++) {\n            const t = items[i];\n            if (str.includes(t)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static selectFromItems (items: string[], len: number = -1): string {\n        const count = len === -1 ? items.length : len;\n        const idx = randomRangeInt(0, count);\n        return items[idx];\n    }\n\n}\n\nexport class UtilMaterial {\n\n    public static setColor (node: Node, color: Color) {\n        const meshRender = node.getComponent(MeshRenderer);\n        meshRender?.material?.setProperty('mainColor', color);\n    }\n\n}\n\nexport class UtilVec3 {\n\n    public static deltaLimit (vec: Vec3, delta: Vec3, speed: number, min: Vec3, max: Vec3) {\n\n        vec.x = Util.deltaLimit(vec.x, delta.x, speed, min.x, max.y);\n        vec.y = Util.deltaLimit(vec.y, delta.y, speed, min.y, max.y);\n        vec.z = Util.deltaLimit(vec.z, delta.z, speed, min.z, max.z);\n\n    }\n\n    public static copy (a: Vec3, b: IVec3) {\n        a.x = b.x;\n        a.y = b.y;\n        a.z = b.z;\n    }\n\n    public static scaleDirection(a: Vec3, direction: Vec3, scale:number) {\n        a.x += direction.x * scale;\n        a.y += direction.y * scale;\n        a.z += direction.z * scale;\n    }\n\n    public static clampMagnitude(target: Vec3, length:number) {\n\n        if(target.length() > length) {\n            target.normalize().multiplyScalar(length);\n        }\n\n    }\n\n}\n\nexport class UtilVec2 {\n\n    public static deltaLimit (vec: Vec2, delta: Vec2, speed: number, min: Vec2, max: Vec2) {\n\n        vec.x = Util.deltaLimit(vec.x, delta.x, speed, min.x, max.y);\n        vec.y = Util.deltaLimit(vec.y, delta.y, speed, min.y, max.y);\n\n    }\n\n    public static c (a: Vec2, b: Vec2) {\n        a.x = b.x;\n        a.y = b.y;\n    }\n}\n\nexport class UtilArray {\n\n    public static remove<T> (array: T[], key: T): void {\n        const index = array.indexOf(key, 0);\n        if (index !== -1) {\n            array.splice(index, 0);\n        }\n    }\n\n    public static init (len: number, value: number = 0) {\n        var a = [];\n        for (let i = 0; i < len; i++)\n            a.push(value);\n        return a;\n    }\n\n    public static init_3 (a0: number, a1: number, a2: number): number[][][] {\n        var array = [];\n        for (let i = 0; i < a0; i++) {\n            var ai = [];\n            for (var j = 0; j < a1; j++) {\n                var aj = [];\n                for (var k = 0; k < a2; k++) {\n                    aj.push(0);\n                }\n                ai.push(aj);\n            }\n            array.push(ai);\n        }\n        return array;\n    }\n\n    public static reset_3 (a: number[][][], value: number = 0) {\n        const a0 = a.length;\n        const a1 = a[0].length;\n        const a2 = a[0][0].length;\n        for (let i = 0; i < a0; i++) {\n            for (var j = 0; j < a1; j++) {\n                for (var k = 0; k < a2; k++) {\n                    a[i][j][k] = value;\n                }\n            }\n        }\n    }\n\n    public static addArray (a: number[], b: number[]) {\n        for (let i = 0; i < b.length; i++) {\n            a.push(b[i]);\n        }\n    }\n\n}\n\nexport class UtilNode {\n\n    public static getChildByName(node:Node, name:string): Node {\n        const child = node.getChildByName(name);\n        if (child === null) throw new Error(`${node.name} node children not find '${name}'`);\n        return child;\n    }\n\n    public static getComponent<T extends Component>(node:Node, type:{ new () : T }): T{\n        const component = node.getComponent(type) as T;\n        if(component === null) throw new Error(`${node.name} node not find '${name}'`);\n        return component;\n    }\n\n    public static getChildComponent<T extends Component>(node:Node, name:string, type:{ new () : T }): T  {\n        const child = this.getChildByName(node, name);\n        return this.getComponent(child, type);\n    }\n\n    public static getChildren (node: Node): Node[] {\n        let ls: Node[] = [];\n        var find = (node: Node) => {\n            ls.push(node);\n            node.children.forEach(element => {\n                if (element.children) {\n                    find(element);\n                }\n            });\n        }\n        find(node);\n        return ls;\n    }\n\n    public static find (node: Node, name: string): Node {\n\n        let n: Node = Object.create(null);\n        var find = (node: Node, name: string) => {\n            if (node.name === name) {\n                n = node\n                return;\n            }\n            node.children.forEach(element => {\n                if (element.children) {\n                    find(element, name);\n                }\n            });\n        }\n        find(node, name);\n        return n;\n\n    }\n\n    public static getChildrenByNameBlur (node: Node, blurName:string): {[key:string]:Node} {\n        let map: {[key:string]:Node} = {};\n        var find = (node: Node) => {\n            if (node.name.concat(blurName)) {\n                map[node.name] = node; \n            }\n            map[node.name] = node;\n            node.children.forEach(element => {\n                if (element.children) {\n                    find(element);\n                }\n            });\n        }\n        find(node); \n\n        return map;\n    }\n\n    public static getParentComponent<T extends Component>(node:Node | null, type:{ new () : T }) : T | undefined {\n        if(node === null) {\n            return undefined;\n        }\n        const component = node?.getComponent(type) as T;\n        if(component !== null)\n            return component;\n        \n        return this.getParentComponent(node.parent, type);\n    }\n\n    static _worldRotation:Quat = new Quat();\n    static _angle:Vec3 = v3(0, 0, 0);\n    public static getWorldEulerAngles(node: Node) {\n        node.getWorldRotation(this._worldRotation);\n        this._worldRotation.getEulerAngles(this._angle);\n        return this._angle;\n    }\n\n}\n\nexport class UtilLog {\n    public static children (node: Node) {\n        let info = `${node.name}:${node.children.length}:`;\n        node.children.forEach(n => {\n            info += `${n.name},`;\n        });\n        console.log(info);\n    }\n}\n\n\nexport function waitFor (duration: number) {\n    return new Promise<void>((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, duration * 1000.0);\n    });\n}\n\n\nexport class UtilCurve {\n\n    public static Bezier (points: number[], t: number) {\n\n        let len = points.length / 3;\n\n    }\n\n    public static ParaCurve (s: number, x: number, y: number, z: number, vx: number, vy: number, vz: number, g: number, segment: number) {\n\n        var points: number[] = [];\n\n        // Calculate total time.\n        var totalTime = Math.sqrt(2 * s / g);\n        var cell_time = totalTime / segment;\n\n        // x = vx * t\n        // z = vz * t\n        // y = 1/2 * g * t * t.\n        // g = 0.98.\n        var cur_time = 0;\n        for (let i = 0; i <= segment; i++) {\n            var xi = vx * cur_time + x;\n            var zi = vz * cur_time + z;\n            var yi = vy * cur_time - 1 / 2 * g * cur_time * cur_time + y;\n            points.push(xi);\n            points.push(yi);\n            points.push(zi);\n            cur_time += cell_time;\n        }\n        return points;\n    }\n\n    public static ParaCurveByDir (s: number, x: number, y: number, z: number, vx: number, vy: number, vz: number, g: number, dx: number, dy: number, dz: number, segment: number) {\n\n        var points: number[] = [];\n\n        // Calculate total time.\n        var totalTime = Math.sqrt(2 * s / g);\n        var cell_time = totalTime / segment;\n\n        // x = vx * t\n        // z = vz * t\n        // y = 1/2 * g * t * t.\n        // g = 0.98.\n        var cur_time = 0;\n        for (let i = 0; i <= segment; i++) {\n            var xi = vx * cur_time + x;\n            var zi = vz * cur_time + z;\n            var yi = vy * cur_time - 1 / 2 * g * cur_time * cur_time + y;\n            points.push(xi * dx);\n            points.push(yi * dy);\n            points.push(zi * dz);\n            cur_time += cell_time;\n        }\n        return points;\n    }\n\n}\n\nexport class UtilRandom {\n\n    public static pos (rand: GRandom, min: Vec3, max: Vec3, f: number = 1000): Vec3 {\n        var pos = v3(0, 0, 0);\n        pos.x = rand.range(min.x, max.x) / f;\n        pos.y = rand.range(min.y, max.y) / f;\n        pos.z = rand.range(min.z, max.z) / f;\n        return pos;\n    }\n\n    public static angle (rand: GRandom, min: Vec3, max: Vec3): Vec3 {\n        var angle = v3(0, 0, 0);\n        angle.x = rand.range(min.x, max.x);\n        angle.y = rand.range(min.y, max.y);\n        angle.z = rand.range(min.z, max.z);\n        return angle;\n    }\n\n    public static scale (rand: GRandom, min: Vec3, max: Vec3, f: number = 1000): Vec3 {\n        var scale = v3(0, 0, 0);\n        scale.x = rand.range(min.x, max.x) / f;\n        scale.y = rand.range(min.y, max.y) / f;\n        scale.z = rand.range(min.z, max.z) / f;\n        return scale;\n    }\n\n}\n\nexport namespace Gizmo {\n\n    export function getGeometryRender():GeometryRenderer|null|undefined {\n        const camera = CameraSetting.mainCamera && CameraSetting.mainCamera.camera;\n        if (camera) {\n            camera.initGeometryRenderer();\n        }\n        const geometryRenderer = camera && camera.geometryRenderer || director.root?.pipeline.geometryRenderer;\n        return geometryRenderer;\n    }\n\n    export function drawLine (p0: Vec3, p1: Vec3, color: Color = Color.GREEN) {\n\n        const geometryRenderer = getGeometryRender();\n        if (!geometryRenderer) return;\n        //let geometryRenderer = director.root?.pipeline.geometryRenderer;\n        geometryRenderer?.addLine(p0, p1, color, undefined);\n    }\n\n    export function drawCircle(center:Vec3, radius:number, color:Color = Color.YELLOW) {\n        const geometryRenderer = getGeometryRender();\n        if (!geometryRenderer) return;\n        //let geometryRenderer = director.root?.pipeline.geometryRenderer;\n        geometryRenderer?.addCircle(center, radius, color, 10, true, undefined, undefined);\n    }\n\n    export function drawBox(center:IVec3Like, size:Vec3, color:Color = Color.BLUE) {\n        const geometryRenderer = getGeometryRender();\n        if (!geometryRenderer) return;\n        let border = new geometry.AABB(center.x, center.y, center.z, size.x, size.y, size.z);\n        //let geometryRenderer = director.root?.pipeline.geometryRenderer;\n        geometryRenderer?.addBoundingBox(border, color, true, false);\n    }\n\n}\n\nexport class UtilTime {\n\n    public static toHours(seconds:number):number {\n        return Math.ceil(seconds / 3600);\n    }\n\n    public static yearMonth():string {\n\n        var date = new Date();\n\n        var y = date.getFullYear().toString();\n\n        var m = date.getMonth().toString();\n        if (m.length < 2) m = `0${m}`;\n\n        var d = date.getDate().toString();\n        if (d.length < 2) d = `0${d}`;\n\n        var h = date.getHours().toString();\n\n        return`${y}.${m}.${d}:${h}`;\n\n    }\n\n    public static timeStamp() {\n\n        return  Date.parse(new Date().toString());\n\n    }\n\n}","import { director, gfx, ImageAsset, ReflectionProbe, TextureCube } from \"cc\";\n\n\nexport interface ClusterCubemapAtlas {\n    texture: gfx.Texture,\n    cubemaps: TextureCube[]\n    offsets: number[][]\n}\n\nenum FaceIndex {\n    right = 0,\n    left = 1,\n    top = 2,\n    bottom = 3,\n    front = 4,\n    back = 5,\n}\nfunction _forEachFace (mipmap, callback: (face: ImageAsset, faceIndex: number) => void) {\n    callback(mipmap.right, FaceIndex.right);\n    callback(mipmap.left, FaceIndex.left);\n    callback(mipmap.top, FaceIndex.top);\n    callback(mipmap.bottom, FaceIndex.bottom);\n    callback(mipmap.front, FaceIndex.front);\n    callback(mipmap.back, FaceIndex.back);\n}\n\nconst faces = ['right', 'left', 'top', 'bottom', 'front', 'back']\nexport function packCubemapAtlas (cubemaps: TextureCube[]): ClusterCubemapAtlas {\n    const device = director.root!.device;\n    const maxSize = Math.min(device.capabilities.maxTextureSize, 4096);\n\n    let atlasWidth = 0;\n    let atlasHeight = 0;\n\n    let texImages: TexImageSource[] = []\n    let regions: gfx.BufferTextureCopy[] = []\n\n    let minMipMapLevel = 8;\n    for (let ci = 0; ci < cubemaps.length; ci++) {\n        minMipMapLevel = Math.min(minMipMapLevel, cubemaps[ci].mipmapAtlas.layout.length);\n    }\n\n    let offsets: number[][] = []\n\n    for (let mi = 0; mi < minMipMapLevel; mi++) {\n\n        let offsetX = 0;\n        let offsetY = 0;\n\n        let maxHeight = 0;\n\n        for (let ci = 0; ci < cubemaps.length; ci++) {\n            const cubemap = cubemaps[ci];\n            cubemap.mipmapAtlas.layout\n            let mipmap = cubemap.mipmaps[mi];\n\n            let width = mipmap.front.width * 6;\n            let height = mipmap.front.height;\n            maxHeight = Math.max(height, maxHeight);\n\n            if ((offsetX + width) > maxSize) {\n                offsetY += maxHeight;\n                offsetX = 0;\n                maxHeight = 0;\n            }\n\n            offsets.push([offsetX, offsetY, width, height])\n\n            for (let fi = 0; fi < faces.length; fi++) {\n                let img = (mipmap as any)[faces[fi]] as ImageAsset;\n                texImages.push(img.data as HTMLImageElement)\n\n                regions.push(new gfx.BufferTextureCopy(undefined, undefined,\n                    img.height,\n                    new gfx.Offset(offsetX, offsetY),\n                    new gfx.Extent(img.width, img.height),\n                    new gfx.TextureSubresLayers(mi)\n                ))\n\n                offsetX += img.width;\n            }\n        }\n\n        if (mi === 0) {\n            atlasWidth = offsetX;\n            atlasHeight = offsetY + maxHeight;\n        }\n    }\n\n    offsets.forEach(offset => {\n        offset[0] = (offset[0]) / atlasWidth;\n        offset[1] = (offset[1]) / atlasHeight;\n        offset[2] = (offset[2]) / atlasWidth;\n        offset[3] = (offset[3]) / atlasHeight;\n    })\n\n    let texture = device.createTexture(new gfx.TextureInfo(\n        gfx.TextureType.TEX2D,\n        gfx.TextureUsageBit.SAMPLED | gfx.TextureUsageBit.TRANSFER_DST,\n        gfx.Format.RGBA8,\n        atlasWidth,\n        atlasHeight,\n        gfx.TextureFlagBit.GEN_MIPMAP,\n        undefined,\n        minMipMapLevel\n    ))\n    device.copyTexImagesToTexture(texImages, texture, regions)\n\n    // breakIfGlError();\n\n    return {\n        texture,\n        cubemaps,\n        offsets\n    };\n}","\nimport { gfx, Mesh, director, utils, Vec3, RenderTexture, geometry, renderer, rendering, IVec4Like } from \"cc\";\n\nconst { Sphere, intersect } = geometry\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { ShadowType, LightType, SKYBOX_FLAG, CSMLevel } = renderer.scene\n\nlet _quadMesh: Mesh | null = null;\nexport function getQuadMesh () {\n    if (!_quadMesh) {\n        _quadMesh = utils.createMesh({\n            positions: [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0],\n            uvs: [0, 0, 0, 1, 1, 1, 1, 0],\n            indices: [0, 2, 1, 0, 3, 2],\n            minPos: new Vec3(-1, -1, 0),\n            maxPos: new Vec3(1, 1, 0)\n        });\n        _quadMesh.initialize();\n\n    }\n    return _quadMesh;\n}\n\nlet _quadIA: gfx.InputAssembler | null = null;\nexport function getQuadIA () {\n    if (!_quadIA) {\n        const pipeline = director.root!.pipeline!;\n        const device = pipeline.device;\n\n        let mesh = getQuadMesh();\n        _quadIA = device.createInputAssembler(mesh.renderingSubMeshes[0]!.iaInfo);\n    }\n    return _quadIA;\n}\n\n\nexport function readPixels (rt: RenderTexture, buffer: any, index = 0) {\n    const gfxTexture = rt.window.framebuffer.colorTextures[index];\n\n    const bufferViews: ArrayBufferView[] = [];\n    const regions: gfx.BufferTextureCopy[] = [];\n\n    const region0 = new gfx.BufferTextureCopy();\n    region0.texOffset.x = 0;\n    region0.texOffset.y = 0;\n    region0.texExtent.width = rt.width;\n    region0.texExtent.height = rt.height;\n    regions.push(region0);\n\n    bufferViews.push(buffer);\n    director.root.device.copyTextureToBuffers(gfxTexture, bufferViews, regions);\n}\n\n\n\nexport class CameraInfo {\n    shadowEnabled = false;\n    mainLightShadowNames = new Array<string>();\n    spotLightShadowNames = new Array<string>();\n}\n\nconst _cameras: renderer.scene.Camera[] = [];\nexport function getCameraUniqueID (camera: renderer.scene.Camera) {\n    if (!_cameras.includes(camera)) {\n        _cameras.push(camera);\n    }\n    return camera.name + '_' + _cameras.indexOf(camera);\n}\n\nexport function getRenderArea (out: gfx.Rect, camera: renderer.scene.Camera, width: number, height: number, light: renderer.scene.Light | null = null, level = 0) {\n    const vp = camera.viewport;\n    const w = width;\n    const h = height;\n    out.x = vp.x * w;\n    out.y = vp.y * h;\n    out.width = vp.width * w;\n    out.height = vp.height * h;\n    if (light) {\n        switch (light.type) {\n            case LightType.DIRECTIONAL: {\n                const mainLight = light as renderer.scene.DirectionalLight;\n                if (mainLight.shadowFixedArea || mainLight.csmLevel === CSMLevel.LEVEL_1) {\n                    out.x = 0;\n                    out.y = 0;\n                    out.width = w;\n                    out.height = h;\n                } else {\n                    out.x = level % 2 * 0.5 * w;\n                    out.y = (1 - Math.floor(level / 2)) * 0.5 * h;\n                    out.width = 0.5 * w;\n                    out.height = 0.5 * h;\n                }\n                break;\n            }\n            case LightType.SPOT: {\n                out.x = 0;\n                out.y = 0;\n                out.width = w;\n                out.height = h;\n                break;\n            }\n            default:\n        }\n    }\n\n    out.width = Math.floor(out.width);\n    out.height = Math.floor(out.height);\n\n    return out;\n}\n\n\nexport function getLoadOpOfClearFlag (clearFlag: gfx.ClearFlagBit, attachment: rendering.AttachmentType): gfx.LoadOp {\n    let loadOp = LoadOp.CLEAR;\n    if (!(clearFlag & ClearFlagBit.COLOR)\n        && attachment === AttachmentType.RENDER_TARGET) {\n        if (clearFlag & SKYBOX_FLAG) {\n            loadOp = LoadOp.CLEAR;\n        } else {\n            loadOp = LoadOp.LOAD;\n        }\n    }\n    if ((clearFlag & ClearFlagBit.DEPTH_STENCIL) !== ClearFlagBit.DEPTH_STENCIL\n        && attachment === AttachmentType.DEPTH_STENCIL) {\n        if (!(clearFlag & ClearFlagBit.DEPTH)) loadOp = LoadOp.LOAD;\n        if (!(clearFlag & ClearFlagBit.STENCIL)) loadOp = LoadOp.LOAD;\n    }\n    return loadOp;\n}\n\nexport function validPunctualLightsCulling (pipeline: rendering.Pipeline, camera: renderer.scene.Camera) {\n    const sceneData = pipeline.pipelineSceneData;\n    const validPunctualLights = sceneData.validPunctualLights;\n    validPunctualLights.length = 0;\n    const _sphere = Sphere.create(0, 0, 0, 1);\n    const { spotLights } = camera.scene!;\n    for (let i = 0; i < spotLights.length; i++) {\n        const light = spotLights[i];\n        if (light.baked) {\n            continue;\n        }\n\n        Sphere.set(_sphere, light.position.x, light.position.y, light.position.z, light.range);\n        if (intersect.sphereFrustum(_sphere, camera.frustum)) {\n            validPunctualLights.push(light);\n        }\n    }\n\n    const { sphereLights } = camera.scene!;\n    for (let i = 0; i < sphereLights.length; i++) {\n        const light = sphereLights[i];\n        if (light.baked) {\n            continue;\n        }\n        Sphere.set(_sphere, light.position.x, light.position.y, light.position.z, light.range);\n        if (intersect.sphereFrustum(_sphere, camera.frustum)) {\n            validPunctualLights.push(light);\n        }\n    }\n}\n\nexport function SRGBToLinear (out: IVec4Like, gamma: IVec4Like) {\n    // out.x = Math.pow(gamma.x, 2.2);\n    // out.y = Math.pow(gamma.y, 2.2);\n    // out.z = Math.pow(gamma.z, 2.2);\n    out.x = gamma.x * gamma.x;\n    out.y = gamma.y * gamma.y;\n    out.z = gamma.z * gamma.z;\n}\n","import { gfx, renderer, Vec3 } from \"cc\";\nimport { HaltonUtils } from \"./halton\";\nimport { Pool } from \"./pool\";\n\nexport function sphereDirections (count: number) {\n    let directions = []\n\n    let goldenRatio = (1 + Math.sqrt(5)) / 2;\n    let angleIncrement = Math.PI * 2 * goldenRatio;\n\n    for (let i = 0; i < count; i++) {\n        let t = i / count;\n        let inclination = Math.acos(1 - 2 * t);\n        let azimuth = angleIncrement * i;\n\n        let x = Math.sin(inclination) * Math.cos(azimuth);\n        let y = Math.sin(inclination) * Math.sin(azimuth);\n        let z = Math.cos(inclination);\n\n        let d = Pool.Vec3.get() || new Vec3;\n        d.set(x, y, z)\n        directions.push(d);\n    }\n\n    return directions;\n}\n\nconst ModelSampleCount = 36;\n\nlet _tempMin = new Vec3\nlet _tempMax = new Vec3\nexport function modelPoints (models: renderer.scene.Model[]) {\n    let points = []\n\n    for (let i = 0; i < models.length; i++) {\n        let cur = models[i];\n        let mat = cur.node.worldMatrix;\n\n        cur.worldBounds.getBoundary(_tempMin, _tempMax);\n\n        let totalVertices = 0\n        let subModels = cur.subModels\n        for (let j = 0; j < subModels.length; j++) {\n            let subMesh = subModels[j].subMesh;\n            const { positions } = subMesh.geometricInfo;\n            totalVertices += positions.length / 3;\n        }\n\n        if (totalVertices > ModelSampleCount) {\n            for (let i = 0; i < ModelSampleCount; i++) {\n                let offset = HaltonUtils.instance.Generate3DRandomOffset(ModelSampleCount);\n                let p = new Vec3(cur.worldBounds.halfExtents)\n                p.multiplyScalar(2).multiply(offset);\n                p.add(_tempMin);\n                Vec3.transformMat4(p, p, mat);\n                points.push(p);\n            }\n        }\n        else {\n            let subModels = cur.subModels\n            for (let j = 0; j < subModels.length; j++) {\n                let subMesh = subModels[j].subMesh;\n                const { positions: vb, indices: ib, doubleSided: sides } = subMesh.geometricInfo;\n\n                if (subMesh.primitiveMode === gfx.PrimitiveMode.TRIANGLE_LIST && ib && vb) {\n                    for (let j = 0; j < vb.length; j += 3) {\n                        let d = Pool.Vec3.get().set(vb[j], vb[j + 1], vb[j + 2]);\n                        Vec3.transformMat4(d, d, mat);\n                        points.push(d);\n                    }\n                }\n            }\n        }\n    }\n\n    return points;\n}\n","import { LGraphNode } from '../@types/litegraph';\nimport { liteGraph } from '../graph';\n\nexport function Vec2 () {\n    let self = this as LGraphNode;\n\n    this.properties = {\n        x: 1,\n        y: 1,\n    }\n\n    self.addWidget('number', 'x', 1, 'x');\n    self.addWidget('number', 'y', 1, 'y');\n\n    self.addOutput('Output', 'vec2');\n\n    let output = [];\n\n    self.onExecute = function () {\n        output[0] = this.properties.x;\n        output[1] = this.properties.y;\n        this.setOutputData(0, output);\n    }\n\n    self.size = self.computeSize();\n}\n\ndelete liteGraph.registered_node_types[`input/Vec2`];\nliteGraph.registerNodeType(`input/Vec2`, Vec2 as any);\n","import { _decorator, Node, Component, ccenum, Quat, error, Vec3, view } from 'cc';\nimport MathUtil from './math-util';\n//import  { Weapon } from './weapon';\n//import { CharacterTypes } from '../core/character';\n//import MathUtil from '../util/math-util';\n//import CinemachineCameraManager from '../cinemachine/cinemachine-camera-manager';\n//import { ColliderGroup, ControlType } from '../scene/define';\n//import { GameManager } from '../manager/game-manager';\nconst { ccclass, property, type } = _decorator;\n\n// / the list of possible control modes\nexport enum AimControls {\n\tAuto,\n\tCenter,\n\tMouse\n}\nccenum(AimControls);\n\nexport enum AimRotateType {\n\tByNone,\n\tByCharacter,\n\tByWeapon\n}\nccenum(AimRotateType);\n\nlet _tempQuat: Quat = new Quat;\nlet _tempVec3: Vec3 = new Vec3;\n@ccclass('WeaponAim')\nexport class WeaponAim extends Component {\n\t@type(AimRotateType)\n\tyawRotateType: AimRotateType = AimRotateType.ByCharacter;\n\n\t@type(AimRotateType)\n\tpitchRotateType: AimRotateType = AimRotateType.ByCharacter;\n\n    //public mask: number = ColliderGroup.All;\n\tpublic aimControl: AimControls = AimControls.Mouse;\n\n\t@property\n\tisAutoAim = false;\n\n\t@property\n\tpublic pitchWhenYawInRange = 10;\n\n\t@property\n\tpublic maxPitch = 80;\n\n\t@property\n\tpublic minPitch = -80;\n\n\t@property\n\tpublic aimReadyValue = 2;\n\n\t@property\n\taimRange: number = 0.2;\n\n\t// / the weapon's current direction\n\tpublic get currentAim () { return this._currentAim }\n\t// / the current angle the weapon is aiming at\n\tpublic currentYaw = 0;\n\tpublic currentPitch = 0;\n\n    //protected _weapon: Weapon | null = null;\n    protected _currentAim: Vec3 = new Vec3;\n\tprotected _lookRotation: Quat = new Quat;\n\n\tpublic aimWasReady = false;\n\n\tprotected _currentTarget: Node | null = null;\n\tpublic set currentTarget (value: Node | null) {\n\t    if (value == this._currentTarget) {\n\t        return;\n\t    }\n\t    this.aimWasReady = false;\n\t    this._currentTarget = value;\n\t}\n\n\tstart () {\n\t    this.initialization();\n\t}\n\n\tinitialization () {\n\t    //this._weapon = this.getComponent(Weapon);\n\t}\n\n\t// Computes the current aim direction\n\tupdateCurrentAim () {\n\t\t\n\t\t/*\n\t    if (!this._weapon || !this._weapon.owner || this._weapon.reloading) return;\n\t    let owner = this._weapon.owner;\n\t    if (owner.characterType == CharacterTypes.Player && !owner.linkedInputManager) {\n\t        return;\n\t    }\n\n\t    let controlType = owner.controlType;\n\t    this.mask = controlType == ControlType.TopDown ? ColliderGroup.TopDownAim : ColliderGroup.ThirdPersonAim;\n\t\t*/\n\n\t    switch (this.aimControl) {\n\t        case AimControls.Center:\n\t            this.updateCenterAim();\n\t            break;\n\t        case AimControls.Mouse:\n\t            this.updateMouseAim();\n\t            break;\n\t        case AimControls.Auto:\n\t            this.updateAutoAim();\n\t            break;\n\t    }\n\t}\n\n\tupdateAutoAim () {\n\t    if (this._currentTarget) {\n\t\t\tthis._currentTarget!.getWorldPosition(this._currentAim);\n\n\t\t\t// debug auto target\n\t\t\t// gameMgr.drawNode(this._currentTarget!);\n\t\t\tthis.calculateCurrentAim();\n\t    } else {\n\t        this.currentPitch = 0;\n\t        this.aimWasReady = false;\n\t    }\n\t}\n\n\tupdateCenterAim () {\n\t    let viewport = view.getViewportRect();\n\t    let x = viewport.width / 2;\n\t    let y = viewport.height / 2;\n\n\t    // get the position behind the weapon\n\t\t/*\n\t    let success = CinemachineCameraManager.instance.getScreenPointToWorldPositionWithNodeDistance(this._currentAim, x, y, this.mask, this._weapon?.getRotatingModel() || this.node);\n\t    if (!success) {\n\t        this.currentPitch = 0;\n\t        return;\n\t    }\n\t\t*/\n\t    this.calculateCurrentAim();\n\t}\n\n\tupdateMouseAim () {\n\n\t\t/*\n\t    if (!this._weapon || !this._weapon.owner || !this._weapon.owner.linkedInputManager) {\n\t        this.currentPitch = 0;\n\t        return;\n\t    }\n\n\t    let mousePosition = this._weapon.owner.linkedInputManager.secondaryLocation;\n\t    let success = CinemachineCameraManager.instance.getScreenPointToWorldPosition(this._currentAim, mousePosition.x, mousePosition.y, this.mask);\n\t    if (!success) {\n\t        this.currentPitch = 0;\n\t        return;\n\t    }\n\t\t*/\n\n\t    this.calculateCurrentAim();\n\t}\n\n\tcalculateCurrentAim () {\n\t    let refNode = this.node;//this._weapon?.getRotatingModel() || this.node;\n\t    // debug aim line\n\t    // GameManager.instance.drawLineByPos(this._currentAim, refNode.getWorldPosition());\n\n\t\t MathUtil.convertToNodeSpace(_tempVec3, this._currentAim, refNode);\n\t    if (_tempVec3.length() < this.aimRange) {\n        \treturn;\n\t    }\n\n\t    _tempVec3.normalize();\n\t    // vector rotate begin from z axis to x axis angle\n\t    /*\n\t\t       z\n\t\t      / \\\n\t\t       |\n        x /____|_____\n          \\    |\n               |\n\t\t*/\n\t    let addYaw = MathUtil.radiansToDegrees(Math.atan2(_tempVec3.x, _tempVec3.z));\n\t    let addPitch = -MathUtil.radiansToDegrees(Math.atan2(_tempVec3.y, _tempVec3.z));\n\t    if (Math.abs(addYaw) > this.pitchWhenYawInRange) addPitch = 0;\n\n\t    this.currentYaw = MathUtil.clampDegrees(this.currentYaw + addYaw);\n\t    //if (this._weapon!.owner!.controlType == ControlType.TopDown) {\n\t    //    this.currentPitch = 0;\n\t    //} else {\n\t        this.currentPitch = MathUtil.clamp(MathUtil.clampDegrees(this.currentPitch + addPitch), this.minPitch, this.maxPitch);\n\t    //}\n\n\t    let aimReady = this.aimReady(addYaw, addPitch);\n\t    if (aimReady) {\n\t        this.aimWasReady = true;\n\t    }\n\t}\n\n\taimReady (addYaw:number, addPitch:number) {\n\t   return Math.abs(addYaw) < this.aimReadyValue && Math.abs(addPitch) < this.aimReadyValue;\n\t}\n\n\tearlyProcess (dt:number) {\n\t}\n\n\tprocess (dt:number) {\n\t    this.updateCurrentAim();\n\t    this.determineWeaponRotation();\n\t}\n\n\tlateProcess (dt: number) {\n\t}\n\n\tdetermineWeaponRotation () {\n\t    if (this.yawRotateType != AimRotateType.ByWeapon && this.pitchRotateType != AimRotateType.ByWeapon) {\n\t        return;\n\t    }\n\n\t    let yaw = 0; let\n\t        pitch = 0;\n\t    if (this.yawRotateType == AimRotateType.ByWeapon) {\n\t        yaw = this.currentYaw;\n\t    }\n\n\t    if (this.pitchRotateType == AimRotateType.ByWeapon) {\n\t        pitch = this.currentPitch;\n\t    }\n\n\t    let node = this.node; //this._weapon?.getRotatingModel() || this.node;\n\t    node.getRotation(_tempQuat);\n\t    Quat.fromEuler(this._lookRotation, pitch, yaw, 0);\n\t    Quat.multiply(this._lookRotation, _tempQuat, this._lookRotation);\n\t\t/*\n\t    if (this._weapon) {\n\t        this._weapon.rotateWeapon(this._lookRotation);\n\t    }\n\t\t*/\n\t}\n}","import { Color, Component, director, geometry, GeometryRenderer, gfx, Mat4, Quat, Vec3, Vec4, _decorator } from 'cc';\nimport { getGeometryRenderer } from '../../utils/debug';\nimport { roundUp, vec3_min, vec3_max, vec3_floor, vec3_ceil } from '../../utils/math';\n\nconst { ccclass, property, executeInEditMode } = _decorator;\n\nconst maxTextureSize = 4096;    // maximum texture size allowed to work on all devices\n\nconst tempVec3 = new Vec3();\nconst tempMin3 = new Vec3();\nconst tempMax3 = new Vec3();\n\nexport class ClusterObject<T> {\n    object: T | null = null;\n    min = new Vec3;\n    max = new Vec3;\n    radius = 0;\n    center = new Vec3;\n\n    minCell = new Vec3\n    maxCell = new Vec3\n}\n\n\n@ccclass('WorldCluster')\n@executeInEditMode\nexport class WorldCluster<T extends Component> extends Component {\n    _cellsLimit = new Vec3();\n    @property\n    _cells = new Vec3(12, 12, 12);\n    @property\n    get cells () {\n        return this._cells;\n    }\n    set cells (value) {\n        // make sure we have whole numbers\n        tempVec3.set(value);\n        vec3_floor(tempVec3, tempVec3);\n\n        if (!this._cells.equals(tempVec3)) {\n            this._cells.set(tempVec3);\n            this._cellsLimit.set(tempVec3).subtract(Vec3.ONE);\n            this._cellsDirty = true;\n        }\n    }\n\n\n    @property\n    _maxCellObjectCount = 0;\n    @property\n    get maxCellObjectCount () {\n        return this._maxCellObjectCount;\n    }\n    set maxCellObjectCount (count) {\n\n        // each cell stores 4 lights (xyzw), so round up the count\n        const maxCellObjectCount = roundUp(count, 4);\n        this._maxCellObjectCount = count;\n        this._pixelsPerCellCount = maxCellObjectCount / 4;\n        this._cellsDirty = true;\n    }\n\n    _usedObjects: ClusterObject<T>[] = [new ClusterObject];\n\n    dataInfoFloat: Float32Array | undefined;\n    dataInfoTextureFloat: gfx.Texture | undefined;\n\n    infoTextureInvSizeData = new Vec4;\n\n    clusterTexture: gfx.Texture | undefined;\n    clustersData: Uint8Array | undefined;\n    clustersCounts: Int32Array | undefined;\n    clustersDistances: Float32Array | undefined;\n    clusterCellsMaxData = new Vec4;\n    clusterCellsDotData = new Vec4;\n    clusterTextureSizeData = new Vec4;\n    clusterCellsCountByBoundsSizeData = new Vec4;\n\n    // bounds of all lights\n    _bounds = new geometry.AABB();\n\n    // bounds of all light volumes (volume covered by the clusters)\n    boundsMin = new Vec3();\n    boundsMax = new Vec3();\n    boundsDelta = new Vec3();\n\n    // using 8 bit index so this is maximum supported number\n    maxCount = 255;\n\n    // number of times a warning was reported\n    reportCount = 0;\n\n    _cellsDirty = true;\n    _pixelsPerCellCount = 0;\n\n    pixelsPerObjectFloat = 1; // 0: pos.x, pos.y, pos.z, radius\n\n\n    // constructor (cells: Vec3, maxCellObjectCount: number) {\n    //     this.cells = cells;\n    //     this.maxCellObjectCount = maxCellObjectCount;\n    // }\n\n    getBoundingBox (obj: any, clusteredObject: ClusterObject<T>) { }\n    addObjectData (obj: any, index: number) { }\n\n    createTexture (width: number, height: number, format: gfx.Format) {\n        let texture = director.root!.device.createTexture(new gfx.TextureInfo(\n            gfx.TextureType.TEX2D,\n            gfx.TextureUsageBit.SAMPLED | gfx.TextureUsageBit.TRANSFER_DST,\n            format,\n            width,\n            height\n        ));\n\n        return texture;\n    }\n\n    __preload () {\n        this.maxCellObjectCount = this.maxCellObjectCount;\n        this._cellsLimit.set(this._cells).subtract(Vec3.ONE);\n\n        this.initTexture()\n    }\n\n    initTexture () {\n        let pixelsPerObjectFloat = this.pixelsPerObjectFloat;\n\n        // float texture\n        this.dataInfoFloat = new Float32Array(4 * pixelsPerObjectFloat * this.maxCount);\n        this.dataInfoTextureFloat = this.createTexture(pixelsPerObjectFloat, this.maxCount, gfx.Format.RGBA32F);\n\n        // inverse sizes for both textures\n        this.infoTextureInvSizeData.x = 1.0 / this.dataInfoTextureFloat!.width;\n        this.infoTextureInvSizeData.y = 1.0 / this.dataInfoTextureFloat!.height;\n    }\n\n    updateCells () {\n        if (this._cellsDirty) {\n            this._cellsDirty = false;\n\n            const cx = this._cells.x;\n            const cy = this._cells.y;\n            const cz = this._cells.z;\n\n            // storing 4 lights per pixels\n            const numCells = cx * cy * cz;\n            const totalPixels = this._pixelsPerCellCount * numCells;\n\n            // cluster texture size - roughly square that fits all cells. The width is multiply of numPixels to simplify shader math\n            let width = Math.ceil(Math.sqrt(totalPixels));\n            width = roundUp(width, this._pixelsPerCellCount);\n            const height = Math.ceil(totalPixels / width);\n\n            // if the texture is allowed size\n            if (width > maxTextureSize || height > maxTextureSize) {\n                // #if _DEBUG\n                console.error(\"LightCluster parameters cause the texture size to be over the limit.\");\n                // #endif\n            }\n\n            // maximum range of cells\n            this.clusterCellsMaxData.x = cx;\n            this.clusterCellsMaxData.y = cy;\n            this.clusterCellsMaxData.z = cz;\n\n            // vector to allow single dot product to convert from world coordinates to cluster index\n            this.clusterCellsDotData.x = this._pixelsPerCellCount;\n            this.clusterCellsDotData.y = cx * cz * this._pixelsPerCellCount;\n            this.clusterCellsDotData.z = cx * this._pixelsPerCellCount;\n\n            // cluster data and number of lights per cell\n            this.clustersData = new Uint8Array(4 * width * height);\n            this.clustersCounts = new Int32Array(numCells);\n            this.clustersDistances = new Float32Array(4 * width * height);\n\n            this.clusterTextureSizeData.x = width;\n            this.clusterTextureSizeData.y = 1.0 / width;\n            this.clusterTextureSizeData.z = 1.0 / height;\n\n            if (this.clusterTexture) {\n                this.clusterTexture.destroy();\n            }\n            this.clusterTexture = this.createTexture(width, height, gfx.Format.RGBA8);\n        }\n    }\n\n    collectObjects (objects: T[]) {\n\n        // skip index 0 as that is used for unused light\n        const usedObjects = this._usedObjects;\n        let objIndex = 1;\n\n        for (let i = 0; i < objects.length; i++) {\n            // use enabled and visible lights\n            const obj = objects[i];\n            // if (!obj.enabledInHierarchy) {\n            //     continue;\n            // }\n\n            // within light limit\n            if (objIndex < this.maxCount) {\n\n                // reuse allocated spot\n                let clusteredObject;\n                if (objIndex < usedObjects.length) {\n                    clusteredObject = usedObjects[objIndex];\n                } else {\n                    // allocate new spot\n                    clusteredObject = new ClusterObject<T>();\n                    usedObjects.push(clusteredObject);\n                }\n\n                // store light properties\n                clusteredObject.object = obj;\n                this.getBoundingBox(obj, clusteredObject);\n\n                objIndex++;\n            } else {\n                console.warn(\"Clustered lighting: more than \" + (this.maxCount - 1) + \" lights in the frame, ignoring some.\");\n                break;\n            }\n        }\n\n        usedObjects.length = objIndex;\n    }\n\n    // evaluate the area all lights cover\n    evaluateBounds () {\n        const usedObjects = this._usedObjects;\n\n        // bounds of the area the lights cover\n        const min = this.boundsMin;\n        const max = this.boundsMax;\n\n        // if at least one light (index 0 is null, so ignore that one)\n        if (usedObjects.length > 1) {\n\n            // AABB of the first light\n            Vec3.copy(min, usedObjects[1].min);\n            Vec3.copy(max, usedObjects[1].max);\n\n            for (let i = 2; i < usedObjects.length; i++) {\n\n                // expand by AABB of this light\n                vec3_min(min, min, usedObjects[i].min);\n                vec3_max(max, max, usedObjects[i].max);\n            }\n        } else {\n\n            // any small volume if no lights\n            min.set(0, 0, 0);\n            max.set(1, 1, 1);\n        }\n\n        // bounds range\n        Vec3.subtract(this.boundsDelta, max, min);\n\n        const boundsDelta = this.boundsDelta;\n        this.clusterCellsCountByBoundsSizeData.x = this._cells.x / boundsDelta.x;\n        this.clusterCellsCountByBoundsSizeData.y = this._cells.y / boundsDelta.y;\n        this.clusterCellsCountByBoundsSizeData.z = this._cells.z / boundsDelta.z;\n        this.clusterCellsCountByBoundsSizeData.w = this._pixelsPerCellCount;\n\n        if (usedObjects.length > 1) {\n            for (let i = 0; i < usedObjects.length; i++) {\n                let clusteredObject = usedObjects[i];\n                this.evalCellMinMax(clusteredObject, clusteredObject.minCell, clusteredObject.maxCell);\n            }\n        }\n    }\n\n    // evaluates min and max coordinates of AABB of the object in the cell space\n    evalCellMinMax (clusteredObject: ClusterObject<T>, min: Vec3, max: Vec3) {\n        // min point of AABB in cell space\n        min.set(clusteredObject.min);\n        min.subtract(this.boundsMin);\n        min.divide(this.boundsDelta);\n        min.multiply(this._cells);\n        vec3_floor(min, min);\n\n        // max point of AABB in cell space\n        max.set(clusteredObject.max);\n        max.subtract(this.boundsMin);\n        max.divide(this.boundsDelta);\n        max.multiply(this._cells);\n        vec3_floor(max, max);\n\n        // clamp to limits\n        vec3_max(min, min, Vec3.ZERO as Vec3);\n        vec3_min(max, max, this._cellsLimit);\n    }\n\n    updateClusters () {\n\n        // clear clusters\n        this.clustersCounts!.fill(0);\n        this.clustersData!.fill(0);\n        this.clustersDistances!.fill(Infinity);\n\n        // local accessors\n        const divX = this._cells.x;\n        const divY = this._cells.y;\n        const divZ = this._cells.z;\n        const counts = this.clustersCounts!;\n        const distances = this.clustersDistances!;\n        const limit = this._maxCellObjectCount;\n        const clusters = this.clustersData!;\n        const pixelsPerCellCount = this._pixelsPerCellCount;\n\n        const usedObjects = this._usedObjects;\n        // started from index 1, zero is \"no-light\" index\n        for (let i = 1; i < usedObjects.length; i++) {\n            const clusteredObject = usedObjects[i];\n            const object = clusteredObject.object;\n\n            // add light data into textures\n            if (object) {\n                this.addObjectData(object, i);\n            }\n        }\n\n        const center = new Vec3\n        let filterObjects = []\n        let sort = (a: ClusterObject<T>, b: ClusterObject<T>) => {\n            let da = Vec3.distance(a.center, center);\n            let db = Vec3.distance(b.center, center);\n            return da - db\n        }\n        for (let y = 0; y < divY; y++) {\n            for (let z = 0; z < divZ; z++) {\n                for (let x = 0; x < divX; x++) {\n\n                    filterObjects.length = 0;\n                    for (let i = 1; i < usedObjects.length; i++) {\n                        const clusteredObject = usedObjects[i];\n                        if (clusteredObject.minCell.x > x || clusteredObject.minCell.y > y || clusteredObject.minCell.z > z ||\n                            clusteredObject.maxCell.x < x || clusteredObject.maxCell.y < y || clusteredObject.maxCell.z < z) {\n                            continue;\n                        }\n                        filterObjects.push(clusteredObject);\n                    }\n                    (center.set(this.boundsDelta) as Vec3).multiply3f((x + 0.5) / divX, (y + 0.5) / divY, (z + 0.5) / divZ).add(this.boundsMin);\n                    filterObjects.sort(sort)\n\n                    const clusterIndex = x + divX * (z + y * divZ);\n                    let count = counts[clusterIndex];\n                    for (let i = 0; i < filterObjects.length; i++) {\n                        const clusteredObject = filterObjects[i];\n\n                        if (count < limit) {\n                            clusters[pixelsPerCellCount * clusterIndex * 4 + count] = usedObjects.indexOf(clusteredObject);\n                            counts[clusterIndex] = ++count;\n                        }\n                        else {\n                            // console.log(`light cluster out of limit [${x}, ${y}, ${z}]`)\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    findObjects () {\n        return []\n    }\n\n    update (dt) {\n        let objects = this.findObjects();\n        this.collectObjects(objects);\n        this.evaluateBounds();\n        this.updateCells();\n        this.updateClusters();\n        this.uploadTextures();\n\n        this.drawDebug();\n    }\n\n    uploadTextures () {\n        let device = director.root!.device;\n\n        let clusterTexture = this.clusterTexture;\n        let clustersData = this.clustersData;\n        if (clusterTexture && clustersData) {\n            let region = new gfx.BufferTextureCopy(undefined, undefined, clusterTexture.height, undefined, new gfx.Extent(clusterTexture.width, clusterTexture.height));\n            device.copyBuffersToTexture([clustersData], clusterTexture, [region]);\n        }\n\n        let dataInfoFloat = this.dataInfoFloat;\n        let dataInfoTextureFloat = this.dataInfoTextureFloat;\n        if (dataInfoFloat && dataInfoTextureFloat) {\n            let region = new gfx.BufferTextureCopy(undefined, undefined, dataInfoTextureFloat.height, undefined, new gfx.Extent(dataInfoTextureFloat.width, dataInfoTextureFloat.height));\n            device.copyBuffersToTexture([dataInfoFloat], dataInfoTextureFloat, [region]);\n        }\n    }\n\n    onDestroy () {\n        this.clusterTexture?.destroy();\n        this.dataInfoTextureFloat?.destroy();\n    }\n\n    @property\n    renderDebug = false\n\n    drawDebug () {\n        if (!this.renderDebug) {\n            return;\n        }\n\n        let geometryRenderer = getGeometryRenderer()\n        if (!geometryRenderer) {\n            return;\n        }\n\n        this.drawCluster(geometryRenderer)\n        // this.drawObjects()\n    }\n\n    drawCluster (geometryRenderer: GeometryRenderer) {\n        let cells = this.cells;\n        (tempVec3.set(this.boundsDelta) as Vec3).divide(cells);\n        let xStep = tempVec3.x;\n        let yStep = tempVec3.y;\n        let zStep = tempVec3.z;\n\n        let tempMatrix = new Mat4\n        let identityAABB = new geometry.AABB(0, 0, 0, 0.5, 0.5, 0.5);\n        let areaColor = new Color(255, 255, 255, 50)\n\n        let start = new Vec3(0, 0, 0);\n        let end = cells;\n\n        for (let x = start.x; x < end.x; x++) {\n            for (let y = start.y; y < end.y; y++) {\n                for (let z = start.z; z < end.z; z++) {\n                    (tempMin3.set(this.boundsMin) as Vec3).add3f(xStep * (x + 0.5), yStep * (y + 0.5), zStep * (z + 0.5));\n\n                    tempVec3.set(xStep, yStep, zStep);\n                    tempMatrix.fromRTS(Quat.IDENTITY as Quat, tempMin3 as Vec3, tempVec3);\n\n                    geometryRenderer.addBoundingBox(identityAABB, areaColor, false, false, undefined, true, tempMatrix);\n\n\n                    // drawer.color.set(255, 255, 255, 255);\n                    // // tempVec3.set(100, 100, 100)\n                    // drawer.matrix.fromRTS(Quat.IDENTITY as Quat, tempMin3 as Vec3, Vec3.ONE);\n                    // drawer.type = DrawType.Solid;\n                    // drawer.text(`${x}_${y}_${z}`)\n\n                    // tempMin3.y += 1;\n                    // drawer.matrix.fromRTS(Quat.IDENTITY as Quat, tempMin3 as Vec3, Vec3.ONE);\n                    // const clusterIndex = x + this._cells.x * (z + y * this._cells.z);\n                    // let count = this.clustersCounts![clusterIndex]\n                    // let info = `${count}:`\n                    // for (let i = 0; i < count; i++) {\n                    //     info += '_' + this.clustersData![this._pixelsPerCellCount * clusterIndex * 4 + i]\n                    // }\n                    // drawer.text(info)\n                }\n            }\n        }\n    }\n\n    // drawObjects () {\n    //     let objs = this._usedObjects;\n\n    //     const drawer = this._drawer!;\n    //     drawer.color.set(255, 0, 0, 50);\n    //     drawer.frameWireColor.set(255, 0, 0, 100);\n    //     drawer.type = DrawType.FrameWire | DrawType.Solid;\n\n    //     objs.forEach(obj => {\n    //         tempVec3.set(obj.radius, obj.radius, obj.radius);\n    //         drawer.matrix.fromRTS(Quat.IDENTITY as Quat, obj.center, tempVec3);\n    //         drawer.sphere();\n    //     })\n    // }\n}\n","import { BaseStage } from \"./base-stage\";\nimport { _decorator, renderer, gfx, builtinResMgr, Input, rendering, CCString, Vec4, game, Material, input, EventTouch, EventMouse, Vec2, director } from \"cc\";\nimport { getCameraUniqueID } from \"../utils/utils\";\nimport { passUtils } from \"../utils/pass-utils\";\nimport { settings } from \"./setting\";\nimport { EDITOR } from \"cc/env\";\nimport { HrefSetting } from \"../settings/href-setting\";\n\nconst { type, property, ccclass } = _decorator;\nconst { RasterView, AttachmentType, AccessType, ResourceResidency, LightInfo, SceneFlags, QueueHint, ComputeView } = rendering;\nconst { Format, LoadOp, StoreOp, ClearFlagBit, Color, Viewport } = gfx\n\nlet pointSampler = new gfx.Sampler(new gfx.SamplerInfo(\n    gfx.Filter.POINT, gfx.Filter.POINT\n), 0);\n(pointSampler as any).custom = true;\n\n@ccclass('ZoomScreenStage')\nexport class ZoomScreenStage extends BaseStage {\n    _materialName = 'zoom-screen';\n    materialMap: Map<renderer.scene.Camera, Material> = new Map\n    uniqueStage = true;\n\n    @property({ override: true })\n    name = 'ZoomScreenStage'\n\n    @property({ override: true })\n    outputNames = ['ZoomScreenColor']\n\n    constructor () {\n        super();\n\n        if (!EDITOR) {\n            input.on(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this)\n            input.on(Input.EventType.TOUCH_START, this.onTouchDown, this)\n            input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this)\n            input.on(Input.EventType.TOUCH_END, this.onTouchUp, this)\n        }\n\n    }\n\n\n    destroy () {\n        if (!EDITOR) {\n            input.off(Input.EventType.MOUSE_WHEEL, this.onMouseWheel, this)\n            input.off(Input.EventType.TOUCH_START, this.onTouchDown, this)\n            input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this)\n            input.off(Input.EventType.TOUCH_END, this.onTouchUp, this)\n        }\n    }\n\n    reset () {\n        this.updateMousePosition();\n        this.updateScale();\n    }\n\n    checkEnable () {\n        return super.checkEnable() && !!HrefSetting.zoomScreen;\n    }\n\n    _scale = 1;\n    _offset = new Vec2\n    screenParams = new Vec4\n\n    touchPos = new Vec2\n\n    lastTouchDist = 0;\n    pressed = false;\n    onTouchDown (event: EventTouch) {\n        event.propagationStopped = true;\n\n        // let touches = event.getAllTouches();\n        // if (touches.length >= 2) {\n        //     let p0 = touches[0].getLocation();\n        //     let p1 = touches[1].getLocation();\n        //     this.lastTouchDist = Vec2.distance(p0, p1)\n        // }\n\n        this.lastTouchDist = 0;\n        this.pressed = true;\n        this.updateMousePosition(event);\n    }\n    onTouchMove (event: EventTouch) {\n\n        // let touches = event.getAllTouches();\n        // if (touches.length >= 2) {\n        //     let p0 = touches[0].getLocation();\n        //     let p1 = touches[1].getLocation();\n        //     let dist = Vec2.distance(p0, p1)\n        //     vec2_temp.set(p0)\n        //     vec2_temp.subtract(p1).multiplyScalar(0.5).add(p1);\n\n        //     let dif = dist - this.lastTouchDist\n        //     this.lastTouchDist = dist;\n\n        //     this.updateScale(vec2_temp, dif / 100.);\n        // }\n\n        event.propagationStopped = true;\n\n        if (this.pressed) {\n            this.updateMousePosition(event);\n\n            this._offset.x -= event.getDeltaX() / game.canvas.width * this._scale;\n            this._offset.y -= event.getDeltaY() / game.canvas.width * this._scale;\n        }\n    }\n    onTouchUp (event: EventTouch) {\n        event.propagationStopped = true;\n\n        this.pressed = false;\n    }\n    updateMousePosition (event?: EventTouch) {\n        let x = 0, y = 0;\n\n        if (event) {\n            x = event.getLocationX() / game.canvas!.width;\n            y = event.getLocationY() / game.canvas!.height;\n        }\n\n        this.touchPos.set(x, y)\n    }\n\n    onMouseWheel (event: EventMouse) {\n        event.propagationStopped = true;\n\n        if (event) {\n            let scrollY = event.getScrollY();\n\n            let scaleOffset = 0.1 * -Math.sign(scrollY) * this._scale;\n            this.updateScale(event.getLocation(), scaleOffset);\n        }\n        else {\n            this._scale = 1;\n            this._offset.set(0, 0);\n        }\n    }\n\n    updateScale (center?: Vec2, scaleOffset = 0) {\n        if (center) {\n            this._scale += scaleOffset;\n            this._scale = Math.max(0, this._scale);\n\n            center.x /= game.canvas!.width;\n            center.y /= game.canvas!.height;\n\n            this._offset.x -= center.x * scaleOffset;\n            this._offset.y -= center.y * scaleOffset;\n        }\n        else {\n            this._scale = 1;\n            this._offset.set(0, 0);\n        }\n    }\n\n    public render (camera: renderer.scene.Camera, ppl: rendering.Pipeline): void {\n        const cameraID = getCameraUniqueID(camera);\n        const area = this.getRenderArea(camera);\n        const inputWidth = area.width;\n        const inputHeight = area.height;\n\n        let shadingScale = this.finalShadingScale()\n        const outWidth = Math.floor(inputWidth / shadingScale);\n        const outHeight = Math.floor(inputHeight / shadingScale);\n\n        passUtils.clearFlag = gfx.ClearFlagBit.COLOR;\n        Vec4.set(passUtils.clearColor, 0, 0, 0, 1);\n\n        let material = this.materialMap.get(camera);\n        if (!material || material.parent !== this.material) {\n            material = new renderer.MaterialInstance({\n                parent: this.material\n            })\n            this.materialMap.set(camera, material);\n        }\n\n        material.setProperty('screenParams', this.screenParams.set(this._scale, this._scale, this._offset.x, this._offset.y))\n\n        let pass = material.passes[0];\n        pass.bindSampler(pass.getBinding('outputResultMap'), pointSampler);\n\n        passUtils.material = material;\n\n        const input0 = this.lastStage.slotName(camera, 0);\n        const slot0 = this.slotName(camera, 0);\n        passUtils.addRasterPass(outWidth, outHeight, 'post-process', `Camera_DebugScreen_Pass${cameraID}`);\n\n        // let setter = (passUtils.pass as any);\n        // setter.setSampler('outputResultMap', director.root.pipeline.globalDSManager.pointSampler);\n\n        passUtils.setViewport(area.x, area.y, outWidth, outHeight)\n            .setPassInput(input0, 'outputResultMap')\n            .addRasterView(slot0, Format.RGBA16F)\n            .blitScreen(0)\n            .version()\n\n    }\n}\n"]}